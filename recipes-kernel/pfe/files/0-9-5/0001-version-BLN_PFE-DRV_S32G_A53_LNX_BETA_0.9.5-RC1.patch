From 4e49fb89f535a473fae2b8d2f5e50095cdaf819b Mon Sep 17 00:00:00 2001
From: "jan.petrous" <jan.petrous@nxp.com>
Date: Thu, 5 Aug 2021 16:53:11 +0200
Subject: [PATCH 1/4] version BLN_PFE-DRV_S32G_A53_LNX_BETA_0.9.5 RC1

Upstream-Status: Pending

Signed-off-by: Jan Petrous <jan.petrous@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 PFE_S32G_A53_LNX_BETA_0.9.5_ReleaseNotes.txt  | 570 ++++++++++
 PFE_S32G_A53_LNX_BETA_0.9.5_SCR.txt           |  43 +
 doc/FCI_API_Reference.pdf                     | Bin 506217 -> 508385 bytes
 doc/fsl-pfeng.txt                             | 191 +++-
 sw/Makefile                                   |   7 +-
 sw/bpool/public/bpool.h                       |   1 +
 sw/bpool/src/bpool.c                          | 136 ++-
 sw/build_env.mak                              |  54 +-
 sw/common/public/blalloc.h                    |   6 +-
 sw/common/public/ct_assert.h                  |  18 +-
 sw/common/src/blalloc.c                       |   9 +
 sw/elf/public/elf_cfg.h                       |   6 +-
 sw/fci/public/fci.h                           |   2 +-
 sw/fci/public/fci_msg.h                       |  19 +-
 sw/fci/public/fci_msg_linux.h                 |  11 +-
 sw/fci/src/fci.c                              |  30 +-
 sw/fci/src/fci_connections.c                  |  97 +-
 sw/fci/src/fci_flexible_filter.c              |   7 +-
 sw/fci/src/fci_fp.c                           |   8 +-
 sw/fci/src/fci_fp_db.c                        |  32 +-
 sw/fci/src/fci_fw_features.c                  |   4 +
 sw/fci/src/fci_interfaces.c                   | 123 ++-
 sw/fci/src/fci_internal.h                     |   2 +-
 sw/fci/src/fci_l2br.c                         |   6 +-
 sw/fci/src/fci_l2br_domains.c                 |  20 +-
 sw/fci/src/fci_qos.c                          |  43 +-
 sw/fci/src/fci_routes.c                       |  36 +-
 sw/fci/src/fci_rt_db.c                        |  12 +-
 sw/fci/src/fci_rt_db.h                        |  10 +-
 sw/fci/src/fci_spd.c                          |  13 +-
 sw/fifo/public/fifo.h                         |   1 +
 sw/fifo/src/fifo.c                            |  16 +
 sw/linux-pfeng/Makefile                       |   4 +-
 sw/linux-pfeng/pfeng-bman.c                   |   4 +-
 sw/linux-pfeng/pfeng-drv.c                    | 300 ++++--
 sw/linux-pfeng/pfeng-ethtool.c                |  77 +-
 sw/linux-pfeng/pfeng-hif.c                    | 457 +++++++-
 sw/linux-pfeng/pfeng-mdio.c                   |  14 +
 sw/linux-pfeng/pfeng-netif.c                  | 990 ++++++++----------
 sw/linux-pfeng/pfeng-phylink.c                |   8 +-
 sw/linux-pfeng/pfeng.h                        |  69 +-
 sw/oal/public/oal_irq.h                       |   2 +
 sw/oal/public/oal_time.h                      |   6 +-
 sw/oal/public/oal_util_net.h                  |   9 +-
 sw/oal/src/oal_irq_linux.c                    |   5 +
 sw/oal/src/oal_mbox_linux.c                   | 179 ----
 sw/oal/src/oal_time_linux.c                   |  14 +-
 sw/pfe_hif_drv/Makefile                       | 135 ---
 sw/pfe_hif_drv/public/pfe_hif_drv.h           |   7 +-
 sw/pfe_hif_drv/public/pfe_hif_ptp.h           |  36 -
 sw/pfe_hif_drv/src/pfe_hif_drv_linux.c        | 228 ----
 sw/pfe_hif_drv/src/pfe_hif_ptp.c              | 354 -------
 sw/pfe_platform/hw/s32g/pfe_bmu_csr.c         |  19 +-
 sw/pfe_platform/hw/s32g/pfe_class_csr.h       |   4 +-
 sw/pfe_platform/hw/s32g/pfe_emac_csr.c        |  29 +-
 sw/pfe_platform/hw/s32g/pfe_emac_csr.h        |   3 +-
 sw/pfe_platform/hw/s32g/pfe_hif_csr.c         |   2 +-
 sw/pfe_platform/hw/s32g/pfe_hif_csr.h         |   2 +-
 sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.c   |  45 +-
 sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.h   |   2 +
 sw/pfe_platform/hw/s32g/pfe_l2br_table_csr.h  |  16 +-
 sw/pfe_platform/hw/s32g/pfe_platform_master.c | 430 ++++----
 sw/pfe_platform/hw/s32g/pfe_tmu_csr.c         | 104 +-
 sw/pfe_platform/hw/s32g/pfe_util_csr.c        |  21 +
 sw/pfe_platform/hw/s32g/pfe_util_csr.h        |   3 +
 sw/pfe_platform/public/pfe_ct.h               |  62 +-
 sw/pfe_platform/public/pfe_emac.h             |   2 +-
 sw/pfe_platform/public/pfe_fp.h               |   4 +-
 sw/pfe_platform/public/pfe_hif_chnl.h         |   6 +-
 sw/pfe_platform/public/pfe_hif_nocpy.h        |   2 +-
 sw/pfe_platform/public/pfe_hif_ring.h         |   7 -
 sw/pfe_platform/public/pfe_l2br.h             |  46 +-
 sw/pfe_platform/public/pfe_l2br_table.h       |  20 +-
 sw/pfe_platform/public/pfe_log_if.h           |   2 +-
 sw/pfe_platform/public/pfe_mac_db.h           |   2 +-
 sw/pfe_platform/public/pfe_pe.h               |  15 +-
 sw/pfe_platform/public/pfe_phy_if.h           |   2 +-
 sw/pfe_platform/public/pfe_platform.h         |   1 +
 sw/pfe_platform/public/pfe_platform_cfg.h     |  30 +-
 sw/pfe_platform/public/pfe_platform_rpc.h     | 110 +-
 sw/pfe_platform/public/pfe_rtable.h           |  47 +-
 sw/pfe_platform/public/pfe_spd.h              |   5 +-
 sw/pfe_platform/public/pfe_spd_acc.h          |   5 +-
 sw/pfe_platform/src/pfe_bmu.c                 |   6 +-
 sw/pfe_platform/src/pfe_class.c               | 328 +++---
 sw/pfe_platform/src/pfe_emac.c                |  47 +-
 sw/pfe_platform/src/pfe_flexible_filter.c     |   2 +-
 sw/pfe_platform/src/pfe_fp.c                  |  16 +-
 sw/pfe_platform/src/pfe_fw_feature.c          |   2 +-
 sw/pfe_platform/src/pfe_hif_chnl.c            | 340 ++++--
 sw/pfe_platform/src/pfe_hif_nocpy.c           |   8 +-
 sw/pfe_platform/src/pfe_hif_ring.c            | 103 +-
 sw/pfe_platform/src/pfe_idex.c                | 177 ++--
 sw/pfe_platform/src/pfe_l2br.c                | 936 ++++++++---------
 sw/pfe_platform/src/pfe_l2br_table.c          | 556 +++++-----
 sw/pfe_platform/src/pfe_log_if.c              |  66 +-
 sw/pfe_platform/src/pfe_log_if_slave.c        | 120 ++-
 sw/pfe_platform/src/pfe_mac_db.c              |  13 +-
 sw/pfe_platform/src/pfe_pe.c                  | 726 ++++++++-----
 sw/pfe_platform/src/pfe_phy_if.c              |  73 +-
 sw/pfe_platform/src/pfe_phy_if_slave.c        |  13 +-
 sw/pfe_platform/src/pfe_rtable.c              | 929 ++++++++--------
 sw/pfe_platform/src/pfe_spd.c                 | 116 +-
 sw/pfe_platform/src/pfe_spd_acc.c             |  33 +-
 sw/pfe_platform/src/pfe_tmu.c                 |   2 +-
 sw/pfe_platform/src/pfe_util.c                |  96 +-
 sw/xfci/libfci/Makefile                       |  56 +-
 sw/xfci/libfci/public/fpp.h                   |  16 +-
 sw/xfci/libfci/public/fpp_ext.h               |  48 +-
 sw/xfci/libfci/public/libfci.h                | 226 +---
 sw/xfci/libfci/src/libfci_linux.c             |  14 +-
 111 files changed, 5843 insertions(+), 4704 deletions(-)
 create mode 100644 PFE_S32G_A53_LNX_BETA_0.9.5_ReleaseNotes.txt
 create mode 100644 PFE_S32G_A53_LNX_BETA_0.9.5_SCR.txt
 delete mode 100644 sw/pfe_hif_drv/Makefile
 delete mode 100644 sw/pfe_hif_drv/public/pfe_hif_ptp.h
 delete mode 100644 sw/pfe_hif_drv/src/pfe_hif_drv_linux.c
 delete mode 100644 sw/pfe_hif_drv/src/pfe_hif_ptp.c

diff --git a/PFE_S32G_A53_LNX_BETA_0.9.5_ReleaseNotes.txt b/PFE_S32G_A53_LNX_BETA_0.9.5_ReleaseNotes.txt
new file mode 100644
index 0000000..d2dfa1b
--- /dev/null
+++ b/PFE_S32G_A53_LNX_BETA_0.9.5_ReleaseNotes.txt
@@ -0,0 +1,570 @@
+****************************************************************************************************
+Release Notes for NXP PFE S32G A53 LNX swv: 0.9.5 BETA
+
+NXP and the NXP logo are trademarks of NXP.
+
+All product or service names are the property of their respective owners.
+Copyright (C) 2018-2021 NXP
+****************************************************************************************************
+
+========================================================
+Installation
+========================================================
+Install the package into the desired directory and follow the enclosed user manual.
+
+========================================================
+Release Location:
+========================================================
+
+This BETA 0.9.5 release sources are internally stored at location:
+https://bitbucket.sw.nxp.com/projects/AUTO_ETH/repos/pfe/browse
+GIT release tag: BLN_PFE-DRV_S32G_A53_LNX_BETA_0.9.5
+
+========================================================
+Release Specifics:
+========================================================
+
+- This release was developed and tested with:
+    - Geany IDE version 1.37
+    - editor VIM - Vi IMproved 8.2
+    - NXP Auto Linux BSP 30
+    - GCC 9.2.0
+- This release was developed and tested using:
+    - Evaluation board: S32G-VNP-EVB
+        S32GRV-PLATEVB 700-30081
+        X-S32G-PROCEVB-S 700-32170
+
+- This release has BETA quality status in terms of testing and quality documentation
+
+========================================================
+Supported Features:
+========================================================
+
+- Integrates the S32G PFE Ethernet driver
+- Supports slow-path functionality
+- Supports fast-path features and configuration API
+
+========================================================
+Supported Derivatives:
+========================================================
+
+- PS32G274ABVUC 0P77B Rev. 2.0
+
+========================================================
+Directory Structure:
+========================================================
+
+- sw/bpool/ library sources (dependency for linux-pfeng)
+- sw/common/ library sources (dependency for linux-pfeng)
+- sw/linux-pfeng/ linux kernel driver sources (the driver project)
+- sw/elf/ library sources (dependency for linux-pfeng)
+- sw/fifo/ library sources (dependency for linux-pfeng)
+- sw/hal/ library sources (dependency for all other modules)
+- sw/oal/ library sources (dependency for all other modules)
+- sw/pfe_hif_drv/ library sources (dependency for linux-pfeng)
+- sw/pfe_platform/ library sources (dependency for linux-pfeng)
+- sw/fci/ library sources (dependency for linux-pfeng)
+- sw/xfci/libfci/ library sources (FCI library and dependency for linux-pfeng)
+- doc/ user's manual, FCI API Reference manual and device-tree
+- PFE_S32G_A53_LNX_BETA_0.9.5_ReleaseNotes.txt: this file
+- LICENSE-GPL2.txt: License text file
+- PFE_S32G_A53_LNX_BETA_0.9.5_SCR.txt: Software Content Register
+
+========================================================
+Compiler Options:
+========================================================
+
+Compiler options are described within Makefile located
+in every SW module directory.
+
+========================================================
+Assumptions:
+========================================================
+
+Compatible firmware: BLN_PFE-FW_S32G_RTM_1.0.0
+
+========================================================
+3rd Party Issues
+========================================================
+
+========================================================
+What's Modified in BETA_0.9.5
+========================================================
+
+# Bug
+
+[AAVB-2149] - [PFE_LINUX]Promiscuous mode not working
+[AAVB-2320] - [PFE_LINUX] pfeng: mtu setting doesn't work of value < 68
+[AAVB-2326] - [PFE_PLATFORM] Logical interface 'discard' API missing in slave variant
+[AAVB-2445] - [ALB 25.0]Observed zero throughput numbers for Rx traffic while measuring IPerf3 UDP self termination traffic for 1518B frame size.
+[AAVB-2448] - Observed "Zero Throughput numbers" while measuring IPv4/IPv6 routing Bi-directional RAW/UDP traffic
+[AAVB-2695] - [ALB 27.0] [Regression]: Observed "0" throughput number for IPv4 64B while measuring Slow path routing performance
+[AAVB-2973] - [PFE_DRV_LINUX] Configured Bridge outputs periodic backtrace
+[AAVB-3187] - [BSP28]Observed zero throughput results for slow path bi-directional tests using spirent
+[AAVB-3192] - [BSP28] Observed zero throughput results while measuring IPerf3 UDP bi-directional ROUTING throughput results.
+[AAVB-3196] - [PFE_DRV_LINUX] each pfeX interface should be found by of_find_net_device_by_node
+[AAVB-3197] - [PFE_DRV_LINUX] pinctrl-0/pinctrl-names properties are ignored
+[AAVB-3375] - [PFE][Linux] "ERR: No timer was running" on rmmod
+[AAVB-3377] - [PFE_DRV_QNX][PFE_PLATFORM] Driver reports a couple of build errors when PFE_CFG_NULL_ARG_CHECK is enabled
+[AAVB-3378] - [PFE_PLATFORM] SIP/DIP replacement flags rewrite other flags.
+[AAVB-3380] - [PFE_PLATFORM] Rx interrupt coalescing configuration failed
+[AAVB-3385] - [PFE_PLATFORM] libFCI: FW feature struct has too small buffer for some FW feature names
+[AAVB-3406] - [PFE_PLATFORM] Incorrect return value when reading QoS shaper idle slope
+[AAVB-3414] - [PFE_PLATFORM] Memory leak when mac address is already in db.
+[AAVB-3415] - [PFE_PLATFORM] MAC database memory leak when MAC addr addition fails
+[AAVB-3417] - [PFE_PLATFORM] libFCI: Missing ntoh() conversions in conntrack handling
+[AAVB-3418] - [PFE_PLATFORM] libFCI: Wrong return value of ".vlan" and ".vlan_reply" fields in IPv4 conntracks
+[AAVB-3456] - [PFE_PLATFORM] Build error when router support is disabled
+[AAVB-3457] - [PFE_PLATFORM] Invalid cast while printing BMU buffer address
+[AAVB-3458] - [PFE_PLATFORM] Forwarding list of MAC static entry is not propagated to HW
+[AAVB-3478] - [PFE_PLATFORM] IDEX buffers not allocated from a controlled pool
+[AAVB-3482] - [PFE_PLATFORM] FCI: HIF_NOCPY is skipped when updating a logical interface
+[AAVB-3496] - [PFE_LINUX] sw bridged traffic gets damaged on output
+[AAVB-3527] - [PFE_PLATFORM] Platform doesn't clear all states on destroy (issue for suspend)
+[AAVB-3570] - [PFE_PLATFORM] pfe_idex_rpc not callable from atomic context
+[AAVB-3574] - [PFE_PLATFORM] Type pfe_ip_addr_t in pfe_rtable.h is too large
+[AAVB-3578] - [PFE_PLATFORM] pfe_idex_rpc RPC transport time-out when enabling MAC filtering on slave
+[AAVB-3579] - [PFE_PLATFORM] Physical interface flags are set incorrectly
+[AAVB-3580] - [PFE_LINUX] Transition to IDEX_REQ_STATE_TRANSMITTED failed
+[AAVB-3611] - [PFE_LINUX] Replace pfe_log_if_*() MAC filtering API with pfe_phy_if_*() equivalent
+[AAVB-3639] - [PFE_LINUX] linux interface in PFENG_LOGIF_MODE_TX_CLASS mode don't work
+[AAVB-3658] - [PFE_PLATFORM] HIF NOCPY - Buffer descriptors wrap mechanism does not work
+[AAVB-3671] - [PFE_PLATFORM][PFE_LINUX]use-after-free in _raw_spin_lock_irqsave
+
+# New Feature
+
+[AAVB-1602] - [PFE_PLATFORM] HIF NOCPY LMEM copy mode
+[AAVB-1872] - [PFE_PLATFORM] All buffers shall be returned at driver shutdown phase
+[AAVB-2086] - Move fci_msg_t definition to the fci_msg.h
+[AAVB-2191] - [PFE_PLATFORM] FCI should allow change of physical interface MAC address
+[AAVB-2205] - [PFE_QNX] Return provided buffers
+[AAVB-2328] - [PFE_LINUX] HIF traffic steering
+[AAVB-2827] - [PFE_DRV_LINUX] Aux Interface support
+[AAVB-3398] - [PFE_LINUX] Add support for multiple MAC unicast addreses
+[AAVB-3404] - [PFE_PLATFORM] Fast path router uses phyif MAC as default source address make this configurable
+[AAVB-3603] - [PFE_LINUX] Add unicast and multicast MAC addr filtering for the SLAVE driver
+[AAVB-3633] - [PFE_LINUX] STR: v2, netinterface config changes support
+
+# Improvement
+
+[AAVB-1645] - [PFE_PLATFORM] Interrupt dispatchers
+[AAVB-2304] - [PFE_PLATFORM] Allow to set the physical interface to promiscuous mode via FCI
+[AAVB-2350] - [PFE_PLATFORM] Add FCI usage examples, stage 3
+[AAVB-2511] - [PFE_PLATFORM][PFE_FW] Remove PE ID passing
+[AAVB-2700] - [PFE_LINUX] pfeng: follow SGMII configuration for PHY config
+[AAVB-2807] - [PFE_FW] HIF no copy/LMEM copy mode
+[AAVB-2866] - [PFE_DRV_LINUX] Map functional tests to requirements
+[AAVB-2938] - [PFE_PLATFORM] Static entry documentation update
+[AAVB-3066] - [PFE_LINUX] pfeng: move TXconf to NAPI
+[AAVB-3129] - [PFE_DRV_LINUX] Make FCI endpoint OS-independent - Linux replica
+[AAVB-3340] - [PFE_DRV_LINUX] libfci_cli: crazy numbers of warning during build
+[AAVB-3374] - [PFE_LINUX] STR: guard all necessary functions by pm_runtime_get_sync
+[AAVB-3420] - [PFE_PLATFORM] Update libFCI documentation with demo codes from libFCI_cli
+[AAVB-3431] - [PFE_PLATFORM] Remove compilation warnings
+[AAVB-3451] - [PFE_LINUX] use-case: run driver w/o u-boot dependency
+[AAVB-3467] - [PFE_PLATFORM] Disable PFE_CFG_HIF_NOCPY_SUPPORT in PFE SLAVE mode
+[AAVB-3471] - [PFE_PLATFORM] Optimize PE memory access locks
+[AAVB-3636] - [PFE_LINUX] Configure hif channel interrupt affinity hint to distribute interrupt load
+[AAVB-3649] - [PFE_PLATFORM] libfci_cli: Add rebuilding of libfci library to libfci_cli makefile
+[AAVB-3669] - [PFE_PLATFORM] Fix master/slave to work again
+
+========================================================
+What's Modified in BETA_0.9.4
+========================================================
+
+# Bug
+[AAVB-2224] - [PFE_LINUX] named memory API cannot be divided
+[AAVB-2313] - [PFE_PLATFORM] In case of error pfe_class_create causes destruction of a mutex which does not exist
+[AAVB-2430] - [PFE_PLATFORM] FCI conntrack query returns wrong IP address
+[AAVB-2441] - [ALB 26.0] VLAN forwarding is not working for pfe0 interface (pfe2 is working)
+[AAVB-2443] - [ALB 25.0]Observed "ping: getnameinfo: Temporary failure in name resolution" while doing ping6 from the DUT
+[AAVB-2446] - [ALB 25.0]ping6 traffic is started working when I run tcpdump on DUT,while doing ping6 from the Linux Host
+[AAVB-2447] - [ALB 25.0]IPerf3 session is not getting connected from the DUT while running UDP bi-directional traffic,if I start IPerf client in Linux Host first, then Iperf client in S32G
+[AAVB-2468] - [S32G Linux] SW forwarding doesn't work well with IPv6
+[AAVB-2469] - [PFE_LINUX] pfeng: udp reassembling failure
+[AAVB-2526] - [PFE_LINUX] pfeng: interface autonegotiation doesn't follow SGMII possibilities
+[AAVB-2538] - [PFE_DRV_LINUX] IPv6 fast-forward is not working
+[AAVB-2624] - [PFE_PLATFORM] Errata ERR050221 workaround: driver shall ensure that safety features are enabled
+[AAVB-2701] - [ALB 27.0-RDB2]Sometimes S32G DUT is getting hanged while adding 100 flexible parser rules
+[AAVB-2720] - [PFE_LINUX] pfeng: kernel 4.19: driver backtrace when util fw version requested
+[AAVB-2914] - [PFE_LINUX] pfeng: insmod reports success ($? = 0) even driver probe failed
+[AAVB-2944] - [PFE_FW] VLAN QinQ doesn't work with 802.1AD ethertype
+[AAVB-2983] - [PFE_PLATFORM] Adding new multicast will break existing multicast streams
+[AAVB-3100] - [PFE_PLATFORM] libFCI: LOGIF QUERY returns bad/wrong data for some match rule arguments
+[AAVB-3195] - [PFE_DRV_LINUX] devm_get_clk_from_child fails if the interface is rgmii-id/rgmii-txid/rgmii-rxid
+[AAVB-3200] - Observed "ADDR: No space left on device" while trying to change the MAC address S32G interface
+[AAVB-3244] - [PFE_PLATFORM] Pause frame is incorrectly generated and blocks transmittion
+[AAVB-3326] - [PFE_LINUX] Slave: hardcoded Master's HIF destination
+[AAVB-3329] - [PFE_PLATFORM] FPP_IF_LOOPBACK flag of logical interfaces is seemingly never set.
+[AAVB-3330] - [PFE_LINUX] Crash in qdisc on tx ring overrun (high rate ip fwding 2 opposite flows)
+
+# New Feature
+[AAVB-1924] - [PFE_PLATFORM] Enable by default the TTL decrement when the packet is routed
+[AAVB-2201] - [PFE_PLATFORM] Flexible Parser statistics API
+[AAVB-2210] - [PFE_PLATFORM] Add L2 bridge MAC table flush API
+[AAVB-2295] - [PFE_LINUX] pfeng: add SGMII autonegotiation
+[AAVB-2465] - [PFE_PLATFORM] Pause Support
+[AAVB-2826] - [PFE_DRV_LINUX] Mulitple HIF channel support
+[AAVB-2828] - [PFE_DRV_LINUX] Multiclient HIF support
+[AAVB-2860] - [PFE_DRV_QNX] eMAC multicast group membership
+[AAVB-3276] - [PFE_DRV_LINUX] Suspend to RAM support
+[AAVB-3277] - [PFE_DRV_LINUX] Integrate new SERDES driver
+[AAVB-3278] - [PFE_DRV_LINUX] Kernel 5.10 support
+
+# Improvement
+[AAVB-2129] - [PFE_Linux] MTU runtime configuration
+[AAVB-2391] - [PFE_LINUX] pfeng: add per-HIF statistics
+[AAVB-2410] - [PFE_PLATFORM] Make routing table configurable
+[AAVB-2470] - [PFE_LINUX] pfeng: move of HIF ring allocated structs from uncachable memory to cachable
+[AAVB-2471] - [PFE_LINUX] pfeng: allocate new RX buffers in chunks
+[AAVB-2475] - [PFE_LINUX] Pause Support
+[AAVB-2595] - [PFE_LINUX] pfeng: manage mdio_bus independently
+[AAVB-2601] - [PFE_LINUX] pfeng: pfe_hif_drv: refactor linux hif driver to use skbuffs
+[AAVB-2644] - [PFE_LINUX] HIF rings should be allocated from cached coherent memory
+[AAVB-2863] - [PFE_DRV_LINUX] BMU memory allocator change
+[AAVB-2991] - [PFE_FW] Discard packets that do not match the IEEE 802.1Q (VLAN) specifications
+[AAVB-2992] - [PFE_FW] Discard packets that do not match the IEEE 802.1AS specifications
+[AAVB-2994] - [PFE_FW] The network stack shall drop Ethernet frames with two or more VLAN tags
+[AAVB-2995] - [PFE_FW] Drop Ethernet frames without a VLAN tag except selected cases
+[AAVB-3049] - [LINUX_PFE] Linux driver includes some user space header files
+[AAVB-3056] - [PFE_LINUX][PFE_QNX][PFE_PLATFORM] clean introduced warnings
+[AAVB-3059] - [PFE_LINUX] Use triggered DMA instead of polling
+[AAVB-3060] - [PFE_LINUX] Interrupt coalescing
+[AAVB-3073] - [PFE_LINUX] Implement page allocation/reuse scheme for Rx buffers
+[AAVB-3074] - [PFE_LINUX] PFE descriptor usage optimization
+[AAVB-3077] - [PFE_PLATFORM] Should support APIs to enable the EMAC loop-back in slave mode
+[AAVB-3098] - [PFE_LINUX] Optimize rx buffer handling, drop embedded skb, clean up pfeng-hif
+[AAVB-3139] - [PFE_LINUX] pfeng: clean clocks on exit
+[AAVB-3173] - [PFE_LINUX] pfeng: get rid of use emac_regs
+[AAVB-3194] - [PFE_LINUX] build warnings being treated as errors
+[AAVB-3205] - [PFE_LINUX] Enable DMA coherency from driver
+[AAVB-3221] - [PFE_PLATFORM] Fix build warnings for SLAVE mode
+[AAVB-3233] - [PFE_DRV_QNX, PFE_DRV_LINUX] Enable print of diagnostic messages
+[AAVB-3300] - [PFE_LINUX] pfeng: support S32G2 cut 1.1/cut 2.0 dynamically
+[AAVB-3322] - [PFE_PLATFORM] API to get rx/tx packet count
+
+========================================================
+What's Modified in BETA_0.9.3
+========================================================
+
+# Bug
+[AAVB-2910] - [PFE_LINUX] pfeng: Slave: Backtraces on MII ioctl
+[AAVB-2965] - Linux pfeng module crash at remove
+
+# New Feature
+[AAVB-1376] - [PFE_QNX][PFE_PLATFORM] Fast-path IPv4/IPv6 Forwarder/Router
+[AAVB-1423] - [PFE_QNX][PFE_PLATFORM] Implement the conntrack manipulation FCI API
+[AAVB-1429] - [PFE_PLATFORM][PFE_QNX] Extend rtable API by query functions
+[AAVB-1495] - [PFE_PLATFORM] Create L2 bridge SW module
+[AAVB-1509] - [PFE_PLATFORM][PFE_QNX] Implement L2 Bridge FCI API
+[AAVB-2340] - [PFE_FW]Firmware variants support shall be added.
+[AAVB-2500] - [PFE_QNX] Add IEEE1588 timestamping support
+[AAVB-2746] - [PFE_PLATFORM] Allow use of NAT with IPv6
+[AAVB-2836] - [PFE_DRV_LINUX] L2 bridge static entry configuration using FCI
+[AAVB-2937] - [PFE_FW] FlexibleFilter per physical interface
+
+# Improvement
+[AAVB-2362] - [PFE_DRV_LINUX] Multicast address management
+[AAVB-2630] - [PFE_LINUX] pfeng: use EMAC port mode specific clocks
+[AAVB-2670] - [PFE_FW] Send egress timestamp report to respective HIF channel
+[AAVB-2818] - [PFE_FW] L3 router with NAT
+[AAVB-2837] - [PFE_DRV_LINUX] PFE 802.1as API
+[AAVB-2845] - [PFE_DRV_LINUX] eMAC multicast group memebership support
+[AAVB-2869] - [PFE_FW] VLAN tagging of L3 routed traffic
+[AAVB-2986] - [PFE_PLATFORM] fix linux build warnings
+[AAVB-2998] - [PFE_LINUX] pfeng: select correct TX clock name
+
+========================================================
+What's Modified in BETA_0.9.2
+========================================================
+
+# Improvement
+[AAVB-1886] - [PFE_PLATFORM] Optimize BD ring access
+[AAVB-1972] - [PFE_LINUX] add S/G support to TX path
+[AAVB-2560] - [PFE_PLATFORM] Add support for adding logical interfaces to UTIL PHY
+[AAVB-2570] - [PFE_PLATFORM] Dispatch HIF traffic using physical interfaces
+[AAVB-2623] - [PFE_LINUX] DMA32 memory should be preferred for rx buffers
+[AAVB-2669] - [PFE_LINUX] pfeng: notice about errata fix usage
+
+# Bug
+[AAVB-2499] - [S32G EVB:ALB 25]Low throughput observed for Bridge scenario
+[AAVB-2523] - [PFE_LINUX] pfeng: phylink backtraces on interface changes
+[AAVB-2586] - [PFE_PLATFORM] PTP-over-Ethernet + VLAN stall
+[AAVB-2610] - [PFE_LINUX] Oal memory cached interface provides non-cached memory
+[AAVB-2614] - [PFE_PLATFORM] Incorrect shaper weight calculation
+[AAVB-2642] - [PFE_LINUX] pfeng: fix 100Base-T1 support
+[AAVB-2643] - [PFE_LINUX] pfeng: fix rgmii-id, rgmii-txid, rgmii-rxid support
+
+# New Feature
+[AAVB-1945] - [PFE_FW,PFE_PLATFORM] Allow adding HIF interfaces to bridge (domain)
+[AAVB-2211] - [PFE_PLATFORM] Add API to get PE firmware version
+[AAVB-2276] - [PFE_FW]L2 bridge learning shall be switchable per port
+
+========================================================
+What's Modified in BETA_0.9.1
+========================================================
+
+# Improvement
+[AAVB-2067] - [PFE_LINUX][PFE_QNX] Notify FCI clients about FCI shutdown
+[AAVB-2568] - [PFE_LINUX] pfeng: enable util fw loading
+[AAVB-2571] - [PFE_PLATFORM] Firmware-based HIF traffic priority mgmt
+[AAVB-2575] - [PFE_PLATFORM] Disable HIF stall workaround
+
+# Bug
+[AAVB-2442] - [ALB 25.0 ]Unable to create bridge configuration
+
+# New Feature
+
+[AAVB-2206] - [PFE_PLATFORM] Egress QoS topology change API
+[AAVB-2472] - [PFE_FW] Implement SPD for IPsec
+[AAVB-2510] - [PFE_LINUX] pfeng: support for master/slave mode
+[AAVB-2534] - [PFE_QNX] PFE isolation support
+[AAVB-2561] - [PFE_PLATFORM] Egress QoS FCI API
+
+========================================================
+What's Modified in BETA_0.9.0
+========================================================
+
+# Improvement
+[AAVB-2436] - [PFE_PLATFORM] Code cleanup
+[AAVB-2494] - [PFE_LINUX] Fix mistake in the sysfs + add new syfs files
+
+# Bug
+[AAVB-2008] - [PC-FPGA-PFE-Linux]: Bridging of the PFE-interfaces eth0/pfe-0 and rename4/pfe-1 is NOT WORKING as expected.
+[AAVB-2297] - [PFE Linux] periodic load/unload of driver sometimes fails
+[AAVB-2345] - [PFE_PLATFORM] Wrong IP address version detection
+[AAVB-2380] - [PFE_LINUX] pfeng: incorrectly use highest speed of PHY
+[AAVB-2444] - [ALB 25.0] Observed crash dump while  running IPerf3 routing traffic 
+[AAVB-2501] - [S23G RDB - ALB25.0]: tcpdump crash on pfe0/pfe2 while running the IPv4 Fast path UDP traffic
+
+# New Feature
+[AAVB-1951] - [PFE_PLATFORM] Add FCI API to get physical/logical interface statistics
+[AAVB-2190] - [PFE_PLATFORM] Let FCI API enable and disable log+phy interfaces
+[AAVB-2212] - [PFE_PLATFORM] Port mirroring control
+[AAVB-2213] - [PFE_PLATFORM] Port mirroring FCI API
+[AAVB-2225] - [PFE_PLATFORM] Multi-instance HIF driver
+[AAVB-2272] - [PFE_PLATFORM] Show required fw version
+[AAVB-2348] - [PFE_DRV_LINUX] Add support for kernel 5.4 to PFE driver
+[AAVB-2423] - [PFE_PLATFORM] Arbitrary data passing (FCI)
+
+========================================================
+What's Modified in EAR_0.8.0 Patch1
+========================================================
+
+# List of Patched Files
+sw/xfci/libfci/Makefile
+sw/pfe_platform/hw
+sw/pfe_platform/hw/s32g
+sw/pfe_platform/hw/s32g/pfe_platform_master.c
+sw/pfe_platform/hw/s32g/pfe_emac_csr.c
+sw/pfe_platform/hw/s32g/pfe_emac_csr.h
+sw/pfe_platform/public/pfe_platform_cfg.h
+
+doc/PFE_S32G_A53_LNX_UserManual.pdf
+
+# Improvement
+[AAVB-2424] - [PFE_LINUX] libfci: allow building library in Yocto
+[AAVB-2390] - [PFE_LINUX] UM: add FCI chapter
+
+========================================================
+What's Modified in EAR_0.8.0
+========================================================
+
+# Improvement
+[AAVB-1584] - [PFE_LINUX] pfeng: sync HIF api
+[AAVB-1540] - [PFE_LINUX] create preallocated dma buffer for TX path
+[AAVB-1541] - [PFE_LINUX] user manual: fix formatting
+[AAVB-1572] - [PFE_LINUX] don't copy frame data to skbuf on receive
+[AAVB-1657] - [PFE_PLATFORM] CLASS PE Interrupt Dispatcher
+[AAVB-1878] - [[PFE_PLATFORM][PFE_LINUX] oal_irq: allow callback mask management
+[AAVB-1910] - [[PFE_QNX][PFE_LINUX] OAL API to manage named memory
+[AAVB-1913] - [[PFE_LINUX] Implement named memory management API
+[AAVB-1977] - [[PFE_LINUX] remove debug ifs component when VDK released
+[AAVB-2322] - [PFE_PLATFORM] Statistics for phy/log interface are reset with all updates on given interface
+[AAVB-2332] - [PFE_PLATFORM] Add FCI usage examples, stage 1
+[AAVB-2333] - [PFE_PLATFORM] Add FCI usage examples, stage 2
+[AAVB-2342] - [PFE_PLATFORM] HIF SC TX workaround
+
+# Bug
+[AAVB-2142] - [PFE_Linux] 32k ping not working on pfe1
+[AAVB-2268] - [PFE_PLATFORM] FPP_CMD_IPVx_RESET does not remove all routes
+[AAVB-2292] - [PFE_PLATFORM] FCI conntracks query doesn't provide route ID
+[AAVB-2305] - [PFE_LINUX] Reserved memory is detected one byte short then declared in DT
+[AAVB-2312] - [PFE_LINUX] pfeng: fix clause 45 support
+[AAVB-2379] - [PFE_LINUX] pfeng: evb: pfe2 clock setting looped forever on console
+
+# New Feature
+[AAVB-2202] - [PFE_PLATFORM] Multi-channel HIF driver
+[AAVB-2273] - [PFE_FW] Logical interface shall have configurable drop action
+[AAVB-2283] - [PFE_PLATFORM][PFE_QNX] Performance improvements stage 2
+[AAVB-2325] - [PFE_PLATFORM] HIF traffic steering
+
+========================================================
+What's Modified in PRE-EAR_0.4.4
+========================================================
+
+# Bug
+
+[AAVB-2014] - [PFE_PLATFORM] pfe_log_if_create should not call pfe_phy_if_add_log_if
+[AAVB-2028] - [PFE_FW][PFE_PLATFORM] PFE HW calculates incorrect IPv4 checksums for small frames
+[AAVB-2063] - [PFE_PLATFORM] Physical interfaces are not created correctly
+[AAVB-2107] - [PFE_PLATFORM] mutex double locked from platform during fci call
+[AAVB-2112] - [PFE_LINUX] libfci_cli does compile under linux
+[AAVB-2113] - [PFE_PLATFORM] TMU configuration
+[AAVB-2131] - [PFE Linux] Fatal errors on driver unload
+[AAVB-2149] - [PFE_LINUX] Promiscuous mode not working
+[AAVB-2150] - [PFE_LINUX] driver crashes when detected non-compatible fw
+[AAVB-2258] - [PFE_PLATFORM] pfe_l2br_table_init_cmd is writing wrong flags
+[AAVB-2259] - [PFE_PLATFORM] Bridge accesses out of boundary memory
+[AAVB-2261] - [PFE_PLATFORM] The initialization of L2 bridge is corrupted by soft reset
+[AAVB-2289] - [PFE_LINUX] FCI is not functional
+
+# New Feature
+
+[AAVB-1968] - [PFE_PLATFORM] HIF channel reset
+[AAVB-1985] - [PFE_PLATFORM] Split pfe_platform.c to master and slave variant
+[AAVB-1990] - [PFE_PLATFORM][PFE_QNX] FCI: Create core API to broadcast messages to all clients
+[AAVB-1992] - [PFE_PLATFORM] Multi-instance physical interfaces
+[AAVB-2016] - [PFE_PLATFORM] Multi-instance logical interfaces
+[AAVB-2019] - [PFE_PLATFORM] Add mdio Clause 45 support
+[AAVB-2053] - [PFE_FW] Implement exception handlers
+[AAVB-2054] - [PFE_FW] Implement a SW watchdog
+[AAVB-2075] - [PFE_FW] Add measurement of frame processing time by FW
+[AAVB-2111] - [PFE_PLATFORM] Extend interface-related RPC commands
+[AAVB-2189] - [PFE_LINUX] pfeng: add mdio support
+[AAVB-2199] - [PFE_FW]Add support for multicast replication
+[AAVB-2231] - [PFE_LINUX] Add total bytes into SG list in TX path
+[AAVB-2298] - [PFE_LINUX] pfeng: add more debug objects
+[AAVB-2300] - [PFE_LINUX] pfeng: support for GCC 9.2.0
+
+# Improvement
+
+[AAVB-1334] - [PFE_PLATFORM] Unify the elf module
+[AAVB-1392] - [PFE_PLATFORM] Do not use -1 as unsigned integer
+[AAVB-1529] - [PFE_PLATFORM] HIF stops operating under heavy traffic conditions
+[AAVB-1656] - [PFE_QNX] Proper mbuf dequeue (IFQ_DEQUEUE)
+[AAVB-1659] - [PFE_PLATFORM] Watchdog timers
+[AAVB-1670] - [PFE_PLATFORM] Sync PE memory updates
+[AAVB-1974] - [PFE_LINUX] pfeng: optimize config storages
+[AAVB-1994] - [PFE_PLATFORM] DMEM heap allocator
+[AAVB-2015] - [PFE_PLATFORM] Physical and logical interface database
+[AAVB-2061] - [PFE_PLATFORM] Review registers against NPU v7.14
+[AAVB-2064] - [PFE_PLATFORM] Improve classifier startup
+[AAVB-2098] - [PFE_PLATFORM] Unify phy_if/log_if db between platfrom driver and fci
+[AAVB-2117] - [PFE_PLATFORM] Remove LS1012 code
+[AAVB-2118] - [PFE_PLATFORM] Allow static block allocator instances
+[AAVB-2147] - [PFE_FW] implement aggregated CLASS PE statistics
+[AAVB-2153] - [PFE_PLATFORM][PFE_FW] Move compiler checks out of pfe_ct.h
+[AAVB-2165] - [PFE_PLATFORM,PFE_LINUX,PFE_MCAL,PFE_QNX] Create global configuration header
+[AAVB-2169] - [PFE_PLATFORM] Extend EMAC text statistics
+[AAVB-2170] - [PFE_FW]Add CPU ID to the firmware.
+[AAVB-2241] - [PFE_PLATFORM] Update FCI reference
+[AAVB-2248] - [PFE_PLATFORM] Extend the sysfs by debug registers
+[AAVB-2250] - [PFE_PLATFORM] Update libfci doc to correct bridge add and bridge update order.
+[AAVB-2252] - [PFE_FW]Allow to pass a 32-bit number together with error message through FP_ERROR
+[AAVB-2302] - [PFE_LINUX] pfeng: add libfci build
+
+========================================================
+What's modified in PRE-EAR_0.4.3
+========================================================
+# Bug
+AAVB-1983	[PFE_LINUX] get driver compilable without extra options
+AAVB-1984	[PFE_LINUX] fix BMU2 buffers error
+AAVB-1989	[PFE_FW] Missing cthdr field in the pfe_ct_version_t
+AAVB-2042	[PFE_LINUX] pfeng: unloading driver never finish
+
+# Improvement
+AAVB-1640	[PFE_LINUX] Create oal util for linux
+AAVB-1665	[PFE_LINUX] pfeng: add FCI subsystem
+AAVB-1914	[PFE_FW] Error reporting
+AAVB-1944	[PFE_LINUX] Create libfci for Linux
+AAVB-2004	Update help text for libfci_cli.
+AAVB-2051	[PFE_LINUX] pfeng: set explicit interface names
+AAVB-2052	[PFE_PLATFORM] oal:mbox: implement timers for Linux
+AAVB-2060	[PFE_LINUX] oal:thread: correctly signal thread join on linux
+AAVB-2094	[PFE_FW] Implement flexible parser
+AAVB-2119	[PFE_PLATFORM][PFE_LINUX][PFE_MCAL] remove VDK support
+AAVB-2146	[PFE_LINUX] pfeng: S32G bringup
+
+========================================================
+What's modified in PRE-EAR_0.4.2
+========================================================
+# Bug
+n/a
+
+# Improvement
+[AAVB-1387] [PFE_PLATFORM] Ensure correct HIF driver worker thread scheduling
+[AAVB-1427] [PFE_PLATFORM] Make FCI endpoint OS-independent
+[AAVB-1484] [PFE_PLATFORM] Optimize frequently used structures
+[AAVB-1521] [PFE_PLATFORM] Set default interface operational mode when interface not being used
+[AAVB-1536] [PFE_PLATFORM] oal_msg: improve msg_signal
+[AAVB-1545] [PFE_PLATFORM] Make NULL argument checks switchable
+[AAVB-1548] [PFE_PLATFORM] Rework the get_text_stat() functions
+[AAVB-1553] [PFE_PLATFORM] HIF polling configurable
+[AAVB-1559] [PFE_PLATFORM] Move HIF header types to pfe_ct.h
+[AAVB-1621] [PFE_PLATFORM] Define firmware-driver control interface
+[AAVB-1633] [PFE_PLATFORM] Sync with latest design (1.0.4)
+[AAVB-1641] [PFE_PLATFORM] Get real system clock frequency for TMU shaper configuration
+[AAVB-1648] [PFE_QNX][PFE_PLATFORM] Thread driven OAL IRQ
+[AAVB-1650] [PFE_LINUX] Sync OAL IRQ module
+[AAVB-1651] [PFE_PLATFORM] HIF Interrupt Dispatcher
+[AAVB-1652] [PFE_PLATFORM] BMU Interrupt Dispatcher
+[AAVB-1654] [PFE_PLATFORM] Remove HIF DRV worker thread
+[AAVB-1655] [PFE_PLATFORM] Init PFE memories before soft reset
+[AAVB-1658] [PFE_PLATFORM] HIF NOCPY Interrupt Dispatcher
+[AAVB-1663] [PFE_PLATFORM][PFE_QNX] Create deferred job OAL abstraction module
+[AAVB-1871] [PFE_PLATFORM] Return all HIF NOCPY BMU buffers on shutdown
+[AAVB-1882] [PFE_PLATFORM] Fix HIF and HIF NOCPY interrupts
+[AAVB-1887] [PFE_LINUX][PFE_PLATFORM] pfeng: integrate enhanced irq manager
+[AAVB-1892] [PFE_PLATFORM] Uninstall IRQ when BMU instance is being destroyed
+[AAVB-1896] [PFE_PLATFORM] Global interrupt dispatcher
+[AAVB-1903] [PFE_PLATFORM] Improve RX buffer management
+[AAVB-1906] [PFE_PLATFORM] PFE AXI address range restriction
+[AAVB-1919] [PFE_PLATFORM] Out of HIF RX buffers event detection
+[AAVB-1925] [PFE_PLATFORM] RX termination
+[AAVB-1953] [PFE_QNX][PFE_LINUX][PFE_PLAFORM] Remove compiler warnings
+[AAVB-1962] [PFE_PLATFORM] More robust HIF ring handling
+
+# New Feature
+[AAVB-1435] [PFE_FW] Prepare statistics gathering
+[AAVB-1499] [PFE_PLATFORM][PFE_QNX][PFE_LINUX] Bind PFE logical interfaces with HIF driver clients
+[AAVB-1608] [PFE_LINUX][PFE_PLATFORM][PFE_QNX] support VDK platform
+[AAVB-1629] [PFE_PLATFORM] Create the TLITE platform driver
+[AAVB-1660] [PFE_PLATFORM] Fabric parity protection
+[AAVB-1920] [PFE_PLATFORM] Ignore the ELF section MIPS.abiflags
+[AAVB-1928] [PFE_PLATFORM][PFE_FW] Add HIF channel ID to HIF TX header (pfe_ct.h)
+[AAVB-1935] [PFE_PLATFORM][PFE_FW] Define IHC flags within HIF TX and RX headers
+[AAVB-1936] [PFE_PLATFORM] Implement the IHC API
+
+
+========================================================
+What's modified in PRE-EAR_0.4.0
+========================================================
+
+# Bug
+AAVB-1422 [PFE_PLATFORM] Read beyond size of object
+
+# New Feature
+AAVB-1156 [PFE_PLATFORM][PFE_QNX] Port the PFE HW library to QNX environment
+AAVB-1157 [PFE_PLATFORM][PFE_QNX] Import the HW initialization module
+AAVB-1158 [PFE_PLATFORM][PFE_QNX] Import the HIF driver
+AAVB-1159 [PFE_PLATFORM][PFE_QNX] Import the firmware driver
+AAVB-1300 [PFE_PLATFORM][PFE_QNX] Add HIF channel abstraction class
+AAVB-1301 [PFE_PLATFORM][PFE_QNX] OS abstraction
+AAVB-1337 [PFE_PLATFORM] Update the pfe_platform to support the latest x86 FPGA HW
+AAVB-1366 [PFE_PLATFORM] Make the HIF working on x86 FPGA HW
+AAVB-1378 [PFE_LINUX] Make sources Linux compilable
+AAVB-1486 [PFE_PLATFORM][PFE_QNX] Create SW module for L2 bridge tables
+AAVB-1488 [PPFE_LINUX] Implement PFE linux driver core
+AAVB-1498 [PFE_QNX][PFE_PLATFORM] Create PFE interface representation type
+
+# Improvement
+AAVB-1388 [PFE_PLATFORM][PFE_QNX] Command-line build
+AAVB-1391 [PFE_PLATFORM] Replace native types by custom types
+AAVB-1397 [PFE_PLATFORM][PFE_QNX] Make RELEASE as default build profile
+AAVB-1398 [PFE_PLATFORM][PFE_QNX] Update headers in all deliverables
+AAVB-1444 [PFE_PLATFORM] Simplify rtable entries representation
+AAVB-1463 [PFE_PLATFORM] Improve PFE HIF ring handling
+AAVB-1466 [PFE_PLATFORM] HIF driver improvement
+AAVB-1534 [PFE_PLATFORM] Generalize the HW initialization
+
diff --git a/PFE_S32G_A53_LNX_BETA_0.9.5_SCR.txt b/PFE_S32G_A53_LNX_BETA_0.9.5_SCR.txt
new file mode 100644
index 0000000..e13d416
--- /dev/null
+++ b/PFE_S32G_A53_LNX_BETA_0.9.5_SCR.txt
@@ -0,0 +1,43 @@
+NXP Software Content Register
+
+Release Name:           PFE-DRV_S32G_A53_LNX_BETA_0.9.5
+
+Outgoing License:       GPL-2.0
+
+Package:                PFE-DRV_S32G_A53_LNX
+    Description:        The PFE Linux driver
+    Version:            BETA 0.9.5
+    License:            GPL-2.0
+    Format:             source code
+    Release Location:   CAF
+
+Component:              LINUX_PFENG
+    Location:           sw/linux-pfeng/
+    Description:        Linux NAPI ethernet driver
+    License:            GPL-2.0
+
+Component:              PFE_PLATFORM
+    Location:           sw/pfe_platform/
+                        sw/pfe_hif_drv/
+    Description:        PFE platform
+    License:            GPL-2.0
+
+Component:              SUPPORT_LIBS
+    Location:           sw/bpool/
+                        sw/common/
+                        sw/elf/
+                        sw/hal/
+                        sw/oal/
+                        sw/fifo/
+    Description:        PFE platform dependant library
+    License:            GPL-2.0
+
+Component:              FCI
+    Location:           sw/fci/
+                        sw/xfci/
+    Description:        Fast control interface library
+    License:            GPL-2.0
+
+Component:              ct_assert.h
+    Description:        Compile-time assert implementation
+    License:            GNU All-Permissive License
diff --git a/doc/FCI_API_Reference.pdf b/doc/FCI_API_Reference.pdf
index 58e14c4ba7d8f8affdc7e52f76e435351071ab01..86beaca4e129673ca877e9d3817b5df975765299 100644
GIT binary patch
delta 371563
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
z%0D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%0Arq*mx)u+
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
b5|DQ=E;LoAh7rQ7s;sC65);!mgM<DJ8AqF#

delta 369286
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
b%x7l)UpRfoL3TNA6GID2E>%@me>W}w1^}n7

diff --git a/doc/fsl-pfeng.txt b/doc/fsl-pfeng.txt
index 9955f59..d74cc52 100644
--- a/doc/fsl-pfeng.txt
+++ b/doc/fsl-pfeng.txt
@@ -7,15 +7,16 @@
 Required properties:
 - compatible : Should be "fsl,s32g274a-pfeng"
 - reg : Address and length of the register set for the device
+- resets: Specify PFE partition reset
 - interrupts : Should contain all pfeng interrupts but hifs: bmu,upegpt,safety
 - clocks : Should contain at least: pfe_sys, pfe_pe
-- memory-region : Physical address space for PFE buffers, must be in the range 0x00020000 - 0xbfffffff.
+- memory-region : Physical address space for PFE buffers
 		  The following memory regions are required in this exact order:
-		  1) reserved region for the BMU2 buffer pool, starting at physical addr 0x83000000,
+		  1) reserved region for the BMU2 buffer pool, must be in the range 0x00020000 - 0xbfffffff;
 		  "fsl,pfe-bmu2-pool" compatible;
-		  2) reserved region for non-cacheable DMA buffers, starting at physical addr 0x83200000,
+		  2) reserved region for non-cacheable DMA buffers,
 		  "shared-dma-pool" compatible;
-		  3) reserved region for buffer descriptor rings, starting at physical addr 0x83be0000,
+		  3) reserved region for buffer descriptor rings,
 		  "fsl,pfe-bdr-pool" compatible;
 
 Optional properties:
@@ -23,6 +24,7 @@ Optional properties:
 - fsl,fw-class-name : PFE CLASS firmware filename
 - fsl,fw-util-name : PFE UTIL firmware filename
 - fsl,pfeng-master-hif-channel : [slave only] The number of master's HIF channel (0-3)
+- phys : Serdes phys for sgmii interfaces
 
 Required subnode:
 - hif : specifies the PFE HIF channel
@@ -33,7 +35,7 @@ Required properties for 'hif' subnode:
 - compatible : Should be "fsl,pfeng-hif"
 - reg : Small number, indexing the HIF channel
 - interrupts : Should contain HIF channel interrupt
-- fsl,pfeng-hif-mode : Should contain channel mode: "s-cl/s-ch", "s-cl/m-ch"
+- fsl,pfeng-hif-mode : channel mode PFENG_HIF_MODE_EXCLUSIVE/PFENG_HIF_MODE_SHARED
 - fsl,pfeng-ihc : [master/slave only] Annotate for IHC traffic
 
 Required properties for 'emac' subnode:
@@ -55,13 +57,14 @@ Requires properties for 'ethernet' subnode:
 - compatible : Should be "fsl,pfeng-logif"
 - reg : Small number, indexing the network interfaces
 - fsl,pfeng-if-name : Logical interface name visible in the Linux
-- fsl,pfeng-logif-mode : 0 for now
+- fsl,pfeng-logif-mode : PFENG_LOGIF_MODE_TX_INJECT/PFENG_LOGIF_MODE_TX_CLASS/PFENG_LOGIF_MODE_AUX
 - fsl,pfeng-hif-channels : array of phandles of 'hif' nodes
 - fsl,pfeng-emac-link : [master/standalone only] phandle to coresponding 'emac' node
 - fsl,pfeng-emac-id : [slave only] PFE EMAC id (0..2)
 
 Optional properties for 'ethernet' subnode:
 - fsl,pfeng-ihc : [master/slave only] Declares the interface for IHC traffic
+- fsl,pfeng-emac-router : [slave only] switch linked EMAC to ROUTER_OP mode
 - local-mac-address : MAC address
 - phy-handle : phandle to the PHY device connected to this device.
 - fixed-link : Assume a fixed link. See fixed-link.txt in the same directory.
@@ -95,9 +98,9 @@ reserved-memory {
 	};
 };
 
-pfe@46080000 {
+pfe@46000000 {
 	compatible = "fsl,s32g274a-pfeng";
-	pfe: pfe@46080000 {
+	pfe: pfe@46000000 {
 		compatible = "fsl,s32g274a-pfeng";
 		reg = <0x0 0x46000000 0x0 0x1000000>,	 /* PFE controller */
 			  <0x0 0x4007ca00 0x0 0x4>;	 /* S32G274a syscon */
@@ -110,12 +113,22 @@ pfe@46080000 {
 			      <GIC_SPI 196 IRQ_TYPE_EDGE_RISING>,
 			      <GIC_SPI 197 IRQ_TYPE_EDGE_RISING>;
 		interrupt-names = "bmu", "nocpy", "upegpt", "safety";
-		clocks = <&clks S32G274A_SCMI_CLK_PFE_AXI>,
-			 <&clks S32G274A_SCMI_CLK_PFE_PE>;
-		clock-names = "pfe_sys", "pfe_pe";
+		dma-coherent;
+		resets = <&reset S32GEN1_SCMI_RST_PART2>;
+		reset-names = "pfe_part";
+		clocks = <&clks S32G_SCMI_CLK_PFE_AXI>,
+			 <&clks S32G_SCMI_CLK_PFE_PE>,
+			 <&clks S32G_SCMI_CLK_PFE_TS>;
+		clock-names = "pfe_sys", "pfe_pe", "pfe_ts";
 		memory-region = <&pfe_reserved_bmu2>, <&pfe_reserved>, <&pfe_reserved_bdr>;
 		fsl,fw-class-name = "s32g_pfe_class.fw";
 		fsl,fw-util-name = "s32g_pfe_util.fw";
+		phys = <&serdes1 PHY_TYPE_XPCS 0 0>,
+			 <&serdes1 PHY_TYPE_XPCS 1 1>,
+			 <&serdes0 PHY_TYPE_XPCS 1 1>;
+		phy-names = "emac0_xpcs", "emac1_xpcs", "emac2_xpcs";
+		nvmem-cells = <&soc_revision>;
+		nvmem-cell-names = "soc_revision";
 
 		/* PFE_HIF_0 */
 		pfe_hif0: hif@0 {
@@ -125,7 +138,8 @@ pfe@46080000 {
 			status = "disabled";
 			interrupts =  <GIC_SPI 190 IRQ_TYPE_EDGE_RISING>;
 			reg = <0>;
-			fsl,pfeng-hif-mode = "s-cl/s-ch";
+			fsl,pfeng-hif-mode = <PFENG_HIF_MODE_EXCLUSIVE>;
+			fsl,pfeng-ihc;
 		};
 
 		/* PFE_HIF_1 */
@@ -136,7 +150,7 @@ pfe@46080000 {
 			status = "disabled";
 			interrupts =  <GIC_SPI 191 IRQ_TYPE_EDGE_RISING>;
 			reg = <1>;
-			fsl,pfeng-hif-mode = "s-cl/s-ch";
+			fsl,pfeng-hif-mode = <PFENG_HIF_MODE_SHARED>;
 		};
 
 		/* PFE_HIF_2 */
@@ -147,18 +161,7 @@ pfe@46080000 {
 			status = "disabled";
 			interrupts =  <GIC_SPI 192 IRQ_TYPE_EDGE_RISING>;
 			reg = <2>;
-			fsl,pfeng-hif-mode = "s-cl/s-ch";
-		};
-
-		/* PFE_HIF_3 */
-		pfe_hif3: hif@3 {
-			compatible = "fsl,pfeng-hif";
-			#address-cells = <1>;
-			#size-cells = <0>;
-			status = "disabled";
-			interrupts =  <GIC_SPI 193 IRQ_TYPE_EDGE_RISING>;
-			reg = <3>;
-			fsl,pfeng-hif-mode = "s-cl/s-ch";
+			fsl,pfeng-hif-mode = <PFENG_HIF_MODE_EXCLUSIVE>;
 		};
 
 		/* PFE_EMAC_0 */
@@ -168,12 +171,18 @@ pfe@46080000 {
 			#size-cells = <0>;
 			status = "okay";
 			reg = <0>;
-			clocks = <&clks S32G274A_SCMI_CLK_PFE0_TX_SGMII>,
-				 <&clks S32G274A_SCMI_CLK_PFE0_TX_RGMII>,
-				 <&clks S32G274A_SCMI_CLK_PFE0_TX_RMII>,
-				 <&clks S32G274A_SCMI_CLK_PFE0_TX_MII>;
+			clocks = <&clks S32G_SCMI_CLK_PFE0_TX_SGMII>,
+				 <&clks S32G_SCMI_CLK_PFE0_TX_RGMII>,
+				 <&clks S32G_SCMI_CLK_PFE0_TX_RMII>,
+				 <&clks S32G_SCMI_CLK_PFE0_TX_MII>,
+				 <&clks S32G_SCMI_CLK_PFE0_RX_SGMII>,
+				 <&clks S32G_SCMI_CLK_PFE0_RX_RGMII>,
+				 <&clks S32G_SCMI_CLK_PFE0_RX_RMII>,
+				 <&clks S32G_SCMI_CLK_PFE0_RX_MII>;
 			clock-names = "tx_sgmii", "tx_rgmii",
-				      "tx_rmii", "tx_mii";
+				      "tx_rmii", "tx_mii",
+				      "rx_sgmii", "rx_rgmii",
+				      "rx_rmii", "rx_mii";
 			phy-mode = "sgmii";
 
 			/* mdio */
@@ -192,13 +201,19 @@ pfe@46080000 {
 			#size-cells = <0>;
 			status = "okay";
 			reg = <1>;
-			clocks = <&clks S32G274A_SCMI_CLK_PFE1_TX_SGMII>,
-				 <&clks S32G274A_SCMI_CLK_PFE1_TX_RGMII>,
-				 <&clks S32G274A_SCMI_CLK_PFE1_TX_RMII>,
-				 <&clks S32G274A_SCMI_CLK_PFE1_TX_MII>;
+			clocks = <&clks S32G_SCMI_CLK_PFE1_TX_SGMII>,
+				 <&clks S32G_SCMI_CLK_PFE1_TX_RGMII>,
+				 <&clks S32G_SCMI_CLK_PFE1_TX_RMII>,
+				 <&clks S32G_SCMI_CLK_PFE1_TX_MII>,
+				 <&clks S32G_SCMI_CLK_PFE1_RX_SGMII>,
+				 <&clks S32G_SCMI_CLK_PFE1_RX_RGMII>,
+				 <&clks S32G_SCMI_CLK_PFE1_RX_RMII>,
+				 <&clks S32G_SCMI_CLK_PFE1_RX_MII>;
 			clock-names = "tx_sgmii", "tx_rgmii",
-				      "tx_rmii", "tx_mii";
-			phy-mode = "rgmii";
+				      "tx_rmii", "tx_mii",
+				      "rx_sgmii", "rx_rgmii",
+				      "rx_rmii", "rx_mii";
+			phy-mode = "rgmii-id";
 
 			/* mdio */
 			pfe_mdio1: mdio@1 {
@@ -216,13 +231,19 @@ pfe@46080000 {
 			#size-cells = <0>;
 			status = "okay";
 			reg = <2>;
-			clocks = <&clks S32G274A_SCMI_CLK_PFE2_TX_SGMII>,
-				 <&clks S32G274A_SCMI_CLK_PFE2_TX_RGMII>,
-				 <&clks S32G274A_SCMI_CLK_PFE2_TX_RMII>,
-				 <&clks S32G274A_SCMI_CLK_PFE2_TX_MII>;
+			clocks = <&clks S32G_SCMI_CLK_PFE2_TX_SGMII>,
+				 <&clks S32G_SCMI_CLK_PFE2_TX_RGMII>,
+				 <&clks S32G_SCMI_CLK_PFE2_TX_RMII>,
+				 <&clks S32G_SCMI_CLK_PFE2_TX_MII>,
+				 <&clks S32G_SCMI_CLK_PFE2_RX_SGMII>,
+				 <&clks S32G_SCMI_CLK_PFE2_RX_RGMII>,
+				 <&clks S32G_SCMI_CLK_PFE2_RX_RMII>,
+				 <&clks S32G_SCMI_CLK_PFE2_RX_MII>;
 			clock-names = "tx_sgmii", "tx_rgmii",
-				      "tx_rmii", "tx_mii";
-			phy-mode = "rgmii";
+				      "tx_rmii", "tx_mii",
+				      "rx_sgmii", "rx_rgmii",
+				      "rx_rmii", "rx_mii";
+			phy-mode = "rgmii-id";
 
 			/* mdio */
 			pfe_mdio2: mdio@2 {
@@ -241,7 +262,7 @@ pfe@46080000 {
 			status = "disabled";
 			local-mac-address = [ 00 04 9F BE EF 00 ];
 			fsl,pfeng-if-name = "pfe0";
-			fsl,pfeng-logif-mode = <0>;
+			fsl,pfeng-logif-mode = <PFENG_LOGIF_MODE_TX_INJECT>;
 			fsl,pfeng-emac-link = <&pfe_emac0>;
 			fsl,pfeng-hif-channels = <&pfe_hif0>;
 		};
@@ -254,7 +275,7 @@ pfe@46080000 {
 			status = "disabled";
 			local-mac-address = [ 00 04 9F BE EF 01 ];
 			fsl,pfeng-if-name = "pfe1";
-			fsl,pfeng-logif-mode = <0>;
+			fsl,pfeng-logif-mode = <PFENG_LOGIF_MODE_TX_INJECT>;
 			fsl,pfeng-emac-link = <&pfe_emac1>;
 			fsl,pfeng-hif-channels = <&pfe_hif1>;
 		};
@@ -267,9 +288,89 @@ pfe@46080000 {
 			status = "disabled";
 			local-mac-address = [ 00 04 9F BE EF 02 ];
 			fsl,pfeng-if-name = "pfe2";
-			fsl,pfeng-logif-mode = <0>;
+			fsl,pfeng-logif-mode = <PFENG_LOGIF_MODE_TX_INJECT>;
 			fsl,pfeng-emac-link = <&pfe_emac2>;
 			fsl,pfeng-hif-channels = <&pfe_hif2>;
 		};
+
+		/* Logical network interface 'aux0' */
+		pfe_aux0: ethernet@3 {
+			compatible = "fsl,pfeng-logif";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+			local-mac-address = [ 00 04 9F BE EF 80 ];
+			fsl,pfeng-if-name = "aux0";
+			fsl,pfeng-logif-mode = <PFENG_LOGIF_MODE_AUX>;
+			fsl,pfeng-hif-channels = <&pfe_hif1>;
+		};
+
 	};
 };
+
+/* Example of PFE slave driver entry. Requires SLAVE mode driver */
+pfe_slave: pfe_slave@46000000 {
+	compatible = "fsl,s32g274a-pfeng-slave";
+	reg = <0x0 0x46000000 0x0 0x1000000>;	 /* PFE controller */
+	#address-cells = <0x01>;
+	#size-cells = <0x00>;
+	interrupt-parent = <&gic>;
+	dma-coherent;
+	memory-region = <&pfe_reserved_slave>,
+			<&pfe_reserved_bdr_slave>;
+	fsl,pfeng-master-hif-channel = <0>;
+	status = "disabled";
+
+	/* PFE_HIF_3 */
+	pfesl_hif3: hif@3 {
+		compatible = "fsl,pfeng-hif";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "okay";
+		interrupts = <GIC_SPI 193 IRQ_TYPE_EDGE_RISING>;
+		reg = <3>;
+		fsl,pfeng-hif-mode = <PFENG_HIF_MODE_SHARED>;
+		fsl,pfeng-ihc;
+	};
+
+	/* Logical network interface 'pfe0sl' */
+	pfesl_logif0: ethernet@0 {
+		compatible = "fsl,pfeng-logif";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "okay";
+		local-mac-address = [ 00 04 9F BE FF 10 ];
+		fsl,pfeng-if-name = "pfe0sl";
+		fsl,pfeng-logif-mode = <PFENG_LOGIF_MODE_TX_INJECT>;
+		fsl,pfeng-emac-id = <0>; /* PFE_EMAC_0 */
+		fsl,pfeng-emac-router;
+		fsl,pfeng-hif-channels = <&pfesl_hif3>;
+	};
+
+	/* Logical network interface 'pfe1sl' */
+	pfesl_logif1: ethernet@1 {
+		compatible = "fsl,pfeng-logif";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "okay";
+		local-mac-address = [ 00 04 9F BE FF 11 ];
+		fsl,pfeng-if-name = "pfe1sl";
+		fsl,pfeng-logif-mode = <PFENG_LOGIF_MODE_TX_INJECT>;
+		fsl,pfeng-emac-router;
+		fsl,pfeng-emac-id = <1>; /* PFE_EMAC_1 */
+		fsl,pfeng-hif-channels = <&pfesl_hif3>;
+	};
+
+	/* Logical network interface 'aux0sl' */
+	pfesl_aux0: ethernet@11 {
+		compatible = "fsl,pfeng-logif";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "okay";
+		local-mac-address = [ 00 04 9F BE FF 80 ];
+		fsl,pfeng-if-name = "aux0sl";
+		fsl,pfeng-logif-mode = <PFENG_LOGIF_MODE_AUX>;
+		fsl,pfeng-hif-channels = <&pfesl_hif3>;
+	};
+
+};
diff --git a/sw/Makefile b/sw/Makefile
index c9ae928..554e1c4 100644
--- a/sw/Makefile
+++ b/sw/Makefile
@@ -1,5 +1,5 @@
 # =========================================================================
-#  Copyright 2018-2020 NXP
+#  Copyright 2018-2021 NXP
 #
 #  SPDX-License-Identifier: GPL-2.0
 #
@@ -34,3 +34,8 @@ clean: $(PFE_DRIVER).qp_clean $(addsuffix .qp_clean,$(PFE_RELATIVES))
 %.qp_clean: $(basename %.qp_clean)
 	cd $(basename $@)
 	$(MAKE) clean
+
+# Return configured compiler version
+.PHONY: compiler_version
+compiler_version:
+	@echo "$(COMPILER_NAME), $(COMPILER_VERSION)"
diff --git a/sw/bpool/public/bpool.h b/sw/bpool/public/bpool.h
index a0eb65e..3255724 100644
--- a/sw/bpool/public/bpool.h
+++ b/sw/bpool/public/bpool.h
@@ -343,6 +343,7 @@ void bpool_put(bpool_t *pool, const void *va) __attribute__((hot));
 errno_t bpool_get_fill_level(bpool_t *pool, uint32_t *fill_level) __attribute__((hot));
 uint32_t bpool_get_depth(const bpool_t *pool) __attribute__((pure, hot));
 errno_t bpool_destroy(bpool_t * pool) __attribute__((cold));
+errno_t bpool_clear(bpool_t * pool) __attribute__((cold));
 
 #endif /* SRC_BPOOL_H_ */
 
diff --git a/sw/bpool/src/bpool.c b/sw/bpool/src/bpool.c
index 3c9c8dc..77cc484 100644
--- a/sw/bpool/src/bpool.c
+++ b/sw/bpool/src/bpool.c
@@ -11,6 +11,10 @@
 #include "fifo.h"
 #include "bpool.h"
 
+/*==================================================================================================
+*                          LOCAL TYPEDEFS (STRUCTURES, UNIONS, ENUMS)
+==================================================================================================*/
+
 /*
  * 	Performance assumptions:
  * 		- Buffer space start address is aligned to at least cache line size.
@@ -20,11 +24,12 @@
  * 		- Size of every descriptor is padded to integer multiple of cache line size.
  */
 
-#define is_power_of_2(n) ((n) && !((n) & ((n) - 1U)))
-
+#define is_power_of_2(n) (((n) != 0U) && (((n) & ((n) - 1U)) == 0U))
+ 
 static errno_t bpool_create_check_buffer_size_and_align(uint32_t buf_size, uint32_t align);
 static uint32_t bpool_create_calculate_aligned_buf_size(uint32_t buf_size);
-
+static errno_t bpool_get_and_check_alignment_of_physical_address(void **paddr, void **vaddr, addr_t block_size, const uint32_t *aligned_buf_size, bool_t cached);
+static errno_t bpool_fifo_creat_and_mutex_init(bpool_t *the_pool, const uint32_t* depth);
 static errno_t bpool_create_check_buffer_size_and_align(uint32_t buf_size, uint32_t align)
 {
 	errno_t ret;
@@ -86,6 +91,61 @@ static uint32_t bpool_create_calculate_aligned_buf_size(uint32_t buf_size)
 	return aligned_buf_size;
 }
 
+static errno_t bpool_get_and_check_alignment_of_physical_address(void **paddr, void **vaddr, addr_t block_size, const uint32_t *aligned_buf_size, bool_t cached)
+{
+	/*	Get physically contiguous memory region (buffers) */
+	if(TRUE == cached)
+	{
+		*vaddr = oal_mm_malloc_contig_named_aligned_cache(PFE_CFG_RX_MEM, block_size, *aligned_buf_size);
+	}
+	else
+	{
+		*vaddr = oal_mm_malloc_contig_named_aligned_nocache(PFE_CFG_RX_MEM, block_size, *aligned_buf_size);
+	}
+	if (NULL == *vaddr)
+	{
+		NXP_LOG_ERROR("Unable to get aligned memory block\n");
+		return ECANCELED;
+	}
+
+	/*	Get physical address */
+	*paddr = oal_mm_virt_to_phys_contig(*vaddr);
+	if (NULL == *paddr)
+	{
+		NXP_LOG_ERROR("Unable to get physical address\n");
+		oal_mm_free_contig(*vaddr);
+		return ECANCELED;
+	}
+
+	/*	Check alignment of physical address */
+	if((addr_t)*paddr != ((addr_t)*paddr & ~((addr_t)*aligned_buf_size-1U)))
+	{
+		NXP_LOG_ERROR("The physical address p0x%p is not properly aligned to buffer size %u\n", *paddr, (uint_t)*aligned_buf_size);
+		oal_mm_free_contig(*vaddr);
+		return ECANCELED;
+	}
+	return EOK;
+}
+static errno_t bpool_fifo_creat_and_mutex_init(bpool_t *the_pool, const uint32_t* depth)
+{
+	/*	Create FIFO as a container of the pool. Ensure the FIFO is 'protected' against
+	 	concurrent accesses. */
+	the_pool->free_fifo = fifo_create(*depth);
+	if (NULL == the_pool->free_fifo)
+	{
+		NXP_LOG_ERROR("Can't create buffer FIFO\n");
+		return ECANCELED;
+	}
+
+	if (EOK != oal_mutex_init(&the_pool->fifo_lock))
+	{
+		NXP_LOG_ERROR("Mutex initialization failed\n");
+		fifo_destroy((fifo_t *)(the_pool->free_fifo));
+		the_pool->free_fifo = NULL;
+		return ECANCELED;
+	}
+    return EOK;
+}
 /**
  * @brief		Destroy pool and release all allocated memory
  * @param[in]	pool The bpool instance
@@ -121,6 +181,28 @@ __attribute__((cold)) errno_t bpool_destroy(bpool_t * pool)
 	return EOK;
 }
 
+/**
+ * @brief		Clear buffer pool
+ * @param[in]	pool The bpool instance
+ * @retval		EOK Success
+ * @retval		EINVAL Invalid argument
+ */
+__attribute__((cold)) errno_t bpool_clear(bpool_t * pool)
+{
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+	if (unlikely(NULL == pool))
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+		return EINVAL;
+	}
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+	/*	Clear buffer FIFO */
+	fifo_clear((fifo_t *)(pool->free_fifo));
+
+	return EOK;
+}
+
 /**
  * @brief		Get fill level
  * @param[in]	pool The bpool instance
@@ -279,8 +361,8 @@ __attribute__((cold)) bpool_t * bpool_create(uint32_t depth, uint32_t buf_size,
 {
 	uint32_t i;
 	bpool_rx_buf_t *fifo_item;
-	void *paddr;
-	void *vaddr;
+	void *paddr = NULL;
+	void *vaddr = NULL;
 	addr_t buf_paddr;
 	addr_t buf_vaddr;
 	bpool_t *the_pool;
@@ -338,51 +420,17 @@ __attribute__((cold)) bpool_t * bpool_create(uint32_t depth, uint32_t buf_size,
 		NXP_LOG_DEBUG("Sub-optimal structure alignment: bpool instance\n");
 	}
 
-	/*	Create FIFO as a container of the pool. Ensure the FIFO is 'protected' against
-	 	concurrent accesses. */
-	the_pool->free_fifo = fifo_create(depth);
-	if (NULL == the_pool->free_fifo)
+	ret = bpool_fifo_creat_and_mutex_init(the_pool, &depth);
+	if (EOK != ret)
 	{
-		NXP_LOG_ERROR("Can't create buffer FIFO\n");
 		goto release_pool_and_fail;
 	}
-
-	if (EOK != oal_mutex_init(&the_pool->fifo_lock))
-	{
-		NXP_LOG_ERROR("Mutex initialization failed\n");
-		goto release_fifo_and_fail;
-	}
-
-	/*	Get physically contiguous memory region (buffers) */
-	if(TRUE == cached)
+	ret = bpool_get_and_check_alignment_of_physical_address(&paddr, &vaddr, block_size, &aligned_buf_size, cached);
+	if (EOK != ret)
 	{
-		vaddr = oal_mm_malloc_contig_named_aligned_cache(PFE_CFG_RX_MEM, block_size, aligned_buf_size);
-	}
-	else
-	{
-		vaddr = oal_mm_malloc_contig_named_aligned_nocache(PFE_CFG_RX_MEM, block_size, aligned_buf_size);
-	}
-	if (NULL == vaddr)
-	{
-		NXP_LOG_ERROR("Unable to get aligned memory block\n");
 		goto release_mutex_and_fail;
 	}
 
-	/*	Get physical address */
-	paddr = oal_mm_virt_to_phys_contig(vaddr);
-	if (NULL == paddr)
-	{
-		NXP_LOG_ERROR("Unable to get physical address\n");
-		goto release_block_and_fail;
-	}
-
-	/*	Check alignment of physical address */
-	if((addr_t)paddr != ((addr_t)paddr & ~((addr_t)aligned_buf_size-1U)))
-	{
-		NXP_LOG_ERROR("The physical address p0x%p is not properly aligned to buffer size %u\n", paddr, (uint_t)aligned_buf_size);
-		goto release_block_and_fail;
-	}
-
 	the_pool->block_origin_pa = paddr;
 	the_pool->block_origin_va = vaddr;
 	the_pool->buffer_align = aligned_buf_size;
@@ -444,12 +492,10 @@ __attribute__((cold)) bpool_t * bpool_create(uint32_t depth, uint32_t buf_size,
 					(void *)the_pool->buffer_va_start);
 
 	return the_pool;
-
 release_block_and_fail:
 	oal_mm_free_contig(vaddr);
 release_mutex_and_fail:
 	(void)oal_mutex_destroy(&the_pool->fifo_lock);
-release_fifo_and_fail:
 	fifo_destroy((fifo_t *)(the_pool->free_fifo));
 	the_pool->free_fifo = NULL;
 release_pool_and_fail:
diff --git a/sw/build_env.mak b/sw/build_env.mak
index 90b4bb8..fa8f88b 100644
--- a/sw/build_env.mak
+++ b/sw/build_env.mak
@@ -57,16 +57,14 @@ export PFE_CFG_MASTER_IF?=6
 #Main local host interface to be used for data communication (see pfe_ct_phy_if_id_t)
 export PFE_CFG_LOCAL_IF?=$(PFE_CFG_PFE0_IF)
 #HIF NOCPY support
-export PFE_CFG_HIF_NOCPY_SUPPORT?=0
-#HIF NOCPY direct mode. When disabled then LMEM copy mode is used.
-export PFE_CFG_HIF_NOCPY_DIRECT?=0
+export PFE_CFG_HIF_NOCPY_SUPPORT?=1
 #Force TX CSUM calculation on all frames (this forcibly overwrite all IP/TCP/UDP checksums in FW)
 export PFE_CFG_CSUM_ALL_FRAMES?=0
 #HIF sequence number check. 1 - enable, 0 - disable
 export PFE_CFG_HIF_SEQNUM_CHECK?=0
 #IP version
 export PFE_CFG_IP_VERSION?=PFE_CFG_IP_VERSION_NPU_7_14a
-#QNX only: When enabled cache maintenence is not performed on buffers.
+#QNX only: When enabled cache maintenance is not performed on buffers.
 export PFE_CFG_BUFFERS_COHERENT?=1
 #Build of rtable feature. 1 - enable, 0 - disable
 export PFE_CFG_RTABLE_ENABLE?=1
@@ -94,6 +92,8 @@ export PFE_CFG_SYS_MEM?="pfe_ddr"
 export PFE_CFG_BD_MEM?="pfe_ddr"
 #RX buffers location
 export PFE_CFG_RX_MEM?="pfe_ddr"
+#TX buffers location
+export PFE_CFG_TX_MEM?="pfe_ddr"
 #Routing table location
 export PFE_CFG_RT_MEM?="pfe_ddr"
 #Routing table hash size (number of entries)
@@ -104,6 +104,13 @@ export PFE_CFG_RT_COLLISION_SIZE?=256
 export PFE_CFG_HIF_PRIO_CTRL=1
 #Enable safe interrupt handling
 export PFE_CFG_SAFE_IRQ?=1
+#Maximum number of System buffers
+export PFE_CFG_BMU2_BUF_COUNT?=1024
+#System buffer size
+export PFE_CFG_BMU2_BUF_SIZE?=2048
+#Number of entries of a HIF ring, must be power of 2
+export PFE_CFG_HIF_RING_LENGTH?=256
+
 
 ifeq ($(PFE_CFG_HIF_DRV_MODE),0)
   #Use multi-client HIF driver. Required when multiple logical interfaces need to
@@ -155,6 +162,10 @@ ifeq ($(PFE_CFG_PFE_MASTER),0)
     $(warning Slave driver must have multi-instance support enabled)
     PFE_CFG_MULTI_INSTANCE_SUPPORT=1
   endif
+  ifneq ($(PFE_CFG_HIF_NOCPY_SUPPORT),0)
+    $(warning HIF nocpy is not supported in SLAVE mode)
+    PFE_CFG_HIF_NOCPY_SUPPORT=0
+  endif
   export PFE_CFG_FCI_ENABLE=0
 endif
 
@@ -206,11 +217,11 @@ GLOBAL_CCFLAGS+=-DPFE_CFG_PFE1_IF=$(PFE_CFG_PFE1_IF)
 GLOBAL_CCFLAGS+=-DPFE_CFG_PFE2_IF=$(PFE_CFG_PFE2_IF)
 
 ifneq ($(PFE_CFG_HIF_NOCPY_SUPPORT),0)
+  ifeq ($(TARGET_OS),QNX)
     GLOBAL_CCFLAGS+=-DPFE_CFG_HIF_NOCPY_SUPPORT
-endif
-
-ifneq ($(PFE_CFG_HIF_NOCPY_DIRECT),0)
-    GLOBAL_CCFLAGS+=-DPFE_CFG_HIF_NOCPY_DIRECT
+  else
+	#todo Implement HIF NOCPY support on Linux AAVB-2829
+  endif
 endif
 
 ifneq ($(PFE_CFG_HIF_USE_BD_TRIGGER),0)
@@ -321,6 +332,15 @@ ifneq ($(PFE_CFG_RX_MEM),0)
   endif
 endif
 
+ifneq ($(PFE_CFG_TX_MEM),0)
+  # Pass string literal
+  ifeq ($(TARGET_OS),LINUX)
+    GLOBAL_CCFLAGS+=-DPFE_CFG_TX_MEM='\"$(PFE_CFG_TX_MEM)\"'
+  else
+    GLOBAL_CCFLAGS+=-DPFE_CFG_TX_MEM='$(PFE_CFG_TX_MEM)'
+  endif
+endif
+
 ifneq ($(PFE_CFG_RT_MEM),0)
   # Pass string literal
   ifeq ($(TARGET_OS),LINUX)
@@ -346,6 +366,15 @@ ifneq ($(PFE_CFG_SAFE_IRQ),0)
     GLOBAL_CCFLAGS+=-DPFE_CFG_SAFE_IRQ
 endif
 
+ifneq ($(PFE_CFG_BMU2_BUF_COUNT),0)
+    GLOBAL_CCFLAGS+=-DPFE_CFG_BMU2_BUF_COUNT=$(PFE_CFG_BMU2_BUF_COUNT)
+endif
+ifneq ($(PFE_CFG_BMU2_BUF_SIZE),0)
+    GLOBAL_CCFLAGS+=-DPFE_CFG_BMU2_BUF_SIZE=$(PFE_CFG_BMU2_BUF_SIZE)
+endif
+ifneq ($(PFE_CFG_HIF_RING_LENGTH),0)
+    GLOBAL_CCFLAGS+=-DPFE_CFG_HIF_RING_LENGTH=$(PFE_CFG_HIF_RING_LENGTH)
+endif
 # This variable will be propagated to every Makefile in the project
 export GLOBAL_CCFLAGS;
 
@@ -391,8 +420,13 @@ ifeq ($(TARGET_OS),QNX)
 
     export OUTPUT_DIR=build/$(CONFIG_NAME)
 
-    export CC=qcc -Vgcc_nto$(PLATFORM)
-    export CXX=qcc -lang-c++ -Vgcc_nto$(PLATFORM)
+    # Compiler name, aka compiler to be used for testing
+    COMPILER_NAME?=gcc
+
+    # Compiler version to be used for testing
+    COMPILER_VERSION?=8.3.0
+    export CC=qcc -V$(COMPILER_VERSION),$(COMPILER_NAME)_nto$(PLATFORM)
+    export CXX=qcc -lang-c++ -V$(COMPILER_VERSION),$(COMPILER_NAME)_nto$(PLATFORM)
     export LD=$(CC)
     export INC_PREFIX=
 
diff --git a/sw/common/public/blalloc.h b/sw/common/public/blalloc.h
index e497ac7..b51156f 100644
--- a/sw/common/public/blalloc.h
+++ b/sw/common/public/blalloc.h
@@ -48,12 +48,12 @@ typedef struct
  *          instead of dynamic blalloc_create() and blalloc_destroy(). 
  */
 #define BLALLOC_STATIC_INST(__name, __size, __chunk_size) \
-static uint8_t blalloc_buf_##__name[((__size >> __chunk_size) + BLALLOC_CFG_CHUNKS_IN_BYTE - 1U) / BLALLOC_CFG_CHUNKS_IN_BYTE] = {0U}; \
+static uint8_t blalloc_buf_##__name[(((__size) >> (__chunk_size)) + BLALLOC_CFG_CHUNKS_IN_BYTE - 1U) / BLALLOC_CFG_CHUNKS_IN_BYTE] = {0U}; \
 static blalloc_t __name = \
     { \
         .chunkinfo = blalloc_buf_##__name, \
-        .size = __size, \
-        .chunk_size = __chunk_size \
+        .size = (__size), \
+        .chunk_size = (__chunk_size) \
     }
 
 blalloc_t *blalloc_create(size_t size, size_t chunk_size);
diff --git a/sw/common/public/ct_assert.h b/sw/common/public/ct_assert.h
index dfbf20c..926d218 100644
--- a/sw/common/public/ct_assert.h
+++ b/sw/common/public/ct_assert.h
@@ -15,13 +15,17 @@
 #define ASSERT_CONCAT_(a, b) a##b
 #define ASSERT_CONCAT(a, b) ASSERT_CONCAT_(a, b)
 
-#ifdef __ghs__ /* AAVB-2386 */
-	/* Dummy implementation with no check to avoid compile error */
-	#define ct_assert(e) enum { ASSERT_CONCAT(precompile_assert_, __COUNTER__) = 1 } 
+#define ct_assert(e) enum { ASSERT_CONCAT(precompile_assert_, __COUNTER__) = 1/(!!(e)) }
+
+#ifdef PFE_CFG_TARGET_OS_AUTOSAR
+    /* The compiler options for MCAL driver generate errors or warnings when offsetof is used inside of ct_assert.
+    So it is not possible to assert offset of structures at compile time for MCAL driver.
+    This is done at runtime in test case Eth_43_PFE_TC_CT_ASSERT in test suite Eth_43_PFE_TS_017.
+    Therefore ct_assert_offsetof is a dummy implementation on MCAL driver.
+    */
+    #define ct_assert_offsetof(e) enum { ASSERT_CONCAT(precompile_assert_, __COUNTER__) = 1 } 
 #else
-	#define ASSERT_CONCAT_INNER(a, b) a##b
-	#define ASSERT_CONCAT_OUTER(a, b) ASSERT_CONCAT_INNER(a, b)
-	#define ct_assert(e) enum { ASSERT_CONCAT_OUTER(precompile_assert_, __COUNTER__) = 1/(!!(e)) }
-#endif /* __ghs__ */
+    #define ct_assert_offsetof(e) enum { ASSERT_CONCAT(precompile_assert_, __COUNTER__) = 1/(!!(e)) }
+#endif /* PFE_CFG_TARGET_OS_AUTOSAR */
 
 #endif /* CT_ASSERT_H */
diff --git a/sw/common/src/blalloc.c b/sw/common/src/blalloc.c
index 4bfc78c..8df313e 100644
--- a/sw/common/src/blalloc.c
+++ b/sw/common/src/blalloc.c
@@ -430,6 +430,15 @@ void blalloc_free_offs(blalloc_t *ctx, addr_t offset)
 	uint8_t chunk;
 	uint_t i,j;
 
+	/* Check if chunk is free already or not */	
+	byte = ctx->chunkinfo[first_byte];
+	chunk = (byte << (first_shift * CHUNK_BITS_COUNT)) & CHUNK_TEST_MASK;
+	if(chunk == 0x0U)
+	{
+		NXP_LOG_WARNING("blalloc_free_offs called on an already empty area\n");
+		return;
+	}
+
 	if((ctx->start_srch) > first_chunk)
 	{   /* We have new first known empty chunk, remember it */
 		ctx->start_srch = first_chunk;
diff --git a/sw/elf/public/elf_cfg.h b/sw/elf/public/elf_cfg.h
index da3b3ee..ff3f5f8 100644
--- a/sw/elf/public/elf_cfg.h
+++ b/sw/elf/public/elf_cfg.h
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2018-2020 NXP
+ *  Copyright 2018-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -87,7 +87,9 @@
 * @def      ELF_CFG_ELF64_SUPPORTED
 * @brief    Configures whether 64-bit ELF format support shall be built.
 */
-#define ELF_CFG_ELF64_SUPPORTED TRUE
+#ifndef ELF_CFG_ELF64_SUPPORTED
+#define ELF_CFG_ELF64_SUPPORTED FALSE
+#endif
 
 /**
 * @def      ELF_CFG_SECTION_PRINT_ENABLED
diff --git a/sw/fci/public/fci.h b/sw/fci/public/fci.h
index f92c9d5..c592722 100644
--- a/sw/fci/public/fci.h
+++ b/sw/fci/public/fci.h
@@ -33,7 +33,7 @@ typedef struct
 /**
  * @brief	FCI instance type
  */
-typedef struct __fci_tag fci_t;
+typedef struct fci_tag fci_t;
 
 errno_t fci_init(fci_init_info_t *info, const char_t *const identifier);
 void fci_fini(void);
diff --git a/sw/fci/public/fci_msg.h b/sw/fci/public/fci_msg.h
index 7dcc786..7006d5f 100644
--- a/sw/fci/public/fci_msg.h
+++ b/sw/fci/public/fci_msg.h
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2019-2020 NXP
+ *  Copyright 2019-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -18,6 +18,8 @@
 #ifndef SRC_FCI_MSG_H_
 #define SRC_FCI_MSG_H_
 
+#include "ct_assert.h"
+
 /**
  * @brief	Maximum size of FCI IPC message payload
  * @see		fci_msg_t
@@ -35,9 +37,22 @@ typedef enum
 	FCI_MSG_CLIENT_UNREGISTER,
 	FCI_MSG_CMD,
 	FCI_MSG_CORE_CLIENT_BROADCAST,
-	FCI_MSG_TYPE_MAX
+	/* Ensure proper size */
+	FCI_MSG_TYPE_MAX = (int)(1U << 31U)
 } msg_type_t;
 
+ct_assert(sizeof(msg_type_t) == sizeof(uint32_t));
+
+/**
+ * @brief	FCI message command type
+ */
+typedef struct
+{
+	uint32_t code;									/*!< Message code */
+	uint32_t length;								/*!< Message length */
+	uint8_t payload[FCI_CFG_MAX_CMD_PAYLOAD_LEN];	/*!< Message payload */
+} fci_msg_cmd_t;
+
 /*
  * QNX
  *
diff --git a/sw/fci/public/fci_msg_linux.h b/sw/fci/public/fci_msg_linux.h
index b61937d..56f6957 100644
--- a/sw/fci/public/fci_msg_linux.h
+++ b/sw/fci/public/fci_msg_linux.h
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2019-2020 NXP
+ *  Copyright 2019-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -37,13 +37,8 @@ typedef struct
 		{
 			uint32_t port_id;								/*!< Node identifier (port ID) */
 		} msg_client_unregister;
-
-		struct
-		{
-			uint32_t code;									/*!< Message code */
-			uint32_t length;								/*!< Message length */
-			uint8_t payload[FCI_CFG_MAX_CMD_PAYLOAD_LEN];	/*!< Message payload */
-		} msg_cmd;
+		
+		fci_msg_cmd_t msg_cmd;
 	};
 
 	/*	FCI internal storage */
diff --git a/sw/fci/src/fci.c b/sw/fci/src/fci.c
index 8336334..8db08f7 100644
--- a/sw/fci/src/fci.c
+++ b/sw/fci/src/fci.c
@@ -14,6 +14,8 @@
 #include "fci_fw_features.h"
 #include "fci_spd.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
  /* Global variable used across all fci files */
 fci_t __context = {0};
 
@@ -31,7 +33,7 @@ errno_t fci_process_ipc_message(fci_msg_t *msg, fci_msg_t *rep_msg)
 	errno_t ret = EOK; /* Return value */
 	uint16_t fci_ret = FPP_ERR_OK; /* FCI command return value */
 
-	uint8_t *reply_buf_ptr = NULL;
+	uint32_t *reply_buf_ptr = NULL;
 	uint32_t *reply_buf_len_ptr = NULL;
 	uint16_t *reply_retval_ptr = NULL;
 
@@ -44,14 +46,14 @@ errno_t fci_process_ipc_message(fci_msg_t *msg, fci_msg_t *rep_msg)
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 #if (FALSE == FCI_CFG_FORCE_LEGACY_API)
-	/*	Allocate space for return value by skipping first two bytes */
-	reply_buf_ptr = ((uint8_t *)&rep_msg->msg_cmd.payload[0] + 2);
+	/*	Allocate space for return value ( + padding) by skipping first 4 bytes */
+	reply_buf_ptr = ((uint32_t *)&rep_msg->msg_cmd.payload[4]);
 	reply_buf_len_ptr = &rep_msg->msg_cmd.length;
 
-	/*	Available reply buffer is two bytes less than maximum FCI message payload length */
-	*reply_buf_len_ptr = FCI_CFG_MAX_CMD_PAYLOAD_LEN - 2U;
+	/*	Available reply buffer is 4 bytes less than maximum FCI message payload length */
+	*reply_buf_len_ptr = FCI_CFG_MAX_CMD_PAYLOAD_LEN - 4U;
 #else
-	/*	Don't allocate space for return value. First two bytes of payload buffer will be overwritten... */
+	/*	Don't allocate space for return value. First 4 bytes of payload buffer will be overwritten... */
 	reply_buf_ptr = rep_msg->msg_cmd.payload;
 	reply_buf_len_ptr = &rep_msg->msg_cmd.length;
 	*reply_buf_len_ptr = FCI_CFG_MAX_CMD_PAYLOAD_LEN;
@@ -264,7 +266,7 @@ errno_t fci_process_ipc_message(fci_msg_t *msg, fci_msg_t *rep_msg)
 
 				default:
 				{
-					NXP_LOG_WARNING("Unknown CMD code received: 0x%x\n", msg->msg_cmd.code);
+					NXP_LOG_WARNING("Unknown CMD code received: 0x%x\n", (uint_t)msg->msg_cmd.code);
 					ret = EINVAL;
 					fci_ret = FPP_ERR_UNKNOWN_COMMAND;
 					break;
@@ -273,10 +275,10 @@ errno_t fci_process_ipc_message(fci_msg_t *msg, fci_msg_t *rep_msg)
 
 			/*	Inform client about command execution status */
 #if (FALSE == FCI_CFG_FORCE_LEGACY_API)
-			/*	We're adding another two bytes at the beginning of the FCI message payload area */
-			rep_msg->msg_cmd.length = *reply_buf_len_ptr + 2U;
+			/*	We're adding another 4 bytes at the beginning of the FCI message payload area */
+			rep_msg->msg_cmd.length = *reply_buf_len_ptr + 4U;
 #else
-			/*	Pass reply buffer length as is. First two bytes will be overwritten by the return value. */
+			/*	Pass reply buffer length as is. First 4 bytes will be overwritten by the return value. */
 			rep_msg->msg_cmd.length = *reply_buf_len_ptr;
 #endif /* FCI_CFG_FORCE_LEGACY_API */
 			reply_retval_ptr = (uint16_t *)rep_msg->msg_cmd.payload;
@@ -501,7 +503,9 @@ errno_t fci_disable_if(pfe_phy_if_t *phy_if)
 {
 	fci_t *context = (fci_t *)&__context;
 	fci_rt_db_entry_t *route_entry;
+#if defined(PFE_CFG_RTABLE_ENABLE)
 	pfe_rtable_entry_t *rtable_entry;
+#endif /* PFE_CFG_RTABLE_ENABLE */
 	errno_t ret = EOK;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
@@ -522,22 +526,26 @@ errno_t fci_disable_if(pfe_phy_if_t *phy_if)
 	route_entry = fci_rt_db_get_first(&context->route_db, RT_DB_CRIT_BY_IF, phy_if);
 	while (NULL != route_entry)
 	{
+#if defined(PFE_CFG_RTABLE_ENABLE)
 		rtable_entry = pfe_rtable_get_first(context->rtable, RTABLE_CRIT_BY_ROUTE_ID, &route_entry->id);
 		if (NULL != rtable_entry)
 		{
 			/*	There is routing table entry using the interface */
 			return EOK;
 		}
+#endif /* PFE_CFG_RTABLE_ENABLE */
 
 		route_entry = fci_rt_db_get_next(&context->route_db);
 	}
 
+#if defined(PFE_CFG_L2BRIDGE_ENABLE)
 	/*	Also don't disable it when interface is in bridge */
 	if (NULL != pfe_l2br_get_first_domain(context->l2_bridge, L2BD_BY_PHY_IF, (void *)phy_if))
 	{
 		/*	Interface is assigned to some L2 bridge domain */
 		return EOK;
 	}
+#endif /* PFE_CFG_L2BRIDGE_ENABLE */
 
 	/*	Interface is not being used by FCI logic, disable it. Note that
 	 	if some logical interface associated with this physical one is
@@ -550,3 +558,5 @@ errno_t fci_disable_if(pfe_phy_if_t *phy_if)
 
 	return ret;
 }
+
+#endif /* PFE_CFG_FCI_ENABLE */
diff --git a/sw/fci/src/fci_connections.c b/sw/fci/src/fci_connections.c
index 4b67040..30a9a95 100644
--- a/sw/fci/src/fci_connections.c
+++ b/sw/fci/src/fci_connections.c
@@ -37,6 +37,8 @@
 
 #include "oal_util_net.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 /*	IP address conversion */
 
 #define FCI_CONNECTIONS_CFG_MAX_STR_LEN		128U
@@ -53,15 +55,18 @@ static errno_t fci_connections_ipv6_cmd_to_entry(fpp_ct6_cmd_t *ct_cmd, pfe_rtab
 static errno_t fci_connections_ipv6_cmd_to_rep_entry(fpp_ct6_cmd_t *ct_cmd, pfe_rtable_entry_t **entry, pfe_phy_if_t **iface);
 static errno_t fci_connections_ipvx_ct_cmd(bool_t ipv6, fci_msg_t *msg, uint16_t *fci_ret, void *reply_buf, uint32_t *reply_len);
 #if (PFE_CFG_VERBOSITY_LEVEL >= 8)
+#ifdef NXP_LOG_ENABLED
 static char_t * fci_connections_ipv4_cmd_to_str(fpp_ct_cmd_t *ct_cmd);
 static char_t * fci_connections_ipv6_cmd_to_str(fpp_ct6_cmd_t *ct6_cmd);
 static char_t * fci_connections_entry_to_str(pfe_rtable_entry_t *entry);
 static char_t * fci_connections_build_str(bool_t ipv6, uint8_t *sip, uint8_t *dip, uint16_t *sport, uint16_t *dport,
 									uint8_t *sip_out, uint8_t *dip_out, uint16_t *sport_out, uint16_t *dport_out, uint8_t *proto);
+#endif /* NXP_LOG_ENABLED */					
 #endif /* PFE_CFG_VERBOSITY_LEVEL */
 static pfe_phy_if_t *fci_connections_rentry_to_if(pfe_rtable_entry_t *entry);
 
 #if (PFE_CFG_VERBOSITY_LEVEL >= 8)
+#ifdef NXP_LOG_ENABLED
 /**
  * @brief		Convert CT (IPv4) command to string representation
  * @param[in]	ct_cmd The command
@@ -88,9 +93,11 @@ static char_t * fci_connections_ipv4_cmd_to_str(fpp_ct_cmd_t *ct_cmd)
 										&ct_cmd->sport_reply,
 										(uint8_t *)&ct_cmd->protocol);
 }
+#endif /* NXP_LOG_ENABLED */
 #endif /* PFE_CFG_VERBOSITY_LEVEL */
 
 #if (PFE_CFG_VERBOSITY_LEVEL >= 8)
+#ifdef NXP_LOG_ENABLED
 /**
  * @brief		Convert CT (IPv6) command to string representation
  * @param[in]	ct_cmd The command
@@ -117,9 +124,11 @@ static char_t * fci_connections_ipv6_cmd_to_str(fpp_ct6_cmd_t *ct6_cmd)
 											&ct6_cmd->sport_reply,
 											(uint8_t *)&ct6_cmd->protocol);
 }
+#endif /* NXP_LOG_ENABLED */
 #endif /* PFE_CFG_VERBOSITY_LEVEL */
 
 #if (PFE_CFG_VERBOSITY_LEVEL >= 8)
+#ifdef NXP_LOG_ENABLED
 /**
  * @brief		Build string from given values
  * @param[in]	ipv6 TRUE if IPv6 values, FALSE for IPv4
@@ -189,24 +198,24 @@ static char_t * fci_connections_build_str(bool_t ipv6, uint8_t *sip, uint8_t *di
 	{
 		/*	SPORT need to be changed to DPORT_REPLY */
 		len += snprintf(buf + len, FCI_CONNECTIONS_CFG_MAX_STR_LEN - len,
-							"\t\tSPORT: %d --> %d\n", ntohs(*sport), ntohs(*sport_out));
+							"\t\tSPORT: %d --> %d\n", oal_ntohs(*sport), oal_ntohs(*sport_out));
 	}
 	else
 	{
 		len += snprintf(buf + len, FCI_CONNECTIONS_CFG_MAX_STR_LEN - len,
-							"\t\tSPORT: %d\n", ntohs(*sport));
+							"\t\tSPORT: %d\n", oal_ntohs(*sport));
 	}
 
 	if (*dport != *dport_out)
 	{
 		/*	DPORT need to be changed to SPORT_REPLY */
 		len += snprintf(buf + len, FCI_CONNECTIONS_CFG_MAX_STR_LEN - len,
-							"\t\tDPORT: %d --> %d\n", ntohs(*dport), ntohs(*dport_out));
+							"\t\tDPORT: %d --> %d\n", oal_ntohs(*dport), oal_ntohs(*dport_out));
 	}
 	else
 	{
 		len += snprintf(buf + len, FCI_CONNECTIONS_CFG_MAX_STR_LEN - len,
-							"\t\tDPORT: %d\n", ntohs(*dport));
+							"\t\tDPORT: %d\n", oal_ntohs(*dport));
 	}
 
 	/*	Last line. Shall not contain EOL character. */
@@ -214,9 +223,11 @@ static char_t * fci_connections_build_str(bool_t ipv6, uint8_t *sip, uint8_t *di
 
 	return buf;
 }
+#endif /* NXP_LOG_ENABLED */
 #endif /* PFE_CFG_VERBOSITY_LEVEL */
 
 #if (PFE_CFG_VERBOSITY_LEVEL >= 8)
+#ifdef NXP_LOG_ENABLED
 /**
  * @brief		Convert routing table entry to a string representation
  * @param[in]	entry The entry
@@ -246,10 +257,10 @@ static char_t * fci_connections_entry_to_str(pfe_rtable_entry_t *entry)
 		return err_str;
 	}
 
-	tuple.sport = htons(tuple.sport);
-	tuple.dport = htons(tuple.dport);
-	tuple_out.sport = htons(tuple_out.sport);
-	tuple_out.dport = htons(tuple_out.dport);
+	tuple.sport = oal_htons(tuple.sport);
+	tuple.dport = oal_htons(tuple.dport);
+	tuple_out.sport = oal_htons(tuple_out.sport);
+	tuple_out.dport = oal_htons(tuple_out.dport);
 
 	if (tuple.src_ip.is_ipv4)
 	{
@@ -278,6 +289,7 @@ static char_t * fci_connections_entry_to_str(pfe_rtable_entry_t *entry)
 											(uint8_t *)&tuple.proto);
 	}
 }
+#endif /* NXP_LOG_ENABLED */
 #endif /* PFE_CFG_VERBOSITY_LEVEL */
 
 /**
@@ -303,7 +315,7 @@ static void fci_connections_ipv4_cmd_to_5t(fpp_ct_cmd_t *ct_cmd, pfe_5_tuple_t *
 	tuple->dst_ip.is_ipv4 = TRUE;
 	tuple->sport = oal_ntohs(ct_cmd->sport);
 	tuple->dport = oal_ntohs(ct_cmd->dport);
-	tuple->proto = ct_cmd->protocol;
+	tuple->proto = (uint8_t)oal_ntohs(ct_cmd->protocol);
 }
 
 /**
@@ -329,7 +341,7 @@ static void fci_connections_ipv4_cmd_to_5t_rep(fpp_ct_cmd_t *ct_cmd, pfe_5_tuple
 	tuple->dst_ip.is_ipv4 = TRUE;
 	tuple->sport = oal_ntohs(ct_cmd->sport_reply);
 	tuple->dport = oal_ntohs(ct_cmd->dport_reply);
-	tuple->proto = ct_cmd->protocol;
+	tuple->proto = (uint8_t)oal_ntohs(ct_cmd->protocol);
 }
 
 /**
@@ -355,7 +367,7 @@ static void fci_connections_ipv6_cmd_to_5t(fpp_ct6_cmd_t *ct6_cmd, pfe_5_tuple_t
 	tuple->dst_ip.is_ipv4 = FALSE;
 	tuple->sport = oal_ntohs(ct6_cmd->sport);
 	tuple->dport = oal_ntohs(ct6_cmd->dport);
-	tuple->proto = ct6_cmd->protocol;
+	tuple->proto = (uint8_t)oal_ntohs(ct6_cmd->protocol);
 }
 
 /**
@@ -381,7 +393,7 @@ static void fci_connections_ipv6_cmd_to_5t_rep(fpp_ct6_cmd_t *ct6_cmd, pfe_5_tup
 	tuple->dst_ip.is_ipv4 = FALSE;
 	tuple->sport = oal_ntohs(ct6_cmd->sport_reply);
 	tuple->dport = oal_ntohs(ct6_cmd->dport_reply);
-	tuple->proto = ct6_cmd->protocol;
+	tuple->proto = (uint8_t)oal_ntohs(ct6_cmd->protocol);
 }
 
 /**
@@ -400,7 +412,6 @@ static pfe_rtable_entry_t *fci_connections_create_entry(fci_rt_db_entry_t *route
 															pfe_5_tuple_t *tuple, pfe_5_tuple_t *tuple_rep)
 {
 	pfe_rtable_entry_t *new_entry;
-	pfe_mac_addr_t mac_addr;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == route) || (NULL == tuple)))
@@ -435,8 +446,7 @@ static pfe_rtable_entry_t *fci_connections_create_entry(fci_rt_db_entry_t *route
 	pfe_rtable_entry_set_ttl_decrement(new_entry);
 
 	/*	Change MAC addresses */
-	pfe_phy_if_get_mac_addr(route->iface, mac_addr);
-	pfe_rtable_entry_set_out_mac_addrs(new_entry, mac_addr, route->dst_mac);
+	pfe_rtable_entry_set_out_mac_addrs(new_entry, route->src_mac, route->dst_mac);
 
 	if (NULL != tuple_rep)
 	{
@@ -528,7 +538,7 @@ static errno_t fci_connections_ipv4_cmd_to_entry(fpp_ct_cmd_t *ct_cmd, pfe_rtabl
 	route = fci_rt_db_get_first(&context->route_db, RT_DB_CRIT_BY_ID, (void *)&ct_cmd->route_id);
 	if (NULL == route)
 	{
-		NXP_LOG_ERROR("No such route (0x%x)\n", ct_cmd->route_id);
+		NXP_LOG_ERROR("No such route (0x%x)\n", (uint_t)ct_cmd->route_id);
 		return EINVAL;
 	}
 
@@ -598,7 +608,7 @@ static errno_t fci_connections_ipv4_cmd_to_rep_entry(fpp_ct_cmd_t *ct_cmd, pfe_r
 	route = fci_rt_db_get_first(&context->route_db, RT_DB_CRIT_BY_ID, (void *)&ct_cmd->route_id_reply);
 	if (NULL == route)
 	{
-		NXP_LOG_ERROR("No such route (0x%x)\n", oal_ntohl(ct_cmd->route_id_reply));
+		NXP_LOG_ERROR("No such route (0x%x)\n", (uint_t)oal_ntohl(ct_cmd->route_id_reply));
 		return EINVAL;
 	}
 
@@ -665,7 +675,7 @@ static errno_t fci_connections_ipv6_cmd_to_entry(fpp_ct6_cmd_t *ct6_cmd, pfe_rta
 	route = fci_rt_db_get_first(&context->route_db, RT_DB_CRIT_BY_ID, (void *)&ct6_cmd->route_id);
 	if (NULL == route)
 	{
-		NXP_LOG_ERROR("No such route (0x%x)\n", ct6_cmd->route_id);
+		NXP_LOG_ERROR("No such route (0x%x)\n", (uint_t)ct6_cmd->route_id);
 		return EINVAL;
 	}
 
@@ -735,7 +745,7 @@ static errno_t fci_connections_ipv6_cmd_to_rep_entry(fpp_ct6_cmd_t *ct6_cmd, pfe
 	route = fci_rt_db_get_first(&context->route_db, RT_DB_CRIT_BY_ID, (void *)&ct6_cmd->route_id_reply);
 	if (NULL == route)
 	{
-		NXP_LOG_ERROR("No such route (0x%x)\n", oal_ntohl(ct6_cmd->route_id_reply));
+		NXP_LOG_ERROR("No such route (0x%x)\n", (uint_t)oal_ntohl(ct6_cmd->route_id_reply));
 		return EINVAL;
 	}
 
@@ -800,7 +810,7 @@ static pfe_phy_if_t *fci_connections_rentry_to_if(pfe_rtable_entry_t *entry)
 	route = fci_rt_db_get_first(&context->route_db, RT_DB_CRIT_BY_ID, (void *)&route_id);
 	if (NULL == route)
 	{
-		NXP_LOG_ERROR("No such route: %d\n", oal_ntohl(route_id));
+		NXP_LOG_ERROR("No such route: %d\n", (int_t)oal_ntohl(route_id));
 		return NULL;
 	}
 
@@ -873,6 +883,7 @@ static errno_t fci_connections_ipvx_ct_cmd(bool_t ipv6, fci_msg_t *msg, uint16_t
 	{
 		case FPP_ACTION_REGISTER:
 		{
+#if (PFE_CFG_VERBOSITY_LEVEL >= 8)
 			if (TRUE == ipv6)
 			{
 				NXP_LOG_DEBUG("Attempt to register IPv6 connection:\n%s\n", fci_connections_ipv6_cmd_to_str(ct6_cmd));
@@ -881,6 +892,7 @@ static errno_t fci_connections_ipvx_ct_cmd(bool_t ipv6, fci_msg_t *msg, uint16_t
 			{
 				NXP_LOG_DEBUG("Attempt to register IPv4 connection:\n%s\n", fci_connections_ipv4_cmd_to_str(ct_cmd));
 			}
+#endif /* PFE_CFG_VERBOSITY_LEVEL */
 
 			/*	Get new routing table entry in forward direction */
 			if (TRUE == ipv6)
@@ -905,6 +917,7 @@ static errno_t fci_connections_ipvx_ct_cmd(bool_t ipv6, fci_msg_t *msg, uint16_t
 			}
 			else
 			{
+                /* Empty else is required by MISRA */
 				;
 			}
 
@@ -931,6 +944,7 @@ static errno_t fci_connections_ipvx_ct_cmd(bool_t ipv6, fci_msg_t *msg, uint16_t
 			}
 			else
 			{
+                /* Empty else is required by MISRA */
 				;
 			}
 
@@ -1024,7 +1038,7 @@ free_and_fail:
 
 			if (NULL != rep_entry)
 			{
-				if (EOK != pfe_rtable_del_entry(context->rtable, entry))
+				if (EOK != pfe_rtable_del_entry(context->rtable, rep_entry))
 				{
 					NXP_LOG_ERROR("Can't remove route entry\n");
 				}
@@ -1046,6 +1060,7 @@ free_and_fail:
 
 		case FPP_ACTION_DEREGISTER:
 		{
+#if (PFE_CFG_VERBOSITY_LEVEL >= 8)
 			if (TRUE == ipv6)
 			{
 				NXP_LOG_DEBUG("Attempt to unregister IPv6 connection:\n%s\n", fci_connections_ipv6_cmd_to_str(ct6_cmd));
@@ -1054,6 +1069,7 @@ free_and_fail:
 			{
 				NXP_LOG_DEBUG("Attempt to unregister IPv4 connection:\n%s\n", fci_connections_ipv4_cmd_to_str(ct_cmd));
 			}
+#endif /* PFE_CFG_VERBOSITY_LEVEL */
 
 			/*	Get entry by 5-tuple */
 			if (TRUE == ipv6)
@@ -1162,6 +1178,7 @@ free_and_fail:
 
 		case FPP_ACTION_UPDATE:
 		{	
+#if (PFE_CFG_VERBOSITY_LEVEL >= 8)
 			if (TRUE == ipv6)
 			{
 				NXP_LOG_DEBUG("Attempt to update IPv6 connection:\n%s\n", fci_connections_ipv6_cmd_to_str(ct6_cmd));
@@ -1170,6 +1187,7 @@ free_and_fail:
 			{
 				NXP_LOG_DEBUG("Attempt to update IPv4 connection:\n%s\n", fci_connections_ipv4_cmd_to_str(ct_cmd));
 			}
+#endif /* PFE_CFG_VERBOSITY_LEVEL */
 
 			NXP_LOG_INFO("UPDATED conntrack, only TTL decrement flag will be updated\n");
 
@@ -1190,7 +1208,7 @@ free_and_fail:
 
 				if (TRUE == ipv6)
 				{
-					if (ct6_cmd->flags & CTCMD_FLAGS_TTL_DECREMENT)
+					if (oal_ntohs(ct6_cmd->flags) & CTCMD_FLAGS_TTL_DECREMENT)
 					{
 						pfe_rtable_entry_set_ttl_decrement(entry);
 					}
@@ -1201,7 +1219,7 @@ free_and_fail:
 				}
 				else
 				{
-					if (ct_cmd->flags & CTCMD_FLAGS_TTL_DECREMENT)
+					if (oal_ntohs(ct_cmd->flags) & CTCMD_FLAGS_TTL_DECREMENT)
 					{
 						pfe_rtable_entry_set_ttl_decrement(entry);
 					}
@@ -1282,7 +1300,7 @@ free_and_fail:
 				memcpy(ct6_reply->daddr_reply, ct6_reply->saddr, 16);
 				ct6_reply->sport_reply = ct6_reply->dport;
 				ct6_reply->dport_reply = ct6_reply->sport;
-				ct6_reply->protocol = pfe_rtable_entry_get_proto(entry);
+				ct6_reply->protocol = oal_ntohs(pfe_rtable_entry_get_proto(entry));
 				ct6_reply->flags = 0U;
 				ct6_reply->route_id = route_id;
 			}
@@ -1297,7 +1315,7 @@ free_and_fail:
 				memcpy(&ct_reply->daddr_reply, &ct_reply->saddr, 4);
 				ct_reply->sport_reply = ct_reply->dport;
 				ct_reply->dport_reply = ct_reply->sport;
-				ct_reply->protocol = pfe_rtable_entry_get_proto(entry);
+				ct_reply->protocol = oal_ntohs(pfe_rtable_entry_get_proto(entry));
 				ct_reply->flags = 0U;
 				ct_reply->route_id = route_id;
 			}
@@ -1326,7 +1344,7 @@ free_and_fail:
 				}
 				else
 				{
-					ct_reply->vlan = oal_htons(pfe_rtable_entry_get_out_vlan(rep_entry));
+					ct_reply->vlan_reply = oal_htons(pfe_rtable_entry_get_out_vlan(rep_entry));
 				}
 			}
 
@@ -1346,11 +1364,11 @@ free_and_fail:
 			{
 				if (TRUE == ipv6)
 				{
-					ct6_reply->flags |= CTCMD_FLAGS_TTL_DECREMENT;
+					ct6_reply->flags |= oal_htons(CTCMD_FLAGS_TTL_DECREMENT);
 				}
 				else
 				{
-					ct_reply->flags |= CTCMD_FLAGS_TTL_DECREMENT;
+					ct_reply->flags |= oal_htons(CTCMD_FLAGS_TTL_DECREMENT);
 				}
 			}
 
@@ -1382,11 +1400,11 @@ free_and_fail:
 			{
 				if (TRUE == ipv6)
 				{
-					ct6_reply->dport_reply = htons(tuple.sport);
+					ct6_reply->dport_reply = oal_htons(tuple.sport);
 				}
 				else
 				{
-					ct_reply->dport_reply = htons(tuple.sport);
+					ct_reply->dport_reply = oal_htons(tuple.sport);
 				}
 			}
 
@@ -1394,11 +1412,11 @@ free_and_fail:
 			{
 				if (TRUE == ipv6)
 				{
-					ct6_reply->sport_reply = htons(tuple.dport);
+					ct6_reply->sport_reply = oal_htons(tuple.dport);
 				}
 				else
 				{
-					ct_reply->sport_reply = htons(tuple.dport);
+					ct_reply->sport_reply = oal_htons(tuple.dport);
 				}
 			}
 
@@ -1415,7 +1433,7 @@ free_and_fail:
 			break;
 		}
 	}
-
+	
 	return ret;
 }
 
@@ -1525,7 +1543,7 @@ errno_t fci_connections_ipv4_timeout_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_
 	}
 	else
 	{
-		NXP_LOG_DEBUG("Default timeout for protocol %u set to %u seconds\n", timeout_cmd->protocol, timeout_cmd->timeout_value1);
+		NXP_LOG_DEBUG("Default timeout for protocol %u set to %u seconds\n", (uint_t)timeout_cmd->protocol, (uint_t)timeout_cmd->timeout_value1);
 	}
 
 	/*	Update existing connections */
@@ -1585,9 +1603,11 @@ errno_t fci_connections_drop_one(pfe_rtable_entry_t *entry)
 
 	if (TRUE == tuple.src_ip.is_ipv4)
 	{
+#if (PFE_CFG_VERBOSITY_LEVEL >= 8)
 		/*	IPv4 */
 		NXP_LOG_DEBUG("Removing IPv4 connection:\n%s\n", fci_connections_entry_to_str(entry));
-
+#endif /* PFE_CFG_VERBOSITY_LEVEL */
+		
 		client = (fci_core_client_t *)pfe_rtable_entry_get_refptr(entry);
 		if (NULL != client)
 		{
@@ -1599,7 +1619,7 @@ errno_t fci_connections_drop_one(pfe_rtable_entry_t *entry)
 			memcpy(&ct_cmd->daddr, &tuple.dst_ip.v4, 4);
 			ct_cmd->sport = oal_htons(tuple.sport);
 			ct_cmd->dport = oal_htons(tuple.dport);
-			ct_cmd->protocol = tuple.proto;
+			ct_cmd->protocol = oal_htons(tuple.proto);
 
 			if (EOK != fci_core_client_send(client, &msg, NULL))
 			{
@@ -1613,8 +1633,10 @@ errno_t fci_connections_drop_one(pfe_rtable_entry_t *entry)
 	}
 	else
 	{
+#if (PFE_CFG_VERBOSITY_LEVEL >= 8)
 		/*	IPv6 */
 		NXP_LOG_DEBUG("Removing IPv6 connection:\n%s\n", fci_connections_entry_to_str(entry));
+#endif /* PFE_CFG_VERBOSITY_LEVEL */
 
 		client = (fci_core_client_t *)pfe_rtable_entry_get_refptr(entry);
 		if (NULL != client)
@@ -1627,7 +1649,7 @@ errno_t fci_connections_drop_one(pfe_rtable_entry_t *entry)
 			memcpy(&ct6_cmd->daddr[0], &tuple.dst_ip.v6, 16);
 			ct6_cmd->sport = oal_htons(tuple.sport);
 			ct6_cmd->dport = oal_htons(tuple.dport);
-			ct6_cmd->protocol = tuple.proto;
+			ct6_cmd->protocol = oal_htons(tuple.proto);
 
 			if (EOK != fci_core_client_send(client, &msg, NULL))
 			{
@@ -1767,4 +1789,5 @@ uint32_t fci_connections_get_default_timeout(uint8_t ip_proto)
 	}
 }
 
+#endif /* PFE_CFG_FCI_ENABLE */
 /** @}*/
diff --git a/sw/fci/src/fci_flexible_filter.c b/sw/fci/src/fci_flexible_filter.c
index 4b73102..339f2dd 100644
--- a/sw/fci/src/fci_flexible_filter.c
+++ b/sw/fci/src/fci_flexible_filter.c
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2019-2020 NXP
+ *  Copyright 2019-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -15,6 +15,8 @@
 #include "pfe_class.h"
 #include "pfe_flexible_filter.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 /**
  * @brief			Processes FPP_CMD_FP_FLEXIBLE_FILTER commands
  * @param[in]		msg FCI message containing the FPP_CMD_FP_FLEXIBLE_FILTER command
@@ -44,6 +46,8 @@ errno_t fci_flexible_filter_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_flexible_
     	NXP_LOG_ERROR("Context not initialized\n");
 		return EPERM;
 	}
+#else
+	(void)reply_buf;
 #endif /* PFE_CFG_NULL_ARG_CHECK */
     fp_cmd = (fpp_flexible_filter_cmd_t *)(msg->msg_cmd.payload);
     /* Important to initialize to avoid buffer overflows */    
@@ -118,3 +122,4 @@ errno_t fci_flexible_filter_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_flexible_
 
 }
 
+#endif /* PFE_CFG_FCI_ENABLE */
diff --git a/sw/fci/src/fci_fp.c b/sw/fci/src/fci_fp.c
index 0bd662a..341f34d 100644
--- a/sw/fci/src/fci_fp.c
+++ b/sw/fci/src/fci_fp.c
@@ -16,6 +16,8 @@
 #include "pfe_class.h"
 #include "pfe_flexible_filter.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 /**
 * @brief Constructs a query reply with specified rule parameters in the specified buffer
 * @param[in] r Buffer where to construct the query reply
@@ -270,7 +272,7 @@ errno_t fci_fp_rule_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_fp_rule_cmd_t *re
 	{
 		case FPP_ACTION_REGISTER:
         {
-            pfe_ct_fp_flags_t flags = 0U;
+            pfe_ct_fp_flags_t flags = FP_FL_NONE;
             switch(fp_cmd->r.match_action)
             {
                 case FP_ACCEPT:
@@ -285,7 +287,6 @@ errno_t fci_fp_rule_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_fp_rule_cmd_t *re
                     NXP_LOG_ERROR("Impossible happened\n");
                     *fci_ret = FPP_ERR_WRONG_COMMAND_PARAM;
                     return EINVAL;
-                    break;
             }
             switch(fp_cmd->r.offset_from)
             {
@@ -301,8 +302,6 @@ errno_t fci_fp_rule_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_fp_rule_cmd_t *re
                     NXP_LOG_ERROR("Impossible happened\n");
                     *fci_ret = FPP_ERR_WRONG_COMMAND_PARAM;
                     return EINVAL;
-                    break;
-
             }
             if(TRUE == fp_cmd->r.invert)
             {
@@ -388,4 +387,5 @@ errno_t fci_fp_rule_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_fp_rule_cmd_t *re
     return ret;
 }
 
+#endif /* PFE_CFG_FCI_ENABLE */
 
diff --git a/sw/fci/src/fci_fp_db.c b/sw/fci/src/fci_fp_db.c
index 644b01c..031ed9a 100644
--- a/sw/fci/src/fci_fp_db.c
+++ b/sw/fci/src/fci_fp_db.c
@@ -13,8 +13,8 @@
 #include "pfe_fp.h"
 #include "fci.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
 
-typedef struct fci_fp_table_tag fci_fp_table_t;
 /**
 * @brief Flexible parser rule representation
 */
@@ -102,7 +102,7 @@ typedef enum
 static fci_fp_rule_db_t fci_fp_rule_db;
 static fci_fp_table_db_t fci_fp_table_db;
 
-static bool_t fci_fp_match_rule_by_criterion(fci_fp_rule_criterion_t crit, fci_fp_rule_criterion_arg_t *arg, fci_fp_rule_t *rule);
+static bool_t fci_fp_match_rule_by_criterion(fci_fp_rule_criterion_t crit, const fci_fp_rule_criterion_arg_t *arg, const fci_fp_rule_t *rule);
 static fci_fp_rule_t *fci_fp_rule_get_first(fci_fp_rule_db_t *db, fci_fp_rule_criterion_t crit, void *arg, dbase_t dbase);
 static fci_fp_rule_t *fci_fp_rule_get_next(fci_fp_rule_db_t *db, dbase_t dbase);
 static bool_t fci_fp_match_table_by_criterion(fci_fp_table_criterion_t crit, fci_fp_table_criterion_arg_t *arg, fci_fp_table_t *table);
@@ -118,7 +118,7 @@ static fci_fp_table_t *fci_fp_table_get_next(fci_fp_table_db_t *db);
  * @retval       TRUE Rule matches the criterion
  * @retval       FALSE Rule does not match the criterion
  */
-static bool_t fci_fp_match_rule_by_criterion(fci_fp_rule_criterion_t crit, fci_fp_rule_criterion_arg_t *arg, fci_fp_rule_t *rule)
+static bool_t fci_fp_match_rule_by_criterion(fci_fp_rule_criterion_t crit, const fci_fp_rule_criterion_arg_t *arg, const fci_fp_rule_t *rule)
 {
     bool_t match;
 #if defined(PFE_CFG_NULL_ARG_CHECK)
@@ -204,7 +204,7 @@ static fci_fp_rule_t *fci_fp_rule_get_first(fci_fp_rule_db_t *db, fci_fp_rule_cr
             }
             db->cur_crit_arg.name = mem;
             /* Copy the string */
-            strcpy(mem, (char_t *)arg);
+            (void)strcpy(mem, (char_t *)arg);
             break;
         }
         default:
@@ -418,7 +418,7 @@ static fci_fp_table_t *fci_fp_table_get_first(fci_fp_table_db_t *db, fci_fp_tabl
             }
             db->cur_crit_arg.name = mem;
             /* Copy the string */
-            strcpy(mem, (char_t *)arg);
+            (void)strcpy(mem, (char_t *)arg);
             break;
         }
         case FP_TABLE_CRIT_ADDRESS:
@@ -551,8 +551,8 @@ static errno_t fci_fp_get_rule_pos_in_table(fci_fp_table_t *table, fci_fp_rule_t
 */
 void fci_fp_db_init(void)
 {
-    memset(&fci_fp_rule_db, 0U, sizeof(fci_fp_rule_db_t));
-    memset(&fci_fp_table_db, 0U, sizeof(fci_fp_table_db_t));
+    (void)memset(&fci_fp_rule_db, 0U, sizeof(fci_fp_rule_db_t));
+    (void)memset(&fci_fp_table_db, 0U, sizeof(fci_fp_table_db_t));
     LLIST_Init(&fci_fp_table_db.tables);
     LLIST_Init(&fci_fp_rule_db.rules);
 
@@ -619,19 +619,19 @@ errno_t fci_fp_db_create_rule(char_t *name, uint32_t data, uint32_t mask, uint16
     else
     {
         /* Initialize */
-        memset(rule, 0, mem_size);
+        (void)memset(rule, 0, mem_size);
         LLIST_Init(&rule->db_entry);
         LLIST_Init(&rule->table_entry);
         /* Store the input parameters */
         rule->name = (char_t *)&rule[1];
-        strcpy(rule->name, name);
+        (void)strcpy(rule->name, name);
         rule->data = data;
         rule->mask = mask;
         rule->offset = offset;
         if(NULL != next_rule)
         {   /* Just store the next rule name, no validation yet because rule may be added later */
             rule->next_rule = rule->name + strlen(name) + 1U;
-            strcpy(rule->next_rule, next_rule);
+            (void)strcpy(rule->next_rule, next_rule);
         }
         else
         {
@@ -714,12 +714,12 @@ errno_t fci_fp_db_create_table(char_t *name)
     else
     {
         /* Initialize */
-        memset(table, 0, mem_size);
+        (void)memset(table, 0, mem_size);
         LLIST_Init(&table->db_entry);
         LLIST_Init(&table->rules_db.rules);
         /* Store the input parameters */
         table->name = (char_t *)&table[1];
-        strcpy(table->name, name);
+        (void)strcpy(table->name, name);
         /* Add the table into the global database */
         LLIST_AddAtEnd(&table->db_entry, &fci_fp_table_db.tables);
     }
@@ -872,7 +872,7 @@ errno_t fci_fp_db_add_rule_to_table(char_t *table_name, char_t *rule_name, uint1
             }
             if(FALSE == added)
             {   /* The requested position has not been found - add at the end */
-                NXP_LOG_WARNING("Position %u does not exist, adding at %u\n", position, i);
+                NXP_LOG_WARNING("Position %u does not exist, adding at %u\n", (uint_t)position, (uint_t)i);
                 LLIST_AddAtEnd(&rule->table_entry, &table->rules_db.rules);
                 rule->table = table;
                 table->rule_count += 1U;
@@ -1097,7 +1097,7 @@ errno_t fci_fp_db_get_table_from_addr(uint32_t addr, char_t **table_name)
     table = fci_fp_table_get_first(&fci_fp_table_db, FP_TABLE_CRIT_ADDRESS, &addr);
     if(NULL == table)
     {
-        NXP_LOG_WARNING("Table with address 0x%x not found\n", addr);
+        NXP_LOG_WARNING("Table with address 0x%x not found\n", (uint_t)addr);
         return ENOENT;
     }
     *table_name = table->name;
@@ -1300,6 +1300,7 @@ errno_t fci_fp_db_get_table_next_rule(char_t *table_name, char_t **rule_name, ui
 static uint32_t fci_fp_print_rule(fci_fp_rule_t *rule, char_t *buf, uint32_t buf_len, uint8_t verb_level)
 {
     uint32_t len = 0U;
+	(void)verb_level;
 
     len += oal_util_snprintf(buf + len, buf_len - len, "%s = {", rule->name);
     /* Conditions */
@@ -1391,6 +1392,7 @@ uint32_t pfe_fp_get_text_statistics(pfe_fp_t *temp, char_t *buf, uint32_t buf_le
     LLIST_t *item;
     uint32_t len = 0U;
     uint32_t pe_idx = 0U;
+	(void)temp;
 
     LLIST_ForEach(item, &fci_fp_table_db.tables)
     {
@@ -1430,3 +1432,5 @@ uint32_t pfe_fp_get_text_statistics(pfe_fp_t *temp, char_t *buf, uint32_t buf_le
     return len;
 }
 
+#endif /* PFE_CFG_FCI_ENABLE */
+
diff --git a/sw/fci/src/fci_fw_features.c b/sw/fci/src/fci_fw_features.c
index 8aa2e40..2288932 100644
--- a/sw/fci/src/fci_fw_features.c
+++ b/sw/fci/src/fci_fw_features.c
@@ -19,6 +19,8 @@
 #include "oal.h"
 #include "fci_fw_features.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 /**
  * @brief			Processes FPP_CMD_FW_FEATURES commands
  * @param[in]		msg FCI message containing the FPP_CMD_FP_FEATURES command
@@ -141,3 +143,5 @@ errno_t fci_fw_features_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_fw_features_c
 	}
 	return ret;
 }
+
+#endif /* PFE_CFG_FCI_ENABLE */
diff --git a/sw/fci/src/fci_interfaces.c b/sw/fci/src/fci_interfaces.c
index 5fa752c..5fcc274 100644
--- a/sw/fci/src/fci_interfaces.c
+++ b/sw/fci/src/fci_interfaces.c
@@ -25,9 +25,9 @@
 #include "fci_fp_db.h"
 #include "fci.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
 
-
-static errno_t fci_interfaces_get_arg_info(fpp_if_m_args_t *m_arg, fpp_if_m_rules_t rule, void **offset, size_t *size, uint32_t *fp_table_addr);
+static errno_t fci_interfaces_get_arg_info(fpp_if_m_args_t *m_arg, pfe_ct_if_m_rules_t rule, void **offset, size_t *size, uint32_t *fp_table_addr);
 
 /*
  * @brief			Get offset and size of the rule
@@ -37,7 +37,7 @@ static errno_t fci_interfaces_get_arg_info(fpp_if_m_args_t *m_arg, fpp_if_m_rule
  * @param[in,out]	offset is set based on the rule to the structure m_arg
  * @param[in,out]	size of the underlying type in the struct based on the rule
  */
-static errno_t fci_interfaces_get_arg_info(fpp_if_m_args_t *m_arg, fpp_if_m_rules_t rule, void **offset, size_t *size, uint32_t *fp_table_addr)
+static errno_t fci_interfaces_get_arg_info(fpp_if_m_args_t *m_arg, pfe_ct_if_m_rules_t rule, void **offset, size_t *size, uint32_t *fp_table_addr)
 {
 	errno_t retval = EOK; /* Function return value */
 #if defined(PFE_CFG_NULL_ARG_CHECK)
@@ -378,7 +378,7 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 				*fci_ret = FPP_ERR_IF_ENTRY_NOT_FOUND;
 				ret = ENOENT;
 				break;
-			} 
+			}
 
 			/* Destroy FP tables if they were used by this interface. */
 			if(EOK == pfe_log_if_get_match_rules(log_if, &rules, &args))
@@ -388,7 +388,7 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 				args.fp1_table = oal_ntohl(args.fp1_table);
 
 				/* Destroy FP tables */
-				fci_interfaces_destroy_fptables(rules, &args);
+				fci_interfaces_destroy_fptables((fpp_if_m_rules_t)rules, &args);
 			}
 
 			/* Remove interface from the database */
@@ -438,11 +438,13 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 			args.fp0_table = oal_ntohl(args.fp0_table);
 			args.fp1_table = oal_ntohl(args.fp1_table);
 
+			rules = (pfe_ct_if_m_rules_t)(~oal_ntohl(if_cmd->match));
+
 			/* Drop all unset rules (if any) */
-			ret = pfe_log_if_del_match_rule(log_if, ~oal_ntohl(if_cmd->match));
+			ret = pfe_log_if_del_match_rule(log_if, rules);
 
 			/* Destroy FP tables if they are not used by new rules */
-			fci_interfaces_destroy_fptables(~oal_ntohl(if_cmd->match), &args);
+			fci_interfaces_destroy_fptables((fpp_if_m_rules_t)rules, &args);
 
 			if(EOK == ret)
 			{
@@ -535,7 +537,7 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 				if(0U != (oal_ntohl(if_cmd->match) & (1U << index)))
 				{
 					/* Resolve position of data and size */
-					ret = fci_interfaces_get_arg_info(&if_cmd->arguments, oal_ntohl(if_cmd->match) & (1U << index), &offset, &size, &fp_table_addr);
+					ret = fci_interfaces_get_arg_info(&if_cmd->arguments, (pfe_ct_if_m_rules_t)(oal_ntohl(if_cmd->match) & (1U << index)), &offset, &size, &fp_table_addr);
 					if(EOK != ret)
 					{
 						NXP_LOG_ERROR("Failed to get update argument\n");
@@ -543,7 +545,7 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 					}
 
 					/* Add match rule and arguments */
-					ret = pfe_log_if_add_match_rule(log_if, oal_ntohl(if_cmd->match) & (1U << index), offset, size);
+					ret = pfe_log_if_add_match_rule(log_if, (pfe_ct_if_m_rules_t)(oal_ntohl(if_cmd->match) & (1U << index)), offset, size);
 
 					if(EOK != ret)
 					{
@@ -568,14 +570,24 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 			/* Update egress in case at least one is set (old egress is dropped) */
 			if(0 != if_cmd->egress)
 			{
-				NXP_LOG_INFO("Updating egress interfaces on %s (0x%x)\n",  pfe_log_if_get_name(log_if), oal_ntohl(if_cmd->egress));
+				NXP_LOG_INFO("Updating egress interfaces on %s (0x%x)\n",  pfe_log_if_get_name(log_if), (uint_t)oal_ntohl(if_cmd->egress));
 				for(index = 0U; PFE_PHY_IF_ID_INVALID > index;  ++index)
 				{
+
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+					if(PFE_PHY_IF_ID_HIF == index)
+					{
+						/* Skip currently not used interfaces */
+						continue;
+					}
+#else
 					if((PFE_PHY_IF_ID_HIF == index) || (PFE_PHY_IF_ID_HIF_NOCPY == index))
 					{
 						/* Skip currently not used interfaces */
 						continue;
 					}
+#endif
+
 					/* For each bit in egress mask search if the phy if exists */
 					ret = pfe_if_db_get_first(context->phy_if_db, context->if_session_id, IF_DB_CRIT_BY_ID, (void *)(addr_t)index, &entry);
 					if((EOK == ret) && (NULL != entry))
@@ -599,9 +611,9 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 							ret = pfe_log_if_get_egress_ifs(log_if, &egress);
 							if(EOK == ret)
 							{
-								if(0U != (egress && (1U << index)))
+								if(0U != (egress & (1U << index)))
 								{   /* Interface is on the current list but not on the requested list - drop it */
-									ret= pfe_log_if_del_egress_if(log_if, phy_if);
+									ret = pfe_log_if_del_egress_if(log_if, phy_if);
 								}
 							}
 
@@ -614,11 +626,10 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 					}
 					else
 					{
-						NXP_LOG_ERROR("Egress %u on %s is not set because it doesn't exist\n", index,  pfe_log_if_get_name(log_if));
+						NXP_LOG_ERROR("Egress %u on %s is not set because it doesn't exist\n", (uint_t)index,  pfe_log_if_get_name(log_if));
 
 						/* Error in input do not continue */
 						*fci_ret = FPP_ERR_IF_EGRESS_DOESNT_EXIST;
-						break;
 					}
 				}
 			}
@@ -635,7 +646,7 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 
 			if(EOK != ret)
 			{
-				NXP_LOG_ERROR("AND/OR flag wans't updated correctly on %s\n",  pfe_log_if_get_name(log_if));
+				NXP_LOG_ERROR("AND/OR flag wasn't updated correctly on %s\n",  pfe_log_if_get_name(log_if));
 				*fci_ret = FPP_ERR_IF_OP_UPDATE_FAILED;
 			}
 
@@ -706,21 +717,21 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 			break;
 		}
 		case FPP_ACTION_QUERY:
+		{
+			ret = pfe_if_db_get_first(context->log_if_db, context->if_session_id, IF_DB_CRIT_ALL, NULL, &entry);
+			if (NULL == entry)
 			{
-				ret = pfe_if_db_get_first(context->log_if_db, context->if_session_id, IF_DB_CRIT_ALL, NULL, &entry);
-				if (NULL == entry)
+				*fci_ret = FPP_ERR_IF_ENTRY_NOT_FOUND;
+				if(EOK != ret)
 				{
-					*fci_ret = FPP_ERR_IF_ENTRY_NOT_FOUND;
-					if(EOK != ret)
-					{
-						NXP_LOG_ERROR("Incorrect session ID detected\n");
-						*fci_ret = FPP_ERR_IF_WRONG_SESSION_ID;
-					}
-					ret = EOK;
-					break;
+					NXP_LOG_ERROR("Incorrect session ID detected\n");
+					*fci_ret = FPP_ERR_IF_WRONG_SESSION_ID;
 				}
+				ret = EOK;
+				break;
 			}
-			/* FALLTHRU */
+		}
+		/* FALLTHRU */
 		case FPP_ACTION_QUERY_CONT:
 		{
 			if (NULL == entry)
@@ -768,7 +779,7 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 			memcpy(&reply_buf->stats, &stats, sizeof(reply_buf->stats));
 
 			/* Get important flag values */
-			reply_buf->flags = 0U;
+			reply_buf->flags = (fpp_if_flags_t)0U;
 			if(pfe_log_if_is_enabled(log_if))
 			{
 				reply_buf->flags |= oal_htonl(FPP_IF_ENABLED);
@@ -810,7 +821,7 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 			/* Fix endians of FP tables */
 			args.fp0_table = oal_ntohl(args.fp0_table);
 			args.fp1_table = oal_ntohl(args.fp1_table);
-			reply_buf->match = oal_htonl(rules);
+			reply_buf->match = (fpp_if_m_rules_t)(oal_htonl(rules));
 
 			/* Store match rule arguments for FCI */
 			reply_buf->arguments.vlan = args.vlan;
@@ -843,6 +854,11 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 			*fci_ret = FPP_ERR_OK;
 			break;
 		}
+		default:
+		{
+			/*Do Nothing*/
+            break;
+		}		
 	}
 
 	return ret;
@@ -931,7 +947,7 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 				break;
 			}
 
-			/*	Set the interface block state - use the fact the enumerations 
+			/*	Set the interface block state - use the fact the enumerations
 				have same values */
 			ret = pfe_phy_if_set_block_state(phy_if, (pfe_ct_block_state_t)if_cmd->block_state);
 			if(EOK != ret)
@@ -941,7 +957,7 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 			}
 
 			/* Set the interface mode */
-			ret = pfe_phy_if_set_op_mode(phy_if, if_cmd->mode);
+			ret = pfe_phy_if_set_op_mode(phy_if, (pfe_ct_if_op_mode_t)(if_cmd->mode));
 			if(EOK != ret)
 			{
 				*fci_ret = FPP_ERR_IF_OP_UPDATE_FAILED;
@@ -1015,6 +1031,12 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 				ret = pfe_phy_if_promisc_disable(phy_if);
 			}
 
+			if(EOK != ret)
+			{
+				NXP_LOG_ERROR("PROMISC flag wasn't updated correctly on %s\n",  pfe_phy_if_get_name(phy_if));
+				*fci_ret = FPP_ERR_IF_OP_UPDATE_FAILED;
+			}
+
 			/*	VLAN conformance check */
 			if(0U != (oal_ntohl(if_cmd->flags) & FPP_IF_VLAN_CONF_CHECK))
 			{
@@ -1025,6 +1047,12 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 				ret = pfe_phy_if_clear_flag(phy_if, IF_FL_VLAN_CONF_CHECK);
 			}
 
+			if(EOK != ret)
+			{
+				NXP_LOG_ERROR("VLAN_CONF_CHECK flag wasn't updated correctly on %s\n",  pfe_phy_if_get_name(phy_if));
+				*fci_ret = FPP_ERR_IF_OP_UPDATE_FAILED;
+			}
+
 			/*	PTP conformance check */
 			if(0U != (oal_ntohl(if_cmd->flags) & FPP_IF_PTP_CONF_CHECK))
 			{
@@ -1035,6 +1063,12 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 				ret = pfe_phy_if_clear_flag(phy_if, IF_FL_PTP_CONF_CHECK);
 			}
 
+			if(EOK != ret)
+			{
+				NXP_LOG_ERROR("PTP_CONF_CHECK flag wasn't updated correctly on %s\n",  pfe_phy_if_get_name(phy_if));
+				*fci_ret = FPP_ERR_IF_OP_UPDATE_FAILED;
+			}
+
 			/*	PTP promiscuous mode */
 			if(0U != (oal_ntohl(if_cmd->flags) & FPP_IF_PTP_PROMISC))
 			{
@@ -1045,6 +1079,12 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 				ret = pfe_phy_if_clear_flag(phy_if, IF_FL_PTP_PROMISC);
 			}
 
+			if(EOK != ret)
+			{
+				NXP_LOG_ERROR("PTP_PROMISC flag wasn't updated correctly on %s\n",  pfe_phy_if_get_name(phy_if));
+				*fci_ret = FPP_ERR_IF_OP_UPDATE_FAILED;
+			}
+
 			/*	QinQ support control */
 			if(0U != (oal_ntohl(if_cmd->flags) & FPP_IF_ALLOW_Q_IN_Q))
 			{
@@ -1057,7 +1097,23 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 
 			if(EOK != ret)
 			{
-				NXP_LOG_ERROR("PROMISC flag wasn't updated correctly on %s\n",  pfe_phy_if_get_name(phy_if));
+				NXP_LOG_ERROR("ALLOW_Q_IN_Q flag wasn't updated correctly on %s\n",  pfe_phy_if_get_name(phy_if));
+				*fci_ret = FPP_ERR_IF_OP_UPDATE_FAILED;
+			}
+
+			/*	TTL discard control */
+			if(0U != (oal_ntohl(if_cmd->flags) & FPP_IF_DISCARD_TTL))
+			{
+				ret = pfe_phy_if_set_flag(phy_if, IF_FL_DISCARD_TTL);
+			}
+			else
+			{
+				ret = pfe_phy_if_clear_flag(phy_if, IF_FL_DISCARD_TTL);
+			}
+
+			if(EOK != ret)
+			{
+				NXP_LOG_ERROR("DISCARD_TTL flag wasn't updated correctly on %s\n",  pfe_phy_if_get_name(phy_if));
 				*fci_ret = FPP_ERR_IF_OP_UPDATE_FAILED;
 			}
 
@@ -1186,6 +1242,7 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 			reply_buf->flags |= (IF_FL_NONE != pfe_phy_if_get_flag(phy_if, IF_FL_PTP_CONF_CHECK)) ? oal_htonl(FPP_IF_PTP_CONF_CHECK) : 0;
 			reply_buf->flags |= (IF_FL_NONE != pfe_phy_if_get_flag(phy_if, IF_FL_PTP_PROMISC)) ? oal_htonl(FPP_IF_PTP_PROMISC) : 0;
 			reply_buf->flags |= (IF_FL_NONE != pfe_phy_if_get_flag(phy_if, IF_FL_ALLOW_Q_IN_Q)) ? oal_htonl(FPP_IF_ALLOW_Q_IN_Q) : 0;
+			reply_buf->flags |= (IF_FL_NONE != pfe_phy_if_get_flag(phy_if, IF_FL_DISCARD_TTL)) ? oal_htonl(FPP_IF_DISCARD_TTL) : 0;
 
 			/* Get the mode - use the fact enums have same values */
 			reply_buf->mode = (fpp_phy_if_op_mode_t) pfe_phy_if_get_op_mode(phy_if);
@@ -1194,7 +1251,7 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 			/* Get the block state */
 			(void)pfe_phy_if_get_block_state(phy_if, &block_state);
 			/* Use the fact that the enums have same values */
-			reply_buf->block_state = (fpp_phy_if_block_state_t)block_state; 
+			reply_buf->block_state = (fpp_phy_if_block_state_t)block_state;
 			mirror_if_id = pfe_phy_if_get_mirroring(phy_if);
 			if(PFE_PHY_IF_ID_INVALID != mirror_if_id)
 			{
@@ -1261,3 +1318,5 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 
 	return ret;
 }
+
+#endif /* PFE_CFG_FCI_ENABLE */
diff --git a/sw/fci/src/fci_internal.h b/sw/fci/src/fci_internal.h
index 3dd1b86..55028f1 100644
--- a/sw/fci/src/fci_internal.h
+++ b/sw/fci/src/fci_internal.h
@@ -34,7 +34,7 @@
 /**
  * @brief	This is the FCI endpoint representation structure.
  */
-struct __fci_tag
+struct fci_tag
 {
 	fci_core_t *core;
 
diff --git a/sw/fci/src/fci_l2br.c b/sw/fci/src/fci_l2br.c
index 4ed2eea..607967b 100644
--- a/sw/fci/src/fci_l2br.c
+++ b/sw/fci/src/fci_l2br.c
@@ -25,6 +25,8 @@
 #include "fci_internal.h"
 #include "fci.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 /**
  * @brief			Process FPP_CMD_L2_FLUSH_* commands
  * @param[in]		msg FCI cmd code
@@ -86,7 +88,7 @@ errno_t fci_l2br_flush_cmd(uint32_t code, uint16_t *fci_ret)
 
 		default:
 		{
-			NXP_LOG_ERROR("Unknown L2 bridge command: 0x%x\n", code);
+			NXP_LOG_ERROR("Unknown L2 bridge command: 0x%x\n", (uint_t)code);
 			*fci_ret = FPP_ERR_UNKNOWN_ACTION;
 			break;
 		}
@@ -94,3 +96,5 @@ errno_t fci_l2br_flush_cmd(uint32_t code, uint16_t *fci_ret)
 
 	return ret;
 }
+
+#endif /* PFE_CFG_FCI_ENABLE */
diff --git a/sw/fci/src/fci_l2br_domains.c b/sw/fci/src/fci_l2br_domains.c
index 4d6601c..1ac93fd 100644
--- a/sw/fci/src/fci_l2br_domains.c
+++ b/sw/fci/src/fci_l2br_domains.c
@@ -25,6 +25,8 @@
 #include "fci_internal.h"
 #include "fci.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 static errno_t fci_l2br_domain_remove(pfe_l2br_domain_t *domain);
 static errno_t fci_l2br_domain_remove_if(pfe_l2br_domain_t *domain, pfe_phy_if_t *phy_if);
 uint32_t fci_l2br_static_entry_get_valid_fw_list(void);
@@ -226,7 +228,7 @@ errno_t fci_l2br_domain_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_l2_bd_cmd_t *
 							}
 							else
 							{
-								NXP_LOG_INFO("Domain %d: Interface %d updated\n", oal_ntohs(bd_cmd->vlan), ii);
+								NXP_LOG_INFO("Domain %d: Interface %d updated\n", (int_t)oal_ntohs(bd_cmd->vlan), (int_t)ii);
 							}
 						}
 						else if (EOK != ret)
@@ -237,13 +239,13 @@ errno_t fci_l2br_domain_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_l2_bd_cmd_t *
 						else
 						{
 							/*	Added */
-							NXP_LOG_INFO("Domain %d: Interface %d added\n", oal_ntohs(bd_cmd->vlan), ii);
+							NXP_LOG_INFO("Domain %d: Interface %d added\n", (int_t)oal_ntohs(bd_cmd->vlan), (int_t)ii);
 						}
 					}
 					else
 					{
 						/*	Interface list contains interface not found in FCI database */
-						NXP_LOG_ERROR("Interface %d not found\n", ii);
+						NXP_LOG_ERROR("Interface %d not found\n", (int_t)ii);
 						*fci_ret = FPP_ERR_WRONG_COMMAND_PARAM;
 						ret = EOK;
 						break; /* break the 'for' loop */
@@ -272,7 +274,7 @@ errno_t fci_l2br_domain_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_l2_bd_cmd_t *
 							}
 							else
 							{
-								NXP_LOG_INFO("Domain %d: Interface %d removed\n", oal_ntohs(bd_cmd->vlan), ii);
+								NXP_LOG_INFO("Domain %d: Interface %d removed\n", (int_t)oal_ntohs(bd_cmd->vlan), (int_t)ii);
 							}
 						}
 					}
@@ -521,7 +523,7 @@ errno_t fci_l2br_static_entry_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_l2_stat
 			{
 				*fci_ret = FPP_ERR_OK;
 
-				if (EOK != pfe_l2br_static_entry_replace_fw_list(context->l2_bridge, entry,  oal_ntohl(br_ent_cmd->forward_list)))
+				if (EOK != pfe_l2br_static_entry_replace_fw_list(context->l2_bridge, entry, oal_ntohl(br_ent_cmd->forward_list)))
 				{
 					*fci_ret = FPP_ERR_INTERNAL_FAILURE;
 				}
@@ -594,7 +596,8 @@ errno_t fci_l2br_static_entry_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_l2_stat
 			/* MAC */
 			pfe_l2br_static_entry_get_mac(entry, br_ent_cmd->mac);
 			/* FW list */
-			br_ent_cmd->forward_list =  oal_htonl(pfe_l2br_static_entry_get_fw_list(entry));
+			br_ent_cmd->forward_list = oal_htonl(pfe_l2br_static_entry_get_fw_list(entry));
+			/* misc flags */
 			(void)pfe_l2br_static_entry_get_local_flag(context->l2_bridge, entry, (bool_t *)&br_ent_cmd->local);
 			(void)pfe_l2br_static_entry_get_src_discard_flag(context->l2_bridge, entry, (bool_t *)&br_ent_cmd->src_discard);
 			(void)pfe_l2br_static_entry_get_dst_discard_flag(context->l2_bridge, entry, (bool_t *)&br_ent_cmd->dst_discard);
@@ -666,7 +669,7 @@ static errno_t fci_l2br_domain_remove_if(pfe_l2br_domain_t *domain, pfe_phy_if_t
 {
 	fci_t *context = (fci_t *)&__context;
 	errno_t ret = EOK;
-	pfe_ct_phy_if_id_t id = PFE_PHY_IF_ID_INVALID;
+	pfe_ct_phy_if_id_t id;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == domain)))
@@ -724,6 +727,8 @@ static errno_t fci_l2br_domain_remove_if(pfe_l2br_domain_t *domain, pfe_phy_if_t
 			}
 		}
 	}
+	
+	(void)id;
 
 	return ret;
 }
@@ -775,5 +780,6 @@ static errno_t fci_l2br_domain_remove(pfe_l2br_domain_t *domain)
 	return ret;
 }
 
+#endif /* PFE_CFG_FCI_ENABLE */
 
 /** @}*/
diff --git a/sw/fci/src/fci_qos.c b/sw/fci/src/fci_qos.c
index 8fe0a9f..2efc0bb 100644
--- a/sw/fci/src/fci_qos.c
+++ b/sw/fci/src/fci_qos.c
@@ -23,12 +23,16 @@
 #include "fci_internal.h"
 #include "fci.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 /*
  * 	This is storage of scheduler algorithms ordered in way
  *	as defined by the FCI (see fpp_ext.h::fpp_qos_scheduler_cmd_t)
  */
 static const pfe_tmu_sched_algo_t sch_algos[] = {SCHED_ALGO_PQ, SCHED_ALGO_DWRR, SCHED_ALGO_RR, SCHED_ALGO_WRR};
+#ifdef NXP_LOG_ENABLED
 static const char_t *sch_algos_str[] = {"SCHED_ALGO_PQ", "SCHED_ALGO_DWRR", "SCHED_ALGO_RR", "SCHED_ALGO_WRR"};
+#endif /* NXP_LOG_ENABLED */
 
 static pfe_phy_if_t *fci_get_phy_if_by_name(char_t *name)
 {
@@ -133,13 +137,13 @@ errno_t fci_qos_queue_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_queue_cmd_t
 			if (q->id > cnt)
 			{
 				NXP_LOG_ERROR("Queue ID %d out of range. Interface %s implements %d queues\n",
-						q->id, q->if_name, cnt);
+						(int_t)q->id, q->if_name, (int_t)cnt);
 				*fci_ret = FPP_ERR_QOS_QUEUE_NOT_FOUND;
 				break;
 			}
 
 			NXP_LOG_DEBUG("Setting queue %d mode: %d (min: %d, max: %d)\n",
-					q->id, q->mode, oal_ntohl(q->min), oal_ntohl(q->max));
+					(int_t)q->id, (int_t)q->mode, (int_t)oal_ntohl(q->min), (int_t)oal_ntohl(q->max));
 
 			if (q->mode > 3U)
 			{
@@ -184,14 +188,14 @@ errno_t fci_qos_queue_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_queue_cmd_t
 
 					for (ii=0U; ii<cnt; ii++)
 					{
-						NXP_LOG_DEBUG("Setting queue %d zone %d probability %d%\n",
-								q->id, ii, q->zprob[ii]);
+						NXP_LOG_DEBUG("Setting queue %d zone %d probability %d%%\n",
+								(int_t)q->id, (int_t)ii, (int_t)q->zprob[ii]);
 						ret = pfe_tmu_queue_set_wred_prob(pfe->tmu,
 								pfe_phy_if_get_id(phy_if), q->id, ii, q->zprob[ii]);
 						if (EOK != ret)
 						{
 							NXP_LOG_ERROR("Could not set queue %d zone %d probability %d: %d\n",
-									q->id, ii, q->zprob[ii], ret);
+									(int_t)q->id, (int_t)ii, (int_t)q->zprob[ii], (int_t)ret);
 							*fci_ret = FPP_ERR_WRONG_COMMAND_PARAM;
 							break; /* for */
 						}
@@ -220,7 +224,7 @@ errno_t fci_qos_queue_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_queue_cmd_t
 			if (q->id > cnt)
 			{
 				NXP_LOG_ERROR("Queue ID %d out of range. Interface %s implements %d queues\n",
-						q->id, q->if_name, cnt);
+						(int_t)q->id, q->if_name, (int_t)cnt);
 				*fci_ret = FPP_ERR_QOS_QUEUE_NOT_FOUND;
 				break;
 			}
@@ -277,7 +281,7 @@ errno_t fci_qos_queue_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_queue_cmd_t
 									pfe->tmu, pfe_phy_if_get_id(phy_if), q->id, ii, &reply_buf->zprob[ii]);
 							if (EOK != ret)
 							{
-								NXP_LOG_ERROR("Could not get queue %d zone %d probability: %d\n", q->id, ii, ret);
+								NXP_LOG_ERROR("Could not get queue %d zone %d probability: %d\n", (int_t)q->id, (int_t)ii, (int_t)ret);
 								*fci_ret = FPP_ERR_INTERNAL_FAILURE;
 								break; /* for */
 							}
@@ -436,12 +440,12 @@ errno_t fci_qos_scheduler_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_schedul
 			{
 				if ((0U == ((1U << ii) & sch->input_en)) || (sch->input_src[ii] == 255U))
 				{
-					NXP_LOG_DEBUG("Disabling scheduler %d input %d\n", sch->id, ii);
+					NXP_LOG_DEBUG("Disabling scheduler %d input %d\n", (int_t)sch->id, (int_t)ii);
 					ret = pfe_tmu_sch_bind_queue(pfe->tmu, pfe_phy_if_get_id(phy_if),
 								sch->id, ii, PFE_TMU_INVALID_QUEUE);
 					if (EOK != ret)
 					{
-						NXP_LOG_ERROR("Could not invalidate scheduler input %d: %d\n", ii, ret);
+						NXP_LOG_ERROR("Could not invalidate scheduler input %d: %d\n", (int_t)ii, (int_t)ret);
 						*fci_ret = FPP_ERR_INTERNAL_FAILURE;
 						break; /* for */
 					}
@@ -451,13 +455,13 @@ errno_t fci_qos_scheduler_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_schedul
 					if (sch->input_src[ii] < 8U)
 					{
 						NXP_LOG_DEBUG("Connecting source %d to scheduler %d input %d\n",
-								sch->input_src[ii], sch->id, ii);
+								(int_t)sch->input_src[ii], (int_t)sch->id, (int_t)ii);
 						ret = pfe_tmu_sch_bind_queue(pfe->tmu, pfe_phy_if_get_id(phy_if),
 								sch->id, ii, sch->input_src[ii]);
 						if (EOK != ret)
 						{
 							NXP_LOG_ERROR("Could not connect source %d to scheduler input %d\n",
-									sch->input_src[ii], ii);
+									(int_t)sch->input_src[ii], (int_t)ii);
 							*fci_ret = FPP_ERR_WRONG_COMMAND_PARAM;
 							break; /* for */
 						}
@@ -465,32 +469,32 @@ errno_t fci_qos_scheduler_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_schedul
 					else if (sch->input_src[ii] == 8U)
 					{
 						NXP_LOG_DEBUG("Connecting scheduler %d output to scheduler %d input %d\n",
-								sch->id-1U, sch->id, ii);
+								(int_t)(sch->id-1U), (int_t)sch->id, (int_t)ii);
 						ret = pfe_tmu_sch_bind_sch_output(pfe->tmu, pfe_phy_if_get_id(phy_if),
 								sch->id-1U, sch->id, ii);
 						if (EOK != ret)
 						{
 							NXP_LOG_ERROR("Could not connect scheduler %d output to scheduler %d input %d: %d\n",
-									sch->id-1U, sch->id, ii, ret);
+									(int_t)(sch->id-1U), (int_t)sch->id, (int_t)ii, (int_t)ret);
 							*fci_ret = FPP_ERR_WRONG_COMMAND_PARAM;
 							break; /* for */
 						}
 					}
 					else
 					{
-						NXP_LOG_ERROR("Unsupported scheduler input %d source: %d\n", ii, sch->input_src[ii]);
+						NXP_LOG_ERROR("Unsupported scheduler input %d source: %d\n", (int_t)ii, (int_t)sch->input_src[ii]);
 						*fci_ret = FPP_ERR_WRONG_COMMAND_PARAM;
 						break; /* for */
 					}
 
 					NXP_LOG_DEBUG("Setting scheduler %d input %d weight: %d\n",
-							sch->id, ii, oal_ntohl(sch->input_w[ii]));
+							(int_t)sch->id, (int_t)ii, (int_t)oal_ntohl(sch->input_w[ii]));
 					ret = pfe_tmu_sch_set_input_weight(pfe->tmu, pfe_phy_if_get_id(phy_if),
 							sch->id, ii, oal_ntohl(sch->input_w[ii]));
 					if (EOK != ret)
 					{
 						NXP_LOG_ERROR("Could not set scheduler %d input %d weight %d: %d\n",
-								sch->id, ii, oal_ntohl(sch->input_w[ii]), ret);
+								(int_t)sch->id, (int_t)ii, (int_t)oal_ntohl(sch->input_w[ii]), (int_t)ret);
 						*fci_ret = FPP_ERR_WRONG_COMMAND_PARAM;
 						break; /* for */
 					}
@@ -728,7 +732,7 @@ errno_t fci_qos_shaper_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_shaper_cmd
 				}
 
 				NXP_LOG_DEBUG("Setting shaper %d credit limits %d-%d\n",
-						shp->id, oal_ntohl(shp->max_credit), oal_ntohl(shp->min_credit));
+						(int_t)shp->id, (int_t)oal_ntohl(shp->max_credit), (int_t)oal_ntohl(shp->min_credit));
 				ret = pfe_tmu_shp_set_limits(pfe->tmu, pfe_phy_if_get_id(phy_if), shp->id,
 						oal_ntohl(shp->max_credit), oal_ntohl(shp->min_credit));
 				if (EOK != ret)
@@ -750,13 +754,13 @@ errno_t fci_qos_shaper_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_shaper_cmd
 				}
 
 				NXP_LOG_DEBUG("Setting shaper %d idle slope: %d\n",
-						shp->id, oal_ntohl(shp->isl));
+						(int_t)shp->id, (int_t)oal_ntohl(shp->isl));
 				ret = pfe_tmu_shp_set_idle_slope(pfe->tmu, pfe_phy_if_get_id(phy_if), shp->id,
 						oal_ntohl(shp->isl));
 				if (EOK != ret)
 				{
 					NXP_LOG_ERROR("Can't set shaper %d idle slope %d: %d\n",
-							shp->id, oal_ntohl(shp->isl), ret);
+							(int_t)shp->id, (int_t)oal_ntohl(shp->isl), (int_t)ret);
 					*fci_ret = FPP_ERR_WRONG_COMMAND_PARAM;
 					break;
 				}
@@ -844,4 +848,5 @@ errno_t fci_qos_shaper_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_qos_shaper_cmd
 	return ret;
 }
 
+#endif /* PFE_CFG_FCI_ENABLE */
 /** @}*/
diff --git a/sw/fci/src/fci_routes.c b/sw/fci/src/fci_routes.c
index 8aef6e7..d20218a 100644
--- a/sw/fci/src/fci_routes.c
+++ b/sw/fci/src/fci_routes.c
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2018-2020 NXP
+ *  Copyright 2018-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -25,6 +25,8 @@
 #include "fci_internal.h"
 #include "fci.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 static void fci_routes_remove_related_connections(fci_rt_db_entry_t *route);
 
 /*
@@ -83,7 +85,8 @@ errno_t fci_routes_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_rt_cmd_t *reply_bu
 	fpp_rt_cmd_t *rt_cmd;
 	bool_t is_ipv6 = FALSE;
 	errno_t ret = EOK;
-	pfe_mac_addr_t mac;
+	pfe_mac_addr_t src_mac;
+	pfe_mac_addr_t dst_mac;
 	pfe_ip_addr_t ip;
 	fci_rt_db_entry_t *rt_entry = NULL;
 	pfe_if_db_entry_t *if_entry = NULL;
@@ -121,8 +124,8 @@ errno_t fci_routes_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_rt_cmd_t *reply_bu
 	rt_cmd = (fpp_rt_cmd_t *)(msg->msg_cmd.payload);
 	is_ipv6 = (oal_ntohl(rt_cmd->flags) == 2U) ? TRUE : FALSE;
 
-	/*	Prepare MAC and IP address */
-	memcpy(mac, rt_cmd->dst_mac, sizeof(pfe_mac_addr_t));
+	/*	Prepare MAC and IP destination address */
+	memcpy(dst_mac, rt_cmd->dst_mac, sizeof(pfe_mac_addr_t));
 	memset(&ip, 0, sizeof(pfe_ip_addr_t));
 
 	if (is_ipv6)
@@ -167,8 +170,21 @@ errno_t fci_routes_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_rt_cmd_t *reply_bu
 
 			phy_if = pfe_if_db_entry_get_phy_if(if_entry);
 
+			/*	Prepare MAC source address */
+			{
+				const pfe_mac_addr_t zero_mac = {0u};
+				if (0 == memcmp(rt_cmd->src_mac, zero_mac, sizeof(pfe_mac_addr_t)))
+				{
+					pfe_phy_if_get_mac_addr(phy_if, src_mac);
+				}
+				else
+				{
+					memcpy(src_mac, rt_cmd->src_mac, sizeof(pfe_mac_addr_t));
+				}
+			}
+
 			/*	Add entry to database (values in network endian) */
-			ret = fci_rt_db_add(&context->route_db,	&ip, &mac,
+			ret = fci_rt_db_add(&context->route_db,	&ip, &src_mac, &dst_mac,
 								phy_if,
 								rt_cmd->id,
 								msg->client,
@@ -188,7 +204,7 @@ errno_t fci_routes_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_rt_cmd_t *reply_bu
 			}
 			else
 			{
-				NXP_LOG_DEBUG("FPP_CMD_IP_ROUTE: Route (ID: %d, IF: %s) added\n", oal_ntohl(rt_cmd->id), rt_cmd->output_device);
+				NXP_LOG_DEBUG("FPP_CMD_IP_ROUTE: Route (ID: %d, IF: %s) added\n", (int_t)oal_ntohl(rt_cmd->id), rt_cmd->output_device);
 				*fci_ret = FPP_ERR_OK;
 			}
 
@@ -201,7 +217,7 @@ errno_t fci_routes_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_rt_cmd_t *reply_bu
 			rt_entry = fci_rt_db_get_first(&context->route_db, RT_DB_CRIT_BY_ID, (void *)&rt_cmd->id);
 			if (NULL == rt_entry)
 			{
-				NXP_LOG_DEBUG("FPP_CMD_IP_ROUTE: Requested route %d not found\n", oal_ntohl(rt_cmd->id));
+				NXP_LOG_DEBUG("FPP_CMD_IP_ROUTE: Requested route %d not found\n", (int_t)oal_ntohl(rt_cmd->id));
 				*fci_ret = FPP_ERR_RT_ENTRY_NOT_FOUND;
 				break;
 			}
@@ -216,7 +232,7 @@ errno_t fci_routes_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_rt_cmd_t *reply_bu
 			}
 			else
 			{
-				NXP_LOG_DEBUG("FPP_CMD_IP_ROUTE: Route %d removed\n", oal_ntohl(rt_cmd->id));
+				NXP_LOG_DEBUG("FPP_CMD_IP_ROUTE: Route %d removed\n", (int_t)oal_ntohl(rt_cmd->id));
 			}
 
 			break;
@@ -260,6 +276,7 @@ errno_t fci_routes_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_rt_cmd_t *reply_bu
 
 			/*	Build reply structure */
 			reply_buf->mtu = rt_entry->mtu;
+			memcpy(reply_buf->src_mac, rt_entry->src_mac, sizeof(pfe_mac_addr_t));
 			memcpy(reply_buf->dst_mac, rt_entry->dst_mac, sizeof(pfe_mac_addr_t));
 
 			if (rt_entry->dst_ip.is_ipv4)
@@ -350,7 +367,7 @@ errno_t fci_routes_drop_one(fci_rt_db_entry_t *route)
 		}
 	}
 
-	NXP_LOG_DEBUG("Removing route with ID %d\n", oal_ntohl(route->id));
+	NXP_LOG_DEBUG("Removing route with ID %d\n", (int_t)oal_ntohl(route->id));
 
 	/*	Remove all associated connections */
 	fci_routes_remove_related_connections(route);
@@ -473,4 +490,5 @@ void fci_routes_drop_all_ipv6(void)
 	}
 }
 
+#endif /* PFE_CFG_FCI_ENABLE */
 /** @}*/
diff --git a/sw/fci/src/fci_rt_db.c b/sw/fci/src/fci_rt_db.c
index dea92a0..2c0133f 100644
--- a/sw/fci/src/fci_rt_db.c
+++ b/sw/fci/src/fci_rt_db.c
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2017-2020 NXP
+ *  Copyright 2017-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -25,6 +25,8 @@
 #include "linked_list.h"
 #include "fci_rt_db.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 static bool_t fci_rt_db_match_criterion(fci_rt_db_t *db, fci_rt_db_entry_t *entry);
 
 /**
@@ -115,6 +117,7 @@ void fci_rt_db_init(fci_rt_db_t *db)
 /**
  * @brief		Add a route to DB
  * @param[in]	db The route DB instance
+ * @param[in]	src_mac Source MAC address
  * @param[in]	dst_mac Destination MAC address
  * @param[in]	iface Name of the output interface
  * @param[in]	id The route ID
@@ -124,14 +127,15 @@ void fci_rt_db_init(fci_rt_db_t *db)
  * @retval		ENOMEM Memory allocation failed
  * @retval		EPERM Attempt to insert already existing entry without 'overwrite' set to 'true'
  */
-errno_t fci_rt_db_add(fci_rt_db_t *db,  pfe_ip_addr_t *dst_ip, pfe_mac_addr_t *dst_mac,
+errno_t fci_rt_db_add(fci_rt_db_t *db,  pfe_ip_addr_t *dst_ip, 
+					pfe_mac_addr_t *src_mac, pfe_mac_addr_t *dst_mac,
 					pfe_phy_if_t *iface, uint32_t id, void *refptr, bool_t overwrite)
 {
 	fci_rt_db_entry_t *new_entry;
 	bool_t is_new = false;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely((NULL == db) || (NULL == dst_ip) || (NULL == dst_mac) || (NULL == iface)))
+	if (unlikely((NULL == db) || (NULL == dst_ip) || (NULL == src_mac) || (NULL == dst_mac) || (NULL == iface)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
 		return EINVAL;
@@ -165,6 +169,7 @@ errno_t fci_rt_db_add(fci_rt_db_t *db,  pfe_ip_addr_t *dst_ip, pfe_mac_addr_t *d
 
 	/*	Store values */
 	memcpy(&new_entry->dst_ip, dst_ip, sizeof(pfe_ip_addr_t));
+	memcpy(&new_entry->src_mac, src_mac, sizeof(pfe_mac_addr_t));
 	memcpy(&new_entry->dst_mac, dst_mac, sizeof(pfe_mac_addr_t));
 	new_entry->iface = iface;
 	new_entry->id = id;
@@ -406,4 +411,5 @@ errno_t fci_rt_db_drop_all(fci_rt_db_t *db)
 	return EOK;
 }
 
+#endif /* PFE_CFG_FCI_ENABLE */
 /** @}*/
diff --git a/sw/fci/src/fci_rt_db.h b/sw/fci/src/fci_rt_db.h
index 63261a4..21ff47c 100644
--- a/sw/fci/src/fci_rt_db.h
+++ b/sw/fci/src/fci_rt_db.h
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2017-2020 NXP
+ *  Copyright 2017-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -25,11 +25,12 @@
 /**
  * @brief	Route database entry type
  */
-typedef struct __route_entry_tag
+typedef struct 
 {
 	void *refptr;					/*	Reference pointer storage */
 	uint32_t id;					/*	Route entry identifier */
 	uint16_t mtu;
+	pfe_mac_addr_t src_mac;
 	pfe_mac_addr_t dst_mac;
 	pfe_ip_addr_t dst_ip;			/*	Destination IP (ipv4/ipv6) */
 	pfe_phy_if_t *iface;			/*	Associated interface */
@@ -54,7 +55,7 @@ typedef enum
 /**
  * @brief	Route database instance representation type
  */
-typedef struct __fci_rt_db_tag
+typedef struct 
 {
 	LLIST_t theList;
 	LLIST_t *cur_item;					/*	Current entry to be returned. See ...get_first() and ...get_next() */
@@ -70,7 +71,8 @@ typedef struct __fci_rt_db_tag
 } fci_rt_db_t;
 
 void fci_rt_db_init(fci_rt_db_t *db);
-errno_t fci_rt_db_add(fci_rt_db_t *db, pfe_ip_addr_t *dst_ip, pfe_mac_addr_t *dst_mac,
+errno_t fci_rt_db_add(fci_rt_db_t *db, pfe_ip_addr_t *dst_ip, 
+					pfe_mac_addr_t *src_mac, pfe_mac_addr_t *dst_mac,
 					pfe_phy_if_t *iface, uint32_t id, void *refptr, bool_t overwrite);
 errno_t fci_rt_db_remove(fci_rt_db_t *db, fci_rt_db_entry_t *entry);
 errno_t fci_rt_db_drop_all(fci_rt_db_t *db);
diff --git a/sw/fci/src/fci_spd.c b/sw/fci/src/fci_spd.c
index d075fde..ce574f8 100644
--- a/sw/fci/src/fci_spd.c
+++ b/sw/fci/src/fci_spd.c
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2020 NXP
+ *  Copyright 2020-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -18,6 +18,8 @@
 #include "fci.h"
 #include "fci_spd.h"
 
+#ifdef PFE_CFG_FCI_ENABLE
+
 errno_t fci_spd_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_spd_cmd_t *reply_buf, uint32_t *reply_len)
 {
     fci_t *context = (fci_t *)&__context;
@@ -121,7 +123,7 @@ errno_t fci_spd_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_spd_cmd_t *reply_buf,
             /* Using the fact that enums have same values for the corresponding flags */
             spd_entry.action = (pfe_ct_spd_entry_action_t)spd_cmd->spd_action;
 
-            ret = pfe_spd_acc_add_rule(phy_if, ntohs(spd_cmd->position), &spd_entry);
+            ret = pfe_spd_acc_add_rule(phy_if, oal_ntohs(spd_cmd->position), &spd_entry);
             if(EOK != ret)
             {
                 *fci_ret = FPP_ERR_INTERNAL_FAILURE;
@@ -133,7 +135,7 @@ errno_t fci_spd_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_spd_cmd_t *reply_buf,
             break;
 
         case FPP_ACTION_DEREGISTER:
-            ret = pfe_spd_acc_remove_rule(phy_if, ntohs(spd_cmd->position));
+            ret = pfe_spd_acc_remove_rule(phy_if, oal_ntohs(spd_cmd->position));
             if(EOK != ret)
             {
                 *fci_ret = FPP_ERR_INTERNAL_FAILURE;
@@ -181,7 +183,7 @@ errno_t fci_spd_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_spd_cmd_t *reply_buf,
                 reply_buf->spi = spd_entry.spi;
                 /* Using the fact that enums have same values for the corresponding flags */
                 reply_buf->spd_action = (fpp_spd_action_t)spd_entry.action;
-                reply_buf->position = htons(search_position);
+                reply_buf->position = oal_htons(search_position);
                 search_position++;
                 *fci_ret = FPP_ERR_OK;
                 *reply_len = sizeof(fpp_spd_cmd_t);
@@ -190,7 +192,7 @@ errno_t fci_spd_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_spd_cmd_t *reply_buf,
             else
             {
                 *fci_ret = FPP_ERR_IF_ENTRY_NOT_FOUND;
-                ret = ENOENT;
+                ret = EOK;
             }
             break;
 
@@ -206,3 +208,4 @@ errno_t fci_spd_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_spd_cmd_t *reply_buf,
     return ret;
 }
 
+#endif /* PFE_CFG_FCI_ENABLE */
diff --git a/sw/fifo/public/fifo.h b/sw/fifo/public/fifo.h
index 526c65c..4be8003 100644
--- a/sw/fifo/public/fifo.h
+++ b/sw/fifo/public/fifo.h
@@ -83,6 +83,7 @@ static inline void * fifo_get(fifo_t * const fifo)
 
 fifo_t * fifo_create(const uint32_t depth) __attribute__((cold));
 void fifo_destroy(fifo_t *const fifo) __attribute__((cold));
+void fifo_clear(fifo_t *const fifo) __attribute__((cold));
 void * fifo_peek(const fifo_t * const fifo, uint32_t num) __attribute__((hot));
 errno_t fifo_get_fill_level(const fifo_t *const fifo, uint32_t *fill_level) __attribute__((hot));
 errno_t fifo_get_free_space(const fifo_t *const fifo, uint32_t *free_space) __attribute__((hot));
diff --git a/sw/fifo/src/fifo.c b/sw/fifo/src/fifo.c
index 41d78cb..e99062e 100644
--- a/sw/fifo/src/fifo.c
+++ b/sw/fifo/src/fifo.c
@@ -89,6 +89,22 @@ __attribute__((cold)) void fifo_destroy(fifo_t *const fifo)
 	}
 }
 
+__attribute__((cold)) void fifo_clear(fifo_t *const fifo)
+{
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+	if (unlikely(NULL == fifo))
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+	}
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+	if (NULL != fifo)
+	{
+		fifo->read = 0U;
+		fifo->write = fifo->depth;
+	}
+}
+
 __attribute__((hot)) void * fifo_peek(const fifo_t * const fifo, uint32_t num)
 {
 	volatile void *ret = NULL;
diff --git a/sw/linux-pfeng/Makefile b/sw/linux-pfeng/Makefile
index bd44627..61305e2 100644
--- a/sw/linux-pfeng/Makefile
+++ b/sw/linux-pfeng/Makefile
@@ -59,13 +59,13 @@ ccflags-y += -DPFENG_CFG_LINUX_NO_SERDES_SUPPORT
 endif
 
 OBJ_LIBFCI_DIR = ../xfci/libfci
-OBJ_DIRS = ../oal ../bpool  ../elf  ../fifo  ../pfe_hif_drv ../pfe_platform ../common
+OBJ_DIRS = ../oal ../bpool  ../elf  ../fifo  ../pfe_platform ../common
 
 ifneq ($(PFE_CFG_FCI_ENABLE),0)
 OBJ_DIRS += ../fci
 endif
 
-pfeng-objs-libs := ../pfe_platform/pfe_platform.o ../oal/oal.o ../elf/elf.o ../fifo/fifo.o ../pfe_hif_drv/pfe_hif_drv.o ../bpool/bpool.o ../common/blalloc.o
+pfeng-objs-libs := ../pfe_platform/pfe_platform.o ../oal/oal.o ../elf/elf.o ../fifo/fifo.o ../bpool/bpool.o ../common/blalloc.o
 
 ifneq ($(PFE_CFG_FCI_ENABLE),0)
 pfeng-objs-libs += ../fci/fci.o
diff --git a/sw/linux-pfeng/pfeng-bman.c b/sw/linux-pfeng/pfeng-bman.c
index 067cd62..06f0458 100644
--- a/sw/linux-pfeng/pfeng-bman.c
+++ b/sw/linux-pfeng/pfeng-bman.c
@@ -191,7 +191,7 @@ struct sk_buff *pfeng_hif_chnl_txconf_get_skbuf(struct pfeng_hif_chnl *chnl)
 	return pool->tx_tbl[idx].skb;
 }
 
-int pfeng_hif_chnl_txconf_free_map_full(struct pfeng_hif_chnl *chnl)
+int pfeng_hif_chnl_txconf_free_map_full(struct pfeng_hif_chnl *chnl, int napi_budget)
 {
 	struct pfeng_tx_chnl_pool *pool = chnl->bman.tx_pool;
 	u32 idx = pool->rd_idx;
@@ -216,7 +216,7 @@ int pfeng_hif_chnl_txconf_free_map_full(struct pfeng_hif_chnl *chnl)
 	}
 	pool->rd_idx = idx;
 
-	dev_consume_skb_any(skb);
+	napi_consume_skb(skb, napi_budget);
 
 	return 0;
 }
diff --git a/sw/linux-pfeng/pfeng-drv.c b/sw/linux-pfeng/pfeng-drv.c
index 5275876..2303726 100644
--- a/sw/linux-pfeng/pfeng-drv.c
+++ b/sw/linux-pfeng/pfeng-drv.c
@@ -61,6 +61,12 @@
 /* Major IP version for cut2.0 */
 #define PFE_IP_MAJOR_VERSION_CUT2		2
 
+/* PFE SYS CLK is 300MHz */
+#define PFE_CLK_SYS_RATE			300000000
+
+/* PFE TS CLK is 200MHz */
+#define PFE_CLK_TS_RATE				200000000
+
 #include "pfeng.h"
 
 MODULE_LICENSE("GPL");
@@ -224,11 +230,13 @@ static int release_config_from_dt(struct pfeng_priv *priv)
 	for (id = 0; id < PFENG_PFE_EMACS; id++) {
 		struct pfeng_emac *emac = &priv->emac[id];
 #if !defined(PFENG_CFG_LINUX_NO_SERDES_SUPPORT)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,6,0)
 		struct device *dev = &priv->pdev->dev;
 
 		/* Remove device depeendency for SerDes */
 		if (emac->intf_mode == PHY_INTERFACE_MODE_SGMII && emac->serdes_phy)
 			device_link_remove(dev, &emac->serdes_phy->dev);
+#endif
 #endif /* !PFENG_CFG_LINUX_NO_SERDES_SUPPORT */
 
 		/* EMAC RX clk */
@@ -392,45 +400,76 @@ static int create_config_from_dt(struct pfeng_priv *priv)
 		if (netif_cfg->macaddr)
 			dev_dbg(dev, "DT mac addr: %pM", netif_cfg->macaddr);
 
-#ifdef PFE_CFG_PFE_MASTER
-		netif_cfg->tx_inject = true;
-#else
-		/* Must be FALSE for SLAVE driver */
-		netif_cfg->tx_inject = false;
-#endif /* PFE_CFG_PFE_MASTER */
+		/* logif mode */
+		if (of_find_property(child, "fsl,pfeng-logif-mode", NULL)) {
+			ret = of_property_read_u32(child, "fsl,pfeng-logif-mode", &id);
+			if (ret) {
+				dev_err(dev, "The logif mode is invalid: %d\n", id);
+				ret = -EINVAL;
+				goto err;
+			}
+			switch (id) {
+			default:
+				dev_err(dev, "The logif mode is invalid: %d\n", id);
+				ret = -EINVAL;
+				goto err;
+			case PFENG_LOGIF_MODE_TX_INJECT:
+				netif_cfg->tx_inject = true;
+				netif_cfg->aux = false;
+				break;
+			case PFENG_LOGIF_MODE_TX_CLASS:
+				netif_cfg->tx_inject = false;
+				netif_cfg->aux = false;
+				break;
+			case PFENG_LOGIF_MODE_AUX:
+				netif_cfg->tx_inject = false;
+				netif_cfg->aux = true;
+				break;
+			}
+		} else {
+			netif_cfg->tx_inject = true;
+			netif_cfg->aux = false;
+		}
+		dev_info(dev, "logif(%s) mode: %s,%s", netif_cfg->name,
+			netif_cfg->aux ? "aux" : "std",
+			netif_cfg->tx_inject ? "tx-inject " : "tx-class");
 
+		if (!netif_cfg->aux) {
 #ifdef PFE_CFG_PFE_MASTER
-		/* EMAC link */
-		dn = of_parse_phandle(child, "fsl,pfeng-emac-link", 0);
-		if (!dn) {
-			dev_err(dev, "Required EMAC link is missing\n");
-			ret = -EINVAL;
-			goto err;
-		}
-		id = pfeng_of_get_addr(dn);
-		if (id < 0) {
-			dev_err(dev, "Required EMAC link is invalid\n");
-			ret = -EINVAL;
-			goto err;
-		}
+			/* EMAC link */
+			dn = of_parse_phandle(child, "fsl,pfeng-emac-link", 0);
+			if (!dn) {
+				dev_err(dev, "Required EMAC link is missing\n");
+				ret = -EINVAL;
+				goto err;
+			}
+			id = pfeng_of_get_addr(dn);
+			if (id < 0) {
+				dev_err(dev, "Required EMAC link is invalid\n");
+				ret = -EINVAL;
+				goto err;
+			}
 #else
-		/* EMAC id */
-		if (!of_find_property(child, "fsl,pfeng-emac-id", NULL)) {
-			dev_err(dev, "The required EMAC id is missing\n");
-			ret = -EINVAL;
-			goto err;
-		}
-		ret = of_property_read_u32(child, "fsl,pfeng-emac-id", &id);
-		if (ret || id > 2) {
-			dev_err(dev, "The EMAC id is invalid: %d\n", id);
-			ret = -EINVAL;
-			goto err;
-		}
+			/* EMAC id */
+			if (!of_find_property(child, "fsl,pfeng-emac-id", NULL)) {
+				dev_err(dev, "The required EMAC id is missing\n");
+				ret = -EINVAL;
+				goto err;
+			}
+			ret = of_property_read_u32(child, "fsl,pfeng-emac-id", &id);
+			if (ret || id >= PFENG_PFE_EMACS) {
+				dev_err(dev, "The EMAC id is invalid: %d\n", id);
+				ret = -EINVAL;
+				goto err;
+			}
+			if (of_find_property(child, "fsl,pfeng-emac-router", NULL))
+				netif_cfg->emac_router = true;
 #endif /* PFE_CFG_PFE_MASTER */
 
-		netif_cfg->emac = id;
-		emac_list |= 1 << id;
-		dev_info(dev, "logif(%s) EMAC: %u", netif_cfg->name, netif_cfg->emac);
+			netif_cfg->emac = id;
+			emac_list |= 1 << id;
+			dev_info(dev, "logif(%s) EMAC: %u", netif_cfg->name, netif_cfg->emac);
+		}
 
 		/* HIF phandle(s) */
 		hifmap = 0;
@@ -577,12 +616,15 @@ static int create_config_from_dt(struct pfeng_priv *priv)
 		if (emac->intf_mode == PHY_INTERFACE_MODE_SGMII) {
 			scnprintf(tmp, sizeof(tmp), "emac%d_xpcs", id);
 			emac->serdes_phy = devm_phy_get(dev, tmp);
-			if (!emac->serdes_phy) {
+			if (IS_ERR(emac->serdes_phy)) {
+				emac->serdes_phy = NULL;
 				dev_err(dev, "SerDes PHY for EMAC%d was not found\n", id);
 			} else {
 				/* Add device depeendency for SerDes */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,6,0)
 				if (device_link_add(dev, &emac->serdes_phy->dev, DL_FLAG_STATELESS /*| DL_FLAG_PM_RUNTIME*/))
 					dev_err(dev, "Failed to enable SerDes PM dependency for EMAC%d\n", id);
+#endif
 			}
 		} else {
 			emac->serdes_phy = NULL;
@@ -598,15 +640,6 @@ static int create_config_from_dt(struct pfeng_priv *priv)
 		if (IS_ERR(emac->tx_clk)) {
 			emac->tx_clk = NULL;
 			dev_dbg(dev, "No TX clocks declared on EMAC%d for interface %s\n", id, phy_modes(intf_mode));
-		} else {
-			ret = clk_prepare_enable(emac->tx_clk);
-			if (ret) {
-				dev_err(dev, "TX clocks on EMAC%d for interface %s failed: %d\n", id, phy_modes(intf_mode), ret);
-				ret = 0;
-				devm_clk_put(dev, emac->tx_clk);
-				emac->tx_clk = NULL;
-			} else
-				dev_info(dev, "TX clocks on EMAC%d for interface %s installed\n", id, phy_modes(intf_mode));
 		}
 
 		/* optional: rx clock */
@@ -617,16 +650,7 @@ static int create_config_from_dt(struct pfeng_priv *priv)
 		emac->rx_clk = devm_get_clk_from_child(dev, child, tmp);
 		if (IS_ERR(emac->rx_clk)) {
 			emac->rx_clk = NULL;
-		dev_dbg(dev, "No RX clocks declared on EMAC%d for interface %s\n", id, phy_modes(intf_mode));
-		} else {
-			ret = clk_prepare_enable(emac->rx_clk);
-			if (ret) {
-				dev_err(dev, "RX clocks on EMAC%d for interface %s failed: %d\n", id, phy_modes(intf_mode), ret);
-				ret = 0;
-				devm_clk_put(dev, emac->rx_clk);
-				emac->rx_clk = NULL;
-			} else
-				dev_info(dev, "RX clocks on EMAC%d for interface %s installed\n", id, phy_modes(intf_mode));
+			dev_dbg(dev, "No RX clocks declared on EMAC%d for interface %s\n", id, phy_modes(intf_mode));
 		}
 	} /* foreach PFENG_DT_COMPATIBLE_EMAC */
 #endif
@@ -799,6 +823,11 @@ static int pfeng_drv_remove(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
 	struct pfeng_priv *priv = dev_get_drvdata(dev);
+	int ret;
+
+	ret = pm_runtime_resume_and_get(dev);
+        if (ret < 0)
+                return ret;
 
 	if (!priv) {
 		dev_err(dev, "Removal failed. No priv data.\n");
@@ -869,6 +898,9 @@ static int pfeng_drv_remove(struct platform_device *pdev)
 	/* Shutdown memory management */
 	oal_mm_shutdown();
 
+	pm_runtime_put_noidle(dev);
+	pm_runtime_disable(dev);
+
 	return 0;
 }
 
@@ -926,6 +958,7 @@ static int pfeng_drv_probe(struct platform_device *pdev)
 	struct pfeng_priv *priv;
 	struct device *dev = &pdev->dev;
 	__maybe_unused struct reset_control *rst;
+	__maybe_unused int id;
 	int ret;
 
 	if (!pdev->dev.of_node)
@@ -1015,6 +1048,11 @@ static int pfeng_drv_probe(struct platform_device *pdev)
 		priv->clk_sys = NULL;
 		goto err_drv;
 	}
+	ret = clk_set_rate(priv->clk_sys, PFE_CLK_SYS_RATE);
+	if (ret) {
+		dev_err(dev, "Failed to set clock 'pfe_sys'. Error: %d\n", ret);
+		goto err_drv;
+	}
 	ret = clk_prepare_enable(priv->clk_sys);
 	if (ret) {
 		dev_err(dev, "Failed to enable clock 'pfe_sys'. Error: %d\n", ret);
@@ -1029,19 +1067,23 @@ static int pfeng_drv_probe(struct platform_device *pdev)
 		priv->clk_pe = NULL;
 		goto err_drv;
 	}
-	ret = clk_prepare_enable(priv->clk_pe);
-	if (ret) {
-		dev_err(dev, "Failed to enable clock 'pfe_pe'. Error: %d\n", ret);
-		goto err_drv;
-	}
 	/* PE clock should be double the frequency of System clock */
 	ret = clk_set_rate(priv->clk_pe, clk_get_rate(priv->clk_sys) * 2);
 	if (ret) {
 		dev_err(dev, "Failed to set clock 'pfe_pe'. Error: %d\n", ret);
 		goto err_drv;
 	}
+	ret = clk_prepare_enable(priv->clk_pe);
+	if (ret) {
+		dev_err(dev, "Failed to enable clock 'pfe_pe'. Error: %d\n", ret);
+		goto err_drv;
+	}
 	dev_info(dev, "Clocks: sys=%luMHz pe=%luMHz\n", clk_get_rate(priv->clk_sys) / 1000000, clk_get_rate(priv->clk_pe) / 1000000);
 
+	pm_runtime_get_noresume(dev);
+	pm_runtime_set_active(dev);
+	pm_runtime_enable(dev);
+
 	/* Set correct PFE_EMACs interfaces */
 	if(pfeng_s32g_set_emac_interfaces(priv,
 		priv->emac[0].intf_mode,
@@ -1056,6 +1098,61 @@ static int pfeng_drv_probe(struct platform_device *pdev)
 		if (ret)
 			goto err_drv;
 	}
+
+	/* Prepare EMAC RX/TX clocks */
+	for (id = 0; id < PFENG_PFE_EMACS; id++) {
+		struct pfeng_emac *emac = &priv->emac[id];
+		u64 clk_rate;
+
+		if (!emac->enabled)
+			continue;
+
+		/* retrieve max rate */
+		switch (emac->max_speed) {
+		case SPEED_10:
+			clk_rate = 2500000;
+			break;
+		case SPEED_100:
+			clk_rate = 25000000;
+			break;
+		case SPEED_1000:
+		default:
+			clk_rate = 125000000;
+			break;
+		}
+
+		if (emac->tx_clk) {
+			ret = clk_set_rate(emac->tx_clk, clk_rate);
+			if (ret)
+				dev_err(dev, "Failed to set TX clock on EMAC%d for interface %s. Error %d\n", id, phy_modes(emac->intf_mode), ret);
+			else {
+				ret = clk_prepare_enable(emac->tx_clk);
+				if (ret)
+					dev_err(dev, "Failed to enable TX clocks on EMAC%d for interface %s. Error %d\n", id, phy_modes(emac->intf_mode), ret);
+			}
+			if (ret) {
+				devm_clk_put(dev, emac->tx_clk);
+				emac->tx_clk = NULL;
+			} else
+				dev_info(dev, "TX clock on EMAC%d for interface %s installed\n", id, phy_modes(emac->intf_mode));
+		}
+
+		if (emac->rx_clk) {
+			ret = clk_set_rate(emac->rx_clk, clk_rate);
+			if (ret)
+				dev_err(dev, "Failed to set RX clock on EMAC%d for interface %s. Error %d\n", id, phy_modes(emac->intf_mode), ret);
+			else {
+				ret = clk_prepare_enable(emac->rx_clk);
+				if (ret)
+					dev_err(dev, "Failed to enable RX clocks on EMAC%d for interface %s. Error %d\n", id, phy_modes(emac->intf_mode), ret);
+			}
+			if (ret) {
+				devm_clk_put(dev, emac->rx_clk);
+				emac->rx_clk = NULL;
+			} else
+				dev_info(dev, "RX clock on EMAC%d for interface %s installed\n", id, phy_modes(emac->intf_mode));
+		}
+	}
 #endif
 
 	/* PFE platform layer init */
@@ -1097,6 +1194,9 @@ static int pfeng_drv_probe(struct platform_device *pdev)
 		goto err_drv;
 	}
 
+	/* Create debugfs */
+	pfeng_debugfs_create(priv);
+
 #ifdef PFE_CFG_PFE_MASTER
 	/* Prepare PTP clock */
 	priv->clk_ptp_reference = 0U;
@@ -1105,19 +1205,20 @@ static int pfeng_drv_probe(struct platform_device *pdev)
 		dev_warn(dev, "Failed to get pfe_ts clock. PTP will be disabled.\n");
 		priv->clk_ptp = NULL;
 	} else {
-		ret = clk_prepare_enable(priv->clk_ptp);
+		ret = clk_set_rate(priv->clk_ptp, PFE_CLK_TS_RATE);
 		if (ret) {
+			dev_warn(dev, "Failed to set pfe_ts clock. PTP will be disabled.\n");
 			priv->clk_ptp = NULL;
-			dev_err(dev, "Failed to enable clock pfe_ts: %d\n", ret);
-		} else
-			priv->clk_ptp_reference = clk_get_rate(priv->clk_ptp);
+		} else {
+			ret = clk_prepare_enable(priv->clk_ptp);
+			if (ret) {
+				priv->clk_ptp = NULL;
+				dev_err(dev, "Failed to enable clock pfe_ts: %d\n", ret);
+			} else
+				priv->clk_ptp_reference = clk_get_rate(priv->clk_ptp);
+		}
 	}
-#endif /* PFE_CFG_PFE_MASTER */
 
-	/* Create debugfs */
-	pfeng_debugfs_create(priv);
-
-#ifdef PFE_CFG_PFE_MASTER
 	/* Create MDIO buses */
 	pfeng_mdio_register(priv);
 #endif /* PFE_CFG_PFE_MASTER */
@@ -1132,6 +1233,14 @@ static int pfeng_drv_probe(struct platform_device *pdev)
 	if (ret)
 		goto err_drv;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,8,0)
+	dev_pm_set_driver_flags(dev, DPM_FLAG_NO_DIRECT_COMPLETE);
+#else
+	dev_pm_set_driver_flags(dev, DPM_FLAG_NEVER_SKIP);
+#endif
+
+	pm_runtime_put_noidle(dev);
+
 	return 0;
 
 err_drv:
@@ -1142,7 +1251,7 @@ err_drv:
 
 /* PM support */
 
-#ifdef CONFIG_PM_SLEEP
+#ifdef PFE_CFG_PFE_MASTER
 /**
  * pfeng_pm_suspend
  * @dev: device pointer
@@ -1221,19 +1330,21 @@ static int pfeng_drv_pm_resume(struct device *dev)
 	if (of_dma_is_coherent(dev->of_node))
 		ret = pfeng_s32g_set_port_coherency(priv);
 
+	pinctrl_pm_select_default_state(dev);
+
 	/* Start clocks */
 	if (!priv->clk_sys) {
 		dev_err(dev, "Main clock 'pfe_sys' disappeared\n");
 		return -ENODEV;
 	}
-	ret = clk_prepare_enable(priv->clk_sys);
+	ret = clk_set_rate(priv->clk_sys, PFE_CLK_SYS_RATE);
 	if (ret) {
-		dev_err(dev, "Failed to enable clock 'pfe_sys'. Error: %d\n", ret);
+		dev_err(dev, "Failed to set clock 'pfe_sys'. Error: %d\n", ret);
 		return -EINVAL;
 	}
-	ret = clk_prepare_enable(priv->clk_pe);
+	ret = clk_prepare_enable(priv->clk_sys);
 	if (ret) {
-		dev_err(dev, "Failed to enable clock 'pfe_pe'. Error: %d\n", ret);
+		dev_err(dev, "Failed to enable clock 'pfe_sys'. Error: %d\n", ret);
 		return -EINVAL;
 	}
 	ret = clk_set_rate(priv->clk_pe, clk_get_rate(priv->clk_sys) * 2);
@@ -1241,12 +1352,10 @@ static int pfeng_drv_pm_resume(struct device *dev)
 		dev_err(dev, "Failed to set clock 'pfe_pe'. Error: %d\n", ret);
 		return -EINVAL;
 	}
-
-	if (priv->clk_ptp && (ret = clk_prepare_enable(priv->clk_ptp))) {
-		dev_err(dev, "Failed to enable clock 'pfe_ts'. Error: %d\n", ret);
-		/* Free clock, now is unusable */
-		devm_clk_put(dev, priv->clk_ptp);
-		priv->clk_ptp = NULL;
+	ret = clk_prepare_enable(priv->clk_pe);
+	if (ret) {
+		dev_err(dev, "Failed to enable clock 'pfe_pe'. Error: %d\n", ret);
+		return -EINVAL;
 	}
 
 	/* Set correct PFE_EMACs interfaces */
@@ -1281,6 +1390,24 @@ static int pfeng_drv_pm_resume(struct device *dev)
 	pfeng_debugfs_create(priv);
 
 #ifdef PFE_CFG_PFE_MASTER
+	/* PTP clock */
+	if (priv->clk_ptp) {
+		ret = clk_set_rate(priv->clk_ptp, PFE_CLK_TS_RATE);
+		if (ret) {
+			dev_warn(dev, "Failed to set pfe_ts clock. PTP will be disabled.\n");
+			clk_put(priv->clk_ptp);
+			priv->clk_ptp = NULL;
+		} else {
+			ret = clk_prepare_enable(priv->clk_ptp);
+			if (ret) {
+				dev_warn(dev, "Failed to enable clock 'pfe_ts'. PTP will be disabled.\n");
+				/* Free clock, now is unusable */
+				clk_put(priv->clk_ptp);
+				priv->clk_ptp = NULL;
+			}
+		}
+	}
+
 	/* MDIO buses */
 	pfeng_mdio_resume(priv);
 #endif /* PFE_CFG_PFE_MASTER */
@@ -1306,7 +1433,20 @@ err_pfe_init:
 
 	return ret;
 }
-#endif /* CONFIG_PM_SLEEP */
+#else /* PFE_MASTER */
+/* Slave PM is not supported */
+static int pfeng_drv_pm_suspend(struct device *dev)
+{
+	dev_err(dev, "Suspending driver is unsupported\n");
+
+	return -ENOTSUP;
+}
+
+static int pfeng_drv_pm_resume(struct device *dev)
+{
+	return 0;
+}
+#endif
 
 SIMPLE_DEV_PM_OPS(pfeng_drv_pm_ops,
 			pfeng_drv_pm_suspend,
diff --git a/sw/linux-pfeng/pfeng-ethtool.c b/sw/linux-pfeng/pfeng-ethtool.c
index abd4ecd..21bd816 100644
--- a/sw/linux-pfeng/pfeng-ethtool.c
+++ b/sw/linux-pfeng/pfeng-ethtool.c
@@ -8,7 +8,6 @@
 #include "pfe_cfg.h"
 #include "pfeng.h"
 
-#include <linux/clk.h>
 #include <linux/etherdevice.h>
 #include <linux/ethtool.h>
 #include <linux/phylink.h>
@@ -134,9 +133,8 @@ static int pfeng_set_coalesce(struct net_device *netdev, struct ethtool_coalesce
 {
 	struct pfeng_netif *netif = netdev_priv(netdev);
 	struct pfeng_hif_chnl *chnl;
+	int ret;
 	u32 idx;
-	u64 cycles = 0;
-	int ret = 0;
 
 	/* Right now we only support two modes:
 	 * 1) disabled coalescing
@@ -144,24 +142,18 @@ static int pfeng_set_coalesce(struct net_device *netdev, struct ethtool_coalesce
 	 *
 	 * Note: Frame count triggered coalescing is not supported on S32G2 silicon
 	 */
-	if (ec->rx_max_coalesced_frames > 1 && ec->rx_coalesce_usecs == 0) {
+	if (ec->rx_max_coalesced_frames > 0 && ec->rx_coalesce_usecs == 0) {
 		netdev_err(netif->netdev, "Frame based coalescing is unsupported\n");
 		return -EINVAL;
 	}
 
-	if (ec->rx_coalesce_usecs) {
-		cycles =  ec->rx_coalesce_usecs * (DIV_ROUND_UP(clk_get_rate(netif->priv->clk_sys), USEC_PER_SEC));
-		if (cycles > U32_MAX)
-			return -EINVAL;
-	}
-
 	/* Setup all linked HIF channel */
 	for (idx = 0; idx < PFENG_PFE_HIF_CHANNELS; idx++) {
 		if (!(netif->cfg->hifmap & (1 << idx)))
 			continue;
 
 		chnl = &netif->priv->hif_chnl[idx];
-		ret = pfe_hif_chnl_set_rx_irq_coalesce(chnl->priv, ec->rx_max_coalesced_frames, cycles);
+		ret = pfeng_hif_chnl_set_coalesce(chnl, netif->priv->clk_sys, ec->rx_coalesce_usecs, 0);
 		if (ret)
 			break;
 	}
@@ -169,10 +161,23 @@ static int pfeng_set_coalesce(struct net_device *netdev, struct ethtool_coalesce
 	return ret;
 }
 
+static int pfeng_ethtool_begin(struct net_device *netdev)
+{
+	struct pfeng_netif *netif = netdev_priv(netdev);
+
+	return pm_runtime_resume_and_get(&netif->priv->pdev->dev);
+}
+
+static void pfeng_ethtool_complete(struct net_device *netdev)
+{
+	struct pfeng_netif *netif = netdev_priv(netdev);
+
+	pm_runtime_put(&netif->priv->pdev->dev);
+}
+
 static const struct ethtool_ops pfeng_ethtool_ops = {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,5,0)
-	.supported_coalesce_params = ETHTOOL_COALESCE_RX_USECS |
-				     ETHTOOL_COALESCE_RX_MAX_FRAMES,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,7,0)
+	.supported_coalesce_params = ETHTOOL_COALESCE_RX_USECS,
 #endif
 	.get_drvinfo = pfeng_ethtool_getdrvinfo,
 	.get_link = ethtool_op_get_link,
@@ -184,10 +189,52 @@ static const struct ethtool_ops pfeng_ethtool_ops = {
 	.get_ts_info = pfeng_ethtool_get_ts_info,
 	.get_coalesce = pfeng_get_coalesce,
 	.set_coalesce = pfeng_set_coalesce,
-
+	.begin = pfeng_ethtool_begin,
+	.complete = pfeng_ethtool_complete,
 };
 
 void pfeng_ethtool_init(struct net_device *netdev)
 {
 	netdev->ethtool_ops = &pfeng_ethtool_ops;
 }
+
+int pfeng_ethtool_params_save(struct pfeng_netif *netif) {
+	struct net_device *netdev = netif->netdev;
+	struct ethtool_pauseparam epp;
+
+	/* Coalesce (saved in pfeng_hif_chnl_set_coalesce()) */
+
+	/* Pause */
+	pfeng_ethtool_get_pauseparam(netdev, &epp);
+	netif->cfg->pause_tx = epp.tx_pause;
+	netif->cfg->pause_rx = epp.rx_pause;
+
+	return 0;
+}
+
+int pfeng_ethtool_params_restore(struct pfeng_netif *netif) {
+	struct net_device *netdev = netif->netdev;
+	struct pfeng_hif_chnl *chnl;
+	struct ethtool_coalesce ec;
+	struct ethtool_pauseparam epp;
+	int ret, idx = ffs(netif->cfg->hifmap) - 1;
+
+	/* Coalesce */
+	chnl = &netif->priv->hif_chnl[idx];
+	ec.rx_max_coalesced_frames = chnl->cfg_rx_max_coalesced_frames;
+	ec.rx_coalesce_usecs = chnl->cfg_rx_coalesce_usecs;
+
+	ret = pfeng_set_coalesce(netdev, &ec);
+	if (ret)
+		netdev_warn(netdev, "Coalescing not restored\n");
+
+	/* Pause */
+	epp.tx_pause = netif->cfg->pause_tx;
+	epp.rx_pause = netif->cfg->pause_rx;
+	epp.autoneg = AUTONEG_DISABLE;
+	ret = pfeng_ethtool_set_pauseparam(netdev, &epp);
+	if (ret)
+		netdev_warn(netdev, "Pause not restored\n");
+
+	return 0;
+}
diff --git a/sw/linux-pfeng/pfeng-hif.c b/sw/linux-pfeng/pfeng-hif.c
index 229ee68..bfbd45a 100644
--- a/sw/linux-pfeng/pfeng-hif.c
+++ b/sw/linux-pfeng/pfeng-hif.c
@@ -13,14 +13,16 @@
 #include "pfe_hif_drv.h"
 
 #include "pfeng.h"
+#define PFE_DEFAULT_TX_WORK (PFE_CFG_HIF_RING_LENGTH >> 1)
 
 int pfeng_hif_chnl_stop(struct pfeng_hif_chnl *chnl)
 {
 	/* Disable channel interrupt */
 	pfe_hif_chnl_irq_mask(chnl->priv);
 
-	/* Disable the channel RX interrupts */
+	/* Disable the channel RX/TX interrupts */
 	pfe_hif_chnl_rx_irq_mask(chnl->priv);
+	pfe_hif_chnl_tx_irq_mask(chnl->priv);
 
 	/* Disable RX */
 	pfe_hif_chnl_rx_disable(chnl->priv);
@@ -56,8 +58,9 @@ int pfeng_hif_chnl_start(struct pfeng_hif_chnl *chnl)
 		return -EINVAL;
 	}
 
-	/* Enable the channel RX interrupts */
+	/* Enable the channel RX/TX interrupts */
 	pfe_hif_chnl_rx_irq_unmask(chnl->priv);
+	pfe_hif_chnl_tx_irq_unmask(chnl->priv);
 
 	chnl->status = PFENG_HIF_STATUS_RUNNING;
 
@@ -67,18 +70,19 @@ int pfeng_hif_chnl_start(struct pfeng_hif_chnl *chnl)
 }
 
 /**
- * @brief		HIF channel RX ISR
- * @details		Will be called by HIF channel instance when RX event has occurred
- * @note		To see which context the ISR is running in please see the
+ * @brief		HIF channel ISR
+ * @details		Will be called by HIF channel instance when an event has occurred
+ * @note		To see which context the ISR is running in refer to the
  * 				pfe_hif_chnl module implementation.
  */
-static void pfeng_hif_drv_chnl_rx_isr(void *arg)
+static void pfeng_hif_drv_chnl_isr(void *arg)
 {
         struct pfeng_hif_chnl *chnl = (struct pfeng_hif_chnl *)arg;
 
 	if(napi_schedule_prep(&chnl->napi)) {
 
 		pfe_hif_chnl_rx_irq_mask(chnl->priv);
+		pfe_hif_chnl_tx_irq_mask(chnl->priv);
 
 		__napi_schedule_irqoff(&chnl->napi);
 	}
@@ -105,6 +109,60 @@ static irqreturn_t pfeng_hif_chnl_direct_isr(int irq, void *arg)
 	return IRQ_HANDLED;
 }
 
+#ifdef PFE_CFG_MULTI_INSTANCE_SUPPORT
+
+static int pfe_hif_drv_ihc_put_pkt(pfe_hif_drv_client_t *client, void *data, uint32_t len, void *ref)
+{
+	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
+	pfe_ct_hif_rx_hdr_t *hif_hdr = data;
+	pfe_hif_pkt_t *rx_metadata;
+
+	/*	Create the RX metadata */
+	rx_metadata = oal_mm_malloc(sizeof(*rx_metadata));
+	if (unlikely(!rx_metadata))
+		return -ENOMEM;
+
+	memset(rx_metadata, 0, sizeof(*rx_metadata));
+
+	rx_metadata->client = client;
+	rx_metadata->data = (addr_t)data;
+	rx_metadata->len = len;
+
+	rx_metadata->flags.specific.rx_flags = hif_hdr->flags;
+	rx_metadata->i_phy_if = hif_hdr->i_phy_if;
+	rx_metadata->ref_ptr = ref;
+
+	if (unlikely(EOK != fifo_put(client->ihc_rx_fifo, rx_metadata))) {
+		dev_err(chnl->dev, "IHC RX fifo full\n");
+		oal_mm_free(rx_metadata);
+		return -EINVAL;
+	}
+
+	return 0;
+}
+
+static int pfe_hif_drv_ihc_put_tx_conf(pfe_hif_drv_client_t *client, void *data, uint32_t len)
+{
+	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
+	void *idex_frame;
+
+	idex_frame = oal_mm_malloc_contig_aligned_nocache(len, 0U);
+	if (unlikely(!idex_frame))
+		return -ENOMEM;
+
+	memcpy(idex_frame, data, len);
+
+	if (unlikely(EOK != fifo_put(client->ihc_txconf_fifo, idex_frame))) {
+		dev_err(chnl->dev, "IHC TX fifo full\n");
+		oal_mm_free_contig(idex_frame);
+		return -EINVAL;
+	}
+
+	return 0;
+}
+
+#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
+
 /**
  * @brief	Process HIF channel receive
  * @details	Read HIF channel data
@@ -155,10 +213,14 @@ static int pfeng_hif_chnl_rx(struct pfeng_hif_chnl *chnl, int limit)
 
 		/* Find appropriate netif */
 		netif = chnl->netifs[hif_hdr->i_phy_if];
-		if (!netif) {
-			dev_err(chnl->dev, "Packet for unconfigured PhyIf %d\n", hif_hdr->i_phy_if);
-			consume_skb(skb);
-			continue;
+		if (unlikely(!netif)) {
+			/* Try AUX */
+			netif = chnl->netifs[HIF_CLIENTS_AUX_IDX];
+			if (unlikely(!netif)) {
+				dev_err(chnl->dev, "Packet for unconfigured PhyIf %d\n", hif_hdr->i_phy_if);
+				consume_skb(skb);
+				continue;
+			}
 		}
 		netdev = netif->netdev;
 		skb->dev = netdev;
@@ -193,10 +255,7 @@ static int pfeng_hif_chnl_rx(struct pfeng_hif_chnl *chnl, int limit)
 
 		skb->protocol = eth_type_trans(skb, netdev);
 
-		if (unlikely(skb->ip_summed == CHECKSUM_NONE))
-			netif_receive_skb(skb);
-		else
-			napi_gro_receive(&chnl->napi, skb);
+		napi_gro_receive(&chnl->napi, skb);
 
 		netdev->stats.rx_packets++;
 		netdev->stats.rx_bytes += skb_headlen(skb);
@@ -213,24 +272,102 @@ static int pfeng_hif_chnl_rx(struct pfeng_hif_chnl *chnl, int limit)
 #endif
 }
 
-static int pfeng_hif_chnl_rx_poll(struct napi_struct *napi, int budget)
+static bool pfeng_hif_chnl_tx_conf(struct pfeng_hif_chnl *chnl, int napi_budget)
+{
+	unsigned int done = 0;
+
+	while (pfe_hif_chnl_has_tx_conf(chnl->priv) && done < PFE_DEFAULT_TX_WORK) {
+
+		if (unlikely(pfe_hif_chnl_get_tx_conf(chnl->priv) != EOK))
+			break;
+
+#ifdef PFE_CFG_MULTI_INSTANCE_SUPPORT
+		/* Check for IHC packet first */
+		if (unlikely (pfeng_hif_chnl_txconf_get_flag(chnl) == PFENG_MAP_PKT_IHC)) {
+			struct sk_buff *skb = pfeng_hif_chnl_txconf_get_skbuf(chnl);
+			pfe_hif_drv_client_t *client = &chnl->ihc_client;
+
+			/* IDEX confirmation must return IDEX API compatible data */
+			skb_pull(skb, PFENG_TX_PKT_HEADER_SIZE);
+			if (!pfe_hif_drv_ihc_put_tx_conf(client, skb->data, skb_headlen(skb))) {
+				/* Call IHC TX callback */
+				client->event_handler(client, client->priv, EVENT_TXDONE_IND, 0);
+			} else {
+				dev_err(chnl->dev, "TXconf IHC queuing failed.\n");
+			}
+		}
+#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
+
+		pfeng_hif_chnl_txconf_free_map_full(chnl, napi_budget);
+
+		done++;
+	}
+
+	if (unlikely(chnl->queues_stopped)) {
+		if (pfe_hif_chnl_can_accept_tx_num(chnl->priv, napi_budget)) {
+			int i;
+
+			for (i = 0; i < HIF_CLIENTS_MAX; i++) {
+				struct pfeng_netif *netif = chnl->netifs[i];
+
+				if (!netif)
+					continue;
+
+				if (unlikely(netif_carrier_ok(netif->netdev) &&
+					     __netif_subqueue_stopped(netif->netdev, 0))) {
+					/* only one queue per netdev used at this point */
+					netif_wake_subqueue(netif->netdev, 0);
+					chnl->queues_stopped = false;
+				}
+			}
+		}
+	}
+
+	return done < PFE_DEFAULT_TX_WORK;
+}
+
+static int pfeng_hif_chnl_poll(struct napi_struct *napi, int budget)
 {
 	struct pfeng_hif_chnl *chnl = container_of(napi, struct pfeng_hif_chnl, napi);
-	int done = 0;
+	bool complete;
+	int work_done = 0;
 
+	complete = pfeng_hif_chnl_tx_conf(chnl, budget);
 	/* Consume RX pkt(s) */
-	done = pfeng_hif_chnl_rx(chnl, budget);
+	work_done = pfeng_hif_chnl_rx(chnl, budget);
+	if (work_done == budget)
+		complete = false;
+
+	if (!complete)
+		return budget;
 
-	if (done < budget && napi_complete_done(napi, done)) {
+	if (likely(napi_complete_done(napi, work_done))) {
 
-		/* Enable RX interrupt */
+		/* Enable interrupts */
 		pfe_hif_chnl_rx_irq_unmask(chnl->priv);
+		pfe_hif_chnl_tx_irq_unmask(chnl->priv);
 
 		/* Trigger the RX DMA */
 		pfe_hif_chnl_rx_dma_start(chnl->priv);
 	}
 
-	return done;
+	return work_done;
+}
+
+int pfeng_hif_chnl_set_coalesce(struct pfeng_hif_chnl *chnl, struct clk *clk_sys, u32 usecs, u32 frames)
+{
+	u32 cycles;
+	int ret;
+
+	cycles = usecs * (DIV_ROUND_UP(clk_get_rate(clk_sys), USEC_PER_SEC));
+
+	ret = pfe_hif_chnl_set_rx_irq_coalesce(chnl->priv, 0, cycles);
+	if (!ret) {
+		chnl->cfg_rx_max_coalesced_frames = frames;
+		chnl->cfg_rx_coalesce_usecs = usecs;
+	}
+
+	return -ret; /* convert platform err code to linux kernel err code */
 }
 
 static int pfeng_hif_chnl_drv_remove(struct pfeng_priv *priv, u32 idx)
@@ -249,22 +386,20 @@ static int pfeng_hif_chnl_drv_remove(struct pfeng_priv *priv, u32 idx)
 	pfeng_hif_chnl_stop(chnl);
 
 	/* Stop NAPI */
-	if (chnl->status == PFENG_HIF_STATUS_RUNNING) {
+	if (chnl->status >= PFENG_HIF_STATUS_ENABLED) {
 		napi_disable(&chnl->napi);
 		netif_napi_del(&chnl->napi);
 	}
 	/* Prepare for startup state (in case of STR use) */
 	chnl->status = PFENG_HIF_STATUS_REQUESTED;
 
-	/* Release IRQ line */
-	devm_free_irq(dev, priv->pfe_cfg->irq_vector_hif_chnls[idx], chnl->priv);
-
 	/* Release attached RX/TX pools */
 	pfeng_bman_pool_destroy(chnl);
 
-	if (priv->pfe_cfg->irq_vector_hif_chnls[idx]) {
-		disable_irq(priv->pfe_cfg->irq_vector_hif_chnls[idx]);
-	}
+	/* Release IRQ line */
+	disable_irq(priv->pfe_cfg->irq_vector_hif_chnls[idx]);
+	irq_set_affinity_hint(priv->pfe_cfg->irq_vector_hif_chnls[idx], NULL);
+	devm_free_irq(dev, priv->pfe_cfg->irq_vector_hif_chnls[idx], chnl->priv);
 
 	/* Forget HIF channel data */
 	chnl->priv = NULL;
@@ -288,10 +423,11 @@ static char *get_hif_chnl_mode_str(struct pfeng_hif_chnl *chnl)
 
 static int pfeng_hif_chnl_drv_create(struct pfeng_priv *priv, u32 idx)
 {
+	int irq = priv->pfe_cfg->irq_vector_hif_chnls[idx];
 	struct device *dev = &priv->pdev->dev;
 	struct pfeng_hif_chnl *chnl;
-	int ret = 0;
 	char irq_name[20];
+	int ret = 0;
 
 	if (idx >= PFENG_PFE_HIF_CHANNELS) {
 		dev_err(dev, "Invalid HIF instance number: %u\n", idx);
@@ -306,32 +442,29 @@ static int pfeng_hif_chnl_drv_create(struct pfeng_priv *priv, u32 idx)
 	}
 	chnl->dev = dev;
 	chnl->idx = idx;
-#ifndef PFE_CFG_MULTI_INSTANCE_SUPPORT
-	if (unlikely(chnl->cl_mode == PFENG_HIF_MODE_SHARED))
-#else
+
 	if (unlikely((chnl->cl_mode == PFENG_HIF_MODE_SHARED) || chnl->ihc))
-#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
-#ifdef LOCK_TX_SPINLOCK
 		spin_lock_init(&chnl->lock_tx);
-#else
-		mutex_init(&chnl->lock_tx);
-#endif
 
-	/* Register HIF channel RX callback */
-	pfe_hif_chnl_set_event_cbk(chnl->priv, HIF_CHNL_EVT_RX_IRQ, &pfeng_hif_drv_chnl_rx_isr, (void *)chnl);
+	/* Register HIF channel RX/TX callback */
+	pfe_hif_chnl_set_event_cbk(chnl->priv, HIF_CHNL_EVT_RX_IRQ | HIF_CHNL_EVT_TX_IRQ,
+				   pfeng_hif_drv_chnl_isr, (void *)chnl);
 
 	/* Create interrupt name */
 	scnprintf(irq_name, sizeof(irq_name), "pfe-hif-%d:%s", idx, get_hif_chnl_mode_str(chnl));
 
 	/* HIF channel IRQ */
-	ret = devm_request_irq(dev, priv->pfe_cfg->irq_vector_hif_chnls[idx], pfeng_hif_chnl_direct_isr,
-		0, kstrdup(irq_name, GFP_KERNEL), chnl->priv);
+	ret = devm_request_irq(dev, irq, pfeng_hif_chnl_direct_isr, 0,
+			       devm_kstrdup(dev, irq_name, GFP_KERNEL), chnl->priv);
 	if (ret < 0) {
 		dev_err(dev, "Error allocating the IRQ %d for '%s', error %d\n",
-			priv->pfe_cfg->irq_vector_hif_chnls[idx], irq_name, ret);
+			irq, irq_name, ret);
 		return ret;
 	}
 
+	/* configure interrupt affinity hint */
+	irq_set_affinity_hint(irq, get_cpu_mask(idx % num_online_cpus()));
+
 	/* Create bman for channel */
 	if (!chnl->bman.rx_pool) {
 		ret = pfeng_bman_pool_create(chnl);
@@ -348,8 +481,11 @@ static int pfeng_hif_chnl_drv_create(struct pfeng_priv *priv, u32 idx)
 	/* Create dummy netdev required for independent HIF channel support */
 	init_dummy_netdev(&chnl->dummy_netdev);
 
+	/* init interrupt coalescing */
+	pfeng_hif_chnl_set_coalesce(chnl, priv->clk_sys, PFENG_INT_TIMER_DEFAULT, 0);
+
 	chnl->status = PFENG_HIF_STATUS_ENABLED;
-	netif_napi_add(&chnl->dummy_netdev, &chnl->napi, pfeng_hif_chnl_rx_poll, NAPI_POLL_WEIGHT);
+	netif_napi_add(&chnl->dummy_netdev, &chnl->napi, pfeng_hif_chnl_poll, NAPI_POLL_WEIGHT);
 	napi_enable(&chnl->napi);
 
 	dev_info(dev, "HIF%d enabled\n", idx);
@@ -486,3 +622,240 @@ void pfeng_hif_remove(struct pfeng_priv *priv)
 		pfeng_hif_chnl_drv_remove(priv, idx);
 	}
 }
+
+#ifdef PFE_CFG_MULTI_INSTANCE_SUPPORT
+
+/* structs pfe_hif_drv_tag and pfe_hif_drv_client_tag are declared in pfeng.h */
+
+void pfe_hif_drv_client_unregister(pfe_hif_drv_client_t *client)
+{
+	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
+
+	/*	Release IHC fifo */
+	if (client->ihc_rx_fifo) {
+		u32 fill_level;
+		errno_t err = fifo_get_fill_level(client->ihc_rx_fifo, &fill_level);
+
+		if (unlikely(EOK != err)) {
+			dev_info(chnl->dev, "Unable to get IHC fifo fill level: %d\n", err);
+		} else if (fill_level) {
+			dev_info(chnl->dev, "IHC Queue is not empty\n");
+		}
+
+		fifo_destroy(client->ihc_rx_fifo);
+		client->ihc_rx_fifo = NULL;
+	}
+
+	if (client->ihc_txconf_fifo) {
+		u32 fill_level;
+		errno_t err = fifo_get_fill_level(client->ihc_txconf_fifo, &fill_level);
+
+		if (unlikely(EOK != err)) {
+			dev_info(chnl->dev, "Unable to get IHC tx conf fifo fill level: %d\n", err);
+		} else if (fill_level) {
+			dev_info(chnl->dev, "IHC Tx conf Queue is not empty\n");
+		}
+
+		fifo_destroy(client->ihc_txconf_fifo);
+		client->ihc_txconf_fifo = NULL;
+	}
+
+	/*	Cleanup memory */
+	memset(client, 0, sizeof(pfe_hif_drv_client_t));
+
+	dev_info(chnl->dev, "IHC client unregistered\n");
+}
+
+pfe_hif_drv_client_t * pfe_hif_drv_ihc_client_register(pfe_hif_drv_t *hif_drv, pfe_hif_drv_client_event_handler handler, void *priv)
+{
+
+	struct pfeng_hif_chnl *chnl = container_of(hif_drv, struct pfeng_hif_chnl, hif_drv);
+	pfe_hif_drv_client_t *client = &chnl->ihc_client;
+	int ret;
+
+	if (client->hif_drv) {
+		dev_err(chnl->dev, "IHC client already registered\n");
+		return NULL;
+	}
+
+	/* Initialize the instance */
+	memset(client, 0, sizeof(pfe_hif_drv_client_t));
+	client->ihc_rx_fifo = fifo_create(32);
+	if (!client->ihc_rx_fifo) {
+		dev_err(chnl->dev, "Can't create IHC RX fifo. Err %d\n", ret);
+		return NULL;
+	}
+	client->ihc_txconf_fifo = fifo_create(32);
+	if (!client->ihc_txconf_fifo) {
+		dev_err(chnl->dev, "Can't create IHC TXconf fifo. Err %d\n", ret);
+		return NULL;
+	}
+	client->hif_drv = hif_drv;
+	client->priv = priv;
+	client->event_handler = handler;
+	client->inited = true;
+
+	dev_info(chnl->dev, "IHC client registered\n");
+	return client;
+}
+
+/**
+ * @brief		Release packet
+ * @param[in]	pkt The packet instance
+ */
+void pfe_hif_pkt_free(const pfe_hif_pkt_t *pkt)
+{
+	if (pkt->ref_ptr)
+		kfree_skb(pkt->ref_ptr);
+	oal_mm_free(pkt);
+}
+
+/**
+ * @brief		Get packet from RX queue for IHC data
+ * @param[in]	client IHC Client instance
+ * @param[in]	queue RX queue number
+ * @return		Pointer to SW buffer descriptor containing the packet or NULL
+ * 				if the queue does not contain data
+ *
+ * @warning		Intended to be called for IHC client only
+ */
+pfe_hif_pkt_t * pfe_hif_drv_client_receive_pkt(pfe_hif_drv_client_t *client, uint32_t queue)
+{
+	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
+
+	if (&chnl->ihc_client != client)
+	{
+		/* Only IHC client supported */
+		dev_err(chnl->dev, "Only HIF IHC client supported\n");
+		return NULL;
+	}
+
+	/* No resource protection here */
+	return fifo_get(client->ihc_rx_fifo);
+}
+
+/**
+ * @brief		Get TX confirmation
+ * @param[in]	client Client instance
+ * @param[in]	queue TX queue number
+ * @return		Pointer to data associated with the transmitted buffer. See pfe_hif_drv_client_xmit_pkt()
+ * 				and pfe_hif_drv_client_xmit_sg_pkt().
+ * @note		Only a single thread can call this function for given client+queue
+ * 				combination.
+ */
+void *pfe_hif_drv_client_receive_tx_conf(const pfe_hif_drv_client_t *client, uint32_t queue)
+{
+	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
+
+	if (&chnl->ihc_client != client)
+	{
+		/* Only IHC client supported */
+		dev_err(chnl->dev, "Only HIF IHC client supported\n");
+		return NULL;
+	}
+
+	/* No resource protection here */
+	return fifo_get(client->ihc_txconf_fifo);
+}
+
+void pfeng_ihc_tx_work_handler(struct work_struct *work)
+{
+	struct pfeng_priv* priv = container_of(work, struct pfeng_priv, ihc_tx_work);
+	struct pfeng_hif_chnl *chnl = priv->ihc_chnl;
+	struct sk_buff *skb = NULL;
+	dma_addr_t des = 0;
+	int refid = -1, ret;
+
+	/* IHC transport requires protection */
+	spin_lock(&chnl->lock_tx);
+
+	if (!kfifo_get(&priv->ihc_tx_fifo, &skb)) {
+		dev_err(chnl->dev, "No IHC TX data!\n");
+		goto err;
+	}
+
+	/* Remap skb */
+	des = dma_map_single(chnl->dev, skb->data, skb_headlen(skb), DMA_TO_DEVICE);
+	if (unlikely(dma_mapping_error(chnl->dev, des))) {
+		dev_err(chnl->dev, "No possible to map IHC frame, dropped.\n");
+		goto err;
+	}
+	refid = pfeng_hif_chnl_txconf_put_map_frag(chnl, skb->data, des, skb_headlen(skb), skb, PFENG_MAP_PKT_IHC);
+	/* Increment to be able to pass number 0 */
+	refid++;
+
+	ret = pfe_hif_chnl_tx(chnl->priv, (void *)des, skb->data, skb_headlen(skb), true);
+	if (unlikely(EOK != ret)) {
+		pfeng_hif_chnl_txconf_unroll_map_full(chnl, refid - 1, 0);
+		goto err;
+	}
+	spin_unlock(&chnl->lock_tx);
+
+	return;
+
+err:
+	spin_unlock(&chnl->lock_tx);
+	if(skb)
+		kfree_skb(skb);
+
+	return;
+}
+
+/**
+ * @brief		Transmit IHC packet
+ * @param[in]	client Client instance
+ * @param[in]	queue TX queue number
+ * @param[in]	sg_list Pointer to the SG list and packet metadata
+ * @param[in]	idex_frame Pointer to the IHC packet with TX header
+ * @return		EOK if success, error code otherwise.
+ */
+errno_t pfe_hif_drv_client_xmit_sg_pkt(pfe_hif_drv_client_t *client, uint32_t queue, const hif_drv_sg_list_t *const sg_list, void *idex_frame)
+{
+	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
+	struct pfeng_priv *priv = dev_get_drvdata(chnl->dev);
+	uint32_t flen = sg_list->items[0].len;
+	pfe_ct_hif_tx_hdr_t *tx_hdr;
+	struct sk_buff *skb;
+	int ret, pktlen;
+
+	/* Find minimal pkt size */
+	if ((PFENG_TX_PKT_HEADER_SIZE + flen) < 68)
+		pktlen = 68;
+	else
+		pktlen = PFENG_TX_PKT_HEADER_SIZE + flen;
+
+	/* Copy packet to skb to reuse txconf standard cleaning */
+	skb = alloc_skb(pktlen, GFP_ATOMIC);
+	if (!skb) {
+		oal_mm_free_contig(idex_frame);
+		return ENOMEM;
+	}
+
+	/* Set TX header */
+	tx_hdr = (pfe_ct_hif_tx_hdr_t *)skb->data;
+	memset(tx_hdr, 0, PFENG_TX_PKT_HEADER_SIZE);
+	tx_hdr->chid = chnl->idx;
+	tx_hdr->flags |= HIF_TX_IHC | HIF_TX_INJECT;
+	tx_hdr->e_phy_ifs = oal_htonl(1U << sg_list->dst_phy);
+	skb_put(skb, PFENG_TX_PKT_HEADER_SIZE);
+
+	/* Append IDEX frame */
+	skb_put_data(skb, idex_frame, flen);
+
+	/* Free original idex_frame */
+	oal_mm_free_contig(idex_frame);
+
+	/* Send data to worker */
+	ret = kfifo_put(&priv->ihc_tx_fifo, skb);
+	if (ret != 1) {
+		dev_err(chnl->dev, "IHC TX kfifo full\n");
+		kfree_skb(skb);
+		return -ENOMEM;
+	}
+
+	queue_work(priv->ihc_tx_wq, &priv->ihc_tx_work);
+
+	return 0;
+}
+
+#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
diff --git a/sw/linux-pfeng/pfeng-mdio.c b/sw/linux-pfeng/pfeng-mdio.c
index 0adf668..bdca70a 100644
--- a/sw/linux-pfeng/pfeng-mdio.c
+++ b/sw/linux-pfeng/pfeng-mdio.c
@@ -24,15 +24,22 @@
 static int pfeng_mdio_read(struct mii_bus *bus, int phyaddr, int phyreg)
 {
 	pfe_emac_t *emac = bus->priv;
+	struct device *dev = bus->parent;
 	int ret;
 	u16 val;
 
+	ret = pm_runtime_resume_and_get(dev);
+	if (ret < 0)
+		return ret;
+
 	if (phyreg & MII_ADDR_C45) {
 		ret = pfe_emac_mdio_read45(emac, (u16)phyaddr, (phyreg >> 16) & 0x1F, (u16)phyreg & 0xFFFF, &val, 0);
 	} else {
 		ret = pfe_emac_mdio_read22(emac, (u16)phyaddr, (u16)phyreg, &val, 0);
 	}
 
+	pm_runtime_put(dev);
+
 	if (!ret)
 		return val;
 
@@ -42,14 +49,21 @@ static int pfeng_mdio_read(struct mii_bus *bus, int phyaddr, int phyreg)
 static int pfeng_mdio_write(struct mii_bus *bus, int phyaddr, int phyreg, u16 phydata)
 {
 	pfe_emac_t *emac = bus->priv;
+	struct device *dev = bus->parent;
 	int ret;
 
+	ret = pm_runtime_resume_and_get(dev);
+	if (ret < 0)
+		return ret;
+
 	if (phyreg & MII_ADDR_C45) {
 		ret = pfe_emac_mdio_write45(emac, (u16)phyaddr, (phyreg >> 16) & 0x1F, (u16)phyreg & 0xFFFF, phydata, 0);
 	} else {
 		ret = pfe_emac_mdio_write22(emac, (u16)phyaddr, (u16)phyreg, phydata, 0);
 	}
 
+	pm_runtime_put(dev);
+
 	if (ret)
 		return -ret;
 
diff --git a/sw/linux-pfeng/pfeng-netif.c b/sw/linux-pfeng/pfeng-netif.c
index 079f8b4..6633f74 100644
--- a/sw/linux-pfeng/pfeng-netif.c
+++ b/sw/linux-pfeng/pfeng-netif.c
@@ -9,6 +9,7 @@
 #include <linux/rtnetlink.h>
 #include <linux/list.h>
 #include <linux/clk.h>
+#include <linux/if_vlan.h>
 
 #include "pfe_cfg.h"
 #include "oal.h"
@@ -28,12 +29,91 @@ typedef struct
 	pfe_drv_id_t owner;		/* Identification of the driver that owns this entry */
 } pfeng_netif_mac_db_list_entry_t;
 
+static struct pfeng_emac *pfeng_netif_get_emac(struct pfeng_netif *netif)
+{
+	if (netif->cfg->aux)
+		return NULL;
+
+	return &netif->priv->emac[netif->cfg->emac];
+}
+
+static pfe_log_if_t *pfeng_netif_get_emac_logif(struct pfeng_netif *netif)
+{
+	if (!pfeng_netif_get_emac(netif))
+		return NULL;
+
+	return pfeng_netif_get_emac(netif)->logif_emac;
+}
+
+static pfe_phy_if_t *pfeng_netif_get_emac_phyif(struct pfeng_netif *netif)
+{
+	if (!pfeng_netif_get_emac(netif))
+		return NULL;
+
+	return pfeng_netif_get_emac(netif)->phyif_emac;
+}
+
+static u8 *__mac_to_str(const u8 *addr, u8 *buf, int len)
+{
+	scnprintf(buf, len, "%pM", addr);
+
+	return buf;
+}
+
+#define mac_to_str(addr, buf) __mac_to_str((addr), (buf), sizeof(buf))
+
+static int pfeng_uc_list_sync(struct net_device *netdev)
+{
+	struct pfeng_netif *netif = netdev_priv(netdev);
+	pfe_phy_if_t *phyif_emac = pfeng_netif_get_emac_phyif(netif);
+	struct netdev_hw_addr *ha;
+	errno_t ret;
+	u8 buf[18];
+
+	if (!phyif_emac)
+		return 0;
+
+	ret = pfe_phy_if_flush_mac_addrs(phyif_emac, MAC_DB_CRIT_BY_OWNER_AND_TYPE,
+					 PFE_TYPE_UC, netif->priv->local_drv_id);
+	if (ret != EOK) {
+		netdev_err(netdev, "failed to flush multicast MAC addresses\n");
+		return -ret;
+	}
+
+	ret = pfe_phy_if_add_mac_addr(phyif_emac, netdev->dev_addr,
+				      netif->priv->local_drv_id);
+	if (ret != EOK) {
+		netdev_err(netdev, "failed to add %s to %s: %d\n",
+			   mac_to_str(netdev->dev_addr, buf),
+			   pfe_phy_if_get_name(phyif_emac), ret);
+		return -ret;
+	}
+
+	netdev_for_each_uc_addr(ha, netdev) {
+		if (!is_unicast_ether_addr(ha->addr))
+			continue;
+
+		ret = pfe_phy_if_add_mac_addr(phyif_emac, ha->addr, netif->priv->local_drv_id);
+		if (ret != EOK)
+			netdev_warn(netdev, "failed to add %s to %s: %d\n",
+				    mac_to_str(ha->addr, buf), pfe_phy_if_get_name(phyif_emac), ret);
+	}
+
+	return -ret;
+}
+
 static int pfeng_netif_logif_open(struct net_device *netdev)
 {
 	struct pfeng_netif *netif = netdev_priv(netdev);
 	struct pfeng_hif_chnl *chnl;
 	int ret = 0, i;
 
+#ifdef PFE_CFG_PFE_MASTER
+	ret = pm_runtime_resume_and_get(netif->dev);
+	if (ret < 0)
+		return ret;
+#endif /* PFE_CFG_PFE_MASTER */
+
 #ifdef PFE_CFG_PFE_SLAVE
 	if (!netif->slave_netif_inited) {
 		netdev_err(netif->netdev, "SLAVE init transaction failed.\n");
@@ -57,6 +137,23 @@ static int pfeng_netif_logif_open(struct net_device *netdev)
 			netdev_err(netif->netdev, "Invalid HIF%u (not running)\n", i);
 			return -EINVAL;
 		}
+
+		if (!netif->cfg->tx_inject) {
+			/* PFENG_LOGIF_MODE_TX_CLASS mode requires logIf config */
+			if (!pfe_log_if_is_enabled(chnl->logif_hif)) {
+				ret = pfe_log_if_enable(chnl->logif_hif);
+				if (ret)
+					netdev_warn(netdev, "Cannot enable logif HIF%i: %d\n", i, ret);
+			} else
+				netdev_info(netdev, "Logif HIF%i already enabled\n", i);
+
+			if (!pfe_log_if_is_promisc(chnl->logif_hif)) {
+				ret = pfe_log_if_promisc_enable(chnl->logif_hif);
+				if (ret)
+					netdev_warn(netdev, "Cannot set promisc mode for logif HIF%i: %d\n", i, ret);
+			} else
+				netdev_dbg(netdev, "Logif HIF%i already in promisc mode\n", i);
+		}
 	}
 
 #ifdef PFE_CFG_PFE_MASTER
@@ -65,16 +162,21 @@ static int pfeng_netif_logif_open(struct net_device *netdev)
 		ret = pfeng_phylink_start(netif);
 		if (ret)
 			netdev_warn(netdev, "Error starting phylink: %d\n", ret);
-	}
+	} else
+		netif_carrier_on(netdev);
 #endif
 
 	/* Enable EMAC logif */
-	ret = pfe_log_if_enable(netif->priv->emac[netif->cfg->emac].logif_emac);
-	if (ret) {
-		netdev_err(netdev, "Cannot enable EMAC: %d\n", ret);
-		goto err_mac_ena;
+	if (pfeng_netif_get_emac(netif)) {
+		ret = pfe_log_if_enable(pfeng_netif_get_emac(netif)->logif_emac);
+		if (ret) {
+			netdev_err(netdev, "Cannot enable EMAC: %d\n", ret);
+			goto err_mac_ena;
+		}
 	}
 
+	pfeng_uc_list_sync(netdev);
+
 #ifdef PFE_CFG_PFE_SLAVE
 	netif_carrier_on(netdev);
 #endif
@@ -84,6 +186,9 @@ static int pfeng_netif_logif_open(struct net_device *netdev)
 	return ret;
 
 err_mac_ena:
+#ifdef PFE_CFG_PFE_MASTER
+	pm_runtime_put(netif->dev);
+#endif /* PFE_CFG_PFE_MASTER */
 	return ret;
 }
 
@@ -100,52 +205,6 @@ static struct pfeng_hif_chnl *pfeng_netif_map_tx_channel(struct pfeng_netif *net
 	return &netif->priv->hif_chnl[id - 1];
 }
 
-static int pfeng_netif_logif_txack(struct pfeng_hif_chnl *chnl, int limit)
-{
-	unsigned int done = 0;
-
-	while(pfe_hif_chnl_get_tx_conf(chnl->priv) == EOK) {
-
-#ifdef PFE_CFG_MULTI_INSTANCE_SUPPORT
-		/* Check for IHC packet first */
-		if (unlikely (pfeng_hif_chnl_txconf_get_flag(chnl) == PFENG_MAP_PKT_IHC)) {
-			pfe_hif_drv_client_t *client = &chnl->ihc_client;
-			/* IDEX confirmation must return IDEX API compatible data */
-			if (!pfe_hif_drv_ihc_put_conf(client)) {
-				/* Call IHC TX callback */
-				client->event_handler(client, client->priv, EVENT_TXDONE_IND, 0);
-			} else {
-				dev_err(chnl->dev, "TXconf IHC queuing failed.\n");
-			}
-		}
-#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
-
-		pfeng_hif_chnl_txconf_free_map_full(chnl);
-
-		done++;
-	}
-	return done;
-}
-
-static void pfeng_netif_tx_conf(struct work_struct *work)
-{
-	struct pfeng_netif *netif = container_of(work, struct pfeng_netif, tx_conf_work);
-	struct pfeng_hif_chnl *chnl;
-	int ring_len;
-
-	/* TODO: replace this with Tx NAPI! */
-	chnl = pfeng_netif_map_tx_channel(netif, NULL);
-	pfeng_netif_logif_txack(chnl, 0 /* no NAPI */);
-	ring_len = pfe_hif_chnl_get_tx_fifo_depth(chnl->priv);
-
-	if (pfe_hif_chnl_can_accept_tx_num(chnl->priv, ring_len >> 1)) {
-		/* only one queue per netdev used at this point */
-		netif_wake_subqueue(netif->netdev, 0);
-	} else {
-		schedule_work(&netif->tx_conf_work);
-	}
-}
-
 static netdev_tx_t pfeng_netif_logif_xmit(struct sk_buff *skb, struct net_device *netdev)
 {
 	struct pfeng_netif *netif = netdev_priv(netdev);
@@ -171,16 +230,7 @@ static netdev_tx_t pfeng_netif_logif_xmit(struct sk_buff *skb, struct net_device
 	}
 
 	/* Protect shared HIF channel resource */
-#ifndef PFE_CFG_MULTI_INSTANCE_SUPPORT
-	if (unlikely(chnl->cl_mode == PFENG_HIF_MODE_SHARED))
-#else
-	if (unlikely((chnl->cl_mode == PFENG_HIF_MODE_SHARED) || chnl->ihc))
-#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
-#ifdef LOCK_TX_SPINLOCK
-		spin_lock(&chnl->lock_tx);
-#else
-		mutex_lock(&chnl->lock_tx);
-#endif
+	pfeng_hif_shared_chnl_lock_tx(chnl);
 
 #ifdef PFE_CFG_HIF_TX_FIFO_FIX
 	if (unlikely(FALSE == pfe_hif_chnl_can_accept_tx_data(chnl->priv, skb_pagelen(skb) + PFENG_TX_PKT_HEADER_SIZE))) {
@@ -189,14 +239,10 @@ static netdev_tx_t pfeng_netif_logif_xmit(struct sk_buff *skb, struct net_device
 	}
 #endif /* PFE_CFG_HIF_TX_FIFO_FIX */
 
-	/* Cleanup Tx HIF channel ring(s) first */
-	pfeng_netif_logif_txack(chnl, 0 /* no NAPI */);
-
 	/* Check for ring space */
 	if (unlikely(!pfe_hif_chnl_can_accept_tx_num(chnl->priv, nfrags + 1))) {
 		netif_stop_subqueue(netdev, skb->queue_mapping);
-		/* TODO: replace this with Tx NAPI! */
-		schedule_work(&netif->tx_conf_work);
+		chnl->queues_stopped = true;
 		goto busy_drop;
 	}
 
@@ -227,13 +273,15 @@ static netdev_tx_t pfeng_netif_logif_xmit(struct sk_buff *skb, struct net_device
 	tx_hdr->queue = 0;
 #endif /* PFE_CFG_HIF_PRIO_CTRL */
 
-#ifdef PFE_CFG_ROUTE_HIF_TRAFFIC
-	/* Tag the frame with ID of target physical interface */
-	tx_hdr->cookie = oal_htonl(netif->cfg->emac);
-#else
-	tx_hdr->flags |= HIF_TX_INJECT;
-	tx_hdr->e_phy_ifs = oal_htonl(1U << netif->cfg->emac);
-#endif /* PFE_CFG_ROUTE_HIF_TRAFFIC */
+	/* Use correct TX mode */
+	if (likely(netif->cfg->tx_inject)) {
+		/* Set INJECT flag and bypass classifier */
+		tx_hdr->flags |= HIF_TX_INJECT;
+		tx_hdr->e_phy_ifs = oal_htonl(1U << netif->cfg->emac);
+	} else {
+		/* Tag the frame with ID of target physical interface */
+		tx_hdr->cookie = oal_htonl(netif->cfg->emac);
+	}
 
 	if (likely(netdev->features & NETIF_F_IP_CSUM))
 		tx_hdr->flags |= HIF_TX_IP_CSUM | HIF_TX_TCP_CSUM | HIF_TX_UDP_CSUM;
@@ -248,7 +296,7 @@ static netdev_tx_t pfeng_netif_logif_xmit(struct sk_buff *skb, struct net_device
 			/* Tell stack to wait for hw timestamp */
 			skb_shinfo(skb)->tx_flags |= SKBTX_IN_PROGRESS;
 
-			/* Tell HW to make timestamp  with our ref_num */
+			/* Tell HW to make timestamp with our ref_num */
 			tx_hdr->flags |= HIF_TX_ETS;
 			tx_hdr->refnum = htons(ref_num);
 		}
@@ -303,16 +351,7 @@ static netdev_tx_t pfeng_netif_logif_xmit(struct sk_buff *skb, struct net_device
 		pfeng_hif_chnl_txconf_put_map_frag(chnl, frag, des, plen, NULL, PFENG_MAP_PKT_NORMAL);
 	}
 
-#ifndef PFE_CFG_MULTI_INSTANCE_SUPPORT
-	if (unlikely(chnl->cl_mode == PFENG_HIF_MODE_SHARED))
-#else
-	if (unlikely((chnl->cl_mode == PFENG_HIF_MODE_SHARED) || chnl->ihc))
-#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
-#ifdef LOCK_TX_SPINLOCK
-		spin_unlock(&chnl->lock_tx);
-#else
-		mutex_unlock(&chnl->lock_tx);
-#endif
+	pfeng_hif_shared_chnl_unlock_tx(chnl);
 
 	netdev->stats.tx_packets++;
 	netdev->stats.tx_bytes += skb->len;
@@ -320,168 +359,25 @@ static netdev_tx_t pfeng_netif_logif_xmit(struct sk_buff *skb, struct net_device
 	return NETDEV_TX_OK;
 
 busy_drop:
-#ifndef PFE_CFG_MULTI_INSTANCE_SUPPORT
-	if (unlikely(chnl->cl_mode == PFENG_HIF_MODE_SHARED))
-#else
-	if (unlikely((chnl->cl_mode == PFENG_HIF_MODE_SHARED) || chnl->ihc))
-#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
-#ifdef LOCK_TX_SPINLOCK
-		spin_unlock(&chnl->lock_tx);
-#else
-		mutex_unlock(&chnl->lock_tx);
-#endif
+	pfeng_hif_shared_chnl_unlock_tx(chnl);
 
 	netdev->stats.tx_dropped++;
 	return NETDEV_TX_BUSY;
 
 }
 
-#ifdef PFE_CFG_MULTI_INSTANCE_SUPPORT
-
-static void dump_idex_rawpkt(const char *label, void *data, u32 dlen)
-{
-#if 0
-#ifdef PFE_CFG_PFE_MASTER
-	const char *mode = "MASTER";
-#else
-	const char *mode = "SLAVE";
-#endif
-	const uint32_t hdrsize = sizeof(pfe_ct_hif_rx_hdr_t);
-	//pfe_ct_phy_if_id_t i_phy_id = pfe_hif_pkt_get_ingress_phy_id(pkt);
-
-	printk("IDEX-%s: %s: %*ph\n", mode, label, hdrsize, data);
-	printk("IDEX-%s: %s: %*ph\n", mode, label, dlen - hdrsize, data + hdrsize);
-#endif
-}
-
-void pfeng_ihc_tx_work_handler(struct work_struct *work)
-{
-	struct pfeng_priv* priv = container_of(work, struct pfeng_priv, ihc_tx_work);
-	struct pfeng_hif_chnl *chnl = priv->ihc_chnl;
-	struct pfeng_ihc_tx ihc_tx = { 0 };
-	struct sk_buff *skb = NULL;
-	dma_addr_t des = 0;
-	int refid = -1, ret;
-
-	/* IHC transport requires protection */
-#ifdef LOCK_TX_SPINLOCK
-	spin_lock(&chnl->lock_tx);
-#else
-	mutex_lock(&chnl->lock_tx);
-#endif
-
-	if (!kfifo_get(&priv->ihc_tx_fifo, &ihc_tx)) {
-		dev_err(chnl->dev, "No IHC TX data!\n");
-		goto err;
-	}
-	skb = ihc_tx.skb;
-
-	/* Cleanup Tx HIF channel ring first */
-	pfeng_netif_logif_txack(chnl, 0 /* no NAPI */);
-
-	/* Remap skb */
-	des = dma_map_single(chnl->dev, skb->data, skb_headlen(skb), DMA_TO_DEVICE);
-	if (unlikely(dma_mapping_error(chnl->dev, des))) {
-		dev_err(chnl->dev, "No possible to map IHC frame, dropped.\n");
-		goto err;
-	}
-	refid = pfeng_hif_chnl_txconf_put_map_frag(chnl, skb->data, des, skb_headlen(skb), skb, PFENG_MAP_PKT_IHC);
-	/* Increment to be able to pass number 0 */
-	refid++;
-
-	ret = pfe_hif_chnl_tx(chnl->priv, (void *)des, skb->data, skb_headlen(skb), true);
-	if (unlikely(EOK != ret)) {
-		pfeng_hif_chnl_txconf_unroll_map_full(chnl, refid - 1, 0);
-		goto err;
-	}
-#ifdef LOCK_TX_SPINLOCK
-	spin_unlock(&chnl->lock_tx);
-#else
-	mutex_unlock(&chnl->lock_tx);
-#endif
-
-	return;
-
-err:
-#ifdef LOCK_TX_SPINLOCK
-	spin_unlock(&chnl->lock_tx);
-#else
-	mutex_unlock(&chnl->lock_tx);
-#endif
-	if(skb)
-		kfree_skb(skb);
-
-	return;
-}
-
-/**
- * @brief		Transmit IHC packet
- * @param[in]	client Client instance
- * @param[in]	dst Destination physical interface ID. Should by HIFs only.
- * @param[in]	queue TX queue number
- * @param[in]	idex_frame Pointer to the IHC packet with TX header
- * @return		EOK if success, error code otherwise.
- */
-errno_t pfe_hif_drv_client_xmit_ihc_pkt(pfe_hif_drv_client_t *client, pfe_ct_phy_if_id_t dst, uint32_t queue, void *idex_frame, uint32_t flen)
-{
-	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
-	struct pfeng_priv *priv = (struct pfeng_priv *)dev_get_drvdata(chnl->dev);
-	struct sk_buff *skb = NULL;
-	int ret, pktlen;
-	pfe_ct_hif_tx_hdr_t *tx_hdr;
-	struct pfeng_ihc_tx ihc_tx = { 0 };
-
-	/* Find minimal pkt size */
-	if ((PFENG_TX_PKT_HEADER_SIZE + flen) < 68)
-		pktlen = 68;
-	else
-		pktlen = PFENG_TX_PKT_HEADER_SIZE + flen;
-
-	/* Copy packet to skb to reuse txconf standard cleaning */
-	skb = alloc_skb(pktlen, GFP_ATOMIC);
-	if (!skb) {
-		oal_mm_free_contig(idex_frame);
-		return ENOMEM;
-	}
-
-	/* Set TX header */
-	tx_hdr = (pfe_ct_hif_tx_hdr_t *)skb->data;
-	memset(tx_hdr, 0, PFENG_TX_PKT_HEADER_SIZE);
-	tx_hdr->chid = chnl->idx;
-	tx_hdr->flags |= HIF_TX_IHC | HIF_TX_INJECT;
-	tx_hdr->e_phy_ifs = oal_htonl(1U << dst);
-	skb_put(skb, PFENG_TX_PKT_HEADER_SIZE);
-
-	/* Append IDEX frame */
-	skb_put_data(skb, idex_frame, flen);
-dump_idex_rawpkt("TX", skb->data, skb_headlen(skb));
-
-	/* Free original idex_frame */
-	oal_mm_free_contig(idex_frame);
-
-	ihc_tx.chnl = chnl;
-	ihc_tx.skb = skb;
-
-	/* Send data to worker */
-	ret = kfifo_put(&priv->ihc_tx_fifo, ihc_tx);
-	if (ret != 1) {
-		dev_err(chnl->dev, "IHC TX kfifo full\n");
-		kfree_skb(skb);
-		return -ENOMEM;
-	}
-
-	schedule_work(&priv->ihc_tx_work);
-
-	return 0;
-}
-#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
-
 static int pfeng_netif_logif_stop(struct net_device *netdev)
 {
 	struct pfeng_netif *netif = netdev_priv(netdev);
+	pfe_phy_if_t *phyif_emac = pfeng_netif_get_emac_phyif(netif);
 
-	if (!netif || !netif->cfg)
-		return 0;
+	if (phyif_emac) {
+		pfe_phy_if_flush_mac_addrs(phyif_emac, MAC_DB_CRIT_BY_OWNER_AND_TYPE,
+					   PFE_TYPE_MC, netif->priv->local_drv_id);
+
+		pfe_phy_if_flush_mac_addrs(phyif_emac, MAC_DB_CRIT_BY_OWNER_AND_TYPE,
+					   PFE_TYPE_UC, netif->priv->local_drv_id);
+	}
 
 #ifdef PFE_CFG_PFE_MASTER
 	/* Stop PHY */
@@ -491,6 +387,8 @@ static int pfeng_netif_logif_stop(struct net_device *netdev)
 
 	netif_tx_stop_all_queues(netdev);
 
+	pm_runtime_put(netif->dev);
+
 	return 0;
 }
 
@@ -529,264 +427,164 @@ static int pfeng_netif_logif_ioctl(struct net_device *netdev, struct ifreq *rq,
 	return ret;
 }
 
-static int pfeng_netif_logif_set_mac_address(struct net_device *netdev, void *p)
+static int pfeng_addr_sync(struct net_device *netdev, const u8 *addr)
 {
 	struct pfeng_netif *netif = netdev_priv(netdev);
-	struct pfeng_emac *emac = &netif->priv->emac[netif->cfg->emac];
-	struct sockaddr *addr = (struct sockaddr *)p;
-	int ret = 0;
+	pfe_phy_if_t *phyif_emac = pfeng_netif_get_emac_phyif(netif);
+	errno_t ret;
+	u8 buf[18];
 
-	if (is_valid_ether_addr(addr->sa_data)) {
-		ether_addr_copy(netdev->dev_addr, addr->sa_data);
-	} else {
-		netdev_warn(netdev, "No MAC address found, using random\n");
-		eth_hw_addr_random(netdev);
-	}
-
-	netdev_info(netdev, "setting MAC addr: %pM\n", netdev->dev_addr);
-
-	if (emac->logif_emac) {
-		ret = pfe_log_if_flush_mac_addrs(
-			emac->logif_emac,
-			MAC_DB_CRIT_BY_OWNER_AND_TYPE,
-			PFE_TYPE_UC,
-			netif->priv->local_drv_id);
+	ret = pfe_phy_if_add_mac_addr(phyif_emac, addr, netif->priv->local_drv_id);
+	if (ret != EOK)
+		netdev_warn(netdev, "failed to add %s to %s: %d\n",
+			    mac_to_str(addr, buf), pfe_phy_if_get_name(phyif_emac), ret);
 
-		if (ret) {
-			netdev_err(netdev, "Can't delete existing unicast MAC address, new address won't be added!\n");
-			return ret;
-		}
+	return -ret;
+}
 
-		ret = pfe_log_if_add_mac_addr(emac->logif_emac, netdev->dev_addr, netif->priv->local_drv_id);
-	}
-	if (!ret)
+static int pfeng_addr_mc_sync(struct net_device *netdev, const u8 *addr)
+{
+	if (!is_multicast_ether_addr(addr))
 		return 0;
 
-	return -ENOSPC;
+	return pfeng_addr_sync(netdev, addr);
 }
 
-#ifdef PFE_CFG_PFE_MASTER
-static char_t *mac_to_str(pfe_mac_addr_t addr)
+static int pfeng_addr_mc_unsync(struct net_device *netdev, const u8 *addr)
 {
-	static char_t buf[18];
+	struct pfeng_netif *netif = netdev_priv(netdev);
 
-	scnprintf(buf, sizeof(buf), "%pM", &addr[0]);
+	netif->mc_unsynced = true;
 
-	return buf;
+	return 0;
 }
 
-/**
- * @brief		Add new MAC addresses from list of requested addresses
- * @param[in]	netdev The pointer to the network device structure
- * @param[in]	iface The interface instance
- * @param[in]	req_list List of requested addresses
- * @retval		Execution status, EOK Success, error code otherwise
- */
-static int pfeng_netif_add_mac_addrs(struct net_device *netdev, pfe_log_if_t *iface, struct list_head *req_list)
+static int pfeng_addr_uc_sync(struct net_device *netdev, const u8 *addr)
 {
-	int ret = EOK;
-	struct list_head *item;
-	pfeng_netif_mac_db_list_entry_t *entry;
-	pfe_mac_addr_t addr;
-	pfe_ct_phy_if_id_t owner;
-
-	/* Iterate over list of requested addresses */
-	list_for_each(item, req_list) {
-		entry = list_entry(item, pfeng_netif_mac_db_list_entry_t, iterator);
-		(void)memcpy(addr, entry->addr, sizeof(pfe_mac_addr_t));
-		owner = entry->owner;
-
-		netdev_dbg(netdev, "Adding %s to %s\n",
-					mac_to_str(addr), pfe_log_if_get_name(iface));
-
-		/* Add address into interface active list */
-		ret = pfe_log_if_add_mac_addr(iface, addr, owner);
-		if((ret != EOK) && (ret != ENOEXEC)) {
-			netdev_warn(netdev, "unable to add %s into %s: %d\n",
-						mac_to_str(addr), pfe_log_if_get_name(iface), ret);
-			return ret;
-		}
-	}
+	if (!is_unicast_ether_addr(addr))
+		return 0;
 
-	return EOK;
+	return pfeng_addr_sync(netdev, addr);
 }
 
-/**
- * @brief		Delete unused MAC addresses based on comparison of requested list with
- * 				internal MAC database according to specified rules.
- * @param[in]	netdev The pointer to the network device structure
- * @param[in]	iface The interface instance
- * @param[in]	req_list List of requested addresses
- * @param[in]	mac_db MAC database instance
- * @retval		Execution status, EOK Success, error code otherwise
- */
-static int pfeng_netif_del_mac_addrs(struct net_device *netdev, pfe_log_if_t *iface, struct list_head *req_list, pfe_mac_db_t *mac_db)
+static int pfeng_addr_uc_unsync(struct net_device *netdev, const u8 *addr)
 {
-	int ret = EOK;
-	pfeng_netif_mac_db_list_entry_t *entry = NULL;
-	pfe_mac_addr_t addr_act;
-	struct list_head *item;
-	bool entry_found;
-
-	if((ret = pfe_mac_db_get_first_addr(mac_db, MAC_DB_CRIT_BY_TYPE, PFE_TYPE_MC, PFE_CFG_LOCAL_IF, addr_act)) != EOK)
-		netdev_dbg(netdev, "get first MAC address status: %d\n", ret);
-
-	while(ret == EOK) {
-		entry_found = false;
-
-		list_for_each(item, req_list) {
-			entry = list_entry(item, pfeng_netif_mac_db_list_entry_t, iterator);
-			if (!memcmp(addr_act, entry->addr, sizeof(pfe_mac_addr_t))) {
-				entry_found = true;
-				break;
-			}
-		}
-
-		if ((!entry_found) && (pfe_emac_is_multi(addr_act))) {
-			/* Del address from interface active list */
-			netdev_dbg(netdev, "Removing %s from %s\n",
-						mac_to_str(addr_act), pfe_log_if_get_name(iface));
-
-			ret = pfe_log_if_del_mac_addr(iface, addr_act);
-			if ((ret != EOK) && (ret != ENOENT)) {
-				netdev_warn(netdev, "unable to del %s from %s: %d\n",
-							mac_to_str(addr_act), pfe_log_if_get_name(iface), ret);
-				return ret;
-			}
-		}
+	struct pfeng_netif *netif = netdev_priv(netdev);
 
-		ret = pfe_mac_db_get_next_addr(mac_db, addr_act);
-	}
+	netif->uc_unsynced = true;
 
-	return EOK;
+	return 0;
 }
 
-/**
- * @brief		Add MAC address into the list of requested addresses
- * @param[in]	netdev The pointer to the network device structure
- * @param[in]	list Pointer to list of requested addresses
- * @param[in]	addr The MAC address to add
- * @param[in]	owner The identification of driver instance
- * @retval		EOK Success
- * @retval		ENOMEM Not enough memory
- */
-static int pfeng_netif_add_mac_to_request_list(struct net_device *netdev, struct list_head *list, pfe_mac_addr_t addr, pfe_drv_id_t owner)
+static int pfeng_mc_list_sync(struct net_device *netdev)
 {
-	int ret = EOK;
-	pfeng_netif_mac_db_list_entry_t *entry = NULL;
-	struct list_head *item;
-	bool is_present = false;
-
-	list_for_each(item, list) {
-		entry = list_entry(item, pfeng_netif_mac_db_list_entry_t, iterator);
-		if (!memcmp(addr, entry->addr, sizeof(pfe_mac_addr_t))) {
-			is_present = true;
-			break;
-		}
-	}
+	struct pfeng_netif *netif = netdev_priv(netdev);
+	pfe_phy_if_t *phyif_emac = pfeng_netif_get_emac_phyif(netif);
+	struct netdev_hw_addr *ha;
+	errno_t ret;
+	u8 buf[18];
 
-	if(!is_present) {
-		/* Add address to the list */
-		entry = kmalloc(sizeof(pfeng_netif_mac_db_list_entry_t), GFP_KERNEL);
-		if (!entry) {
-			netdev_err(netdev, "Memory allocation failed\n");
-			ret = ENOMEM;
-		} else {
-			(void)memcpy(entry->addr, addr, sizeof(pfe_mac_addr_t));
-			entry->owner = owner;
-			list_add_tail(&entry->iterator, list);
-		}
+	if (!phyif_emac)
+		return 0;
+
+	ret = pfe_phy_if_flush_mac_addrs(phyif_emac, MAC_DB_CRIT_BY_OWNER_AND_TYPE,
+					 PFE_TYPE_MC, netif->priv->local_drv_id);
+	if (ret != EOK) {
+		netdev_err(netdev, "failed to flush multicast MAC addresses\n");
+		return -ret;
 	}
 
-	return ret;
-}
+	netdev_for_each_mc_addr(ha, netdev) {
+		if (!is_multicast_ether_addr(ha->addr))
+			continue;
 
-/**
- * @brief		Destroy list of requested addresses and free memory
- * @param[in]	list requested list
- * @retval		EOK Success
- * @retval		ENOEXEC Command failed
- */
-static int pfeng_netif_destroy_mac_request_list(struct list_head *list)
-{
-	int ret = EOK;
-	struct list_head *item, *aux;
-	pfeng_netif_mac_db_list_entry_t *entry;
-
-	/* Destroy list of requested addresses and free memory */
-	list_for_each_safe(item, aux, list) {
-		entry = list_entry(item, pfeng_netif_mac_db_list_entry_t, iterator);
-		if (NULL != entry) {
-			list_del_init(&entry->iterator);
-			kfree(entry);
-			entry = NULL;
-		}
+		ret = pfe_phy_if_add_mac_addr(phyif_emac, ha->addr, netif->priv->local_drv_id);
+		if (ret != EOK)
+			netdev_warn(netdev, "failed to add %s to %s: %d\n",
+				    mac_to_str(ha->addr, buf), pfe_phy_if_get_name(phyif_emac), ret);
 	}
 
-	return ret;
+	return -ret;
 }
-#endif /* PFE_CFG_PFE_MASTER */
 
-static void pfeng_netif_logif_set_rx_mode(struct net_device *netdev)
+static void pfeng_netif_set_rx_mode(struct net_device *netdev)
 {
-#ifdef PFE_CFG_PFE_MASTER
 	struct pfeng_netif *netif = netdev_priv(netdev);
-	pfe_ct_phy_if_id_t hif_id = netif->priv->local_drv_id;
-	pfe_log_if_t *logif_emac = netif->priv->emac[netif->cfg->emac].logif_emac;
+	pfe_phy_if_t *phyif_emac = pfeng_netif_get_emac_phyif(netif);
+	bool uprom = false, mprom = false;
 
-	struct list_head req_mac_list; /* List of requested MAC addresses from stack to be written into HW */
-	pfe_mac_db_t *mac_db;
+	if (!phyif_emac)
+		return;
 
 	if (netdev->flags & IFF_PROMISC) {
 		/* Enable promiscuous mode */
-		if (pfe_log_if_promisc_enable(logif_emac) == EOK)
-			netdev_dbg(netdev, "promisc enabled\n");
+		if (pfe_phy_if_promisc_enable(phyif_emac) != EOK)
+			netdev_warn(netdev, "failed to enable promisc mode\n");
+
+		uprom = true;
+		mprom = true;
 	} else if (netdev->flags & IFF_ALLMULTI) {
-		if (pfe_log_if_allmulti_enable(logif_emac) == EOK)
-			netdev_dbg(netdev, "allmulti enabled\n");
-	} else if (netdev->flags & IFF_MULTICAST) {
-		struct netdev_hw_addr *ha;
-		INIT_LIST_HEAD(&req_mac_list);
-		/* Create list of requested MAC addresses to be written into HW */
-		netdev_for_each_mc_addr(ha, netdev) {
-			if (EOK != pfeng_netif_add_mac_to_request_list(netdev, &req_mac_list, ha->addr, hif_id)) {
-				pfeng_netif_destroy_mac_request_list(&req_mac_list);
-				return;
-			}
-		}
+		if (pfe_phy_if_allmulti_enable(phyif_emac) != EOK)
+			netdev_warn(netdev, "failed to enable promisc mode\n");
 
-		/* Check if request list is not empty */
-		if (!list_empty(&req_mac_list)) {
-			mac_db = pfe_log_if_get_mac_db(logif_emac);
-			if (!mac_db) {
-				netdev_warn(netdev, "no MAC database found\n");
-			} else {
-				/* Add new addresses from requested list */
-				if (EOK != pfeng_netif_add_mac_addrs(netdev, logif_emac, &req_mac_list)) {
-					pfeng_netif_destroy_mac_request_list(&req_mac_list);
-					return;
-				}
+		mprom = true;
+	}
 
-				/* Delete all addresses not present in requested list based on given criterion */
-				if (EOK != pfeng_netif_del_mac_addrs(netdev, logif_emac, &req_mac_list, mac_db)) {
-					pfeng_netif_destroy_mac_request_list(&req_mac_list);
-					return;
-				}
-			}
+	__dev_uc_sync(netdev, pfeng_addr_uc_sync, pfeng_addr_uc_unsync);
+	__dev_mc_sync(netdev, pfeng_addr_mc_sync, pfeng_addr_mc_unsync);
+
+	if (netif->uc_unsynced) {
+		pfeng_uc_list_sync(netdev);
+		netif->uc_unsynced = false;
+	}
+
+	if (netif->mc_unsynced) {
+		pfeng_mc_list_sync(netdev);
+		netif->mc_unsynced = false;
+	}
+
+	if (!mprom) {
+		if (pfe_phy_if_allmulti_disable(phyif_emac) != EOK)
+			netdev_warn(netdev, "failed to disable allmulti mode\n");
+	}
+
+	if (!uprom) {
+		if (pfe_phy_if_is_promisc(phyif_emac)) {
+			if (pfe_phy_if_promisc_disable(phyif_emac) != EOK)
+				netdev_warn(netdev, "failed to disable promisc mode\n");
 		}
+	}
 
-		/* Destroy requested list */
-		pfeng_netif_destroy_mac_request_list(&req_mac_list);
+	return;
+}
+
+static int pfeng_netif_set_mac_address(struct net_device *netdev, void *p)
+{
+	struct sockaddr *addr = (struct sockaddr *)p;
+
+	if (is_valid_ether_addr(addr->sa_data)) {
+		ether_addr_copy(netdev->dev_addr, addr->sa_data);
 	} else {
-		/* Disable promiscuous mode */
-		if (pfe_log_if_promisc_disable(logif_emac) == EOK)
-			netdev_dbg(netdev, "promisc disabled\n");
-		/* Disable allmulti mode */
-		if (pfe_log_if_allmulti_disable(logif_emac) == EOK)
-			netdev_dbg(netdev, "allmulti disabled\n");
+		netdev_warn(netdev, "No MAC address found, using random\n");
+		eth_hw_addr_random(netdev);
 	}
-#endif
-	return;
+
+	netdev_info(netdev, "setting MAC addr: %pM\n", netdev->dev_addr);
+
+	return pfeng_uc_list_sync(netdev);
+}
+
+static netdev_features_t pfeng_netif_fix_features(struct net_device *netdev, netdev_features_t features)
+{
+	struct pfeng_netif *netif = netdev_priv(netdev);
+
+	/* Don't enable hw checksumming for AUX interface */
+	if (netif->cfg->aux) {
+		features &= ~(NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM | NETIF_F_RXCSUM);
+		netdev_info(netdev, "checksum offload not possible for AUX interface\n");
+	}
+
+	return features;
 }
 
 static const struct net_device_ops pfeng_netdev_ops = {
@@ -795,8 +593,9 @@ static const struct net_device_ops pfeng_netdev_ops = {
 	.ndo_stop		= pfeng_netif_logif_stop,
 	.ndo_change_mtu		= pfeng_netif_logif_change_mtu,
 	.ndo_do_ioctl		= pfeng_netif_logif_ioctl,
-	.ndo_set_mac_address	= pfeng_netif_logif_set_mac_address,
-	.ndo_set_rx_mode	= pfeng_netif_logif_set_rx_mode,
+	.ndo_set_mac_address	= pfeng_netif_set_mac_address,
+	.ndo_set_rx_mode	= pfeng_netif_set_rx_mode,
+	.ndo_fix_features	= pfeng_netif_fix_features,
 };
 
 static void pfeng_netif_detach_hifs(struct pfeng_netif *netif)
@@ -809,6 +608,12 @@ static void pfeng_netif_detach_hifs(struct pfeng_netif *netif)
 		if (!(netif->cfg->hifmap & (1 << i)))
 			continue;
 
+		if (netif->cfg->aux) {
+			chnl->netifs[HIF_CLIENTS_AUX_IDX] = NULL;
+			netdev_info(netdev, "AUX unsubscribe from HIF%u\n", chnl->idx);
+			continue;
+		}
+
 		/* Unsubscribe from HIF channel */
 		if (chnl->netifs[netif->cfg->emac] != netif) {
 			netdev_err(netdev, "Unknown netif registered to HIF%u\n", i);
@@ -836,6 +641,12 @@ static int pfeng_netif_attach_hifs(struct pfeng_netif *netif)
 			goto err;
 		}
 
+		if (netif->cfg->aux) {
+			chnl->netifs[HIF_CLIENTS_AUX_IDX] = netif;
+			netdev_info(netdev, "AUX subscribe to HIF%u\n", chnl->idx);
+			continue;
+		}
+
 		/* Subscribe to HIF channel */
 		if (chnl->netifs[netif->cfg->emac]) {
 			netdev_err(netdev, "Unable to register to HIF%u\n", i);
@@ -843,7 +654,7 @@ static int pfeng_netif_attach_hifs(struct pfeng_netif *netif)
 			goto err;
 		}
 		chnl->netifs[netif->cfg->emac] = netif;
-		netdev_err(netdev, "Subscribe to HIF%u\n", chnl->idx);
+		netdev_info(netdev, "Subscribe to HIF%u\n", chnl->idx);
 	}
 	ret = 0;
 
@@ -853,7 +664,7 @@ err:
 
 static void pfeng_netif_logif_remove(struct pfeng_netif *netif)
 {
-	pfe_log_if_t *logif_emac = netif->priv->emac[netif->cfg->emac].logif_emac;
+	pfe_log_if_t *logif_emac;
 
 	if (!netif->netdev)
 		return;
@@ -870,6 +681,7 @@ static void pfeng_netif_logif_remove(struct pfeng_netif *netif)
 #endif /* PFE_CFG_PFE_MASTER */
 
 	/* Stop EMAC logif */
+	logif_emac = pfeng_netif_get_emac_logif(netif);
 	if (logif_emac) {
 		pfe_log_if_disable(logif_emac);
 		if (EOK != pfe_platform_unregister_log_if(netif->priv->pfe_platform, logif_emac))
@@ -904,7 +716,7 @@ static int pfeng_netif_control_platform_ifs(struct pfeng_netif *netif)
 {
 	struct net_device *netdev = netif->netdev;
 	struct pfeng_priv *priv = netif->priv;
-	struct pfeng_emac *emac = &priv->emac[netif->cfg->emac];
+	struct pfeng_emac *emac = pfeng_netif_get_emac(netif);
 	struct pfeng_hif_chnl *chnl;
 	int ret, i;
 
@@ -915,48 +727,56 @@ static int pfeng_netif_control_platform_ifs(struct pfeng_netif *netif)
 	}
 
 	/* Prefetch linked EMAC interfaces */
-	if (!emac->phyif_emac) {
-		emac->phyif_emac = pfe_platform_get_phy_if_by_id(priv->pfe_platform, netif->cfg->emac);
+	if (emac) {
 		if (!emac->phyif_emac) {
-			netdev_err(netdev, "Could not get linked EMAC physical interface\n");
-			goto err;
+			emac->phyif_emac = pfe_platform_get_phy_if_by_id(priv->pfe_platform, netif->cfg->emac);
+			if (!emac->phyif_emac) {
+				netdev_err(netdev, "Could not get linked EMAC physical interface\n");
+				goto err;
+			}
 		}
-	}
-	if (!emac->logif_emac) {
-		emac->logif_emac = pfe_log_if_create(emac->phyif_emac, (char *)netif->cfg->name);
 		if (!emac->logif_emac) {
-			netdev_err(netdev, "EMAC Logif can't be created: %s\n", netif->cfg->name);
-			goto err;
-		} else {
-			ret = pfe_platform_register_log_if(priv->pfe_platform, emac->logif_emac);
+			emac->logif_emac = pfe_log_if_create(emac->phyif_emac, (char *)netif->cfg->name);
+			if (!emac->logif_emac) {
+				netdev_err(netdev, "EMAC Logif can't be created: %s\n", netif->cfg->name);
+				goto err;
+			} else {
+				ret = pfe_platform_register_log_if(priv->pfe_platform, emac->logif_emac);
+				if (ret) {
+					netdev_err(netdev, "Can't register EMAC Logif\n");
+					goto err;
+				}
+			}
+			ret = pfe_log_if_promisc_enable(emac->logif_emac);
 			if (ret) {
-				netdev_err(netdev, "Can't register EMAC Logif\n");
+				netdev_err(netdev, "Can't set EMAC Logif promiscuous mode\n");
 				goto err;
 			}
-		}
-		netdev_dbg(netdev, "EMAC Logif created: %s @%px\n", netif->cfg->name, emac->logif_emac);
-	}
-	else
-		netdev_dbg(netdev, "EMAC Logif reused: %s @%px\n", netif->cfg->name, emac->logif_emac);
+			netdev_dbg(netdev, "EMAC Logif created: %s @%px\n", netif->cfg->name, emac->logif_emac);
+		} else
+			netdev_dbg(netdev, "EMAC Logif reused: %s @%px\n", netif->cfg->name, emac->logif_emac);
 
-	/* Make sure that EMAC ingress traffic will be forwarded to respective HIF channel */
-	i = ffs(netif->cfg->hifmap) - 1;
+		/* Make sure that EMAC ingress traffic will be forwarded to respective HIF channel */
+		i = ffs(netif->cfg->hifmap) - 1;
 #ifdef PFE_CFG_PFE_MASTER
-	if (netif->cfg->hifs > 1)
-		/* Loadbalansing requires routing to PFE_PHY_IF_ID_HIF */
-		ret = pfe_log_if_set_egress_ifs(emac->logif_emac, 1 << PFE_PHY_IF_ID_HIF);
-	else
-		ret = pfe_log_if_set_egress_ifs(emac->logif_emac, 1 << pfeng_hif_ids[i]);
+		if (netif->cfg->hifs > 1)
+			/* Loadbalansing requires routing to PFE_PHY_IF_ID_HIF */
+			ret = pfe_log_if_set_egress_ifs(emac->logif_emac, 1 << PFE_PHY_IF_ID_HIF);
+		else
+			ret = pfe_log_if_set_egress_ifs(emac->logif_emac, 1 << pfeng_hif_ids[i]);
 #else
-	ret = pfe_log_if_add_egress_if(emac->logif_emac, pfe_platform_get_phy_if_by_id(priv->pfe_platform, pfeng_hif_ids[i]));
+		ret = pfe_log_if_add_egress_if(emac->logif_emac, pfe_platform_get_phy_if_by_id(priv->pfe_platform, pfeng_hif_ids[i]));
 #endif /* PFE_CFG_PFE_MASTER */
-	if (EOK != ret) {
-		netdev_err(netdev, "Can't set EMAC egress interface\n");
-		goto err;
+		if (EOK != ret) {
+			netdev_err(netdev, "Can't set EMAC egress interface\n");
+			goto err;
+		}
 	}
 
 	/* Prefetch linked HIF(s) */
 	pfeng_netif_for_each_chnl(netif, i, chnl) {
+		char hifname[16];
+
 		if (!(netif->cfg->hifmap & (1 << i)))
 			continue;
 
@@ -988,10 +808,43 @@ static int pfeng_netif_control_platform_ifs(struct pfeng_netif *netif)
 			goto err;
 		}
 		netdev_info(netdev, "Enable HIF%u\n", i);
+
+		if (!chnl->logif_hif) {
+			scnprintf(hifname, sizeof(hifname) - 1, "%s-logif", pfe_phy_if_get_name(chnl->phyif_hif));
+			chnl->logif_hif = pfe_log_if_create(chnl->phyif_hif, hifname);
+			if (!chnl->logif_hif) {
+				netdev_err(netdev, "HIF Logif can't be created: %s\n", hifname);
+				goto err;
+			}
+
+			ret = pfe_platform_register_log_if(priv->pfe_platform, chnl->logif_hif);
+			if (ret) {
+				netdev_err(netdev, "Can't register HIF Logif\n");
+				goto err;
+			}
+			netdev_dbg(netdev, "HIF Logif created: %s @%px\n", hifname, chnl->logif_hif);
+		} else
+			netdev_dbg(netdev, "HIF Logif reused: %s @%px\n", hifname, chnl->logif_hif);
+
+		if (emac) {
+			if (!netif->cfg->tx_inject) {
+				/* Make sure that HIF ingress traffic will be forwarded to respective EMAC */
+#ifdef PFE_CFG_PFE_MASTER
+				ret = pfe_log_if_set_egress_ifs(chnl->logif_hif, 1 << pfeng_emac_ids[netif->cfg->emac]);
+#else
+				ret = pfe_log_if_add_egress_if(chnl->logif_hif, pfe_platform_get_phy_if_by_id(priv->pfe_platform, pfeng_emac_ids[netif->cfg->emac]));
+#endif
+				if (EOK != ret) {
+					netdev_err(netdev, "Can't set HIF egress interface\n");
+					goto err;
+				}
+			}
+		}
 	}
 
+#ifdef PFE_CFG_PFE_SLAVE
 	/* Add rule for local MAC */
-	if (!netif->cfg->tx_inject) {
+	if (netif->cfg->tx_inject && emac) {
 		/* Configure the logical interface to accept frames matching local MAC address */
 		ret = pfe_log_if_add_match_rule(emac->logif_emac, IF_MATCH_DMAC, (void *)netif->cfg->macaddr, 6U);
 		if (EOK != ret) {
@@ -999,15 +852,18 @@ static int pfeng_netif_control_platform_ifs(struct pfeng_netif *netif)
 			ret = -ret;
 			goto err;
 		}
-		/* Set parent physical interface to FlexibleRouter mode */
-		ret = pfe_phy_if_set_op_mode(emac->phyif_emac, IF_OP_FLEX_ROUTER);
-		if (EOK != ret) {
-			netdev_err(netdev, "Can't set flexrouter operation mode\n");
-			ret = -ret;
-			goto err;
+		if (netif->cfg->emac_router) {
+			/* Set parent physical interface to FlexibleRouter mode */
+			ret = pfe_phy_if_set_op_mode(emac->phyif_emac, IF_OP_FLEX_ROUTER);
+			if (EOK != ret) {
+				netdev_err(netdev, "Can't set flexrouter operation mode\n");
+				ret = -ret;
+				goto err;
+			}
 		}
 		netdev_info(netdev, "receive traffic matching its MAC address\n");
 	}
+#endif /* PFE_CFG_PFE_SLAVE */
 
 	return 0;
 
@@ -1031,7 +887,8 @@ static int pfeng_netif_logif_init_second_stage(struct pfeng_netif *netif)
 		memcpy(&saddr.sa_data, netif->cfg->macaddr, sizeof(saddr.sa_data));
 	else
 		memset(&saddr.sa_data, 0, sizeof(saddr.sa_data));
-	pfeng_netif_logif_set_mac_address(netdev, (void *)&saddr);
+
+	pfeng_netif_set_mac_address(netdev, (void *)&saddr);
 
 	/* Init hw timestamp */
 	ret = pfeng_hwts_init(netif);
@@ -1088,6 +945,7 @@ static struct pfeng_netif *pfeng_netif_logif_create(struct pfeng_priv *priv, str
 
 	/* Set the sysfs physical device reference for the network logical device */
 	SET_NETDEV_DEV(netdev, dev);
+	netdev->dev.of_node = netif_cfg->dn; /* required by of_find_net_device_by_node(), AAVB-3196 */
 
 	/* set ifconfig visible config */
 	netdev->mem_start = (unsigned long)priv->pfe_cfg->cbus_base;
@@ -1108,7 +966,7 @@ static struct pfeng_netif *pfeng_netif_logif_create(struct pfeng_priv *priv, str
 
 	/* MTU ranges */
 	netdev->min_mtu = ETH_MIN_MTU;
-	netdev->max_mtu = ETH_DATA_LEN;
+	netdev->max_mtu = ETH_DATA_LEN + VLAN_HLEN; /* account for 8021q DSA tag length, AAVB-3196 */
 
 	/* Each packet requires extra buffer for Tx header (metadata) */
 	netdev->needed_headroom = PFENG_TX_PKT_HEADER_SIZE;
@@ -1117,16 +975,18 @@ static struct pfeng_netif *pfeng_netif_logif_create(struct pfeng_priv *priv, str
 	pfeng_ethtool_init(netdev);
 
 	/* Add phylink */
-	if (priv->emac[netif_cfg->emac].intf_mode != PHY_INTERFACE_MODE_INTERNAL)
+	if (!netif_cfg->aux && priv->emac[netif_cfg->emac].intf_mode != PHY_INTERFACE_MODE_INTERNAL)
 		pfeng_phylink_create(netif);
 #endif
 
-	INIT_WORK(&netif->tx_conf_work, pfeng_netif_tx_conf);
-
 	/* Accelerated feature */
-	netdev->hw_features |= NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM | NETIF_F_RXCSUM;
+	if (!netif_cfg->aux) {
+		/* Chksumming can be enabled only if no AUX involved */
+		netdev->hw_features |= NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM | NETIF_F_RXCSUM;
+	}
 	netdev->hw_features |= NETIF_F_SG;
 	netdev->features = netdev->hw_features;
+	netdev->priv_flags |= IFF_UNICAST_FLT;
 
 	ret = register_netdev(netdev);
 	if (ret) {
@@ -1212,19 +1072,26 @@ int pfeng_netif_create(struct pfeng_priv *priv)
 
 static int pfeng_netif_logif_suspend(struct pfeng_netif *netif)
 {
-	struct pfeng_emac *emac = &netif->priv->emac[netif->cfg->emac];
+	struct pfeng_emac *emac = pfeng_netif_get_emac(netif);
 	struct pfeng_hif_chnl *chnl;
 	int i;
 
 #ifdef PFE_CFG_PFE_MASTER
-	pfeng_phylink_mac_change(netif, false);
+	if (emac)
+		pfeng_phylink_mac_change(netif, false);
 #endif /* PFE_CFG_PFE_MASTER */
 
 	netif_device_detach(netif->netdev);
 
 	rtnl_lock();
 
-	pfe_log_if_disable(emac->logif_emac);
+	if (emac) {
+		/* Save EMAC pause */
+		pfeng_ethtool_params_save(netif);
+
+		/* Disable EMAC */
+		pfe_log_if_disable(emac->logif_emac);
+	}
 
 #ifdef PFE_CFG_PFE_MASTER
 	/* Stop PHY */
@@ -1232,10 +1099,12 @@ static int pfeng_netif_logif_suspend(struct pfeng_netif *netif)
 		pfeng_phylink_stop(netif);
 
 	/* Stop RX/TX EMAC clocks */
-	if (emac->tx_clk)
-		clk_disable_unprepare(emac->tx_clk);
-	if (emac->rx_clk)
-		clk_disable_unprepare(emac->rx_clk);
+	if (emac) {
+		if (emac->tx_clk)
+			clk_disable_unprepare(emac->tx_clk);
+		if (emac->rx_clk)
+			clk_disable_unprepare(emac->rx_clk);
+	}
 #endif /* PFE_CFG_PFE_MASTER */
 
 	rtnl_unlock();
@@ -1249,12 +1118,20 @@ static int pfeng_netif_logif_suspend(struct pfeng_netif *netif)
 		/* Skip in case of IHC channel */
 		if (!chnl->ihc)
 #endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
+		{
 			chnl->phyif_hif = NULL;
+			if (chnl->logif_hif) {
+				pfe_log_if_disable(chnl->logif_hif);
+				chnl->logif_hif = NULL;
+			}
+		}
 	}
 
 	/* Reset linked EMAC IFs */
-	emac->phyif_emac = NULL;
-	emac->logif_emac = NULL;
+	if (emac) {
+		emac->phyif_emac = NULL;
+		emac->logif_emac = NULL;
+	}
 
 	return 0;
 }
@@ -1264,37 +1141,69 @@ static int pfeng_netif_logif_resume(struct pfeng_netif *netif)
 	struct pfeng_priv *priv = netif->priv;
 	__maybe_unused struct device *dev = &priv->pdev->dev;
 	struct net_device *netdev = netif->netdev;
-	struct pfeng_emac *emac = &netif->priv->emac[netif->cfg->emac];
+	struct pfeng_emac *emac = pfeng_netif_get_emac(netif);
 	struct pfeng_hif_chnl *chnl;
 	int ret, i;
 
 	rtnl_lock();
 
 #ifdef PFE_CFG_PFE_MASTER
+
 	/* Restart RX/TX EMAC clocks */
-	if (emac->tx_clk) {
-		ret = clk_prepare_enable(emac->tx_clk);
-		if (ret) {
-			dev_err(dev, "TX clocks restart on EMAC%d failed: %d\n", netif->cfg->emac, ret);
-			ret = 0;
-			devm_clk_put(dev, emac->tx_clk);
-			emac->tx_clk = NULL;
-		} else
-			dev_info(dev, "TX clocks on EMAC%d restarted\n", netif->cfg->emac);
-	}
-	if (emac->rx_clk) {
-		ret = clk_prepare_enable(emac->rx_clk);
-		if (ret) {
-			dev_err(dev, "RX clocks restart on EMAC%d failed: %d\n", netif->cfg->emac, ret);
-			ret = 0;
-			devm_clk_put(dev, emac->rx_clk);
-			emac->rx_clk = NULL;
-		} else
-			dev_info(dev, "RX clocks on EMAC%d restarted\n", netif->cfg->emac);
+
+	if (emac) {
+		u64 clk_rate;
+
+		/* retrieve max rate */
+		switch (emac->max_speed) {
+		case SPEED_10:
+			clk_rate = 2500000;
+			break;
+		case SPEED_100:
+			clk_rate = 25000000;
+			break;
+		case SPEED_1000:
+		default:
+			clk_rate = 125000000;
+			break;
+		}
+
+		if (emac->tx_clk) {
+			ret = clk_set_rate(emac->tx_clk, clk_rate);
+			if (ret)
+				dev_err(dev, "Failed to set TX clock on EMAC%d: %d\n", netif->cfg->emac, ret);
+			else {
+				ret = clk_prepare_enable(emac->tx_clk);
+				if (ret)
+					dev_err(dev, "TX clocks restart on EMAC%d failed: %d\n", netif->cfg->emac, ret);
+				else
+					dev_info(dev, "TX clocks on EMAC%d restarted\n", netif->cfg->emac);
+			}
+			if (ret) {
+				devm_clk_put(dev, emac->tx_clk);
+				emac->tx_clk = NULL;
+			}
+		}
+
+		if (emac->rx_clk) {
+			ret = clk_set_rate(emac->rx_clk, clk_rate);
+			if (ret)
+				dev_err(dev, "Failed to set RX clock on EMAC%d: %d\n", netif->cfg->emac, ret);
+			else {
+				ret = clk_prepare_enable(emac->rx_clk);
+				if (ret)
+					dev_err(dev, "RX clocks restart on EMAC%d failed: %d\n", netif->cfg->emac, ret);
+				else
+					dev_info(dev, "RX clocks on EMAC%d restarted\n", netif->cfg->emac);
+			}
+			if (ret) {
+				devm_clk_put(dev, emac->rx_clk);
+				emac->rx_clk = NULL;
+			}
+		}
 	}
 #endif /* PFE_CFG_PFE_MASTER */
 
-
 	ret = pfeng_netif_logif_init_second_stage(netif);
 
 	/* start HIF channel(s) */
@@ -1307,12 +1216,37 @@ static int pfeng_netif_logif_resume(struct pfeng_netif *netif)
 
 		if (chnl->status != PFENG_HIF_STATUS_RUNNING)
 			netdev_warn(netif->netdev, "HIF%u in invalid state: not running\n", i);
+
+		if (!netif->cfg->tx_inject) {
+			/* PFENG_LOGIF_MODE_TX_CLASS mode requires logIf config */
+			if (!pfe_log_if_is_enabled(chnl->logif_hif)) {
+				ret = pfe_log_if_enable(chnl->logif_hif);
+				if (ret)
+					netdev_warn(netdev, "Cannot enable logif HIF%i: %d\n", i, ret);
+			} else
+				netdev_info(netdev, "Logif HIF%i already enabled\n", i);
+
+			if (!pfe_log_if_is_promisc(chnl->logif_hif)) {
+				ret = pfe_log_if_promisc_enable(chnl->logif_hif);
+				if (ret)
+					netdev_warn(netdev, "Cannot set promisc mode for logif HIF%i: %d\n", i, ret);
+			} else
+				netdev_dbg(netdev, "Logif HIF%i already in promisc mode\n", i);
+		}
 	}
 
 	/* Enable EMAC logif */
-	ret = pfe_log_if_enable(emac->logif_emac);
-	if (ret)
-		netdev_warn(netdev, "Cannot enable EMAC: %d\n", ret);
+	if (emac) {
+		ret = pfe_log_if_enable(emac->logif_emac);
+		if (ret)
+			netdev_warn(netdev, "Cannot enable EMAC: %d\n", ret);
+
+		/* Restore RX mode: promisc & UC/MC addresses */
+		pfeng_netif_set_rx_mode(netdev);
+
+		/* Restore EMAC pause and coalesce */
+		pfeng_ethtool_params_restore(netif);
+	}
 
 #ifdef PFE_CFG_PFE_SLAVE
 	netif_carrier_on(netdev);
diff --git a/sw/linux-pfeng/pfeng-phylink.c b/sw/linux-pfeng/pfeng-phylink.c
index a6fd7af..3650782 100644
--- a/sw/linux-pfeng/pfeng-phylink.c
+++ b/sw/linux-pfeng/pfeng-phylink.c
@@ -238,7 +238,6 @@ static void pfeng_mac_an_restart(struct phylink_config *config)
 static int s32g_set_rgmii_speed(struct pfeng_netif *netif, unsigned int speed)
 {
 	struct clk *tx_clk = netif->priv->emac[netif->cfg->emac].tx_clk;
-	struct clk *rx_clk = netif->priv->emac[netif->cfg->emac].rx_clk;
 	unsigned long rate = 0;
 
 	switch (speed) {
@@ -261,9 +260,6 @@ static int s32g_set_rgmii_speed(struct pfeng_netif *netif, unsigned int speed)
 		netdev_info(netif->netdev, "Set TX clock to %luHz\n", rate);
 	}
 
-	if (rx_clk)
-		clk_set_rate(rx_clk, rate);
-
 	return 0;
 }
 
@@ -323,7 +319,7 @@ static void pfeng_mac_link_down(struct phylink_config *config, unsigned int mode
 	netif_tx_stop_all_queues(netif->netdev);
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,5,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,7,0)
 static void pfeng_mac_link_up(struct phylink_config *config,  struct phy_device *phy,
 			      unsigned int mode, phy_interface_t interface, int speed,
 			      int duplex, bool tx_pause, bool rx_pause)
@@ -333,7 +329,7 @@ static void pfeng_mac_link_up(struct phylink_config *config,  struct phy_device
 	/* Enable Rx and Tx */
 	netif_tx_wake_all_queues(netif->netdev);
 }
-#else	/* kernel 5.4 */
+#else
 static void pfeng_mac_link_up(struct phylink_config *config, unsigned int mode,
 			      phy_interface_t interface, struct phy_device *phy)
 {
diff --git a/sw/linux-pfeng/pfeng.h b/sw/linux-pfeng/pfeng.h
index cc69ec7..087cdaf 100644
--- a/sw/linux-pfeng/pfeng.h
+++ b/sw/linux-pfeng/pfeng.h
@@ -19,6 +19,7 @@
 #include <linux/phylink.h>
 #include <linux/kfifo.h>
 #include <linux/mutex.h>
+#include <linux/clk.h>
 #if !defined(PFENG_CFG_LINUX_NO_SERDES_SUPPORT)
 #include <linux/pcs/fsl-s32gen1-xpcs.h>
 #include <linux/phy/phy.h>
@@ -42,7 +43,7 @@
 #else
 #error Incorrect configuration!
 #endif
-#define PFENG_DRIVER_VERSION		"BETA 0.9.4"
+#define PFENG_DRIVER_VERSION		"BETA 0.9.5"
 
 #define PFENG_FW_CLASS_NAME		"s32g_pfe_class.fw"
 #define PFENG_FW_UTIL_NAME		"s32g_pfe_util.fw"
@@ -70,6 +71,15 @@ static const pfe_ct_phy_if_id_t pfeng_hif_ids[] = {
 #define PFENG_PFE_HIF_CHANNELS		(ARRAY_SIZE(pfeng_hif_ids))
 #define PFENG_PFE_EMACS			(ARRAY_SIZE(pfeng_emac_ids))
 
+/* LOGIF mode variants */
+enum {
+	PFENG_LOGIF_MODE_TX_INJECT,
+	PFENG_LOGIF_MODE_TX_CLASS,
+	PFENG_LOGIF_MODE_RESERVED_1,
+	PFENG_LOGIF_MODE_AUX
+};
+
+
 /* HIF channel mode variants */
 enum {
 	PFENG_HIF_MODE_EXCLUSIVE,
@@ -90,6 +100,8 @@ enum {
 
 #define PFENG_TX_PKT_HEADER_SIZE	(sizeof(pfe_ct_hif_tx_hdr_t))
 
+#define PFENG_INT_TIMER_DEFAULT		256 /* usecs */
+
 /* skbs waiting for time stamp */
 struct pfeng_ts_skb {
 	struct list_head		list;
@@ -114,6 +126,12 @@ struct pfeng_netif_cfg {
 	u8				hifs;
 	u32				hifmap;
 	bool				tx_inject;
+	bool				aux;
+	bool				pause_rx;
+	bool				pause_tx;
+#ifdef PFE_CFG_PFE_SLAVE
+	bool				emac_router;
+#endif /* PFE_CFG_PFE_SLAVE */
 };
 
 /* net interface private data */
@@ -130,8 +148,10 @@ struct pfeng_netif {
 	struct work_struct		ihc_slave_work;
 	bool				slave_netif_inited;
 #endif /* PFE_CFG_PFE_SLAVE */
+	/* if set, the multicast/ unicast MAC addr list needs to be sync'ed with the hw */
+	bool mc_unsynced;
+	bool uc_unsynced;
 
-	struct work_struct		tx_conf_work;
 	/* PTP/Time stamping*/
 	struct ptp_clock_info           ptp_ops;
 	struct ptp_clock                *ptp_clock;
@@ -166,16 +186,16 @@ struct pfeng_rx_chnl_pool;
 struct pfeng_tx_chnl_pool;
 struct pfeng_hif_chnl {
 	struct napi_struct		napi ____cacheline_aligned_in_smp;
-	struct mutex			lock_tx;
+	spinlock_t			lock_tx;
 	struct net_device		dummy_netdev;
 	struct device			*dev;
 	pfe_hif_chnl_t			*priv;
 	struct dentry			*dentry;
 	int				cl_mode;
 	bool				ihc;
+	bool				queues_stopped;
 	u8				status;
 	u8				idx;
-	u8				netif_q_idx;
 	u32				features;
 
 	struct pfeng_netif		*netifs[HIF_CLIENTS_MAX];
@@ -193,8 +213,23 @@ struct pfeng_hif_chnl {
 
 	pfe_phy_if_t			*phyif_hif;
 	pfe_log_if_t			*logif_hif;
+
+	u32				cfg_rx_max_coalesced_frames;
+	u32				cfg_rx_coalesce_usecs;
 };
 
+static inline void pfeng_hif_shared_chnl_lock_tx(struct pfeng_hif_chnl *chnl)
+{
+	if (unlikely((chnl->cl_mode == PFENG_HIF_MODE_SHARED) || chnl->ihc))
+		spin_lock(&chnl->lock_tx);
+}
+
+static inline void pfeng_hif_shared_chnl_unlock_tx(struct pfeng_hif_chnl *chnl)
+{
+	if (unlikely((chnl->cl_mode == PFENG_HIF_MODE_SHARED) || chnl->ihc))
+		spin_unlock(&chnl->lock_tx);
+}
+
 struct pfeng_emac {
 	struct clk			*tx_clk;
 	struct clk			*rx_clk;
@@ -221,11 +256,6 @@ struct pfeng_emac {
 	pfe_log_if_t			*logif_emac;
 };
 
-struct pfeng_ihc_tx {
-	struct pfeng_hif_chnl		*chnl;
-	struct sk_buff			*skb;
-};
-
 /* driver private data */
 struct pfeng_priv {
 	struct platform_device		*pdev;
@@ -248,7 +278,7 @@ struct pfeng_priv {
 	bool				ihc_enabled;
 	struct workqueue_struct		*ihc_tx_wq;
 	struct work_struct		ihc_tx_work;
-	DECLARE_KFIFO_PTR(ihc_tx_fifo, struct pfeng_ihc_tx);
+	DECLARE_KFIFO_PTR(ihc_tx_fifo, struct sk_buff *);
 #ifdef PFE_CFG_PFE_SLAVE
 	struct workqueue_struct		*ihc_slave_wq;
 #endif /* PFE_CFG_PFE_SLAVE */
@@ -283,9 +313,8 @@ int pfeng_hif_create(struct pfeng_priv *priv);
 void pfeng_hif_remove(struct pfeng_priv *priv);
 struct sk_buff *pfeng_hif_chnl_receive_pkt(struct pfeng_hif_chnl *chnl, uint32_t queue);
 int pfeng_hif_chnl_event_handler(pfe_hif_drv_client_t *client, void *data, uint32_t event, uint32_t qno);
-int pfe_hif_drv_ihc_put_pkt(pfe_hif_drv_client_t *client, void *data, uint32_t len, void *ref);
-int pfe_hif_drv_ihc_put_conf(pfe_hif_drv_client_t *client);
 int pfeng_hif_chnl_start(struct pfeng_hif_chnl *chnl);
+int pfeng_hif_chnl_set_coalesce(struct pfeng_hif_chnl *chnl, struct clk *clk_sys, u32 usecs, u32 frames);
 #ifdef PFE_CFG_MULTI_INSTANCE_SUPPORT
 void pfeng_ihc_tx_work_handler(struct work_struct *work);
 #endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
@@ -298,7 +327,7 @@ int pfeng_hif_chnl_txconf_put_map_frag(struct pfeng_hif_chnl *chnl, void *va_add
 u8 pfeng_hif_chnl_txconf_get_flag(struct pfeng_hif_chnl *chnl);
 struct sk_buff *pfeng_hif_chnl_txconf_get_skbuf(struct pfeng_hif_chnl *chnl);
 int pfeng_hif_chnl_txconf_unroll_map_full(struct pfeng_hif_chnl *chnl, u32 idx, u32 nfrags);
-int pfeng_hif_chnl_txconf_free_map_full(struct pfeng_hif_chnl *chnl);
+int pfeng_hif_chnl_txconf_free_map_full(struct pfeng_hif_chnl *chnl, int napi_budget);
 bool pfeng_hif_chnl_txconf_check(struct pfeng_hif_chnl *chnl, u32 elems);
 
 /* netif */
@@ -307,6 +336,8 @@ void pfeng_netif_remove(struct pfeng_priv *priv);
 int pfeng_netif_suspend(struct pfeng_priv *priv);
 int pfeng_netif_resume(struct pfeng_priv *priv);
 void pfeng_ethtool_init(struct net_device *netdev);
+int pfeng_ethtool_params_save(struct pfeng_netif *netif);
+int pfeng_ethtool_params_restore(struct pfeng_netif *netif);
 int pfeng_phylink_create(struct pfeng_netif *netif);
 int pfeng_phylink_connect_phy(struct pfeng_netif *netif);
 int pfeng_phylink_start(struct pfeng_netif *netif);
@@ -329,4 +360,16 @@ int pfeng_hwts_ioctl_set(struct pfeng_netif *netif, struct ifreq *rq);
 int pfeng_hwts_ioctl_get(struct pfeng_netif *netif, struct ifreq *rq);
 int pfeng_hwts_ethtool(struct pfeng_netif *netif, struct ethtool_ts_info *info);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,9,0)
+static inline int pm_runtime_resume_and_get(struct device *dev)
+{
+	int ret = pm_runtime_get_sync(dev);
+
+	if (ret < 0)
+		pm_runtime_put_noidle(dev);
+
+	return ret;
+}
+#endif
+
 #endif
diff --git a/sw/oal/public/oal_irq.h b/sw/oal/public/oal_irq.h
index a17b65b..77306ad 100644
--- a/sw/oal/public/oal_irq.h
+++ b/sw/oal/public/oal_irq.h
@@ -143,6 +143,8 @@ int32_t oal_irq_get_id(const oal_irq_t *irq);
  */
 errno_t oal_irq_get_flags(const oal_irq_t *irq, oal_irq_flags_t *flags);
 
+bool_t oal_irq_in_atomic(void);
+
 #endif /* OAL_IRQ_H_ */
 
 /** @}*/
diff --git a/sw/oal/public/oal_time.h b/sw/oal/public/oal_time.h
index 531d5a1..bd6e833 100644
--- a/sw/oal/public/oal_time.h
+++ b/sw/oal/public/oal_time.h
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2018-2020 NXP
+ *  Copyright 2018-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -36,6 +36,10 @@ void oal_time_usleep(uint32_t usec);
  * @brief		Suspend a thread for a given number of milliseconds
  * @param[in]	msec The number of milliseconds that you want the process to sleep for
  */
+void oal_time_msleep(uint32_t msec);
+
+void oal_time_udelay(uint32_t usec);
+
 void oal_time_mdelay(uint32_t msec);
 
 #endif /* PUBLIC_OAL_TIME_H_ */
diff --git a/sw/oal/public/oal_util_net.h b/sw/oal/public/oal_util_net.h
index d494bb5..95a4d93 100644
--- a/sw/oal/public/oal_util_net.h
+++ b/sw/oal/public/oal_util_net.h
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2019-2020 NXP
+ *  Copyright 2019-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -40,6 +40,13 @@
 #elif defined(PFE_CFG_TARGET_OS_LINUX)
 #include "oal_util_net_linux.h"
 
+/*
+ * AUTOSAR
+ *
+ */
+#elif defined(PFE_CFG_TARGET_OS_AUTOSAR)
+#include "oal_util_net_autosar.h"
+
 /*
  * unknown OS
  *
diff --git a/sw/oal/src/oal_irq_linux.c b/sw/oal/src/oal_irq_linux.c
index 8cea01c..442ae94 100644
--- a/sw/oal/src/oal_irq_linux.c
+++ b/sw/oal/src/oal_irq_linux.c
@@ -354,4 +354,9 @@ errno_t oal_irq_get_flags(const oal_irq_t *irq, oal_irq_flags_t *flags)
 	return EOK;
 }
 
+bool_t oal_irq_in_atomic()
+{
+	return in_atomic();
+}
+
 /** @}*/
diff --git a/sw/oal/src/oal_mbox_linux.c b/sw/oal/src/oal_mbox_linux.c
index aa2ca25..10d4ce3 100644
--- a/sw/oal/src/oal_mbox_linux.c
+++ b/sw/oal/src/oal_mbox_linux.c
@@ -29,12 +29,6 @@
 #include "oal_mbox.h"
 #include "fifo.h"
 
-/**
- * @brief	Maximum number of IRQs to be attached to a single mbox
- * @see		oal_mbox_attach_irq()
- */
-#define OAL_MBOX_MAX_IRQS 5
-
 /**
  * @brief	Maximum number of timers to be attached to a single mbox
  * @see		oal_mbox_attach_timer()
@@ -81,14 +75,6 @@ struct oal_mbox_tag
 		fifo_t *fifo;					/* BH code cache */
 	} intr;
 
-	struct
-	{
-		bool_t used;		/* If true then entry is used */
-		oal_irq_t *irq;			/* The IRQ instance */
-		int32_t code;			/* Message code associated with IRQ */
-		oal_irq_isr_handle_t h;	/* IRQ handle */
-	} irqs[OAL_MBOX_MAX_IRQS];
-
 	struct
 	{
 		bool_t used;		/* If true then entry is used */
@@ -257,150 +243,6 @@ errno_t oal_mbox_send_signal(oal_mbox_t *mbox, int32_t code)
 	return EOK;
 }
 
-static bool_t mbox_irq_handler(void *data)
-{
-	oal_mbox_t *mbox = (oal_mbox_t *)data;
-	int32_t ii;
-	bool_t ret = FALSE;
-
-#if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely(NULL == mbox))
-	{
-		NXP_LOG_ERROR("NULL argument received\n");
-		return;
-	}
-#endif /* PFE_CFG_NULL_ARG_CHECK */
-
-	for (ii=0; ii<OAL_MBOX_MAX_IRQS; ii++)
-	{
-		if (TRUE == mbox->irqs[ii].used)
-		{
-			oal_mbox_send_signal(mbox, mbox->irqs[ii].code);
-			ret = TRUE;
-		}
-	}
-
-	return ret;
-}
-
-/*
-	Attach IRQ to the mbox.
-	Once the IRQ is triggered a non-blocking message is sent to the mbox automatically.
- */
-errno_t oal_mbox_attach_irq(oal_mbox_t *mbox, oal_irq_t *irq, int32_t code)
-{
-	int32_t id, ii;
-
-#if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely((NULL == mbox) || (NULL == irq)))
-	{
-		NXP_LOG_ERROR("NULL argument received\n");
-		return EINVAL;
-	}
-#endif /* PFE_CFG_NULL_ARG_CHECK */
-
-	/*	Get IRQ ID */
-	id = oal_irq_get_id(irq);
-	if (-1 == id)
-	{
-		NXP_LOG_ERROR("Couldn't get IRQ vector\n");
-		return ENODEV;
-	}
-
-	if(mutex_lock_interruptible(&mbox->lock))
-	{
-		return EAGAIN;
-	}
-
-	/*	Find free slot in IRQ storage */
-	for (ii=0; ii<OAL_MBOX_MAX_IRQS; ii++)
-	{
-		if (FALSE == mbox->irqs[ii].used)
-		{
-			break;
-		}
-	}
-
-	if (ii >= OAL_MBOX_MAX_IRQS)
-	{
-		NXP_LOG_ERROR("No space for new IRQ\n");
-		mutex_unlock(&mbox->lock);
-		return ENOSPC;
-	}
-
-	mbox->irqs[ii].used = TRUE;
-
-	mbox->irqs[ii].code = code;
-	mbox->irqs[ii].irq = irq;
-
-	if(oal_irq_add_handler(irq, mbox_irq_handler, (void *)mbox, &mbox->irqs[ii].h))
-	{
-		NXP_LOG_ERROR("Couldn't add IRQ handler\n");
-		mbox->irqs[ii].used = FALSE;
-		mutex_unlock(&mbox->lock);
-		return ENODEV;
-	}
-	NXP_LOG_INFO("Attach IRQ %d [code:%d] succeeded\n", id, code);
-
-	mutex_unlock(&mbox->lock);
-
-	return EOK;
-}
-
-/*
-	Detach IRQ from mbox.
- */
-errno_t oal_mbox_detach_irq(oal_mbox_t *mbox, oal_irq_t *irq)
-{
-	int32_t ii;
-	errno_t err;
-
-#if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely((NULL == mbox) || (NULL == irq)))
-	{
-		NXP_LOG_ERROR("NULL argument received\n");
-		return EINVAL;
-	}
-#endif /* PFE_CFG_NULL_ARG_CHECK */
-
-	if(mutex_lock_interruptible(&mbox->lock))
-	{
-		return EAGAIN;
-	}
-
-	/*	Find the slot in IRQ storage */
-	for (ii=0; ii<OAL_MBOX_MAX_IRQS; ii++)
-	{
-		if ((mbox->irqs[ii].irq == irq) && (TRUE == mbox->irqs[ii].used))
-		{
-			break;
-		}
-	}
-
-	if (ii >= OAL_MBOX_MAX_IRQS)
-	{
-		NXP_LOG_WARNING("IRQ not found\n");
-		mutex_unlock(&mbox->lock);
-		return ENOENT;
-	}
-
-	err = oal_irq_del_handler(irq, mbox->irqs[ii].h);
-	if (unlikely(EOK != err))
-	{
-		NXP_LOG_ERROR("Irq handler unlink failed: %d\n", err);
-		mutex_unlock(&mbox->lock);
-		return EINVAL;
-	}
-
-	mbox->irqs[ii].used = FALSE;
-	mbox->irqs[ii].irq = NULL;
-	mbox->irqs[ii].h = 0;
-
-	mutex_unlock(&mbox->lock);
-
-	return EOK;
-}
-
 static void mbox_timer_handler(struct timer_list *t)
 {
 	oal_mbox_t *mbox = from_timer(mbox, t, timer.timer);
@@ -527,7 +369,6 @@ errno_t oal_mbox_receive(oal_mbox_t *mbox, oal_mbox_msg_t *msg)
 oal_mbox_t * oal_mbox_create(void)
 {
 	oal_mbox_t *mbox;
-	int ii;
 
 	/*  Allocate new mbox */
 	mbox = oal_mm_malloc(sizeof(oal_mbox_t));
@@ -547,15 +388,6 @@ oal_mbox_t * oal_mbox_create(void)
 		goto err_fifo;
 	}
 
-	/*	Initialize IRQ storage */
-	for (ii=0; ii<OAL_MBOX_MAX_IRQS; ii++)
-	{
-		mbox->irqs[ii].used = FALSE;
-	}
-
-	/*	Initialize timers storage (not needed) */
-	;
-
 	mbox->id = atomic_inc_return(&mbox_cnt);
 	mbox->intr.queue = alloc_ordered_workqueue("pfe_mbox_intr/%i", WQ_MEM_RECLAIM | WQ_HIGHPRI, mbox->id);
 	if(NULL == mbox->intr.queue)
@@ -587,8 +419,6 @@ err_fifo:
 
 void oal_mbox_destroy(oal_mbox_t *mbox)
 {
-	int ii;
-
 	if (NULL == mbox)
 	{
 		return;
@@ -603,15 +433,6 @@ void oal_mbox_destroy(oal_mbox_t *mbox)
 		(void)oal_mbox_detach_timer(mbox);
 	}
 
-	/*	Detach all IRQs */
-	for (ii=0; ii<OAL_MBOX_MAX_IRQS; ii++)
-	{
-		if (TRUE == mbox->irqs[ii].used)
-		{
-			(void)oal_mbox_detach_irq(mbox, mbox->irqs[ii].irq);
-		}
-	}
-
 	if(mutex_lock_interruptible(&mbox->lock))
 	{
 		NXP_LOG_ERROR("mbox locking failed\n");
diff --git a/sw/oal/src/oal_time_linux.c b/sw/oal/src/oal_time_linux.c
index a60999e..fa22d9f 100644
--- a/sw/oal/src/oal_time_linux.c
+++ b/sw/oal/src/oal_time_linux.c
@@ -1,5 +1,5 @@
 /* =========================================================================
- *  Copyright 2018-2020 NXP
+ *  Copyright 2018-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -37,9 +37,19 @@ void oal_time_usleep(uint32_t usec)
 		(void)msleep_interruptible(usec / MSEC);
 }
 
-void oal_time_mdelay(uint32_t msec)
+void oal_time_msleep(uint32_t msec)
 {
 	oal_time_usleep(msec * MSEC);
 }
 
+void oal_time_udelay(uint32_t usec)
+{
+	udelay(usec);
+}
+
+void oal_time_mdelay(uint32_t msec)
+{
+	mdelay(msec);
+}
+
 /** @}*/
diff --git a/sw/pfe_hif_drv/Makefile b/sw/pfe_hif_drv/Makefile
deleted file mode 100644
index 39d0218..0000000
--- a/sw/pfe_hif_drv/Makefile
+++ /dev/null
@@ -1,135 +0,0 @@
-# =========================================================================
-#  Copyright 2018-2021 NXP
-#
-#  SPDX-License-Identifier: GPL-2.0
-#
-# =========================================================================
-
-ifndef KERNELRELEASE
-include ../build_env.mak
-endif
-
-ifeq ($(TARGET_OS),LINUX)
-  ARTIFACT = pfe_hif_drv.o
-else
-  ARTIFACT = pfe_hif_drv.a
-endif
-
-TARGET = $(OUTPUT_DIR)/$(ARTIFACT)
-
-#User defined include/preprocessor flags and libraries
-INCLUDES += -I$(INC_PREFIX)src \
-			-I$(INC_PREFIX)public \
-			-I$(INC_PREFIX)../common/public \
-			-I$(INC_PREFIX)../bpool/public \
-			-I$(INC_PREFIX)../pfe_platform/public \
-			-I$(INC_PREFIX)../oal/public \
-			-I$(INC_PREFIX)../oal/public/$(shell echo $(TARGET_OS) | tr [A-Z] [a-z]) \
-			-I$(INC_PREFIX)../hal/public \
-			-I$(INC_PREFIX)../fifo/public \
-			-I$(INC_PREFIX)..
-
-ifeq ($(TARGET_OS),LINUX)
-INCLUDES += -I$(INC_PREFIX)../linux-pfeng
-endif
-
-#Dependencies
-DEPENDENCIES = $(subst -L,,$(subst $(EMPTY) $(EMPTY)-l:,/,$(LIBS)))
-
-#Compiler flags for build profiles
-CCFLAGS_release += -O3
-CCFLAGS_debug += -g -O0 -fno-builtin
-CCFLAGS_coverage += -g -O0 -ftest-coverage -fprofile-arcs -nopipe -Wc,-auxbase-strip,$@
-LDFLAGS_coverage += -ftest-coverage -fprofile-arcs
-CCFLAGS_profile += -g -O0 -finstrument-functions
-LIBS_profile += -lprofilingS
-
-CCFLAGS_pfe += -D$(PFE_CFG_TARGET_ARCH_DEF) -D$(PFE_CFG_TARGET_OS_DEF) -D$(PFE_CFG_BUILD_PROFILE_DEF)
-
-#Generic compiler flags (which include build type flags)
-CCFLAGS_all += -Wall -fmessage-length=0 -fvisibility=hidden
-CCFLAGS_all += $(CCFLAGS_$(BUILD_PROFILE))
-CCFLAGS_all += $(CCFLAGS_pfe)
-#Shared library has to be compiled with -fPIC
-#CCFLAGS_all += -fPIC
-LDFLAGS_all += $(LDFLAGS_$(BUILD_PROFILE))
-LIBS_all += $(LIBS_$(BUILD_PROFILE))
-DEPS = -Wp,-MMD,$(@:%.o=%.d),-MT,$@
-
-#Macro to expand files recursively: parameters $1 -  directory, $2 - extension, i.e. cpp
-rwildcard = $(wildcard $(addprefix $1/*.,$2)) $(foreach d,$(wildcard $1/*),$(call rwildcard,$d,$2))
-
-#Source list
-ifeq ($(PFE_CFG_MC_HIF),1)
-  SRCS=src/pfe_hif_drv.c
-else
-  ifeq ($(PFE_CFG_SC_HIF),1)
-    SRCS=src/pfe_hif_drv_sc.c
-  else
-    $(error No HIF driver variant selected)
-  endif
-endif
-
-ifneq ($(PFE_CFG_IEEE1588_SUPPORT),0)
-  SRCS+=src/pfe_hif_ptp.c
-endif
-
-#Object files list
-OBJS = $(addprefix $(OUTPUT_DIR)/,$(addsuffix .o, $(basename $(SRCS))))
-
-#Rules section for default compilation and linking
-all: $(TARGET)
-
-#Deps building rule
-.PHONY: $(DEPENDENCIES)
-$(DEPENDENCIES):
-	@make --no-print-directory -C $(subst build/$(PLATFORM)-$(BUILD_PROFILE),,$(dir $@))
-
-#Compiling rule
-$(OUTPUT_DIR)/%.o: %.c
-	@mkdir -p $(dir $@)
-	$(CC) -c $(DEPS) -o $@ $(INCLUDES) $(CCFLAGS_all) $(CCFLAGS) $(GLOBAL_CCFLAGS) $<
-
-#Linking rule
-EMPTY = 
-$(TARGET):$(OBJS) $(subst -L,,$(subst $(EMPTY) $(EMPTY)-l:,/,$(LIBS)))
-	$(LD) -static -a $(TARGET) $(LDFLAGS_all) $(LDFLAGS) $(OBJS) $(LIBS_all) $(LIBS)
-
-.PHONY clean:
-clean: $(addsuffix .clean,$(DEPENDENCIES))
-	rm -fr $(OUTPUT_DIR)
-
-#Deps cleaning rule
-%.clean:
-	make --no-print-directory -C $(subst build/$(PLATFORM)-$(BUILD_PROFILE),,$(dir $@)) clean
-
-rebuild: clean all
-
-#Inclusion of dependencies (object files to source and includes)
--include $(OBJS:%.o=%.d)
-
-#
-# Linux build
-
-ccflags-y += $(INCLUDES)
-ccflags-y += -Wno-date-time
-ifneq ($(PFE_CFG_LINUX_TRACE),0)
-ccflags-y += -Og
-endif
-ccflags-y += $(CCFLAGS_pfe)
-ccflags-y += $(GLOBAL_CCFLAGS)
-
-pfe_hif_drv-y := src/pfe_hif_drv_linux.o
-
-ifneq ($(PFE_CFG_IEEE1588_SUPPORT),0)
-    pfe_hif_drv-y += src/pfe_hif_ptp.o
-endif
-
-obj-m += pfe_hif_drv.o
-
-linux:
-	make CROSS_COMPILE=$(PLATFORM)-  ARCH=$(ARCH) -C $(KERNELDIR) M=`pwd` GLOBAL_CCFLAGS="$(GLOBAL_CCFLAGS)" modules
-
-linux-clean:
-	make CROSS_COMPILE=$(PLATFORM)-  ARCH=$(ARCH) -C $(KERNELDIR) M=`pwd` clean
-
diff --git a/sw/pfe_hif_drv/public/pfe_hif_drv.h b/sw/pfe_hif_drv/public/pfe_hif_drv.h
index 991da99..de5cbf5 100644
--- a/sw/pfe_hif_drv/public/pfe_hif_drv.h
+++ b/sw/pfe_hif_drv/public/pfe_hif_drv.h
@@ -250,9 +250,6 @@ void pfe_hif_drv_show_ring_status(pfe_hif_drv_t *hif_drv, bool_t rx, bool_t tx);
 /*	IHC API */
 #ifdef PFE_CFG_MULTI_INSTANCE_SUPPORT
 pfe_hif_drv_client_t * pfe_hif_drv_ihc_client_register(pfe_hif_drv_t *hif_drv, pfe_hif_drv_client_event_handler handler, void *priv);
-#ifdef PFE_CFG_TARGET_OS_LINUX
-errno_t pfe_hif_drv_client_xmit_ihc_pkt(pfe_hif_drv_client_t *client, pfe_ct_phy_if_id_t dst, uint32_t queue, void *idex_frame, uint32_t plen);
-#endif
 #endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
 
 /*	AUX API */
@@ -284,8 +281,8 @@ void pfe_hif_pkt_free(const pfe_hif_pkt_t *pkt);
 #endif /* PFE_HIF_CHNL_CFG_RX_BUFFERS_ENABLED */
 
 /*	PTP Timestamps */
-errno_t pfe_hif_drv_client_get_ts(const pfe_hif_drv_client_t *client, bool_t rx,
-		uint8_t type, uint16_t port, uint16_t seq_id, const uint32_t *ts_sec, const uint32_t *ts_nsec);
+errno_t pfe_hif_drv_client_get_ts(pfe_hif_drv_client_t * const client, bool_t rx,
+		uint8_t type, uint16_t port, uint16_t seq_id, uint32_t * const ts_sec, uint32_t * const ts_nsec);
 
 /**
  * @brief		Get information if packet is last in frame
diff --git a/sw/pfe_hif_drv/public/pfe_hif_ptp.h b/sw/pfe_hif_drv/public/pfe_hif_ptp.h
deleted file mode 100644
index 775007b..0000000
--- a/sw/pfe_hif_drv/public/pfe_hif_ptp.h
+++ /dev/null
@@ -1,36 +0,0 @@
-/* =========================================================================
- *  
- *  Copyright (c) 2019 Imagination Technologies Limited
- *  Copyright 2020-2021 NXP
- *
- *  SPDX-License-Identifier: GPL-2.0
- *
- * ========================================================================= */
-
-#ifndef PUBLIC_PFE_HIF_PTP_H_
-#define PUBLIC_PFE_HIF_PTP_H_
-
-#include "linked_list.h"
-
-typedef struct
-{
-	oal_mutex_t *lock;
-	LLIST_t entries;
-	oal_thread_t *worker;
-	oal_mbox_t *mbox;
-	uint8_t count;
-	bool_t reported;
-} pfe_hif_ptp_ts_db_t;
-
-errno_t pfe_hif_ptp_ts_db_init(pfe_hif_ptp_ts_db_t *db);
-void pfe_hif_ptp_ts_db_fini(pfe_hif_ptp_ts_db_t *db);
-errno_t pfe_hif_ptp_ts_db_push_msg(pfe_hif_ptp_ts_db_t *db, bool_t rx,
-		uint16_t refnum, uint8_t type, uint16_t port, uint16_t seq_id);
-errno_t pfe_hif_ptp_ts_db_push_ts(pfe_hif_ptp_ts_db_t *db,
-		uint16_t refnum, uint32_t ts_sec, uint32_t ts_nsec);
-errno_t pfe_hif_ptp_ts_db_pop(pfe_hif_ptp_ts_db_t *db,
-		uint8_t type, uint16_t port, uint16_t seq_id,
-			uint32_t *ts_sec, uint32_t *ts_nsec, bool_t rx);
-
-
-#endif /* PUBLIC_PFE_HIF_PTP_H_ */
diff --git a/sw/pfe_hif_drv/src/pfe_hif_drv_linux.c b/sw/pfe_hif_drv/src/pfe_hif_drv_linux.c
deleted file mode 100644
index 403c46f..0000000
--- a/sw/pfe_hif_drv/src/pfe_hif_drv_linux.c
+++ /dev/null
@@ -1,228 +0,0 @@
-/* =========================================================================
- *  
- *  Copyright (c) 2019 Imagination Technologies Limited
- *  Copyright 2018-2021 NXP
- *
- *  SPDX-License-Identifier: GPL-2.0
- *
- * ========================================================================= */
-
-/**
- * @addtogroup  dxgr_PFE_HIF_DRV
- * @{
- *
- * @file		pfe_hif_drv.c
- * @brief		The single-client HIF driver source file.
- * @details		HIF driver supporting only single client to optimize performance (no RX traffic
- * 				dispatching, no TX resource locking, no internal detached jobs).
- */
-
-#include "pfe_cfg.h"
-#include "oal.h"
-#include "hal.h"
-#include "fifo.h"
-#include "pfe_hif.h"
-#include "pfe_hif_drv.h"
-#include "pfe_platform_cfg.h"
-
-#include "pfeng.h"
-
-#include <linux/skbuff.h>
-
-/* We need pfe_hif_drv API compatibility only for IHC/IDEX */
-
-#ifdef PFE_CFG_MULTI_INSTANCE_SUPPORT
-
-typedef struct pfe_hif_pkt_tag pfe_hif_tx_meta_t;
-typedef struct pfe_hif_pkt_tag pfe_hif_rx_meta_t;
-
-/* structs pfe_hif_drv_tag and pfe_hif_drv_client_tag are declared in pfeng.h */
-
-void pfe_hif_drv_client_unregister(pfe_hif_drv_client_t *client)
-{
-	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
-
-	/*	Release IHC fifo */
-	if (client->ihc_rx_fifo) {
-		u32 fill_level;
-		errno_t err = fifo_get_fill_level(client->ihc_rx_fifo, &fill_level);
-
-		if (unlikely(EOK != err)) {
-			dev_info(chnl->dev, "Unable to get IHC fifo fill level: %d\n", err);
-		} else if (fill_level) {
-			dev_info(chnl->dev, "IHC Queue is not empty\n");
-		}
-
-		fifo_destroy(client->ihc_rx_fifo);
-		client->ihc_rx_fifo = NULL;
-	}
-
-	if (client->ihc_txconf_fifo) {
-		u32 fill_level;
-		errno_t err = fifo_get_fill_level(client->ihc_txconf_fifo, &fill_level);
-
-		if (unlikely(EOK != err)) {
-			dev_info(chnl->dev, "Unable to get IHC tx conf fifo fill level: %d\n", err);
-		} else if (fill_level) {
-			dev_info(chnl->dev, "IHC Tx conf Queue is not empty\n");
-		}
-
-		fifo_destroy(client->ihc_txconf_fifo);
-		client->ihc_txconf_fifo = NULL;
-	}
-
-	/*	Cleanup memory */
-	memset(client, 0, sizeof(pfe_hif_drv_client_t));
-
-	dev_info(chnl->dev, "IHC client unregistered\n");
-}
-
-pfe_hif_drv_client_t * pfe_hif_drv_ihc_client_register(pfe_hif_drv_t *hif_drv, pfe_hif_drv_client_event_handler handler, void *priv)
-{
-
-	struct pfeng_hif_chnl *chnl = container_of(hif_drv, struct pfeng_hif_chnl, hif_drv);
-	pfe_hif_drv_client_t *client = &chnl->ihc_client;
-	int ret;
-
-	if (client->hif_drv) {
-		dev_err(chnl->dev, "IHC client already registered\n");
-		return NULL;
-	}
-
-	/* Initialize the instance */
-	memset(client, 0, sizeof(pfe_hif_drv_client_t));
-	client->ihc_rx_fifo = fifo_create(32);
-	if (!client->ihc_rx_fifo) {
-		dev_err(chnl->dev, "Can't create IHC RX fifo. Err %d\n", ret);
-		return NULL;
-	}
-	client->ihc_txconf_fifo = fifo_create(32);
-	if (!client->ihc_txconf_fifo) {
-		dev_err(chnl->dev, "Can't create IHC TXconf fifo. Err %d\n", ret);
-		return NULL;
-	}
-	client->hif_drv = hif_drv;
-	client->priv = priv;
-	client->event_handler = handler;
-	client->inited = true;
-
-	dev_info(chnl->dev, "IHC client registered\n");
-	return client;
-}
-
-/**
- * @brief		Release packet
- * @param[in]	pkt The packet instance
- */
-void pfe_hif_pkt_free(const pfe_hif_pkt_t *pkt)
-{
-	if (pkt->ref_ptr)
-		kfree_skb(pkt->ref_ptr);
-	oal_mm_free(pkt);
-}
-
-/**
- * @brief		Get packet from RX queue for IHC data
- * @param[in]	client IHC Client instance
- * @param[in]	queue RX queue number
- * @return		Pointer to SW buffer descriptor containing the packet or NULL
- * 				if the queue does not contain data
- *
- * @warning		Intended to be called for IHC client only
- */
-pfe_hif_pkt_t * pfe_hif_drv_client_receive_pkt(pfe_hif_drv_client_t *client, uint32_t queue)
-{
-	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
-
-	if (&chnl->ihc_client != client)
-	{
-		/* Only IHC client supported */
-		dev_err(chnl->dev, "Only HIF IHC client supported\n");
-		return NULL;
-	}
-
-	/* No resource protection here */
-	return fifo_get(client->ihc_rx_fifo);
-}
-
-errno_t pfe_hif_drv_ihc_put_conf(pfe_hif_drv_client_t *client)
-{
-	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
-	struct sk_buff *skb = pfeng_hif_chnl_txconf_get_skbuf(chnl);
-	void *idex_frame;
-
-	if (unlikely(!skb))
-		return EINVAL;
-
-	/* Convert skb to IDEX frame */
-	idex_frame = oal_mm_malloc_contig_aligned_nocache(skb_headlen(skb), 0U);
-	if (likely(idex_frame)) {
-		memcpy(idex_frame, skb->data, skb_headlen(skb));
-
-		if (unlikely(EOK != fifo_put(client->ihc_txconf_fifo, idex_frame))) {
-			dev_err(chnl->dev, "IHC TX fifo full\n");
-			oal_mm_free_contig(idex_frame);
-			return EINVAL;
-		}
-	} else
-		return ENOMEM;
-
-	return EOK;
-}
-
-errno_t pfe_hif_drv_ihc_put_pkt(pfe_hif_drv_client_t *client, void *data, uint32_t len, void *ref)
-{
-	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
-	pfe_hif_rx_meta_t *rx_metadata;
-	pfe_ct_hif_rx_hdr_t *hif_hdr = (pfe_ct_hif_rx_hdr_t *)data;
-
-	/*	Create the RX metadata */
-	rx_metadata = (pfe_hif_rx_meta_t *)oal_mm_malloc(sizeof(pfe_hif_rx_meta_t));
-	if (NULL == rx_metadata)
-		return ENOMEM;
-	memset(rx_metadata, 0, sizeof(pfe_hif_rx_meta_t));
-
-	rx_metadata->client = client;
-	rx_metadata->data = (addr_t)data;
-	rx_metadata->len = len;
-
-	rx_metadata->flags.specific.rx_flags = hif_hdr->flags;
-	rx_metadata->i_phy_if = hif_hdr->i_phy_if;
-	rx_metadata->ref_ptr = ref;
-
-	if (unlikely(EOK != fifo_put(client->ihc_rx_fifo, rx_metadata))) {
-		dev_err(chnl->dev, "IHC RX fifo full\n");
-		/*	Drop the frame. Resource protection is embedded. */
-		pfe_hif_pkt_free(rx_metadata);
-		return EINVAL;
-	}
-
-	return EOK;
-}
-
-/**
- * @brief		Get TX confirmation
- * @param[in]	client Client instance
- * @param[in]	queue TX queue number
- * @return		Pointer to data associated with the transmitted buffer. See pfe_hif_drv_client_xmit_pkt()
- * 				and pfe_hif_drv_client_xmit_sg_pkt().
- * @note		Only a single thread can call this function for given client+queue
- * 				combination.
- */
-void *pfe_hif_drv_client_receive_tx_conf(const pfe_hif_drv_client_t *client, uint32_t queue)
-{
-	struct pfeng_hif_chnl *chnl = container_of(client, struct pfeng_hif_chnl, ihc_client);
-
-	if (&chnl->ihc_client != client)
-	{
-		/* Only IHC client supported */
-		dev_err(chnl->dev, "Only HIF IHC client supported\n");
-		return NULL;
-	}
-
-	/* No resource protection here */
-	return fifo_get(client->ihc_txconf_fifo);
-}
-#endif /* PFE_CFG_MULTI_INSTANCE_SUPPORT */
-
-/** @}*/
diff --git a/sw/pfe_hif_drv/src/pfe_hif_ptp.c b/sw/pfe_hif_drv/src/pfe_hif_ptp.c
deleted file mode 100644
index b3ca7ce..0000000
--- a/sw/pfe_hif_drv/src/pfe_hif_ptp.c
+++ /dev/null
@@ -1,354 +0,0 @@
-/* =========================================================================
- *  
- *  Copyright (c) 2019 Imagination Technologies Limited
- *  Copyright 2020-2021 NXP
- *
- *  SPDX-License-Identifier: GPL-2.0
- *
- * ========================================================================= */
-
-#include "pfe_cfg.h"
-#include "oal.h"
-#include "linked_list.h"
-#include "pfe_hif_ptp.h"
-
-/*	Number of entries in the DB producing warning message */
-#define PFE_HIF_PTP_DB_WARNING_THRESHOLD	50
-
-/*	Maximum allowed number of entries */
-#define PFE_HIF_PTP_DB_MAX_CAPACITY			(PFE_HIF_PTP_DB_WARNING_THRESHOLD + 10)
-
-/*	Entry timeout in number of ticks */
-#define PFE_HIF_PTP_DB_TIMEOUT				1
-
-#define PFE_PTP_WORKER_SHUTDOWN		(1)
-#define PFE_PTP_WORKER_TICK			(2)
-
-typedef struct
-{
-	uint32_t ticks;		/* Timeout counter (in number of ticks). Zero means entry is aged. */
-	uint16_t refnum;	/* Reference to identify ETS report */
-	uint8_t type;		/* PTP Message type */
-	bool_t rx;			/* If TRUE then entry refers to ingress message */
-	uint16_t port;		/* PTP Port */
-	uint16_t seq_id;	/* PTP Sequence ID */
-	uint32_t ts_sec;
-	uint32_t ts_nsec;
-	bool_t ts_valid;
-	/*	List member for chaining */
-	LLIST_t lm;
-} pfe_hif_ptp_ts_db_entry_t;
-
-/**
- * @brief		Worker function running within internal thread
- */
-static void *pfe_hif_ptp_ts_db_tick(void *arg)
-{
-	pfe_hif_ptp_ts_db_t *db = (pfe_hif_ptp_ts_db_t *)arg;
-	LLIST_t *item, *aux;
-	pfe_hif_ptp_ts_db_entry_t *entry;
-	oal_mbox_msg_t msg;
-
-	while (1)
-	{
-		if (EOK == oal_mbox_receive(db->mbox, &msg))
-		{
-			if (PFE_PTP_WORKER_SHUTDOWN == msg.payload.code)
-			{
-				break;
-			}
-			else
-			{
-				if (EOK != oal_mutex_lock(db->lock))
-				{
-					NXP_LOG_DEBUG("Mutex lock failed\n");
-				}
-
-				/*	Release aged entries */
-				LLIST_ForEachRemovable(item, aux, &db->entries)
-				{
-					entry = LLIST_Data(item, pfe_hif_ptp_ts_db_entry_t, lm);
-					if ((NULL != entry) && (entry->ticks <= 0U))
-					{
-						NXP_LOG_INFO("Removing aged TS DB entry (Type: 0x%x, Port: 0x%x, SeqID: 0x%x)\n",
-								entry->type, entry->port, entry->seq_id);
-						LLIST_Remove(item);
-						oal_mm_free(entry);
-						db->count--;
-					}
-					else
-					{
-						entry->ticks--;
-					}
-				}
-
-				if (EOK != oal_mutex_unlock(db->lock))
-				{
-					NXP_LOG_DEBUG("Mutex unlock failed\n");
-				}
-			}
-		}
-		else
-		{
-			NXP_LOG_WARNING("mbox_receive() failed\n");
-		}
-	}
-
-	NXP_LOG_INFO("TS DB worker shutting down\n");
-
-	return NULL;
-}
-
-/**
- * @brief	Initialize TS database
- */
-errno_t pfe_hif_ptp_ts_db_init(pfe_hif_ptp_ts_db_t *db)
-{
-	memset(db, 0, sizeof(pfe_hif_ptp_ts_db_t));
-	db->lock = oal_mm_malloc(sizeof(oal_mutex_t));
-	if (NULL == db->lock)
-	{
-		return ENOMEM;
-	}
-	else
-	{
-		oal_mutex_init(db->lock);
-	}
-
-	LLIST_Init(&db->entries);
-
-	db->mbox = oal_mbox_create();
-	if (NULL == db->mbox)
-	{
-		NXP_LOG_ERROR("Can't create mbox\n");
-		oal_mm_free(db->lock);
-		return ENOEXEC;
-	}
-
-	if (EOK != oal_mbox_attach_timer(db->mbox, 1000U, PFE_PTP_WORKER_TICK))
-	{
-		NXP_LOG_ERROR("Could not attach timer\n");
-		oal_mbox_destroy(db->mbox);
-		oal_mm_free(db->lock);
-		return ENOEXEC;
-	}
-
-	db->worker = oal_thread_create(&pfe_hif_ptp_ts_db_tick, db, "TS DB worker", 0);
-	if (NULL == db->worker)
-	{
-		oal_mbox_detach_timer(db->mbox);
-		oal_mbox_destroy(db->mbox);
-		oal_mm_free(db->lock);
-		return ENOMEM;
-	}
-
-	return EOK;
-}
-
-/**
- * @brief	Finalize the TS database
- */
-void pfe_hif_ptp_ts_db_fini(pfe_hif_ptp_ts_db_t *db)
-{
-	LLIST_t *item, *aux;
-	pfe_hif_ptp_ts_db_entry_t *entry;
-
-	if (NULL != db->worker)
-	{
-		NXP_LOG_INFO("Stopping TS DB worker\n");
-
-		if (EOK != oal_mbox_send_signal(db->mbox, PFE_PTP_WORKER_SHUTDOWN))
-		{
-			NXP_LOG_ERROR("Could not send shutdown signal\n");
-		}
-
-		if (EOK != oal_thread_join(db->worker, NULL))
-		{
-			NXP_LOG_ERROR("Can't join TS DB worker thread\n");
-		}
-		else
-		{
-			NXP_LOG_INFO("TS DB worker stopped\n");
-			db->worker = NULL;
-		}
-	}
-
-	if (NULL != db->lock)
-	{
-		if (EOK != oal_mutex_lock(db->lock))
-		{
-			NXP_LOG_DEBUG("Mutex lock failed\n");
-		}
-
-		/*	Release all entries */
-		LLIST_ForEachRemovable(item, aux, &db->entries)
-		{
-			entry = LLIST_Data(item, pfe_hif_ptp_ts_db_entry_t, lm);
-			if (NULL != entry)
-			{
-				LLIST_Remove(item);
-				oal_mm_free(entry);
-			}
-		}
-
-		if (EOK != oal_mutex_unlock(db->lock))
-		{
-			NXP_LOG_DEBUG("Mutex unlock failed\n");
-		}
-
-		oal_mbox_destroy(db->mbox);
-		oal_mutex_destroy(db->lock);
-		oal_mm_free(db->lock);
-		db->lock = NULL;
-	}
-}
-
-/**
- * @brief	Add PTP message to the DB. TS will be added later.
- */
-errno_t pfe_hif_ptp_ts_db_push_msg(pfe_hif_ptp_ts_db_t *db, bool_t rx,
-		uint16_t refnum, uint8_t type, uint16_t port, uint16_t seq_id)
-{
-	pfe_hif_ptp_ts_db_entry_t *entry;
-
-	/*	We should somehow limit number of entries.. */
-	if (db->count >= PFE_HIF_PTP_DB_MAX_CAPACITY)
-	{
-		return ENOSPC;
-	}
-
-	entry = oal_mm_malloc(sizeof(pfe_hif_ptp_ts_db_entry_t));
-	if (NULL == entry)
-	{
-		return ENOMEM;
-	}
-	else
-	{
-		/*	Fill entry */
-		entry->refnum = refnum;
-		entry->type = type;
-		entry->port = port;
-		entry->seq_id = seq_id;
-		entry->ts_valid = FALSE;
-		entry->ticks = PFE_HIF_PTP_DB_TIMEOUT;
-		entry->rx = rx;
-
-		/*	Link-in */
-		if (EOK != oal_mutex_lock(db->lock))
-		{
-			NXP_LOG_DEBUG("Mutex lock failed\n");
-		}
-
-		LLIST_AddAtEnd(&entry->lm, &db->entries);
-		db->count++;
-
-		if ((db->count > PFE_HIF_PTP_DB_WARNING_THRESHOLD) && !db->reported)
-		{
-			NXP_LOG_WARNING("More than %d entries in PTP DB...\n", PFE_HIF_PTP_DB_WARNING_THRESHOLD);
-			db->reported = TRUE;
-		}
-
-		if (EOK != oal_mutex_unlock(db->lock))
-		{
-			NXP_LOG_DEBUG("Mutex unlock failed\n");
-		}
-	}
-
-	return EOK;
-}
-
-/**
- * @brief	Bind TS with existing entry
- */
-errno_t pfe_hif_ptp_ts_db_push_ts(pfe_hif_ptp_ts_db_t *db,
-		uint16_t refnum, uint32_t ts_sec, uint32_t ts_nsec)
-{
-	LLIST_t *item;
-	pfe_hif_ptp_ts_db_entry_t *entry;
-	bool_t found = FALSE;
-
-	/*	Find matching entry and add the timestamp */
-	if (EOK != oal_mutex_lock(db->lock))
-	{
-		NXP_LOG_DEBUG("Mutex lock failed\n");
-	}
-
-	LLIST_ForEach(item, &db->entries)
-	{
-		entry = LLIST_Data(item, pfe_hif_ptp_ts_db_entry_t, lm);
-		if (NULL != entry)
-		{
-			if (entry->refnum == refnum)
-			{
-				found = TRUE;
-				entry->ts_sec = ts_sec;
-				entry->ts_nsec = ts_nsec;
-				entry->ts_valid = TRUE;
-				break;
-			}
-		}
-	}
-
-	if (EOK != oal_mutex_unlock(db->lock))
-	{
-		NXP_LOG_DEBUG("Mutex unlock failed\n");
-	}
-
-	return (found) ? EOK : ENOENT;
-}
-
-/**
- * @brief	Get TS associated with give PTP message
- */
-errno_t pfe_hif_ptp_ts_db_pop(pfe_hif_ptp_ts_db_t *db,
-		uint8_t type, uint16_t port, uint16_t seq_id,
-			uint32_t *ts_sec, uint32_t *ts_nsec, bool_t rx)
-{
-	LLIST_t *item;
-	pfe_hif_ptp_ts_db_entry_t *entry;
-	bool_t found = FALSE;
-
-	/*	Find matching entry and get the timestamp */
-	if (EOK != oal_mutex_lock(db->lock))
-	{
-		NXP_LOG_DEBUG("Mutex lock failed\n");
-	}
-
-	LLIST_ForEach(item, &db->entries)
-	{
-		entry = LLIST_Data(item, pfe_hif_ptp_ts_db_entry_t, lm);
-		if (NULL != entry)
-		{
-			if ((entry->rx == rx)
-					&& (entry->type == type)
-					&& (entry->port == port)
-					&& (entry->seq_id == seq_id))
-			{
-				found = TRUE;
-				*ts_sec = entry->ts_sec;
-				*ts_nsec = entry->ts_nsec;
-				break;
-			}
-		}
-	}
-
-	if (found)
-	{
-		/*	Remove from DB */
-		LLIST_Remove(item);
-		oal_mm_free(entry);
-		db->count--;
-		if ((db->count <= (PFE_HIF_PTP_DB_WARNING_THRESHOLD/4)) && db->reported)
-		{
-			db->reported = FALSE;
-		}
-	}
-
-	if (EOK != oal_mutex_unlock(db->lock))
-	{
-		NXP_LOG_DEBUG("Mutex unlock failed\n");
-	}
-
-	return (found) ? EOK : ENOENT;
-}
-
diff --git a/sw/pfe_platform/hw/s32g/pfe_bmu_csr.c b/sw/pfe_platform/hw/s32g/pfe_bmu_csr.c
index 02c49fa..60cbb46 100644
--- a/sw/pfe_platform/hw/s32g/pfe_bmu_csr.c
+++ b/sw/pfe_platform/hw/s32g/pfe_bmu_csr.c
@@ -13,6 +13,9 @@
 #include "pfe_cbus.h"
 #include "pfe_bmu_csr.h"
 
+
+#define IS_POWER_OF_2(n) (((n) != 0U) && (((n) & ((n) - 1U)) == 0U))
+
 #ifndef PFE_CBUS_H_
 #error Missing cbus.h
 #endif /* PFE_CBUS_H_ */
@@ -171,13 +174,27 @@ void pfe_bmu_cfg_irq_unmask(addr_t base_va)
  */
 void pfe_bmu_cfg_init(addr_t base_va, const pfe_bmu_cfg_t *cfg)
 {
+	uint32_t bmu_buf_size_exp;
+	if (unlikely(FALSE == IS_POWER_OF_2(cfg->buf_size)))
+	{
+		NXP_LOG_ERROR("BMU buffer size is not power of 2\n");
+		return;
+	}
 	hal_write32(0U, base_va + BMU_CTRL);
 	hal_write32(0x0U, base_va + BMU_INT_ENABLE);
 	hal_write32(0xffffffffU, base_va + BMU_INT_SRC);
 
 	hal_write32((uint32_t)(cfg->pool_pa & 0xffffffffU), base_va + BMU_UCAST_BASEADDR);
 	hal_write32(cfg->max_buf_cnt & 0xffffU, base_va + BMU_UCAST_CONFIG);
-	hal_write32(cfg->buf_size & 0xffffU, base_va + BMU_BUF_SIZE);
+
+	for(bmu_buf_size_exp = 0; bmu_buf_size_exp < (sizeof(cfg->buf_size) * 8U); bmu_buf_size_exp++)
+	{
+		if(cfg->buf_size == (1UL << bmu_buf_size_exp))
+		{
+			hal_write32(bmu_buf_size_exp & 0xffffU, base_va + BMU_BUF_SIZE);
+			break;
+		}
+	}
 
 	/*	Thresholds. 75% of maximum number of available buffers. */
 	hal_write32((cfg->max_buf_cnt * 75U) / 100U, base_va + BMU_THRES);
diff --git a/sw/pfe_platform/hw/s32g/pfe_class_csr.h b/sw/pfe_platform/hw/s32g/pfe_class_csr.h
index d7312fa..f5416cb 100644
--- a/sw/pfe_platform/hw/s32g/pfe_class_csr.h
+++ b/sw/pfe_platform/hw/s32g/pfe_class_csr.h
@@ -310,8 +310,8 @@
 #define CLASS_TPID_DOT1Q			0x8100UL
 #define CLASS_TPID_DOT1AD_0			0x88A8UL
 #define CLASS_TPID_DOT1AD_1			0x9100UL
-#define CLASS_TPID0_TPID1_VAL		((CLASS_TPID_DOT1AD_1 << 16U) | CLASS_TPID_DOT1AD_0)
-#define CLASS_TPID2_VAL				(CLASS_TPID_DOT1Q)
+#define CLASS_TPID0_TPID1_VAL         ((CLASS_TPID_DOT1AD_0 << 16U) | CLASS_TPID_DOT1Q)
+#define CLASS_TPID2_VAL                               (CLASS_TPID_DOT1AD_1)
 
 #define RT_TWO_LEVEL_REF(x)			((!!x) ? (1UL << 0U) : 0U)
 #define PHYNO_IN_HASH(x)			((!!x) ? (1UL << 1U) : 0U)
diff --git a/sw/pfe_platform/hw/s32g/pfe_emac_csr.c b/sw/pfe_platform/hw/s32g/pfe_emac_csr.c
index 3b4f66c..29d8348 100644
--- a/sw/pfe_platform/hw/s32g/pfe_emac_csr.c
+++ b/sw/pfe_platform/hw/s32g/pfe_emac_csr.c
@@ -179,7 +179,7 @@ errno_t pfe_emac_cfg_init(addr_t base_va, pfe_emac_mii_mode_t mode,  pfe_emac_sp
 			, base_va + MTL_RXQ0_OPERATION_MODE);
 
 	hal_write32(0U, base_va + MTL_TXQ0_OPERATION_MODE);
-	hal_write32(GIANT_PACKET_SIZE_LIMIT(1518U), base_va + MAC_EXT_CONFIGURATION);
+	hal_write32(GIANT_PACKET_SIZE_LIMIT(1522U), base_va + MAC_EXT_CONFIGURATION);
 
 	hal_write32(0U, base_va + MAC_TIMESTAMP_CONTROL);
 	hal_write32(0U, base_va + MAC_SUB_SECOND_INCREMENT);
@@ -801,7 +801,7 @@ void pfe_emac_cfg_write_addr_slot(addr_t base_va, const pfe_mac_addr_t addr, uin
 
 	hal_write32(top, base_va + MAC_ADDRESS_HIGH(slot));
 	hal_write32(bottom, base_va + MAC_ADDRESS_LOW(slot));
-	oal_time_usleep(10);
+	oal_time_udelay(10);
 	hal_write32(bottom, base_va + MAC_ADDRESS_LOW(slot));
 }
 
@@ -824,14 +824,15 @@ uint32_t pfe_emac_cfg_get_hash(addr_t base_va, const pfe_mac_addr_t addr)
  * @param[in]	hash The hash value
  * @param[in]	en TRUE means ENABLE, FALSE means DISABLE
  */
-void pfe_emac_cfg_set_uni_group(addr_t base_va, uint32_t hash, bool_t en)
+void pfe_emac_cfg_set_hash_group(addr_t base_va, uint32_t hash, bool_t en)
 {
-	uint32_t reg;
+	uint32_t reg, old_reg;
 	uint32_t val = (hash & 0xfc000000U) >> 26U;
 	uint8_t hash_table_idx = ((uint8_t)val & 0x40U) >> 6U;
 	uint8_t pos = ((uint8_t)val & 0x1fU);
 
 	reg = hal_read32(base_va + MAC_HASH_TABLE_REG(hash_table_idx));
+	old_reg = reg;
 
 	if (en)
 	{
@@ -842,23 +843,17 @@ void pfe_emac_cfg_set_uni_group(addr_t base_va, uint32_t hash, bool_t en)
 		reg &= ~((uint32_t)1U << pos);
 	}
 
+	if (reg == old_reg)
+	{
+		return;
+	}
+
 	hal_write32(reg, base_va + MAC_HASH_TABLE_REG(hash_table_idx));
 	/*	Wait at least 4 clock cycles ((G)MII) */
-	oal_time_usleep(10);
+	oal_time_udelay(10);
 	hal_write32(reg, base_va + MAC_HASH_TABLE_REG(hash_table_idx));
 }
 
-/**
- * @brief		Enable/Disable multicast address group defined by 'hash'
- * @param[in]	base_va Base address of MAC register space (virtual)
- * @param[in]	hash The hash value
- * @param[in]	en TRUE means ENABLE, FALSE means DISABLE
- */
-void pfe_emac_cfg_set_multi_group(addr_t base_va, uint32_t hash, bool_t en)
-{
-	pfe_emac_cfg_set_uni_group(base_va, hash, en);
-}
-
 /**
  * @brief		Enable/Disable loopback mode
  * @param[in]	base_va Base address of MAC register space (virtual)
@@ -1359,7 +1354,7 @@ uint32_t pfe_emac_cfg_get_text_stat(addr_t base_va, char_t *buf, uint32_t size,
 	if(verb_level >= 5U)
 	{
 		reg = hal_read32(base_va + RX_OVERSIZE_PACKETS_GOOD);
-		len += oal_util_snprintf(buf + len, size - len, "TX_OSIZE_PACKETS_GOOD              : 0x%x\n", reg);
+		len += oal_util_snprintf(buf + len, size - len, "RX_OSIZE_PACKETS_GOOD              : 0x%x\n", reg);
 		reg = hal_read32(base_va + RX_UNDERSIZE_PACKETS_GOOD);
 		len += oal_util_snprintf(buf + len, size - len, "RX_UNDERSIZE_PACKETS_GOOD          : 0x%x\n", reg);
 	}
diff --git a/sw/pfe_platform/hw/s32g/pfe_emac_csr.h b/sw/pfe_platform/hw/s32g/pfe_emac_csr.h
index 4a25ad2..74ffab9 100644
--- a/sw/pfe_platform/hw/s32g/pfe_emac_csr.h
+++ b/sw/pfe_platform/hw/s32g/pfe_emac_csr.h
@@ -297,8 +297,7 @@ errno_t pfe_emac_cfg_get_link_config(addr_t base_va, pfe_emac_speed_t *speed, pf
 errno_t pfe_emac_cfg_get_link_status(addr_t base_va, pfe_emac_link_speed_t *link_speed, pfe_emac_duplex_t *duplex, bool_t *link);
 void pfe_emac_cfg_write_addr_slot(addr_t base_va, const pfe_mac_addr_t addr, uint8_t slot);
 uint32_t pfe_emac_cfg_get_hash(addr_t base_va, const pfe_mac_addr_t addr);
-void pfe_emac_cfg_set_uni_group(addr_t base_va, uint32_t hash, bool_t en);
-void pfe_emac_cfg_set_multi_group(addr_t base_va, uint32_t hash, bool_t en);
+void pfe_emac_cfg_set_hash_group(addr_t base_va, uint32_t hash, bool_t en);
 void pfe_emac_cfg_set_loopback(addr_t base_va, bool_t en);
 void pfe_emac_cfg_set_promisc_mode(addr_t base_va, bool_t en);
 void pfe_emac_cfg_set_allmulti_mode(addr_t base_va, bool_t en);
diff --git a/sw/pfe_platform/hw/s32g/pfe_hif_csr.c b/sw/pfe_platform/hw/s32g/pfe_hif_csr.c
index 7d24020..5365ead 100644
--- a/sw/pfe_platform/hw/s32g/pfe_hif_csr.c
+++ b/sw/pfe_platform/hw/s32g/pfe_hif_csr.c
@@ -1073,7 +1073,7 @@ errno_t pfe_hif_chnl_cfg_set_rx_irq_coalesce(addr_t base_va, uint32_t channel_id
 
 			/* Enable time-based coalescing */
 			hal_write32(HIF_INT_COAL_TIME_ENABLE, base_va + HIF_INT_COAL_EN_CHn(channel_id));
-			hal_write32(frames, base_va + HIF_ABS_FRAME_COUNT_CHn(channel_id));
+			hal_write32(cycles, base_va + HIF_ABS_INT_TIMER_CHn(channel_id));
 			ret = EOK;
 		}
 	}
diff --git a/sw/pfe_platform/hw/s32g/pfe_hif_csr.h b/sw/pfe_platform/hw/s32g/pfe_hif_csr.h
index b127804..1ee6284 100644
--- a/sw/pfe_platform/hw/s32g/pfe_hif_csr.h
+++ b/sw/pfe_platform/hw/s32g/pfe_hif_csr.h
@@ -179,7 +179,7 @@
 #define HIF_TXPKT_INT						(1UL << 4U)
 #define HIF_CTRL_DMA_EN						(1UL << 0U)
 #define HIF_CTRL_BDP_POLL_CTRL_EN			(1UL << 1U)
-#define HIF_CTRL_BDP_CH_START_WSTB			(1UL << 2U)
+#define HIF_CTRL_BDP_CH_START_WSTB          (1UL << 2U)
 #define HIF_INT_EN							(1UL << 0U)
 #define HIF_RXBD_INT_EN						(1UL << 1U)
 #define HIF_RXPKT_INT_EN					(1UL << 2U)
diff --git a/sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.c b/sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.c
index 74e14a3..c9e5324 100644
--- a/sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.c
+++ b/sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.c
@@ -33,7 +33,7 @@
  * 			then user must trigger the HIF to fetch next BD explicitly by
  * 			pfe_hif_nocpy_rx_dma_start() and pfe_hif_nocpy_tx_dma_start().
  */
-#define	PFE_HIF_NOCPY_CFG_USE_BD_POLLING	FALSE
+#define	PFE_HIF_NOCPY_CFG_USE_BD_POLLING	TRUE
 
 typedef struct
 {
@@ -231,6 +231,9 @@ void pfe_hif_nocpy_cfg_tx_enable(addr_t base_va)
 
 	regval = hal_read32(base_va + HIF_NOCPY_TX_CTRL);
 	regval |= HIF_CTRL_DMA_EN;
+#if (TRUE == PFE_HIF_NOCPY_CFG_USE_BD_POLLING)
+	regval |= HIF_CTRL_BDP_POLL_CTRL_EN;
+#endif
 	hal_write32(regval, base_va + HIF_NOCPY_TX_CTRL);
 
 	pfe_hif_nocpy_cfg_tx_irq_unmask(base_va);
@@ -262,6 +265,9 @@ void pfe_hif_nocpy_cfg_rx_enable(addr_t base_va)
 
 	regval = hal_read32(base_va + HIF_NOCPY_RX_CTRL);
 	regval |= HIF_CTRL_DMA_EN;
+#if (TRUE == PFE_HIF_NOCPY_CFG_USE_BD_POLLING)
+	regval |= HIF_CTRL_BDP_POLL_CTRL_EN;
+#endif
 	hal_write32(regval, base_va + HIF_NOCPY_RX_CTRL);
 
 	pfe_hif_nocpy_cfg_rx_irq_unmask(base_va);
@@ -278,7 +284,6 @@ void pfe_hif_nocpy_cfg_rx_enable(addr_t base_va)
  */
 void pfe_hif_nocpy_cfg_rx_disable(addr_t base_va)
 {
-
 	hal_write32(0U, base_va + HIF_NOCPY_RX_CTRL);
 
 	pfe_hif_nocpy_cfg_rx_irq_mask(base_va);
@@ -297,6 +302,8 @@ void pfe_hif_nocpy_cfg_rx_dma_start(addr_t base_va)
 	regval = hal_read32(base_va + HIF_NOCPY_RX_CTRL);
 	regval |= HIF_CTRL_BDP_CH_START_WSTB;
 	hal_write32(regval, base_va + HIF_NOCPY_RX_CTRL);
+#else
+    (void)base_va;
 #endif /* PFE_HIF_NOCPY_CFG_USE_BD_POLLING */
 }
 
@@ -313,6 +320,8 @@ void pfe_hif_nocpy_cfg_tx_dma_start(addr_t base_va)
 	regval = hal_read32(base_va + HIF_NOCPY_TX_CTRL);
 	regval |= HIF_CTRL_BDP_CH_START_WSTB;
 	hal_write32(regval, base_va + HIF_NOCPY_TX_CTRL);
+#else
+    (void)base_va;
 #endif /* PFE_HIF_NOCPY_CFG_USE_BD_POLLING */
 }
 
@@ -456,13 +465,37 @@ bool_t pfe_hif_nocpy_cfg_is_tx_dma_active(addr_t base_va)
  */
 uint32_t pfe_hif_nocpy_chnl_cfg_get_text_stat(addr_t base_va, const char_t *buf, uint32_t size, uint8_t verb_level)
 {
-    (void)base_va;
-    (void)buf;
-    (void)size;
-    (void)verb_level;
+	(void)base_va;
+	(void)buf;
+	(void)size;
+	(void)verb_level;
 	return 0U;
 }
 
+/**
+ * @brief		Get number of transmitted packets
+ * @param[in]	base_va Base address of channel register space (virtual)
+ * @return		Number of transmitted packets
+ */
+uint32_t pfe_hif_nocpy_cfg_get_tx_cnt(addr_t base_va)
+{
+	(void)base_va;
+	NXP_LOG_WARNING("HIF NOCPY does not provide TX packet counter\n");
+	return 0xffffffffU;
+}
+
+/**
+ * @brief		Get number of received packets
+ * @param[in]	base_va Base address of channel register space (virtual)
+ * @return		Number of received packets
+ */
+uint32_t pfe_hif_nocpy_cfg_get_rx_cnt(addr_t base_va)
+{
+	(void)base_va;
+	NXP_LOG_WARNING("HIF NOCPY does not provide RX packet counter\n");
+	return 0xffffffffU;
+}
+
 /**
  * @brief		Get HIF statistics in text form
  * @details		This is a HW-specific function providing detailed text statistics
diff --git a/sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.h b/sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.h
index a2e4c34..ed4b8bd 100644
--- a/sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.h
+++ b/sw/pfe_platform/hw/s32g/pfe_hif_nocpy_csr.h
@@ -80,5 +80,7 @@ bool_t pfe_hif_nocpy_cfg_is_rx_dma_active(addr_t base_va);
 bool_t pfe_hif_nocpy_cfg_is_tx_dma_active(addr_t base_va);
 uint32_t pfe_hif_nocpy_chnl_cfg_get_text_stat(addr_t base_va, const char_t *buf, uint32_t size, uint8_t verb_level);
 uint32_t pfe_hif_nocpy_cfg_get_text_stat(addr_t base_va, char_t *buf, uint32_t size, uint8_t verb_level);
+uint32_t pfe_hif_nocpy_cfg_get_tx_cnt(addr_t base_va);
+uint32_t pfe_hif_nocpy_cfg_get_rx_cnt(addr_t base_va);
 
 #endif /* PFE_HIF_NOCPY_CSR_H_ */
diff --git a/sw/pfe_platform/hw/s32g/pfe_l2br_table_csr.h b/sw/pfe_platform/hw/s32g/pfe_l2br_table_csr.h
index 74ccb3d..5b6918c 100644
--- a/sw/pfe_platform/hw/s32g/pfe_l2br_table_csr.h
+++ b/sw/pfe_platform/hw/s32g/pfe_l2br_table_csr.h
@@ -20,10 +20,10 @@
 #error Unsupported IP version
 #endif /* PFE_CFG_IP_VERSION */
 
-#define _MAC2F_TABLE_HASH_ENTRIES		256U /* Must be power-of-2 */
-#define _MAC2F_TABLE_COLL_ENTRIES		256U
-#define _MAC2F_TABLE_HASH_SPACE_START	0U
-#define _MAC2F_TABLE_COLL_SPACE_START	_MAC2F_TABLE_HASH_ENTRIES
+#define MAC2F_TABLE_HASH_ENTRIES		256U /* Must be power-of-2 */
+#define MAC2F_TABLE_COLL_ENTRIES		256U
+#define MAC2F_TABLE_HASH_SPACE_START	0U
+#define MAC2F_TABLE_COLL_SPACE_START	MAC2F_TABLE_HASH_ENTRIES
 
 #define HOST_MAC2F_CMD_REG				(CLASS_DAMACHASH_HOST_CMD_REG)
 #define HOST_MAC2F_MAC1_ADDR_REG		(CLASS_DAMACHASH_HOST_MAC_ADDR1_REG)
@@ -39,10 +39,10 @@
 #define HOST_MAC2F_FREE_LIST_HEAD_PTR	(CLASS_DAMACHASH_FREELIST_HEAD_PTR)
 #define HOST_MAC2F_FREE_LIST_TAIL_PTR	(CLASS_DAMACHASH_FREELIST_TAIL_PTR)
 
-#define _VLAN_TABLE_HASH_ENTRIES		64U /* Must be power-of-2 */
-#define _VLAN_TABLE_COLL_ENTRIES		64U
-#define _VLAN_TABLE_HASH_SPACE_START	0U
-#define _VLAN_TABLE_COLL_SPACE_START	_VLAN_TABLE_HASH_ENTRIES
+#define VLAN_TABLE_HASH_ENTRIES		    64U /* Must be power-of-2 */
+#define VLAN_TABLE_COLL_ENTRIES		    64U
+#define VLAN_TABLE_HASH_SPACE_START	    0U
+#define VLAN_TABLE_COLL_SPACE_START	    VLAN_TABLE_HASH_ENTRIES
 
 #define HOST_VLAN_CMD_REG				(CLASS_DAVLANHASH_HOST_CMD_REG)
 #define HOST_VLAN_MAC1_ADDR_REG			(CLASS_DAVLANHASH_HOST_MAC_ADDR1_REG)
diff --git a/sw/pfe_platform/hw/s32g/pfe_platform_master.c b/sw/pfe_platform/hw/s32g/pfe_platform_master.c
index c075e22..6c7e159 100644
--- a/sw/pfe_platform/hw/s32g/pfe_platform_master.c
+++ b/sw/pfe_platform/hw/s32g/pfe_platform_master.c
@@ -109,7 +109,7 @@ static void *pfe_poller_func(void *arg)
 
 			case POLLER_STATE_ENABLED:
 			{
-				/*  Process HIF global isr */
+				/*  Process HIF global ISR */
 				if (NULL != platform->hif)
 				{
 					pfe_hif_irq_mask(platform->hif);
@@ -124,7 +124,8 @@ static void *pfe_poller_func(void *arg)
 					(void)pfe_class_isr(platform->classifier);
 					pfe_class_irq_unmask(platform->classifier);
 				}
-                /* UTIL */
+
+				/* UTIL */
 				if (NULL != platform->util)
 				{
 					pfe_util_irq_mask(platform->util);
@@ -169,13 +170,14 @@ static void *pfe_poller_func(void *arg)
 		}
 
 		/*  Wait for 1 sec and loop again */
-		oal_time_mdelay(1000);
+		oal_time_msleep(1000);
 	}
 
 	return NULL;
 }
 #endif /* PFE_CFG_GLOB_ERR_POLL_WORKER */
 
+#if (PFE_CFG_IP_VERSION == PFE_CFG_IP_VERSION_FPGA_5_0_4)
 /**
  * @brief		Global interrupt service routine
  * @details		See the oal_irq_handler_t
@@ -343,6 +345,7 @@ static bool_t pfe_platform_global_isr(void *arg)
 
 	return handled;
 }
+#endif /* PFE_CFG_IP_VERSION */
 
 #ifdef PFE_CFG_MULTI_INSTANCE_SUPPORT
 /**
@@ -688,7 +691,7 @@ void  pfe_platform_idex_rpc_cbk(pfe_ct_phy_if_id_t sender, uint32_t id, void *bu
 
 			if (EOK == ret)
 			{
-				ret = pfe_log_if_del_mac_addr(log_if_arg, arg_p->addr);
+				ret = pfe_log_if_del_mac_addr(log_if_arg, arg_p->addr, sender);
 			}
 
 			/*	Report execution status to caller */
@@ -868,6 +871,62 @@ void  pfe_platform_idex_rpc_cbk(pfe_ct_phy_if_id_t sender, uint32_t id, void *bu
 			break;
 		}
 
+		case PFE_PLATFORM_RPC_PFE_LOG_IF_DISCARD_ENABLE:
+		{
+			NXP_LOG_DEBUG("RPC: PFE_PLATFORM_RPC_PFE_LOG_IF_DISCARD_ENABLE\n");
+
+			if (EOK == ret)
+			{
+				ret = pfe_log_if_discard_enable(log_if_arg);
+			}
+
+			/*      Report execution status to caller */
+			if (EOK != pfe_idex_set_rpc_ret_val(ret, NULL, 0U))
+			{
+				NXP_LOG_ERROR("Could not send RPC response\n");
+			}
+
+			break;
+		}
+
+		case PFE_PLATFORM_RPC_PFE_LOG_IF_DISCARD_DISABLE:
+		{
+			NXP_LOG_DEBUG("RPC: PFE_PLATFORM_RPC_PFE_LOG_IF_DISCARD_DISABLE\n");
+
+			if (EOK == ret)
+			{
+				ret = pfe_log_if_discard_disable(log_if_arg);
+			}
+
+			/*      Report execution status to caller */
+			if (EOK != pfe_idex_set_rpc_ret_val(ret, NULL, 0U))
+			{
+				NXP_LOG_ERROR("Could not send RPC response\n");
+			}
+
+			break;
+		}
+
+		case PFE_PLATFORM_RPC_PFE_LOG_IF_IS_DISCARD:
+		{
+			pfe_platform_rpc_pfe_log_if_is_discard_ret_t rpc_ret = {0};
+
+			NXP_LOG_DEBUG("RPC: PFE_PLATFORM_RPC_PFE_LOG_IF_IS_DISCARD\n");
+
+			if (EOK == ret)
+			{
+				rpc_ret.status = pfe_log_if_is_discard(log_if_arg);
+			}
+
+			/*	Report execution status to caller */
+			if (EOK != pfe_idex_set_rpc_ret_val(ret, &rpc_ret, sizeof(rpc_ret)))
+			{
+				NXP_LOG_ERROR("Could not send RPC response\n");
+			}
+
+			break;
+		}
+
 		case PFE_PLATFORM_RPC_PFE_LOG_IF_ALLMULTI_ENABLE:
 		{
 			NXP_LOG_DEBUG("RPC: PFE_PLATFORM_RPC_PFE_LOG_IF_ALLMULTI_ENABLE\n");
@@ -1226,7 +1285,7 @@ void  pfe_platform_idex_rpc_cbk(pfe_ct_phy_if_id_t sender, uint32_t id, void *bu
 			{
 				ct_assert(sizeof(pfe_mac_addr_t) == sizeof(rpc_arg->mac_addr));
 				(void)memcpy(&mac_addr, rpc_arg->mac_addr, sizeof(pfe_mac_addr_t));
-				ret = pfe_phy_if_del_mac_addr(phy_if_arg, mac_addr);
+				ret = pfe_phy_if_del_mac_addr(phy_if_arg, mac_addr, sender);
 			}
 
 			/*	Report execution status to caller */
@@ -1316,8 +1375,8 @@ void  pfe_platform_idex_rpc_cbk(pfe_ct_phy_if_id_t sender, uint32_t id, void *bu
 
 		case PFE_PLATFORM_RPC_PFE_PHY_IF_GET_OP_MODE:
 		{
-			pfe_platform_rpc_pfe_phy_if_get_op_mode_ret_t rpc_ret = {IF_OP_DISABLED};
-			pfe_ct_if_op_mode_t mode = IF_OP_DISABLED;
+			pfe_platform_rpc_pfe_phy_if_get_op_mode_ret_t rpc_ret = {IF_OP_DEFAULT};
+			pfe_ct_if_op_mode_t mode = IF_OP_DEFAULT;
 
 			NXP_LOG_DEBUG("RPC: PFE_PLATFORM_RPC_PFE_PHY_IF_GET_OP_MODE\n");
 
@@ -1426,9 +1485,11 @@ void  pfe_platform_idex_rpc_cbk(pfe_ct_phy_if_id_t sender, uint32_t id, void *bu
  */
 static errno_t pfe_platform_create_hif(pfe_platform_t *platform, const pfe_platform_config_t *config)
 {
+#if (PFE_CFG_IP_VERSION == PFE_CFG_IP_VERSION_FPGA_5_0_4)
 	uint32_t ii;
 	static const pfe_hif_chnl_id_t ids[HIF_CFG_MAX_CHANNELS] = {HIF_CHNL_0, HIF_CHNL_1, HIF_CHNL_2, HIF_CHNL_3};
 	pfe_hif_chnl_t *chnl;
+#endif /* PFE_CFG_IP_VERSION */
 
 	platform->hif = pfe_hif_create(platform->cbus_baseaddr + CBUS_HIF_BASE_ADDR, config->hif_chnls_mask);
 	if (NULL == platform->hif)
@@ -1437,28 +1498,22 @@ static errno_t pfe_platform_create_hif(pfe_platform_t *platform, const pfe_platf
 		return ENODEV;
 	}
 
-	if (FALSE == config->common_irq_mode)
-	{
-		/*	IRQ mode: per channel isr (S32G) */
-		;
-	}
-	else /* config->common_irq_mode */
-	{
-		/*	IRQ mode: global isr (FPGA) */
+#if (PFE_CFG_IP_VERSION == PFE_CFG_IP_VERSION_FPGA_5_0_4)
+	/*	IRQ mode: global isr (FPGA) */
 
-		/*	Now particular channel interrupt sources can be enabled */
-		for (ii = 0U; ii < HIF_CFG_MAX_CHANNELS; ii++)
+	/*	Now particular channel interrupt sources can be enabled */
+	for (ii = 0U; ii < HIF_CFG_MAX_CHANNELS; ii++)
+	{
+		chnl = pfe_hif_get_channel(platform->hif, ids[ii]);
+		if (NULL == chnl)
 		{
-			chnl = pfe_hif_get_channel(platform->hif, ids[ii]);
-			if (NULL == chnl)
-			{
-				/* not requested HIF channel, skipping */
-				continue;
-			}
-
-			pfe_hif_chnl_irq_unmask(chnl);
+			/* not requested HIF channel, skipping */
+			continue;
 		}
+
+		pfe_hif_chnl_irq_unmask(chnl);
 	}
+#endif /* PFE_CFG_IP_VERSION */
 
 	pfe_hif_irq_unmask(platform->hif);
 
@@ -1483,7 +1538,7 @@ static void pfe_platform_destroy_hif(pfe_platform_t *platform)
 /**
  * @brief		Assign HIF NOCPY to the platform
  */
-static errno_t pfe_platform_create_hif_nocpy(pfe_platform_t *platform, pfe_platform_config_t *config)
+static errno_t pfe_platform_create_hif_nocpy(pfe_platform_t *platform, const pfe_platform_config_t *config)
 {
 	platform->hif_nocpy = pfe_hif_nocpy_create(pfe.cbus_baseaddr + CBUS_HIF_NOCPY_BASE_ADDR, platform->bmu[1]);
 
@@ -1492,46 +1547,6 @@ static errno_t pfe_platform_create_hif_nocpy(pfe_platform_t *platform, pfe_platf
 		NXP_LOG_ERROR("Couldn't create HIF NOCPY instance\n");
 		return ENODEV;
 	}
-
-	if (FALSE == config->common_irq_mode)
-	{
-		/*	IRQ mode: per channel isr (S32G) */
-
-		if (0U == config->irq_vector_hif_nocpy)
-		{
-				/* misconfigured channel (requested in config, but irq not set),
-				   so report and exit */
-				NXP_LOG_ERROR("HIF NOCPY has no IRQ configured\n");
-				return ENODEV;
-		}
-
-		/*	HIF NOCPY interrupt handler */
-		platform->irq_hif_nocpy = oal_irq_create(config->irq_vector_hif_nocpy, 0, "PFE HIF NOCPY IRQ");
-		if (NULL == platform->irq_hif_nocpy)
-		{
-			NXP_LOG_ERROR("Could not create HIF NOCPY IRQ vector %d\n", config->irq_vector_hif_nocpy);
-			return ENODEV;
-		}
-		else
-		{
-			if (EOK != oal_irq_add_handler(platform->irq_hif_nocpy, &pfe_platform_hif_chnl_isr,
-									pfe_hif_nocpy_get_channel(platform->hif_nocpy, PFE_HIF_CHNL_NOCPY_ID),
-									NULL))
-			{
-				NXP_LOG_ERROR("Could not add IRQ handler for the BMU[0]\n");
-				return ENODEV;
-			}
-		}
-	}
-	else /* config->common_irq_mode */
-	{
-		/*	IRQ mode: global isr (FPGA) */
-
-		/* Note: used global isr, so do nothing here */
-	}
-
-	pfe_hif_chnl_irq_unmask(pfe_hif_nocpy_get_channel(platform->hif_nocpy, PFE_HIF_CHNL_NOCPY_ID));
-
 	return EOK;
 }
 
@@ -1592,7 +1607,7 @@ static errno_t pfe_platform_create_bmu(pfe_platform_t *platform, const pfe_platf
 	}
 
 	/*	Must be aligned to BUF_COUNT * BUF_SIZE */
-	platform->bmu_buffers_size = PFE_CFG_BMU2_BUF_COUNT * (1UL << PFE_CFG_BMU2_BUF_SIZE);
+	platform->bmu_buffers_size = PFE_CFG_BMU2_BUF_COUNT * PFE_CFG_BMU2_BUF_SIZE;
 	platform->bmu_buffers_va = oal_mm_malloc_contig_named_aligned_nocache(
 			PFE_CFG_SYS_MEM, platform->bmu_buffers_size, platform->bmu_buffers_size);
 	if (NULL == platform->bmu_buffers_va)
@@ -1629,32 +1644,26 @@ static errno_t pfe_platform_create_bmu(pfe_platform_t *platform, const pfe_platf
 		return ENODEV;
 	}
 
+#if ((PFE_CFG_IP_VERSION == PFE_CFG_IP_VERSION_NPU_7_14) \
+	  || (PFE_CFG_IP_VERSION == PFE_CFG_IP_VERSION_NPU_7_14a))
 	/*	BMU interrupt handling. Both instances share single interrupt line. */
-	if (FALSE == config->common_irq_mode)
-	{
-		/*	IRQ mode: per block isr (S32G) */
+	/*	IRQ mode: per block isr (S32G) */
 
-		platform->irq_bmu = oal_irq_create((int32_t)config->irq_vector_bmu, (oal_irq_flags_t)0, "PFE BMU IRQ");
-		if (NULL == platform->irq_bmu)
+	platform->irq_bmu = oal_irq_create((int32_t)config->irq_vector_bmu, (oal_irq_flags_t)0, "PFE BMU IRQ");
+	if (NULL == platform->irq_bmu)
+	{
+		NXP_LOG_ERROR("Could not create BMU IRQ vector %u\n", (uint_t)config->irq_vector_bmu);
+		return ENODEV;
+	}
+	else
+	{
+		if (EOK != oal_irq_add_handler(platform->irq_bmu, &pfe_platform_bmu_isr, platform, NULL))
 		{
-			NXP_LOG_ERROR("Could not create BMU IRQ vector %u\n", (uint_t)config->irq_vector_bmu);
+			NXP_LOG_ERROR("Could not add IRQ handler for the BMU[0]\n");
 			return ENODEV;
 		}
-		else
-		{
-			if (EOK != oal_irq_add_handler(platform->irq_bmu, &pfe_platform_bmu_isr, platform, NULL))
-			{
-				NXP_LOG_ERROR("Could not add IRQ handler for the BMU[0]\n");
-				return ENODEV;
-			}
-		}
-	}
-	else /* config->common_irq_mode */
-	{
-		/*	IRQ mode: global isr (FPGA) */
-
-		/* Note: used global isr, so do nothing here */
 	}
+#endif /* PFE_CFG_IP_VERSION */
 
 	pfe_bmu_irq_unmask(platform->bmu[0]);
 	pfe_bmu_irq_unmask(platform->bmu[1]);
@@ -1703,6 +1712,9 @@ static void pfe_platform_destroy_bmu(pfe_platform_t *platform)
 static errno_t pfe_platform_create_gpi(pfe_platform_t *platform)
 {
 	pfe_gpi_cfg_t gpi_cfg_tmp;
+	pfe_fw_feature_t *feature = NULL;
+	uint32_t aseq_len = 0x40U;
+	uint8_t variant = 0U;
 
 	platform->gpi = oal_mm_malloc(platform->gpi_count * sizeof(pfe_gpi_t *));
 	if (NULL == platform->gpi)
@@ -1711,10 +1723,19 @@ static errno_t pfe_platform_create_gpi(pfe_platform_t *platform)
 		return ENOMEM;
 	}
 
+	if (EOK == pfe_class_get_feature(platform->classifier, &feature, "gpi_checksum_fix"))
+	{
+		if ((EOK == pfe_fw_feature_get_variant(feature, &variant)) && (variant == 1U))
+		{
+			aseq_len = 0x50U;
+			NXP_LOG_INFO("Using GPI ASEQ LEN 0x50\n");
+		}
+	}
+
 	/*	GPI1 */
 	gpi_cfg_tmp.alloc_retry_cycles = 0x200U;
 	gpi_cfg_tmp.gpi_tmlf_txthres = 0x178U;
-	gpi_cfg_tmp.gpi_dtx_aseq_len = 0x40; /* See AAVB-2028 */
+	gpi_cfg_tmp.gpi_dtx_aseq_len = aseq_len; /* See AAVB-2028 */
 	gpi_cfg_tmp.emac_1588_ts_en = TRUE;
 
 	platform->gpi[0] = pfe_gpi_create(platform->cbus_baseaddr, CBUS_EGPI1_BASE_ADDR, &gpi_cfg_tmp);
@@ -1727,7 +1748,7 @@ static errno_t pfe_platform_create_gpi(pfe_platform_t *platform)
 	/*	GPI2 */
 	gpi_cfg_tmp.alloc_retry_cycles = 0x200U;
 	gpi_cfg_tmp.gpi_tmlf_txthres = 0x178U;
-	gpi_cfg_tmp.gpi_dtx_aseq_len = 0x40; /* See AAVB-2028 */
+	gpi_cfg_tmp.gpi_dtx_aseq_len = aseq_len; /* See AAVB-2028 */
 	gpi_cfg_tmp.emac_1588_ts_en = TRUE;
 
 	platform->gpi[1] = pfe_gpi_create(platform->cbus_baseaddr, CBUS_EGPI2_BASE_ADDR, &gpi_cfg_tmp);
@@ -1740,7 +1761,7 @@ static errno_t pfe_platform_create_gpi(pfe_platform_t *platform)
 	/*	GPI3 */
 	gpi_cfg_tmp.alloc_retry_cycles = 0x200U;
 	gpi_cfg_tmp.gpi_tmlf_txthres = 0x178U;
-	gpi_cfg_tmp.gpi_dtx_aseq_len = 0x40; /* See AAVB-2028 */
+	gpi_cfg_tmp.gpi_dtx_aseq_len = aseq_len; /* See AAVB-2028 */
 	gpi_cfg_tmp.emac_1588_ts_en = TRUE;
 
 	platform->gpi[2] = pfe_gpi_create(platform->cbus_baseaddr, CBUS_EGPI3_BASE_ADDR, &gpi_cfg_tmp);
@@ -1793,7 +1814,7 @@ static errno_t pfe_platform_create_etgpi(pfe_platform_t *platform)
 	/*	ETGPI1 */
 	gpi_cfg_tmp.alloc_retry_cycles = 0x200U;
 	gpi_cfg_tmp.gpi_tmlf_txthres = 0xbcU;
-	gpi_cfg_tmp.gpi_dtx_aseq_len = 0x40; /* See AAVB-2028 */
+	gpi_cfg_tmp.gpi_dtx_aseq_len = 0x40;
 	gpi_cfg_tmp.emac_1588_ts_en = TRUE;
 
 	platform->etgpi[0] = pfe_gpi_create(platform->cbus_baseaddr, CBUS_ETGPI1_BASE_ADDR, &gpi_cfg_tmp);
@@ -1806,7 +1827,7 @@ static errno_t pfe_platform_create_etgpi(pfe_platform_t *platform)
 	/*	ETGPI2 */
 	gpi_cfg_tmp.alloc_retry_cycles = 0x200U;
 	gpi_cfg_tmp.gpi_tmlf_txthres = 0xbcU;
-	gpi_cfg_tmp.gpi_dtx_aseq_len = 0x40; /* See AAVB-2028 */
+	gpi_cfg_tmp.gpi_dtx_aseq_len = 0x40;
 	gpi_cfg_tmp.emac_1588_ts_en = TRUE;
 
 	platform->etgpi[1] = pfe_gpi_create(platform->cbus_baseaddr, CBUS_ETGPI2_BASE_ADDR, &gpi_cfg_tmp);
@@ -1819,7 +1840,7 @@ static errno_t pfe_platform_create_etgpi(pfe_platform_t *platform)
 	/*	ETGPI3 */
 	gpi_cfg_tmp.alloc_retry_cycles = 0x200U;
 	gpi_cfg_tmp.gpi_tmlf_txthres = 0xbcU;
-	gpi_cfg_tmp.gpi_dtx_aseq_len = 0x40; /* See AAVB-2028 */
+	gpi_cfg_tmp.gpi_dtx_aseq_len = 0x40;
 	gpi_cfg_tmp.emac_1588_ts_en = TRUE;
 
 	platform->etgpi[2] = pfe_gpi_create(platform->cbus_baseaddr, CBUS_ETGPI3_BASE_ADDR, &gpi_cfg_tmp);
@@ -2000,8 +2021,10 @@ static void pfe_platform_destroy_class(pfe_platform_t *platform)
 /**
  * @brief		Assign L2 Bridge to the platform
  */
-static errno_t pfe_platform_create_l2_bridge(pfe_platform_t *platform)
+static errno_t pfe_platform_create_l2_bridge(pfe_platform_t *platform, const pfe_platform_config_t *config)
 {
+	uint16_t vlan_id = config->vlan_id;
+
 	platform->mactab = pfe_l2br_table_create(platform->cbus_baseaddr, PFE_L2BR_TABLE_MAC2F);
 	if (NULL == platform->mactab)
 	{
@@ -2016,7 +2039,13 @@ static errno_t pfe_platform_create_l2_bridge(pfe_platform_t *platform)
 		return ENODEV;
 	}
 
-	platform->l2_bridge = pfe_l2br_create(platform->classifier, 1U, platform->mactab, platform->vlantab);
+	if((vlan_id == 0U) || (vlan_id >= 4095U))
+	{
+		NXP_LOG_WARNING("VLAN ID incorrect or not set. Using default VLAN ID = 0x01.\n");
+		vlan_id = 0x01;
+	}
+
+	platform->l2_bridge = pfe_l2br_create(platform->classifier, vlan_id, 300U, platform->mactab, platform->vlantab);
 	if (NULL == platform->l2_bridge)
 	{
 		NXP_LOG_ERROR("Could not create L2 Bridge\n");
@@ -2096,7 +2125,7 @@ static errno_t pfe_platform_create_rtable(pfe_platform_t *platform, const pfe_pl
 	}
 	else
 	{
-		NXP_LOG_INFO("Routing table created, Hash Table @ p%p, Pool @ p%p (%d bytes)\n", oal_mm_virt_to_phys_contig((void *)htable_mem), oal_mm_virt_to_phys_contig((void *)htable_mem) + pool_offs, (uint32_t)platform->rtable_size);
+		NXP_LOG_INFO("Routing table created, Hash Table @ p0x%"PRINTADDR_T", Pool @ p0x%"PRINTADDR_T" (%u bytes)\n", (addr_t)oal_mm_virt_to_phys_contig((void *)htable_mem), (addr_t)oal_mm_virt_to_phys_contig((void *)htable_mem) + (addr_t)pool_offs, (uint_t)platform->rtable_size);
 	}
 
 	return EOK;
@@ -2415,8 +2444,12 @@ static errno_t pfe_platform_create_fci(pfe_platform_t *platform)
 	fci_init_info_t fci_init_info;
 	errno_t ret = EOK;
 
+#if defined(PFE_CFG_RTABLE_ENABLE)
 	fci_init_info.rtable = platform->rtable;
+#endif /* PFE_CFG_RTABLE_ENABLE */
+#if defined(PFE_CFG_L2BRIDGE_ENABLE)
 	fci_init_info.l2_bridge = platform->l2_bridge;
+#endif /* PFE_CFG_L2BRIDGE_ENABLE */
 	fci_init_info.class = platform->classifier;
 	fci_init_info.phy_if_db = platform->phy_if_db;
 	fci_init_info.log_if_db = platform->log_if_db;
@@ -2928,9 +2961,7 @@ errno_t pfe_platform_soft_reset(const pfe_platform_t *platform)
 	addr = (void *)(CBUS_GLOBAL_CSR_BASE_ADDR + 0x20U + (addr_t)(pfe.cbus_baseaddr));
 	regval = hal_read32(addr) | (1UL << 30U);
 	hal_write32(regval, addr);
-
-	oal_time_usleep(100000);
-
+	oal_time_usleep(5U);
 	regval &= ~(1UL << 30U);
 	hal_write32(regval, addr);
 
@@ -3010,40 +3041,41 @@ errno_t pfe_platform_init(const pfe_platform_config_t *config)
 #endif
 	pfe.tmu_pe_count = 0U;
 
-	if (TRUE == config->common_irq_mode)
-	{
-		/*	IRQ mode: global isr (FPGA) */
+#if (PFE_CFG_IP_VERSION == PFE_CFG_IP_VERSION_FPGA_5_0_4)
+	/*	IRQ mode: global isr (FPGA) */
 
-		NXP_LOG_INFO("Detected Common IRQ mode (FPGA/PCI)\n");
+	NXP_LOG_INFO("Detected Common IRQ mode (FPGA/PCI)\n");
 
-		pfe.irq_global = oal_irq_create((int32_t)config->irq_vector_global, OAL_IRQ_FLAG_SHARED, "PFE IRQ");
-		if (NULL == pfe.irq_global)
+	pfe.irq_global = oal_irq_create((int32_t)config->irq_vector_global, OAL_IRQ_FLAG_SHARED, "PFE IRQ");
+	if (NULL == pfe.irq_global)
+	{
+		NXP_LOG_ERROR("Could not create global PFE IRQ\n");
+		goto exit;
+	}
+	else
+	{
+		if (EOK != oal_irq_add_handler(pfe.irq_global, &pfe_platform_global_isr, &pfe, NULL))
 		{
-			NXP_LOG_ERROR("Could not create global PFE IRQ\n");
+			NXP_LOG_ERROR("Could not add global IRQ handler\n");
 			goto exit;
 		}
-		else
-		{
-			if (EOK != oal_irq_add_handler(pfe.irq_global, &pfe_platform_global_isr, &pfe, NULL))
-			{
-				NXP_LOG_ERROR("Could not add global IRQ handler\n");
-				goto exit;
-			}
-		}
 	}
-	else /* config->common_irq_mode */
-	{
-		/*	IRQ mode: per block isr (S32G) */
+#elif ((PFE_CFG_IP_VERSION == PFE_CFG_IP_VERSION_NPU_7_14) \
+	  || (PFE_CFG_IP_VERSION == PFE_CFG_IP_VERSION_NPU_7_14a))
 
-		NXP_LOG_INFO("Detected per block IRQ mode (S32G)\n");
+	/*	IRQ mode: per block isr (S32G) */
 
-		/* Note:
-		 *
-		 * The irq handlers are created inside corresponding constructors,
-		 * like pfe_platform_create_hif() or pfe_platform_create_bmu()
-		 *
-		 */
-	}
+	NXP_LOG_INFO("Detected per block IRQ mode (S32G)\n");
+
+	/* Note:
+	 *
+	 * The irq handlers are created inside corresponding constructors,
+	 * like pfe_platform_create_hif() or pfe_platform_create_bmu()
+	 *
+	 */
+#else
+#error Unsupported IP version
+#endif /* PFE_CFG_IP_VERSION */
 
 	/*	BMU */
 	ret = pfe_platform_create_bmu(&pfe, config);
@@ -3129,7 +3161,7 @@ errno_t pfe_platform_init(const pfe_platform_config_t *config)
 #ifdef PFE_CFG_FCI_ENABLE
 #if defined(PFE_CFG_L2BRIDGE_ENABLE)
 	/*	L2 Bridge. Must be initialized after soft reset. */
-	ret = pfe_platform_create_l2_bridge(&pfe);
+	ret = pfe_platform_create_l2_bridge(&pfe, config);
 	if (EOK != ret)
 	{
 		goto exit;
@@ -3153,6 +3185,44 @@ errno_t pfe_platform_init(const pfe_platform_config_t *config)
 	}
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
 
+	/*	Activate the classifier */
+	pfe_class_enable(pfe.classifier);
+
+	/* Get FW features */
+	if(FALSE != pfe_platform_class_feature_avail(pfe.classifier, "safety"))
+	{
+		NXP_LOG_DEBUG("\'safety\' available\n");
+	}
+	else
+	{
+		NXP_LOG_DEBUG("\'safety\' not available\n");
+	}
+
+	if(FALSE != pfe_platform_class_feature_avail(pfe.classifier, "ingress_vlan"))
+	{
+		NXP_LOG_DEBUG("\'ingress_vlan\' available\n");
+	}
+	else
+	{
+		NXP_LOG_DEBUG("\'ingress_vlan\' not available\n");
+	}
+
+	if(FALSE != pfe_platform_class_feature_avail(pfe.classifier, "egress_vlan"))
+	{
+		NXP_LOG_DEBUG("\'egress_vlan\' available\n");
+	}
+	else
+	{
+		NXP_LOG_DEBUG("\'egress_vlan\' not available\n");
+	}
+
+	/*	Interfaces */
+	ret = pfe_platform_create_ifaces(&pfe);
+	if (EOK != ret)
+	{
+		goto exit;
+	}
+
 #if defined(PFE_CFG_GLOB_ERR_POLL_WORKER)
 	/*	Enable poller. First initialize state, then run the thread... */
 	pfe.poller_state = POLLER_STATE_ENABLED;
@@ -3162,51 +3232,19 @@ errno_t pfe_platform_init(const pfe_platform_config_t *config)
 	if (NULL == pfe.poller)
 	{
 		NXP_LOG_ERROR("Couldn't start polling thread\n");
-		return ENODEV;
+		ret = ENODEV;
+		goto exit;
 	}
 #else  /* PFE_CFG_GLOB_ERR_POLL_WORKER */
 	pfe.poller_state = POLLER_STATE_DISABLED;
 #endif /* PFE_CFG_GLOB_ERR_POLL_WORKER */
 
-	/*	Activate the classifier */
-	pfe_class_enable(pfe.classifier);
-	/*	Wait a (micro) second to let classifier firmware to initialize */
-	oal_time_usleep(50000);
-
-    /* Get FW features */
-    if(FALSE != pfe_platform_class_feature_avail(pfe.classifier, "safety"))
-    {
-        NXP_LOG_DEBUG("\'safety\' available\n");
-    }
-    else
-    {
-        NXP_LOG_DEBUG("\'safety\' not available\n");
-    }
-    if(FALSE != pfe_platform_class_feature_avail(pfe.classifier, "ingress_vlan"))
-    {
-        NXP_LOG_DEBUG("\'ingress_vlan\' available\n");
-    }
-    else
-    {
-        NXP_LOG_DEBUG("\'ingress_vlan\' not available\n");
-    }
-    if(FALSE != pfe_platform_class_feature_avail(pfe.classifier, "egress_vlan"))
-    {
-        NXP_LOG_DEBUG("\'egress_vlan\' available\n");
-    }
-    else
-    {
-        NXP_LOG_DEBUG("\'egress_vlan\' not available\n");
-    }
-	/*	Interfaces */
-	ret = pfe_platform_create_ifaces(&pfe);
-	if (EOK != ret)
-	{
-		goto exit;
-	}
-
 #ifdef PFE_CFG_FCI_ENABLE
-    ret = pfe_spd_acc_init(pfe.classifier, pfe.rtable);
+#if defined(PFE_CFG_RTABLE_ENABLE)
+	ret = pfe_spd_acc_init(pfe.classifier, pfe.rtable);
+#else
+	ret = pfe_spd_acc_init(pfe.classifier, NULL);
+#endif
 	if (EOK != ret)
 	{
 		goto exit;
@@ -3251,6 +3289,40 @@ exit:
 	return ret;
 }
 
+static void pfe_platform_destroy_group1(void)
+{
+#ifdef PFE_CFG_FCI_ENABLE
+    pfe_platform_destroy_fci(&pfe);
+#endif /* PFE_CFG_FCI_ENABLE */
+	pfe_platform_destroy_ifaces(&pfe);
+	pfe_platform_destroy_hif(&pfe);
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+	pfe_platform_destroy_hif_nocpy(&pfe);
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
+	pfe_platform_destroy_gpi(&pfe);
+	pfe_platform_destroy_etgpi(&pfe);
+	pfe_platform_destroy_hgpi(&pfe);
+	pfe_platform_destroy_bmu(&pfe);
+#if defined(PFE_CFG_RTABLE_ENABLE)
+    pfe_platform_destroy_rtable(&pfe);
+#endif /* PFE_CFG_RTABLE_ENABLE */
+#if defined(PFE_CFG_L2BRIDGE_ENABLE)
+	pfe_platform_destroy_l2_bridge(&pfe);
+#endif /* PFE_CFG_L2BRIDGE_ENABLE */
+}
+
+static void pfe_platform_destroy_group2(void)
+{
+#ifdef PFE_CFG_FCI_ENABLE
+	pfe_spd_acc_destroy(pfe.phy_if_db);
+#endif
+	pfe_platform_destroy_class(&pfe);
+	pfe_platform_destroy_util(&pfe);
+	pfe_platform_destroy_tmu(&pfe);
+	pfe_platform_destroy_emac(&pfe);
+	pfe_platform_destroy_safety(&pfe);
+}
+
 /**
  * @brief		Destroy the platform
  */
@@ -3279,32 +3351,8 @@ errno_t pfe_platform_remove(void)
 	}
 #endif /* PFE_CFG_GLOB_ERR_POLL_WORKER */
 
-	pfe_platform_destroy_hif(&pfe);
-#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
-	pfe_platform_destroy_hif_nocpy(&pfe);
-#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
-	pfe_platform_destroy_gpi(&pfe);
-	pfe_platform_destroy_etgpi(&pfe);
-	pfe_platform_destroy_hgpi(&pfe);
-	pfe_platform_destroy_bmu(&pfe);
-#ifdef PFE_CFG_FCI_ENABLE
-        pfe_platform_destroy_fci(&pfe);
-#endif /* PFE_CFG_FCI_ENABLE */
-#if defined(PFE_CFG_RTABLE_ENABLE)
-        pfe_platform_destroy_rtable(&pfe);
-#endif /* PFE_CFG_RTABLE_ENABLE */
-#if defined(PFE_CFG_L2BRIDGE_ENABLE)
-	pfe_platform_destroy_l2_bridge(&pfe);
-#endif /* PFE_CFG_L2BRIDGE_ENABLE */
-#ifdef PFE_CFG_FCI_ENABLE
-	pfe_spd_acc_destroy();
-#endif
-	pfe_platform_destroy_ifaces(&pfe);
-	pfe_platform_destroy_class(&pfe);
-	pfe_platform_destroy_tmu(&pfe);
-	pfe_platform_destroy_util(&pfe);
-	pfe_platform_destroy_emac(&pfe);
-	pfe_platform_destroy_safety(&pfe);
+	pfe_platform_destroy_group1();
+	pfe_platform_destroy_group2();
 
 	if (NULL_ADDR != pfe.cbus_baseaddr)
 	{
diff --git a/sw/pfe_platform/hw/s32g/pfe_tmu_csr.c b/sw/pfe_platform/hw/s32g/pfe_tmu_csr.c
index 1d01c45..7678e10 100644
--- a/sw/pfe_platform/hw/s32g/pfe_tmu_csr.c
+++ b/sw/pfe_platform/hw/s32g/pfe_tmu_csr.c
@@ -29,6 +29,8 @@
 
 static errno_t pfe_tmu_cntx_mem_write(addr_t cbus_base_va, pfe_ct_phy_if_id_t phy, uint8_t loc, uint32_t data);
 static errno_t pfe_tmu_cntx_mem_read(addr_t cbus_base_va, pfe_ct_phy_if_id_t phy, uint8_t loc, uint32_t *data);
+static errno_t pfe_tmu_context_memory(addr_t cbus_base_va, pfe_ct_phy_if_id_t phy, uint8_t queue_temp, uint16_t min, uint16_t max);
+static uint8_t pfe_tmu_hif_q_to_tmu_q(addr_t cbus_base_va, pfe_ct_phy_if_id_t phy, uint8_t queue);
 
 /**
  * @brief		Return QoS configuration of given physical interface
@@ -411,6 +413,42 @@ static uint8_t pfe_tmu_hif_q_to_tmu_q(addr_t cbus_base_va, pfe_ct_phy_if_id_t ph
 	return PFE_TMU_INVALID_QUEUE;
 }
 
+static errno_t pfe_tmu_context_memory(addr_t cbus_base_va, pfe_ct_phy_if_id_t phy, uint8_t queue_temp, uint16_t min, uint16_t max)
+{
+	uint32_t reg;
+	errno_t ret;
+	/*	Initialize probabilities. Probability tables are @ position 5 and 6 per queue. */
+	/*	Context memory position 5 (curQ_hw_prob_cfg_tbl0):
+	 	 	[4:0]	Zone0 value
+	 		[9:5]	Zone1 value
+	 		[14:10]	Zone2 value
+	 		[19:15]	Zone3 value
+	 		[24:20]	Zone4 value
+	 		[29:25]	Zone5 value
+	 	Context memory position 6 (curQ_hw_prob_cfg_tbl1):
+	 	 	[4:0]	Zone6 value
+	 	 	[9:5]	Zone7 value
+	*/
+
+	reg = 0U;
+	ret = pfe_tmu_cntx_mem_write(cbus_base_va, phy, (8U * queue_temp) + 5U, reg);
+	if (EOK != ret)
+	{
+		return ret;
+	}
+
+	ret = pfe_tmu_cntx_mem_write(cbus_base_va, phy, (8U * queue_temp) + 6U, reg);
+	if (EOK != ret)
+	{
+		return ret;
+	}
+
+	/*	curQ_Qmax[8:0], curQ_Qmin[8:0], curQ_cfg[1:0] are @ position 4 per queue */
+	reg = ((uint32_t)max << 11U) | ((uint32_t)min << 2U) | 0x2UL;
+	ret = pfe_tmu_cntx_mem_write(cbus_base_va, phy, (8U * queue_temp) + 4U, reg);
+	return ret;
+}
+
 /**
  * @brief		Get number of packets in the queue
  * @param[in]	cbus_base_va The cbus base address
@@ -658,7 +696,6 @@ errno_t pfe_tmu_q_mode_set_tail_drop(addr_t cbus_base_va, pfe_ct_phy_if_id_t phy
  */
 errno_t pfe_tmu_q_mode_set_wred(addr_t cbus_base_va, pfe_ct_phy_if_id_t phy, uint8_t queue, uint16_t min, uint16_t max)
 {
-	uint32_t reg;
 	errno_t ret;
 	uint8_t queue_temp = queue;
 
@@ -679,41 +716,8 @@ errno_t pfe_tmu_q_mode_set_wred(addr_t cbus_base_va, pfe_ct_phy_if_id_t phy, uin
 			return EINVAL;
 		}
 	}
-
-	/*	Initialize probabilities. Probability tables are @ position 5 and 6 per queue. */
-	/*	Context memory position 5 (curQ_hw_prob_cfg_tbl0):
-	 	 	[4:0]	Zone0 value
-	 		[9:5]	Zone1 value
-	 		[14:10]	Zone2 value
-	 		[19:15]	Zone3 value
-	 		[24:20]	Zone4 value
-	 		[29:25]	Zone5 value
-	 	Context memory position 6 (curQ_hw_prob_cfg_tbl1):
-	 	 	[4:0]	Zone6 value
-	 	 	[9:5]	Zone7 value
-	*/
-	reg = 0U;
-	ret = pfe_tmu_cntx_mem_write(cbus_base_va, phy, (8U * queue_temp) + 5U, reg);
-	if (EOK != ret)
-	{
-		return ret;
-	}
-
-	ret = pfe_tmu_cntx_mem_write(cbus_base_va, phy, (8U * queue_temp) + 6U, reg);
-	if (EOK != ret)
-	{
-		return ret;
-	}
-
-	/*	curQ_Qmax[8:0], curQ_Qmin[8:0], curQ_cfg[1:0] are @ position 4 per queue */
-	reg = ((uint32_t)max << 11U) | ((uint32_t)min << 2U) | 0x2UL;
-	ret = pfe_tmu_cntx_mem_write(cbus_base_va, phy, (8U * queue_temp) + 4U, reg);
-	if (EOK != ret)
-	{
-		return ret;
-	}
-
-	return EOK;
+	ret = pfe_tmu_context_memory(cbus_base_va, phy, queue_temp, min, max);
+	return ret;
 }
 
 /**
@@ -1049,7 +1053,10 @@ errno_t pfe_tmu_shp_cfg_set_idle_slope(addr_t cbus_base_va,
 
 	reg = hal_read32(cbus_base_va + CBUS_GLOBAL_CSR_BASE_ADDR + WSP_CLK_FRQ);
 	sys_clk_hz = (reg & 0xffffULL) * 1000000ULL;
+#ifndef __ghs__
+	/* Workaround for ghs linker error with long long printf AAVB-3569 */
 	NXP_LOG_INFO("Using PFE sys_clk value %"PRINT64"uHz\n", sys_clk_hz);
+#endif
 
 	/*	Set weight (added to credit counter with each sys_clk_hz/clk_div tick) */
 	switch (pfe_tmu_shp_cfg_get_rate_mode(cbus_base_va, phy, shp))
@@ -1090,7 +1097,10 @@ errno_t pfe_tmu_shp_cfg_set_idle_slope(addr_t cbus_base_va,
 		reg = hal_read32(shp_base_va + TMU_SHP_CTRL);
 		reg &= 0x1U;
 		hal_write32(reg | (CLK_DIV_LOG2 << 1), shp_base_va + TMU_SHP_CTRL);
+#ifndef __ghs__
+		/* Workaround for ghs linker error with long long printf AAVB-3569 */
 		NXP_LOG_INFO("Shaper tick is %"PRINT64"uHz\n", sys_clk_hz / CLK_DIV);
+#endif
 	}
 
 	return ret;
@@ -1114,7 +1124,27 @@ uint32_t pfe_tmu_shp_cfg_get_idle_slope(addr_t cbus_base_va,
 	reg = hal_read32(cbus_base_va + CBUS_GLOBAL_CSR_BASE_ADDR + WSP_CLK_FRQ);
 	sys_clk_hz = (reg & 0xffffULL) * 1000000ULL;
 	wgt = hal_read32(shp_base_va + TMU_SHP_WGHT) & 0xfffffU;
-	isl = ((uint64_t)wgt * 8ULL * sys_clk_hz) / (CLK_DIV * (1ULL << 12));
+	
+	switch (pfe_tmu_shp_cfg_get_rate_mode(cbus_base_va, phy, shp))
+	{
+		case RATE_MODE_DATA_RATE:
+		{
+			isl = ((uint64_t)wgt * 8ULL * sys_clk_hz) / (CLK_DIV * (1ULL << 12));
+		}
+		break;
+		
+		case RATE_MODE_PACKET_RATE:
+		{
+			isl = ((uint64_t)wgt * sys_clk_hz) / (CLK_DIV * (1ULL << 12));
+		}
+		break;
+		
+		default:
+		{
+			isl = 0ULL;
+			break;
+		}
+	}
 
 	return (uint32_t)isl;
 }
diff --git a/sw/pfe_platform/hw/s32g/pfe_util_csr.c b/sw/pfe_platform/hw/s32g/pfe_util_csr.c
index 006547e..f5c516c 100644
--- a/sw/pfe_platform/hw/s32g/pfe_util_csr.c
+++ b/sw/pfe_platform/hw/s32g/pfe_util_csr.c
@@ -55,3 +55,24 @@ uint32_t pfe_util_cfg_get_text_stat(addr_t base_va, char_t *buf, uint32_t size,
 
 	return len;
 }
+
+/**
+ * @brief		Dispatch interrupt from util.
+ * @details		ACK and process triggered interrupts.
+
+ * @param[in]	base_va 	Base address of UTIL register space (virtual)
+ * @return		EOK if interrupt has been handled, error code otherwise
+ */
+errno_t pfe_util_cfg_isr(addr_t base_va)
+{
+	uint32_t irq_src;
+
+	/* Get IRQ status */
+	irq_src = hal_read32(base_va + UTIL_UPE_GP_REG_ADDR);
+	/*ACK interrupt */
+	hal_write32(irq_src, base_va + UTIL_UPE_GP_REG_ADDR);
+
+	/* TODO: Handle related interrupt here */
+
+	return EOK;
+}
diff --git a/sw/pfe_platform/hw/s32g/pfe_util_csr.h b/sw/pfe_platform/hw/s32g/pfe_util_csr.h
index 8cb77e3..e32aff8 100644
--- a/sw/pfe_platform/hw/s32g/pfe_util_csr.h
+++ b/sw/pfe_platform/hw/s32g/pfe_util_csr.h
@@ -53,6 +53,8 @@
 #define UTIL_BUS_ACCESS_RDATA		(CBUS_UTIL_CSR_BASE_ADDR + 0x230U)
 
 #define UTIL_INQ_AFULL_THRES		(CBUS_UTIL_CSR_BASE_ADDR + 0x234U)
+#define UTIL_UPE_GP_REG_ADDR		(CBUS_UTIL_CSR_BASE_ADDR + 0x238U)
+#define UTIL_HOST_GP_REG_ADDR		(CBUS_UTIL_CSR_BASE_ADDR + 0x23CU)
 
 #define UTIL_PE_IBUS_ACCESS_PMEM	(1UL << 17U)
 #define UTIL_PE_IBUS_ACCESS_DMEM	(1UL << 18U)
@@ -60,5 +62,6 @@
 #define UTIL_PE_IBUS_PMEM_BASE(i)	((((i) & 0x3) << 20U) | UTIL_PE_IBUS_ACCESS_PMEM)
 
 uint32_t pfe_util_cfg_get_text_stat(addr_t base_va, char_t *buf, uint32_t size, uint8_t verb_level);
+errno_t pfe_util_cfg_isr(addr_t base_va);
 
 #endif /* UTIL_CSR_H_ */
diff --git a/sw/pfe_platform/public/pfe_ct.h b/sw/pfe_platform/public/pfe_ct.h
index 1972778..798e5f7 100644
--- a/sw/pfe_platform/public/pfe_ct.h
+++ b/sw/pfe_platform/public/pfe_ct.h
@@ -312,14 +312,13 @@ typedef struct __attribute__((packed, aligned(4)))
  */
 typedef enum __attribute__((packed))
 {
-	IF_OP_DISABLED = 0U,			/*!< Disabled */
-	IF_OP_DEFAULT = 1U,				/*!< Default operational mode */
-	IF_OP_BRIDGE = 2U,				/*!< L2 bridge */
-	IF_OP_ROUTER = 3U,				/*!< L3 router */
-	IF_OP_VLAN_BRIDGE = 4U,			/*!< L2 bridge with VLAN */
-	IF_OP_FLEX_ROUTER = 5U,			/*!< Flexible router */
-	IF_OP_L2L3_BRIDGE = 6U,			/*!< L2-L3 bridge */
-	IF_OP_L2L3_VLAN_BRIDGE = 7U,	/*!< L2-L3 bridge with VLAN */
+	IF_OP_DEFAULT = 0U,				/*!< Default operational mode */
+	IF_OP_BRIDGE = 1U,				/*!< L2 bridge */
+	IF_OP_ROUTER = 2U,				/*!< L3 router */
+	IF_OP_VLAN_BRIDGE = 3U,			/*!< L2 bridge with VLAN */
+	IF_OP_FLEX_ROUTER = 4U,			/*!< Flexible router */
+	IF_OP_L2L3_BRIDGE = 5U,			/*!< L2-L3 bridge */
+	IF_OP_L2L3_VLAN_BRIDGE = 6U,	/*!< L2-L3 bridge with VLAN */
 } pfe_ct_if_op_mode_t;
 
 /*	We expect given pfe_ct_if_op_mode_t size due to byte order compatibility. */
@@ -339,6 +338,7 @@ typedef enum __attribute__((packed))
 	IF_FL_PTP_PROMISC = (1U << 9U),		/*!< PTP traffic will bypass all ingress checks */
 	IF_FL_LOOPBACK = (1U << 10U),		/*!< If set, interface is in loopback mode */
 	IF_FL_ALLOW_Q_IN_Q = (1U << 11U),	/*!< If set, QinQ traffic is accepted */
+	IF_FL_DISCARD_TTL = (1U << 12U),	/*!< Discard packet with TTL<2 instead of passing to default logical interface */
 	IF_FL_MAX = (int)(1U << 31U)
 } pfe_ct_if_flags_t;
 
@@ -723,6 +723,15 @@ typedef struct __attribute__ (( packed, aligned (4) ))
 	uint8_t graceful_stop_confirmation;
 } pfe_ct_pe_misc_control_t;
 
+/**
+	@brief Miscellaneous config between host and PE
+*/
+typedef struct __attribute__ (( packed, aligned (4) ))
+{
+	/*	Timeout of mac aging algorithm of l2 bridge in seconds*/
+	uint16_t l2_mac_aging_timeout;
+} pfe_ct_misc_config_t;
+
 /**
  * @brief Statistics gathered for each classification algorithm
  * @details NULL pointer means that given statistics are no available
@@ -866,6 +875,8 @@ typedef struct __attribute__((packed, aligned(4)))
 	pfe_ct_version_t version;
 	/*	Misc. control  */
 	PFE_PTR(pfe_ct_pe_misc_control_t) pe_misc_control;
+	/*	Misc. config  */
+	PFE_PTR(pfe_ct_misc_config_t) misc_config;
 	/*	Errors reported by the FW */
 	PFE_PTR(pfe_ct_error_record_t) error_record;
 	/*	FW state */
@@ -874,8 +885,6 @@ typedef struct __attribute__((packed, aligned(4)))
 	uint32_t measurement_count;
 	/*	Performance measurement storages - NULL = none (feature not enabled) */
 	PFE_PTR(pfe_ct_measurement_t) measurements;
-	/*	PE ID */
-	PFE_PTR(uint8_t) pe_id;
 } pfe_ct_common_mmap_t;
 
 /**
@@ -909,14 +918,37 @@ typedef struct __attribute__((packed, aligned(4)))
 	PFE_PTR(pfe_ct_buffer_t) get_buffer;
 } pfe_ct_class_mmap_t;
 
+/**
+ * @brief IPsec state
+ */
+typedef struct  {
+	uint32_t hse_mu;					/* HSE MU to be used */
+	uint32_t hse_mu_chn;				/* HSE MU channel to be used (currently unused) */
+	uint32_t response_ok;				/* HSE_SRV_RSP_OK */
+	uint32_t verify_failed;				/* HSE_SRV_RSP_VERIFY_FAILED */
+	uint32_t ipsec_invalid_data;		/* HSE_SRV_RSP_IPSEC_INVALID_DATA */
+	uint32_t ipsec_replay_detected;		/* HSE_SRV_RSP_IPSEC_REPLAY_DETECTED */
+	uint32_t ipsec_replay_late;			/* HSE_SRV_RSP_IPSEC_REPLAY_LATE */
+	uint32_t ipsec_seqnum_overflow;		/* HSE_SRV_RSP_IPSEC_SEQNUM_OVERFLOW */
+	uint32_t ipsec_ce_drop;				/* HSE_SRV_RSP_IPSEC_CE_DROP */
+	uint32_t ipsec_ttl_exceeded;		/* HSE_SRV_RSP_IPSEC_TTL_EXCEEDED */
+	uint32_t ipsec_valid_dummy_payload;	/* HSE_SRV_RSP_IPSEC_VALID_DUMMY_PAYLOAD */
+	uint32_t ipsec_header_overflow;		/* HSE_SRV_RSP_IPSEC_HEADER_LEN_OVERFLOW */
+	uint32_t ipsec_padding_check_fail;	/* HSE_SRV_RSP_IPSEC_PADDING_CHECK_FAIL */
+	uint32_t handled_error_code;		/* Code of handled error (one of above errors) */
+	uint32_t handled_error_said;		/* SAId of handled error (one of above errors) */
+	uint32_t unhandled_error_code;		/* default case store code */
+	uint32_t unhandled_error_said;		/* default case store code */
+} ipsec_state_t;
 
 /**
  * @brief UTIL PE memory map representation type shared between host and PFE
  */
 typedef struct __attribute__((packed, aligned(4)))
 {
-	/*	Common part for all PE types - must be 1st in the structure */
+	/*  Common part for all PE types - must be 1st in the structure */
 	pfe_ct_common_mmap_t common;
+	PFE_PTR(ipsec_state_t) ipsec_state;
 } pfe_ct_util_mmap_t;
 
 typedef union __attribute__((packed, aligned(4)))
@@ -1026,7 +1058,7 @@ ct_assert(sizeof(pfe_ct_hif_tx_flags_t) == sizeof(uint8_t));
 /**
  * @brief	HIF TX packet header
  */
-typedef struct __attribute__((aligned))
+typedef struct __attribute__((packed))
 {
 	/*	TX flags */
 	pfe_ct_hif_tx_flags_t flags;
@@ -1075,7 +1107,7 @@ typedef struct __attribute__((packed))
  */
 typedef struct __attribute__((packed))
 {
-	uint8_t reserved[24U];
+	uint8_t reserved[16U];
 } pfe_ct_post_cls_hdr_t;
 
 /**
@@ -1218,11 +1250,11 @@ typedef struct __attribute__((packed, aligned(4))) pfe_ct_rtable_entry_tag
 	/*	---------- 6x8 byte boundary ---------- */
 
 	/*	*/
+	/*	Information updated by the Classifier */
+	pfe_rtable_entry_status_t status;
 	uint8_t entry_state;
 	/*	Egress physical interface ID */
 	pfe_ct_phy_if_id_t e_phy_if;
-	/*	Information updated by the Classifier */
-	pfe_rtable_entry_status_t status;
 	/*	IPv6 flag */
 	uint8_t flag_ipv6;
 	/*	Routing actions */
diff --git a/sw/pfe_platform/public/pfe_emac.h b/sw/pfe_platform/public/pfe_emac.h
index c713b95..70c9ab6 100644
--- a/sw/pfe_platform/public/pfe_emac.h
+++ b/sw/pfe_platform/public/pfe_emac.h
@@ -187,7 +187,7 @@ errno_t pfe_emac_mdio_write45(pfe_emac_t *emac, uint8_t pa, uint8_t dev, uint16_
 errno_t pfe_emac_add_addr(pfe_emac_t *emac, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
 errno_t pfe_emac_flush_mac_addrs(pfe_emac_t *emac, pfe_emac_crit_t crit, pfe_mac_type_t type, pfe_drv_id_t owner);
 errno_t pfe_emac_get_addr(pfe_emac_t *emac, pfe_mac_addr_t addr);
-errno_t pfe_emac_del_addr(pfe_emac_t *emac, const pfe_mac_addr_t addr);
+errno_t pfe_emac_del_addr(pfe_emac_t *emac, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
 void pfe_emac_destroy(pfe_emac_t *emac);
 uint32_t pfe_emac_get_text_statistics(const pfe_emac_t *emac, char_t *buf, uint32_t buf_len, uint8_t verb_level);
 uint32_t pfe_emac_get_rx_cnt(const pfe_emac_t *emac);
diff --git a/sw/pfe_platform/public/pfe_fp.h b/sw/pfe_platform/public/pfe_fp.h
index cf5078e..fffb9b2 100644
--- a/sw/pfe_platform/public/pfe_fp.h
+++ b/sw/pfe_platform/public/pfe_fp.h
@@ -13,8 +13,8 @@
 
 void pfe_fp_init(void);
 uint32_t pfe_fp_create_table(pfe_class_t *class, uint8_t rules_count);
-uint32_t pfe_fp_table_write_rule(pfe_class_t *class, uint32_t table_address, pfe_ct_fp_rule_t *rule, uint8_t position);
-void pfe_fp_destroy_table(pfe_class_t *class, uint32_t table_address);
+uint32_t pfe_fp_table_write_rule(pfe_class_t *class, uint32_t table_address, const pfe_ct_fp_rule_t *rule, uint8_t position);
+void pfe_fp_destroy_table(const pfe_class_t *class, uint32_t table_address);
 errno_t pfe_fp_table_get_statistics(pfe_class_t *class, uint32_t pe_idx ,uint32_t table_address, pfe_ct_class_flexi_parser_stats_t *stats);
 
 #endif
diff --git a/sw/pfe_platform/public/pfe_hif_chnl.h b/sw/pfe_platform/public/pfe_hif_chnl.h
index 89e1227..2e756c3 100644
--- a/sw/pfe_platform/public/pfe_hif_chnl.h
+++ b/sw/pfe_platform/public/pfe_hif_chnl.h
@@ -185,7 +185,7 @@ typedef void (* pfe_hif_chnl_cbk_t)(void *arg);
 errno_t pfe_hif_chnl_rx_enable(pfe_hif_chnl_t *chnl) __attribute__((cold));
 void pfe_hif_chnl_rx_disable(pfe_hif_chnl_t *chnl) __attribute__((cold));
 errno_t pfe_hif_chnl_rx(pfe_hif_chnl_t *chnl, void **buf_pa, uint32_t *len, bool_t *lifm) __attribute__((hot));
-errno_t pfe_hif_chnl_rx_va(const pfe_hif_chnl_t *chnl, void **buf_va, uint32_t *len, bool_t *lifm, void **meta) __attribute__((hot));
+errno_t pfe_hif_chnl_rx_va(pfe_hif_chnl_t *chnl, void **buf_va, uint32_t *len, bool_t *lifm, void **meta) __attribute__((hot));
 uint32_t pfe_hif_chnl_get_meta_size(const pfe_hif_chnl_t *chnl) __attribute__((cold));
 errno_t pfe_hif_chnl_release_buf(pfe_hif_chnl_t *chnl, void *buf_va) __attribute__((hot));
 void pfe_hif_chnl_rx_dma_start(const pfe_hif_chnl_t *chnl) __attribute__((hot));
@@ -196,7 +196,7 @@ uint32_t pfe_hif_chnl_get_rx_fifo_depth(const pfe_hif_chnl_t *chnl) __attribute_
 /*	TX */
 errno_t pfe_hif_chnl_tx_enable(pfe_hif_chnl_t *chnl) __attribute__((cold));
 void pfe_hif_chnl_tx_disable(pfe_hif_chnl_t *chnl) __attribute__((cold));
-errno_t pfe_hif_chnl_tx(const pfe_hif_chnl_t *chnl, const void *buf_pa, const void *buf_va, uint32_t len, bool_t lifm) __attribute__((hot));
+errno_t pfe_hif_chnl_tx(pfe_hif_chnl_t *chnl, const void *buf_pa, const void *buf_va, uint32_t len, bool_t lifm) __attribute__((hot));
 void pfe_hif_chnl_tx_dma_start(const pfe_hif_chnl_t *chnl) __attribute__((hot));
 bool_t pfe_hif_chnl_can_accept_tx_num(const pfe_hif_chnl_t *chnl, uint16_t num) __attribute__((pure, hot));
 #ifdef PFE_CFG_HIF_TX_FIFO_FIX
@@ -204,7 +204,7 @@ bool_t pfe_hif_chnl_can_accept_tx_data(pfe_hif_chnl_t *chnl, uint32_t num) __att
 #endif /* PFE_CFG_HIF_TX_FIFO_FIX */
 bool_t pfe_hif_chnl_tx_fifo_empty(const pfe_hif_chnl_t *chnl) __attribute__((pure, hot));
 bool_t pfe_hif_chnl_has_tx_conf(const pfe_hif_chnl_t *chnl) __attribute__((pure, hot));
-errno_t pfe_hif_chnl_get_tx_conf(const pfe_hif_chnl_t *chnl) __attribute__((hot));
+errno_t pfe_hif_chnl_get_tx_conf(pfe_hif_chnl_t *chnl) __attribute__((hot));
 uint32_t pfe_hif_chnl_get_tx_fifo_depth(const pfe_hif_chnl_t *chnl) __attribute__((pure, cold));
 
 /*	Instance control */
diff --git a/sw/pfe_platform/public/pfe_hif_nocpy.h b/sw/pfe_platform/public/pfe_hif_nocpy.h
index b64764c..5c886ca 100644
--- a/sw/pfe_platform/public/pfe_hif_nocpy.h
+++ b/sw/pfe_platform/public/pfe_hif_nocpy.h
@@ -24,6 +24,6 @@ typedef struct pfe_hif_nocpy_tag pfe_hif_nocpy_t;
 pfe_hif_nocpy_t *pfe_hif_nocpy_create(addr_t base_va, const pfe_bmu_t *bmu);
 pfe_hif_chnl_t *pfe_hif_nocpy_get_channel(const pfe_hif_nocpy_t *hif, uint32_t channel_id);
 uint32_t pfe_hif_nocpy_get_text_statistics(const pfe_hif_nocpy_t *hif, char_t *buf, uint32_t buf_len, uint8_t verb_level);
-void pfe_hif_nocpy_destroy(const pfe_hif_nocpy_t *hif);
+void pfe_hif_nocpy_destroy(pfe_hif_nocpy_t *hif);
 
 #endif /* PUBLIC_PFE_HIF_NOCPY_H_ */
diff --git a/sw/pfe_platform/public/pfe_hif_ring.h b/sw/pfe_platform/public/pfe_hif_ring.h
index cc7ec9e..c68fe53 100644
--- a/sw/pfe_platform/public/pfe_hif_ring.h
+++ b/sw/pfe_platform/public/pfe_hif_ring.h
@@ -10,10 +10,6 @@
 #ifndef PUBLIC_PFE_HIF_RING_H_
 #define PUBLIC_PFE_HIF_RING_H_
 
-#if defined(PFE_CFG_HIF_NOCPY_DIRECT)
-#include "pfe_ct.h" /* pfe_ct_phy_if_id_t */
-#endif /* PFE_CFG_HIF_NOCPY_DIRECT */
-
 typedef struct pfe_hif_ring_tag pfe_hif_ring_t;
 
 pfe_hif_ring_t *pfe_hif_ring_create(bool_t rx, uint16_t seqnum, bool_t nocpy) __attribute__((cold));
@@ -34,8 +30,5 @@ bool_t spfe_hif_ring_is_below_wm(const pfe_hif_ring_t *ring) __attribute__((pure
 void pfe_hif_ring_invalidate(const pfe_hif_ring_t *ring) __attribute__((cold));
 uint32_t pfe_hif_ring_get_fill_level(const pfe_hif_ring_t *ring) __attribute__((pure, hot));
 uint32_t pfe_hif_ring_dump(pfe_hif_ring_t *ring, char_t *name, char_t *buf, uint32_t size, uint8_t verb_level);
-#if defined(PFE_CFG_HIF_NOCPY_DIRECT)
-void pfe_hif_ring_set_egress_if(pfe_hif_ring_t *ring, pfe_ct_phy_if_id_t id) __attribute__((hot));
-#endif /* PFE_CFG_HIF_NOCPY_DIRECT */
 
 #endif /* PUBLIC_PFE_HIF_RING_H_ */
diff --git a/sw/pfe_platform/public/pfe_l2br.h b/sw/pfe_platform/public/pfe_l2br.h
index 0b01803..ba91f81 100644
--- a/sw/pfe_platform/public/pfe_l2br.h
+++ b/sw/pfe_platform/public/pfe_l2br.h
@@ -47,39 +47,39 @@ errno_t pfe_l2br_domain_destroy(pfe_l2br_domain_t *domain);
 errno_t pfe_l2br_domain_set_ucast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t hit, pfe_ct_l2br_action_t miss);
 errno_t pfe_l2br_domain_set_mcast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t hit, pfe_ct_l2br_action_t miss);
 errno_t pfe_l2br_domain_add_if(pfe_l2br_domain_t *domain, pfe_phy_if_t *iface, bool_t tagged);
-errno_t pfe_l2br_domain_del_if(pfe_l2br_domain_t *domain, pfe_phy_if_t *iface);
+errno_t pfe_l2br_domain_del_if(pfe_l2br_domain_t *domain, const pfe_phy_if_t *iface);
 pfe_phy_if_t *pfe_l2br_domain_get_first_if(pfe_l2br_domain_t *domain, pfe_l2br_domain_if_get_crit_t crit, void *arg);
 pfe_phy_if_t *pfe_l2br_domain_get_next_if(pfe_l2br_domain_t *domain);
-errno_t pfe_l2br_domain_get_vlan(pfe_l2br_domain_t *domain, uint16_t *vlan);
-errno_t pfe_l2br_domain_get_ucast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t *hit, pfe_ct_l2br_action_t *miss);
-errno_t pfe_l2br_domain_get_mcast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t *hit, pfe_ct_l2br_action_t *miss);
-bool_t pfe_l2br_domain_is_default(pfe_l2br_domain_t *domain) __attribute__((pure));
-bool_t pfe_l2br_domain_is_fallback(pfe_l2br_domain_t *domain) __attribute__((pure));
-uint32_t pfe_l2br_domain_get_if_list(pfe_l2br_domain_t *domain); __attribute__((pure))
-uint32_t pfe_l2br_domain_get_untag_if_list(pfe_l2br_domain_t *domain) __attribute__((pure));
+errno_t pfe_l2br_domain_get_vlan(const pfe_l2br_domain_t *domain, uint16_t *vlan);
+errno_t pfe_l2br_domain_get_ucast_action(const pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t *hit, pfe_ct_l2br_action_t *miss);
+errno_t pfe_l2br_domain_get_mcast_action(const pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t *hit, pfe_ct_l2br_action_t *miss);
+bool_t pfe_l2br_domain_is_default(const pfe_l2br_domain_t *domain) __attribute__((pure));
+bool_t pfe_l2br_domain_is_fallback(const pfe_l2br_domain_t *domain) __attribute__((pure));
+uint32_t pfe_l2br_domain_get_if_list(const pfe_l2br_domain_t *domain); __attribute__((pure))
+uint32_t pfe_l2br_domain_get_untag_if_list(const pfe_l2br_domain_t *domain) __attribute__((pure));
 
 errno_t pfe_l2br_static_entry_create(pfe_l2br_t *bridge, uint16_t vlan, pfe_mac_addr_t mac, uint32_t new_fw_list);
 errno_t pfe_l2br_static_entry_destroy(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent);
-errno_t pfe_l2br_static_entry_replace_fw_list(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, uint32_t new_fw_list);
-__attribute__((pure)) uint32_t pfe_l2br_static_entry_get_fw_list(pfe_l2br_static_entry_t* static_ent);
-__attribute__((pure)) uint16_t pfe_l2br_static_entry_get_vlan(pfe_l2br_static_entry_t *static_ent);
-void pfe_l2br_static_entry_get_mac(pfe_l2br_static_entry_t *static_ent, pfe_mac_addr_t mac);
-pfe_l2br_static_entry_t *pfe_l2br_static_entry_get_first(pfe_l2br_t *bridge, pfe_l2br_static_ent_get_crit_t crit, void* arg1, void *arg2);
+errno_t pfe_l2br_static_entry_replace_fw_list(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, uint32_t new_fw_list);
+__attribute__((pure)) uint32_t pfe_l2br_static_entry_get_fw_list(const pfe_l2br_static_entry_t* static_ent);
+__attribute__((pure)) uint16_t pfe_l2br_static_entry_get_vlan(const pfe_l2br_static_entry_t *static_ent);
+void pfe_l2br_static_entry_get_mac(const pfe_l2br_static_entry_t *static_ent, pfe_mac_addr_t mac);
+pfe_l2br_static_entry_t *pfe_l2br_static_entry_get_first(pfe_l2br_t *bridge, pfe_l2br_static_ent_get_crit_t crit, void* arg1,const void *arg2);
 pfe_l2br_static_entry_t *pfe_l2br_static_entry_get_next(pfe_l2br_t *bridge);
-errno_t pfe_l2br_static_entry_get_local_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t *local);
-errno_t pfe_l2br_static_entry_get_src_discard_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t *src_discard);
-errno_t pfe_l2br_static_entry_get_dst_discard_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t *dst_discard);
-errno_t pfe_l2br_static_entry_set_local_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t local);
-errno_t pfe_l2br_static_entry_set_src_discard_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t src_discard);
-errno_t pfe_l2br_static_entry_set_dst_discard_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t dst_discard);
+errno_t pfe_l2br_static_entry_get_local_flag(const pfe_l2br_t *bridge, const pfe_l2br_static_entry_t* static_ent, bool_t *local);
+errno_t pfe_l2br_static_entry_get_src_discard_flag(pfe_l2br_t *bridge, const pfe_l2br_static_entry_t* static_ent, bool_t *src_discard);
+errno_t pfe_l2br_static_entry_get_dst_discard_flag(const pfe_l2br_t *bridge, const pfe_l2br_static_entry_t* static_ent, bool_t *dst_discard);
+errno_t pfe_l2br_static_entry_set_local_flag(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t local);
+errno_t pfe_l2br_static_entry_set_src_discard_flag(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t src_discard);
+errno_t pfe_l2br_static_entry_set_dst_discard_flag(const pfe_l2br_t * bridge, pfe_l2br_static_entry_t* static_ent, bool_t dst_discard);
 
-pfe_l2br_t *pfe_l2br_create(pfe_class_t *class, uint16_t def_vlan, pfe_l2br_table_t *mac_table, pfe_l2br_table_t *vlan_table);
+pfe_l2br_t *pfe_l2br_create(pfe_class_t *class, uint16_t def_vlan, uint16_t def_aging_time, pfe_l2br_table_t *mac_table, pfe_l2br_table_t *vlan_table);
 errno_t pfe_l2br_destroy(pfe_l2br_t *bridge);
-pfe_l2br_domain_t *pfe_l2br_get_default_domain(pfe_l2br_t *bridge) __attribute__((pure));
-pfe_l2br_domain_t *pfe_l2br_get_fallback_domain(pfe_l2br_t *bridge) __attribute__((pure));
+pfe_l2br_domain_t *pfe_l2br_get_default_domain(const pfe_l2br_t *bridge) __attribute__((pure));
+pfe_l2br_domain_t *pfe_l2br_get_fallback_domain(const pfe_l2br_t *bridge) __attribute__((pure));
 pfe_l2br_domain_t *pfe_l2br_get_first_domain(pfe_l2br_t *bridge, pfe_l2br_domain_get_crit_t crit, void *arg);
 pfe_l2br_domain_t *pfe_l2br_get_next_domain(pfe_l2br_t *bridge);
-uint32_t pfe_l2br_get_text_statistics(pfe_l2br_t *bridge, char_t *buf, uint32_t buf_len, uint8_t verb_level);
+uint32_t pfe_l2br_get_text_statistics(const pfe_l2br_t *bridge, char_t *buf, uint32_t buf_len, uint8_t verb_level);
 
 errno_t pfe_l2br_flush_learned(pfe_l2br_t *bridge);
 errno_t pfe_l2br_flush_static(pfe_l2br_t *bridge);
diff --git a/sw/pfe_platform/public/pfe_l2br_table.h b/sw/pfe_platform/public/pfe_l2br_table.h
index 634e04b..806a0b4 100644
--- a/sw/pfe_platform/public/pfe_l2br_table.h
+++ b/sw/pfe_platform/public/pfe_l2br_table.h
@@ -33,7 +33,7 @@ typedef struct __pfe_l2br_table_iterator_tag pfe_l2br_table_iterator_t;
 typedef struct __pfe_l2br_table_entry_tag pfe_l2br_table_entry_t;
 
 pfe_l2br_table_t *pfe_l2br_table_create(addr_t cbus_base_va, pfe_l2br_table_type_t type);
-void pfe_l2br_table_destroy(pfe_l2br_table_t *l2br);
+void pfe_l2br_table_destroy(const pfe_l2br_table_t *l2br);
 errno_t pfe_l2br_table_init(pfe_l2br_table_t *l2br);
 errno_t pfe_l2br_table_flush(pfe_l2br_table_t *l2br);
 errno_t pfe_l2br_table_add_entry(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry);
@@ -41,19 +41,19 @@ errno_t pfe_l2br_table_del_entry(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t
 errno_t pfe_l2br_table_update_entry(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry);
 errno_t pfe_l2br_table_search_entry(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry);
 pfe_l2br_table_iterator_t *pfe_l2br_iterator_create(void);
-errno_t pfe_l2br_iterator_destroy(pfe_l2br_table_iterator_t *l2t_iter);
+errno_t pfe_l2br_iterator_destroy(const pfe_l2br_table_iterator_t *inst);
 errno_t pfe_l2br_table_get_first(pfe_l2br_table_t *l2br, pfe_l2br_table_iterator_t *l2t_iter, pfe_l2br_table_get_criterion_t crit, pfe_l2br_table_entry_t *entry);
 errno_t pfe_l2br_table_get_next(pfe_l2br_table_t *l2br, pfe_l2br_table_iterator_t *l2t_iter, pfe_l2br_table_entry_t *entry);
 errno_t pfe_l2br_iterator_halt(pfe_l2br_table_iterator_t *inst);
 
-pfe_l2br_table_entry_t *pfe_l2br_table_entry_create(pfe_l2br_table_t *l2br);
-errno_t pfe_l2br_table_entry_destroy(pfe_l2br_table_entry_t *entry);
-errno_t pfe_l2br_table_entry_set_mac_addr(pfe_l2br_table_entry_t *entry, pfe_mac_addr_t mac_addr);
+pfe_l2br_table_entry_t *pfe_l2br_table_entry_create(const pfe_l2br_table_t *l2br);
+errno_t pfe_l2br_table_entry_destroy(const pfe_l2br_table_entry_t *entry);
+errno_t pfe_l2br_table_entry_set_mac_addr(pfe_l2br_table_entry_t *entry, const pfe_mac_addr_t mac_addr);
 errno_t pfe_l2br_table_entry_set_vlan(pfe_l2br_table_entry_t *entry, uint16_t vlan);
 errno_t pfe_l2br_table_entry_set_action_data(pfe_l2br_table_entry_t *entry, uint64_t action_data);
-errno_t pfe_l2br_table_entry_set_fresh(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry, bool_t is_fresh);
-bool_t pfe_l2br_table_entry_is_fresh(pfe_l2br_table_entry_t *entry) __attribute__((pure));
-errno_t pfe_l2br_table_entry_set_static(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry, bool_t is_static);
-bool_t pfe_l2br_table_entry_is_static(pfe_l2br_table_entry_t *entry) __attribute__((pure));
-uint32_t pfe_l2br_table_entry_to_str(pfe_l2br_table_entry_t *entry, char_t *buf, uint32_t buf_len);
+errno_t pfe_l2br_table_entry_set_fresh(const pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry, bool_t is_fresh);
+bool_t pfe_l2br_table_entry_is_fresh(const pfe_l2br_table_entry_t *entry) __attribute__((pure));
+errno_t pfe_l2br_table_entry_set_static(const pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry, bool_t is_static);
+bool_t pfe_l2br_table_entry_is_static(const pfe_l2br_table_entry_t *entry) __attribute__((pure));
+uint32_t pfe_l2br_table_entry_to_str(const pfe_l2br_table_entry_t *entry, char_t *buf, uint32_t buf_len);
 #endif /* PUBLIC_PFE_L2BR_TABLE_H_ */
diff --git a/sw/pfe_platform/public/pfe_log_if.h b/sw/pfe_platform/public/pfe_log_if.h
index 8bf5d1c..d0f288b 100644
--- a/sw/pfe_platform/public/pfe_log_if.h
+++ b/sw/pfe_platform/public/pfe_log_if.h
@@ -45,7 +45,7 @@ errno_t pfe_log_if_get_match_rules(pfe_log_if_t *iface, pfe_ct_if_m_rules_t *rul
 errno_t pfe_log_if_add_match_rule(pfe_log_if_t *iface, pfe_ct_if_m_rules_t rule, const void *arg, uint32_t arg_len);
 errno_t pfe_log_if_del_match_rule(pfe_log_if_t *iface, pfe_ct_if_m_rules_t rule);
 errno_t pfe_log_if_add_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
-errno_t pfe_log_if_del_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr);
+errno_t pfe_log_if_del_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
 pfe_mac_db_t *pfe_log_if_get_mac_db(const pfe_log_if_t *iface);
 errno_t pfe_log_if_get_mac_addr(pfe_log_if_t *iface, pfe_mac_addr_t addr);
 errno_t pfe_log_if_flush_mac_addrs(pfe_log_if_t *iface, pfe_mac_db_crit_t crit, pfe_mac_type_t type, pfe_drv_id_t owner);
diff --git a/sw/pfe_platform/public/pfe_mac_db.h b/sw/pfe_platform/public/pfe_mac_db.h
index 3823300..4574292 100644
--- a/sw/pfe_platform/public/pfe_mac_db.h
+++ b/sw/pfe_platform/public/pfe_mac_db.h
@@ -42,7 +42,7 @@ typedef struct pfe_mac_db_tag pfe_mac_db_t;
 pfe_mac_db_t *pfe_mac_db_create(void);
 errno_t pfe_mac_db_destroy(pfe_mac_db_t *db);
 errno_t pfe_mac_db_add_addr(pfe_mac_db_t *db, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
-errno_t pfe_mac_db_del_addr(pfe_mac_db_t *db, const pfe_mac_addr_t addr);
+errno_t pfe_mac_db_del_addr(pfe_mac_db_t *db, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
 errno_t pfe_mac_db_flush(pfe_mac_db_t *db, pfe_mac_db_crit_t crit, pfe_mac_type_t type, pfe_drv_id_t owner);
 errno_t pfe_mac_db_get_first_addr(pfe_mac_db_t *db, pfe_mac_db_crit_t crit, pfe_mac_type_t type, pfe_drv_id_t owner, pfe_mac_addr_t addr);
 errno_t pfe_mac_db_get_next_addr(pfe_mac_db_t *db, pfe_mac_addr_t addr);
diff --git a/sw/pfe_platform/public/pfe_pe.h b/sw/pfe_platform/public/pfe_pe.h
index 2aede7b..efa0fb0 100644
--- a/sw/pfe_platform/public/pfe_pe.h
+++ b/sw/pfe_platform/public/pfe_pe.h
@@ -31,21 +31,20 @@ void pfe_pe_memcpy_from_imem_to_host_32(pfe_pe_t *pe, void *dst_ptr, addr_t src_
 void pfe_pe_dmem_memset(pfe_pe_t *pe, uint8_t val, addr_t addr, uint32_t len);
 void pfe_pe_imem_memset(pfe_pe_t *pe, uint8_t val, addr_t addr, uint32_t len);
 errno_t pfe_pe_get_fw_feature_entry(pfe_pe_t *pe, uint32_t id, pfe_ct_feature_desc_t **entry);
-errno_t pfe_pe_get_pe_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_pe_stats_t *stats);
-errno_t pfe_pe_get_classify_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_classify_stats_t *stats);
-errno_t pfe_pe_get_class_algo_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_class_algo_stats_t *stats);
+errno_t pfe_pe_get_pe_stats_nolock(pfe_pe_t *pe, uint32_t addr, pfe_ct_pe_stats_t *stats);
+errno_t pfe_pe_get_classify_stats_nolock(pfe_pe_t *pe, uint32_t addr, pfe_ct_classify_stats_t *stats);
+errno_t pfe_pe_get_class_algo_stats_nolock(pfe_pe_t *pe, uint32_t addr, pfe_ct_class_algo_stats_t *stats);
 uint32_t pfe_pe_stat_to_str(const pfe_ct_class_algo_stats_t *stat, char *buf, uint32_t buf_len, uint8_t verb_level);
+pfe_ct_pe_sw_state_t pfe_pe_get_fw_state(pfe_pe_t *pe);
 uint32_t pfe_pe_get_text_statistics(pfe_pe_t *pe, char_t *buf, uint32_t buf_len, uint8_t verb_level);
 void pfe_pe_destroy(pfe_pe_t *pe);
 errno_t pfe_pe_check_mmap(const pfe_pe_t *pe);
-errno_t pfe_pe_get_fw_errors(pfe_pe_t *pe);
-errno_t pfe_pe_get_data(pfe_pe_t *pe, pfe_ct_buffer_t *buf);
-errno_t pfe_pe_put_data(pfe_pe_t *pe, pfe_ct_buffer_t *buf);
+errno_t pfe_pe_get_fw_errors_nolock(pfe_pe_t *pe);
+errno_t pfe_pe_get_data_nolock(pfe_pe_t *pe, pfe_ct_buffer_t *buf);
+errno_t pfe_pe_put_data_nolock(pfe_pe_t *pe, pfe_ct_buffer_t *buf);
 errno_t pfe_pe_mem_lock(pfe_pe_t *pe);
 errno_t pfe_pe_mem_unlock(pfe_pe_t *pe);
 errno_t pfe_pe_lock(pfe_pe_t *pe);
-void pfe_pe_memcpy_from_dmem_to_host_32_nolock(pfe_pe_t *pe, void *dst_ptr, addr_t src_addr, uint32_t len);
-void pfe_pe_memcpy_from_host_to_dmem_32_nolock(pfe_pe_t *pe, addr_t dst_addr, const void *src_ptr, uint32_t len);
 errno_t pfe_pe_unlock(pfe_pe_t *pe);
 char *pfe_pe_get_fw_feature_str_base(const pfe_pe_t *pe);
 
diff --git a/sw/pfe_platform/public/pfe_phy_if.h b/sw/pfe_platform/public/pfe_phy_if.h
index 3ca494b..abf706d 100644
--- a/sw/pfe_platform/public/pfe_phy_if.h
+++ b/sw/pfe_platform/public/pfe_phy_if.h
@@ -65,7 +65,7 @@ errno_t pfe_phy_if_loopback_disable(pfe_phy_if_t *iface);
 errno_t pfe_phy_if_allmulti_enable(pfe_phy_if_t *iface);
 errno_t pfe_phy_if_allmulti_disable(pfe_phy_if_t *iface);
 errno_t pfe_phy_if_add_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
-errno_t pfe_phy_if_del_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr);
+errno_t pfe_phy_if_del_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
 pfe_mac_db_t *pfe_phy_if_get_mac_db(const pfe_phy_if_t *iface);
 errno_t pfe_phy_if_get_mac_addr(pfe_phy_if_t *iface, pfe_mac_addr_t addr);
 errno_t pfe_phy_if_flush_mac_addrs(pfe_phy_if_t *iface, pfe_mac_db_crit_t crit, pfe_mac_type_t type, pfe_drv_id_t owner);
diff --git a/sw/pfe_platform/public/pfe_platform.h b/sw/pfe_platform/public/pfe_platform.h
index f90d68e..5d4d478 100644
--- a/sw/pfe_platform/public/pfe_platform.h
+++ b/sw/pfe_platform/public/pfe_platform.h
@@ -77,6 +77,7 @@ typedef struct
 	pfe_ct_phy_if_id_t local_hif; /* ID of the local interface */
 	uint32_t rtable_hash_size;	/* Size (number of entries) of hash area within routing table */
 	uint32_t rtable_collision_size;	/* Size (number of entries) of collision area within routing table */
+	uint16_t vlan_id;	/* VLAN ID used for L2 Bridge configuration */
 } pfe_platform_config_t;
 
 typedef struct
diff --git a/sw/pfe_platform/public/pfe_platform_cfg.h b/sw/pfe_platform/public/pfe_platform_cfg.h
index e258c37..f7d5cb8 100644
--- a/sw/pfe_platform/public/pfe_platform_cfg.h
+++ b/sw/pfe_platform/public/pfe_platform_cfg.h
@@ -13,12 +13,6 @@
 #define TMU_TYPE_TMU		1U
 #define TMU_TYPE_TMU_LITE	2U
 
-/**
- * @brief	Number of entries of a HIF ring
- * @note	Must be power of 2
- */
-#define PFE_HIF_RING_CFG_LENGTH				256U
-
 /*
  * @brief TMU variant
  */
@@ -52,27 +46,9 @@
 #define	PFE_CFG_BMU1_BUF_COUNT				0x200U
 
 /**
- * @brief	BMU1 buffer size
- * @details	Value = log2(size)
- */
-#define PFE_CFG_BMU1_BUF_SIZE				0x8U	/* 256 bytes */
-
-/**
- * @brief	Maximum number of buffers - BMU2
- */
-#if defined(PFE_CFG_TARGET_OS_LINUX) && defined(PFE_CFG_TARGET_ARCH_x86_64)
-/* Linux x86 has issue with big memory buffers
-*/
-#define	PFE_CFG_BMU2_BUF_COUNT				0x200U
-#else
-#define	PFE_CFG_BMU2_BUF_COUNT				0x400U
-#endif
-
-/**
- * @brief	BMU2 buffer size
- * @details	Value = log2(size)
+ * @brief	BMU1 buffer size in Bytes
  */
-#define PFE_CFG_BMU2_BUF_SIZE				0xbU	/* 2048 bytes */
+#define PFE_CFG_BMU1_BUF_SIZE				256U	/* 256 bytes */
 
 /**
  * @brief	DMEM base address as defined by .elf
@@ -138,7 +114,7 @@
 /**
  * @brief	Size of BMU1 buffers area in number of bytes
  */
-#define PFE_CFG_BMU1_LMEM_SIZE				((1UL << PFE_CFG_BMU1_BUF_SIZE) * PFE_CFG_BMU1_BUF_COUNT)
+#define PFE_CFG_BMU1_LMEM_SIZE				(PFE_CFG_BMU1_BUF_SIZE * PFE_CFG_BMU1_BUF_COUNT)
 
 /**
  * @brief	Offset in LMEM, where PE memory area starts
diff --git a/sw/pfe_platform/public/pfe_platform_rpc.h b/sw/pfe_platform/public/pfe_platform_rpc.h
index 2abc300..ac7d1c4 100644
--- a/sw/pfe_platform/public/pfe_platform_rpc.h
+++ b/sw/pfe_platform/public/pfe_platform_rpc.h
@@ -70,11 +70,14 @@ typedef enum __attribute__((packed))
 	PFE_PLATFORM_RPC_PFE_LOG_IF_STATS = 220U,				/* Arg: pfe_platform_rpc_pfe_log_if_stats_arg_t, Ret: pfe_platform_rpc_pfe_log_if_stats_ret_t */
 	PFE_PLATFORM_RPC_PFE_LOG_IF_FLUSH_MAC_ADDRS = 221U,		/* Arg: pfe_platform_rpc_pfe_log_if_flush_mac_addrs_arg_t, Ret: None */
 	PFE_PLATFORM_RPC_PFE_LOG_IF_ALLMULTI_ENABLE = 222U,		/* Arg: pfe_platform_rpc_pfe_log_if_allmulti_enable_arg_t, Ret: None */
-	PFE_PLATFORM_RPC_PFE_LOG_IF_ALLMULTI_DISABLE = 223U,		/* Arg: pfe_platform_rpc_pfe_log_if_allmulti_disable_arg_t, Ret: None */
-	PFE_PLATFORM_RPC_PFE_LOG_IF_LOOPBACK_ENABLE = 224U,              /* Arg: pfe_platform_rpc_pfe_log_if_loopback_enable_arg_t, Ret: None */
-	PFE_PLATFORM_RPC_PFE_LOG_IF_LOOPBACK_DISABLE = 225U,             /* Arg: pfe_platform_rpc_pfe_log_if_loopback_disable_arg_t, Ret: None */
-
-	PFE_PLATFORM_RPC_PFE_LOG_IF_ID_COMPATIBLE_LAST = PFE_PLATFORM_RPC_PFE_LOG_IF_LOOPBACK_DISABLE /* last entry compatible with generic log_if structure for args*/
+	PFE_PLATFORM_RPC_PFE_LOG_IF_ALLMULTI_DISABLE = 223U,	/* Arg: pfe_platform_rpc_pfe_log_if_allmulti_disable_arg_t, Ret: None */
+	PFE_PLATFORM_RPC_PFE_LOG_IF_LOOPBACK_ENABLE = 224U,		/* Arg: pfe_platform_rpc_pfe_log_if_loopback_enable_arg_t, Ret: None */
+	PFE_PLATFORM_RPC_PFE_LOG_IF_LOOPBACK_DISABLE = 225U,	/* Arg: pfe_platform_rpc_pfe_log_if_loopback_disable_arg_t, Ret: None */
+	PFE_PLATFORM_RPC_PFE_LOG_IF_IS_DISCARD = 226U,			/* Arg: pfe_platform_rpc_pfe_log_if_is_discard_arg_t, Ret: pfe_platform_rpc_pfe_log_if_is_discard_ret_t */
+	PFE_PLATFORM_RPC_PFE_LOG_IF_DISCARD_ENABLE = 227U,		/* Arg: pfe_platform_rpc_pfe_log_if_discard_enable_arg_t, Ret: None */
+	PFE_PLATFORM_RPC_PFE_LOG_IF_DISCARD_DISABLE = 228U,		/* Arg: pfe_platform_rpc_pfe_log_if_discard_disable_arg_t, Ret: None */
+
+	PFE_PLATFORM_RPC_PFE_LOG_IF_ID_COMPATIBLE_LAST = PFE_PLATFORM_RPC_PFE_LOG_IF_DISCARD_DISABLE /* last entry compatible with generic log_if structure for args*/
 } pfe_platform_rpc_code_t;
 
 /* Generic log if type */
@@ -82,21 +85,21 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_g
 {
 	uint8_t log_if_id;
 } pfe_platform_rpc_pfe_log_if_generic_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_generic_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_generic_t, log_if_id));
 
 /* Generic phy if type */
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_phy_if_generic_tag
 {
 	uint8_t phy_if_id;
 } pfe_platform_rpc_pfe_phy_if_generic_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_generic_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_generic_t, phy_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_phy_if_create_arg_tag
 {
 	/*	Physical interface ID */
 	pfe_ct_phy_if_id_t phy_if_id;
 } pfe_platform_rpc_pfe_phy_if_create_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_create_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_create_arg_t, phy_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_create_arg_tag
 {
@@ -104,7 +107,7 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_c
 	pfe_ct_phy_if_id_t phy_if_id;
 	char_t name[PFE_RPC_MAX_IF_NAME_LEN];
 } pfe_platform_rpc_pfe_log_if_create_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_create_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_create_arg_t, phy_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_create_ret_tag
 {
@@ -113,39 +116,45 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_c
 } pfe_platform_rpc_pfe_log_if_create_ret_t;
 
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_destroy_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_destroy_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_destroy_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_get_match_rules_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_get_match_rules_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_get_match_rules_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_enable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_enable_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_enable_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_disable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_disable_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_disable_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_is_enabled_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_is_enabled_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_is_enabled_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_promisc_enable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_promisc_enable_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_promisc_enable_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_promisc_disable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_promisc_disable_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_promisc_disable_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_is_promisc_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_is_promisc_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_is_promisc_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_get_egress_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_get_egress_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_get_egress_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_is_match_or_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_is_match_or_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_is_match_or_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_set_match_and_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_set_match_and_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_set_match_and_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_set_match_or_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_set_match_or_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_set_match_or_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_stats_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_stats_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_stats_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_allmulti_enable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_allmulti_enable_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_allmulti_enable_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_allmulti_disable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_allmulti_disable_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_allmulti_disable_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_loopback_enable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_loopback_enable_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_loopback_enable_arg_t, log_if_id));
+typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_discard_enable_arg_t;
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_discard_enable_arg_t, log_if_id));
+typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_discard_disable_arg_t;
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_discard_disable_arg_t, log_if_id));
+typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_is_discard_arg_t;
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_is_discard_arg_t, log_if_id));
 typedef pfe_platform_rpc_pfe_log_if_generic_t pfe_platform_rpc_pfe_log_if_loopback_disable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_loopback_disable_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_loopback_disable_arg_t, log_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) __pfe_platform_rpc_pfe_log_if_flush_mac_addrs_arg_tag
 {
@@ -153,7 +162,7 @@ typedef struct __attribute__((packed, aligned(4))) __pfe_platform_rpc_pfe_log_if
 	pfe_mac_db_crit_t crit;
 	pfe_mac_type_t type;
 } pfe_platform_rpc_pfe_log_if_flush_mac_addrs_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_flush_mac_addrs_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_flush_mac_addrs_arg_t, log_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_is_enabled_ret_tag
 {
@@ -165,6 +174,7 @@ typedef pfe_platform_rpc_pfe_log_if_is_enabled_ret_t pfe_platform_rpc_pfe_log_if
 typedef pfe_platform_rpc_pfe_log_if_is_enabled_ret_t pfe_platform_rpc_pfe_log_if_is_promisc_ret_t;
 typedef pfe_platform_rpc_pfe_log_if_is_enabled_ret_t pfe_platform_rpc_pfe_phy_if_is_promisc_ret_t;
 typedef pfe_platform_rpc_pfe_log_if_is_enabled_ret_t pfe_platform_rpc_pfe_phy_if_is_enabled_ret_t;
+typedef pfe_platform_rpc_pfe_log_if_is_enabled_ret_t pfe_platform_rpc_pfe_log_if_is_discard_ret_t;
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_set_match_rules_arg_tag
 {
@@ -175,7 +185,7 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_s
 	/*	Rules arguments structure */
 	pfe_ct_if_m_args_t __attribute__((aligned(4))) args;
 } pfe_platform_rpc_pfe_log_if_set_match_rules_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_set_match_rules_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_set_match_rules_arg_t, log_if_id));
 
 typedef pfe_platform_rpc_pfe_log_if_set_match_rules_arg_t pfe_platform_rpc_pfe_log_if_get_match_rules_ret_t;
 
@@ -191,7 +201,7 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_a
 	 	member of the pfe_ct_if_m_args_t. */
 	uint8_t arg[16];
 } pfe_platform_rpc_pfe_log_if_add_match_rule_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_add_match_rule_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_add_match_rule_arg_t, log_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_del_match_rule_arg_tag
 {
@@ -200,7 +210,7 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_d
 	/*	Rule or rules to be set */
 	pfe_ct_if_m_rules_t rule;
 } pfe_platform_rpc_pfe_log_if_del_match_rule_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_del_match_rule_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_del_match_rule_arg_t, log_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_add_mac_addr_arg_tag
 {
@@ -209,7 +219,7 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_a
 	/*	The MAC address */
 	pfe_mac_addr_t addr;
 } pfe_platform_rpc_pfe_log_if_add_mac_addr_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_add_mac_addr_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_add_mac_addr_arg_t, log_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_del_mac_addr_arg_tag
 {
@@ -218,7 +228,7 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_d
 	/*	The MAC address */
 	pfe_mac_addr_t addr;
 } pfe_platform_rpc_pfe_log_if_del_mac_addr_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_del_mac_addr_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_del_mac_addr_arg_t, log_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_add_egress_if_arg_tag
 {
@@ -227,10 +237,10 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_a
 	/*	The physical interface ID */
 	pfe_ct_phy_if_id_t phy_if_id;
 } pfe_platform_rpc_pfe_log_if_add_egress_if_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_add_egress_if_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_add_egress_if_arg_t, log_if_id));
 
 typedef pfe_platform_rpc_pfe_log_if_add_egress_if_arg_t pfe_platform_rpc_pfe_log_if_del_egress_if_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_log_if_del_egress_if_arg_t, log_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_log_if_del_egress_if_arg_t, log_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_stats_ret_t
 {
@@ -245,27 +255,27 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_phy_if_e
 } pfe_platform_rpc_pfe_phy_if_enable_arg_t;
 
 typedef pfe_platform_rpc_pfe_phy_if_enable_arg_t pfe_platform_rpc_pfe_phy_if_disable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_disable_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_disable_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_enable_arg_t pfe_platform_rpc_pfe_phy_if_promisc_enable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_promisc_enable_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_promisc_enable_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_enable_arg_t pfe_platform_rpc_pfe_phy_if_promisc_disable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_promisc_disable_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_promisc_disable_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_generic_t pfe_platform_rpc_pfe_phy_if_get_op_mode_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_get_op_mode_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_get_op_mode_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_generic_t pfe_platform_rpc_pfe_phy_if_is_promisc_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_is_promisc_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_is_promisc_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_generic_t pfe_platform_rpc_pfe_phy_if_is_enabled_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_is_enabled_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_is_enabled_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_generic_t pfe_platform_rpc_pfe_phy_if_stats_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_stats_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_stats_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_enable_arg_t pfe_platform_rpc_pfe_phy_if_allmulti_enable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_allmulti_enable_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_allmulti_enable_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_enable_arg_t pfe_platform_rpc_pfe_phy_if_allmulti_disable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_allmulti_disable_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_allmulti_disable_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_enable_arg_t pfe_platform_rpc_pfe_phy_if_loopback_enable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_loopback_enable_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_loopback_enable_arg_t, phy_if_id));
 typedef pfe_platform_rpc_pfe_phy_if_enable_arg_t pfe_platform_rpc_pfe_phy_if_loopback_disable_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_loopback_disable_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_loopback_disable_arg_t, phy_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) __pfe_platform_rpc_pfe_phy_if_flush_mac_addrs_arg_tag
 {
@@ -273,7 +283,7 @@ typedef struct __attribute__((packed, aligned(4))) __pfe_platform_rpc_pfe_phy_if
 	pfe_mac_db_crit_t crit;
 	pfe_mac_type_t type;
 } pfe_platform_rpc_pfe_phy_if_flush_mac_addrs_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_flush_mac_addrs_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_flush_mac_addrs_arg_t, phy_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_phy_if_add_mac_addr_arg_tag
 {
@@ -282,10 +292,10 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_phy_if_a
 	/*	MAC address */
 	uint8_t mac_addr[6];
 } pfe_platform_rpc_pfe_phy_if_add_mac_addr_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_add_mac_addr_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_add_mac_addr_arg_t, phy_if_id));
 
 typedef pfe_platform_rpc_pfe_phy_if_add_mac_addr_arg_t pfe_platform_rpc_pfe_phy_if_del_mac_addr_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_del_mac_addr_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_del_mac_addr_arg_t, phy_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_phy_if_set_op_mode_arg_tag
 {
@@ -294,7 +304,7 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_phy_if_s
 	/*	Operation mode */
 	pfe_ct_if_op_mode_t op_mode;
 } pfe_platform_rpc_pfe_phy_if_set_op_mode_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_set_op_mode_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_set_op_mode_arg_t, phy_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_phy_if_has_log_if_arg_tag
 {
@@ -303,7 +313,7 @@ typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_phy_if_h
 	/*	Logical interface ID */
 	uint8_t log_if_id;
 } pfe_platform_rpc_pfe_phy_if_has_log_if_arg_t;
-ct_assert(0U == offsetof(pfe_platform_rpc_pfe_phy_if_has_log_if_arg_t, phy_if_id));
+ct_assert_offsetof(0U == offsetof(pfe_platform_rpc_pfe_phy_if_has_log_if_arg_t, phy_if_id));
 
 typedef struct __attribute__((packed, aligned(4))) pfe_platform_rpc_pfe_log_if_get_egress_ret_tag
 {
diff --git a/sw/pfe_platform/public/pfe_rtable.h b/sw/pfe_platform/public/pfe_rtable.h
index 1ea9f41..e308d43 100644
--- a/sw/pfe_platform/public/pfe_rtable.h
+++ b/sw/pfe_platform/public/pfe_rtable.h
@@ -14,6 +14,13 @@
 #include "pfe_class.h"
 #include "pfe_phy_if.h" /* pfe_interface_t */
 
+/**
+ * @brief	Tick period for internal timer in seconds
+ * @details	The timer is used to sample the active routing table entries and decrement
+ * 			associated time-out values when entries are not being used by the firmware.
+ */
+#define PFE_RTABLE_CFG_TICK_PERIOD_SEC			1U
+
 typedef struct pfe_rtable_tag pfe_rtable_t;
 typedef struct pfe_rtable_entry_tag pfe_rtable_entry_t;
 
@@ -26,7 +33,7 @@ typedef struct
 
 	union
 	{
-		uint16_t v6[16];
+		uint16_t v6[8];
 	} v6;
 
 	bool_t is_ipv4;
@@ -79,54 +86,56 @@ typedef enum
  */
 typedef void (* pfe_rtable_callback_t)(void *arg, pfe_rtable_cbk_event_t event);
 
-pfe_rtable_t *pfe_rtable_create(pfe_class_t *class, addr_t htable_base_pa, uint32_t htable_size, addr_t pool_base_pa, uint32_t pool_size);
+pfe_rtable_t *pfe_rtable_create(pfe_class_t *class, addr_t htable_base_va, uint32_t htable_size, addr_t pool_base_va, uint32_t pool_size);
 errno_t pfe_rtable_add_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry);
 errno_t pfe_rtable_del_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry);
 void pfe_rtable_destroy(pfe_rtable_t *rtable);
 uint32_t pfe_rtable_get_entry_size(void);
-errno_t pfe_rtable_entry_to_5t(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple);
-errno_t pfe_rtable_entry_to_5t_out(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple);
+errno_t pfe_rtable_entry_to_5t(const pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple);
+errno_t pfe_rtable_entry_to_5t_out(const pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple);
 pfe_rtable_entry_t *pfe_rtable_get_first(pfe_rtable_t *rtable, pfe_rtable_get_criterion_t crit, void *arg);
 pfe_rtable_entry_t *pfe_rtable_get_next(pfe_rtable_t *rtable);
-uint32_t pfe_rtable_get_size(pfe_rtable_t *rtable);
+uint32_t pfe_rtable_get_size(const pfe_rtable_t *rtable);
 
 void pfe_rtable_entry_set_ttl_decrement(pfe_rtable_entry_t *entry);
 void pfe_rtable_entry_remove_ttl_decrement(pfe_rtable_entry_t *entry);
 pfe_rtable_entry_t *pfe_rtable_entry_create(void);
 void pfe_rtable_entry_free(pfe_rtable_entry_t *entry);
 errno_t pfe_rtable_entry_set_5t(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple);
-errno_t pfe_rtable_entry_set_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_addr);
+errno_t pfe_rtable_entry_set_sip(pfe_rtable_entry_t *entry, const pfe_ip_addr_t *ip_addr);
 void pfe_rtable_entry_get_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_addr);
-errno_t pfe_rtable_entry_set_out_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *output_sip);
-errno_t pfe_rtable_entry_set_dip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_addr);
+errno_t pfe_rtable_entry_set_out_sip(pfe_rtable_entry_t *entry, const pfe_ip_addr_t *output_sip);
+errno_t pfe_rtable_entry_set_dip(pfe_rtable_entry_t *entry, const pfe_ip_addr_t *ip_addr);
 void pfe_rtable_entry_get_dip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_addr);
-errno_t pfe_rtable_entry_set_out_dip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *output_dip);
+errno_t pfe_rtable_entry_set_out_dip(pfe_rtable_entry_t *entry, const pfe_ip_addr_t *output_dip);
 void pfe_rtable_entry_set_sport(pfe_rtable_entry_t *entry, uint16_t sport);
-uint16_t pfe_rtable_entry_get_sport(pfe_rtable_entry_t *entry);
+uint16_t pfe_rtable_entry_get_sport(const pfe_rtable_entry_t *entry);
 void pfe_rtable_entry_set_out_sport(pfe_rtable_entry_t *entry, uint16_t output_sport);
-void pfe_rtable_entry_set_dport(pfe_rtable_entry_t *entry, uint16_t sport);
-uint16_t pfe_rtable_entry_get_dport(pfe_rtable_entry_t *entry);
+void pfe_rtable_entry_set_dport(pfe_rtable_entry_t *entry, uint16_t dport);
+uint16_t pfe_rtable_entry_get_dport(const pfe_rtable_entry_t *entry);
 void pfe_rtable_entry_set_out_dport(pfe_rtable_entry_t *entry, uint16_t output_dport);
 void pfe_rtable_entry_set_proto(pfe_rtable_entry_t *entry, uint8_t proto);
-uint8_t pfe_rtable_entry_get_proto(pfe_rtable_entry_t *entry);
-errno_t pfe_rtable_entry_set_dstif(pfe_rtable_entry_t *entry, pfe_phy_if_t *iface);
-void pfe_rtable_entry_set_out_mac_addrs(pfe_rtable_entry_t *entry, pfe_mac_addr_t smac, pfe_mac_addr_t dmac);
+uint8_t pfe_rtable_entry_get_proto(const pfe_rtable_entry_t *entry);
+errno_t pfe_rtable_entry_set_dstif(pfe_rtable_entry_t *entry, const pfe_phy_if_t *iface);
+void pfe_rtable_entry_set_out_mac_addrs(pfe_rtable_entry_t *entry,const pfe_mac_addr_t smac,const pfe_mac_addr_t dmac);
 void pfe_rtable_entry_set_out_vlan(pfe_rtable_entry_t *entry, uint16_t vlan);
-uint16_t pfe_rtable_entry_get_out_vlan(pfe_rtable_entry_t *entry);
+uint16_t pfe_rtable_entry_get_out_vlan(const pfe_rtable_entry_t *entry);
 void pfe_rtable_entry_set_out_inner_vlan(pfe_rtable_entry_t *entry, uint16_t vlan);
 void pfe_rtable_entry_set_out_pppoe_sid(pfe_rtable_entry_t *entry, uint16_t sid);
 pfe_ct_route_actions_t pfe_rtable_entry_get_action_flags(pfe_rtable_entry_t *entry);
 void pfe_rtable_entry_set_timeout(pfe_rtable_entry_t *entry, uint32_t timeout);
 void pfe_rtable_entry_set_route_id(pfe_rtable_entry_t *entry, uint32_t route_id);
-errno_t pfe_rtable_entry_get_route_id(pfe_rtable_entry_t *entry, uint32_t *route_id);
+errno_t pfe_rtable_entry_get_route_id(const pfe_rtable_entry_t *entry, uint32_t *route_id);
 void pfe_rtable_entry_set_callback(pfe_rtable_entry_t *entry, pfe_rtable_callback_t cbk, void *arg);
 void pfe_rtable_entry_set_refptr(pfe_rtable_entry_t *entry, void *refptr);
 void *pfe_rtable_entry_get_refptr(pfe_rtable_entry_t *entry);
 void pfe_rtable_entry_set_child(pfe_rtable_entry_t *entry, pfe_rtable_entry_t *child);
-pfe_rtable_entry_t *pfe_rtable_entry_get_child(pfe_rtable_entry_t *entry);
+pfe_rtable_entry_t *pfe_rtable_entry_get_child(const pfe_rtable_entry_t *entry);
 
 void pfe_rtable_entry_set_id5t(pfe_rtable_entry_t *entry, uint32_t id5t);
-errno_t pfe_rtable_entry_get_id5t(pfe_rtable_entry_t *entry, uint32_t *id5t);
+errno_t pfe_rtable_entry_get_id5t(const pfe_rtable_entry_t *entry, uint32_t *id5t);
 errno_t pfe_rtable_entry_set_dstif_id(pfe_rtable_entry_t *entry, pfe_ct_phy_if_id_t if_id);
 
+void pfe_rtable_do_timeouts(pfe_rtable_t *rtable);
+
 #endif /* PUBLIC_PFE_RTABLE_H_ */
diff --git a/sw/pfe_platform/public/pfe_spd.h b/sw/pfe_platform/public/pfe_spd.h
index 8304e80..2d2b378 100644
--- a/sw/pfe_platform/public/pfe_spd.h
+++ b/sw/pfe_platform/public/pfe_spd.h
@@ -1,7 +1,7 @@
 /* =========================================================================
  *  
  *  Copyright (c) 2019 Imagination Technologies Limited
- *  Copyright 2020 NXP
+ *  Copyright 2020-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -9,8 +9,9 @@
 #ifndef PFE_SPD_H
 #define PFE_SPD_H
 void pfe_spd_init(pfe_class_t *class);
+void pfe_spd_destroy(pfe_if_db_t *phy_if_db);
 errno_t pfe_spd_add_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd_entry_t *entry);
 errno_t pfe_spd_remove_rule(pfe_phy_if_t * phy_if, uint16_t position);
 errno_t pfe_spd_get_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd_entry_t *entry);
 
-#endif
\ No newline at end of file
+#endif
diff --git a/sw/pfe_platform/public/pfe_spd_acc.h b/sw/pfe_platform/public/pfe_spd_acc.h
index ad56519..6b53827 100644
--- a/sw/pfe_platform/public/pfe_spd_acc.h
+++ b/sw/pfe_platform/public/pfe_spd_acc.h
@@ -1,7 +1,7 @@
  /* =========================================================================
  *  
  *  Copyright (c) 2019 Imagination Technologies Limited
- *  Copyright 2020 NXP
+ *  Copyright 2020-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -10,8 +10,9 @@
 #define PFE_SPD_ACC_H
 #include "pfe_class.h"
 #include "pfe_rtable.h"
+#include "pfe_if_db.h"
 errno_t pfe_spd_acc_init(pfe_class_t *class, pfe_rtable_t *rtable);
-void pfe_spd_acc_destroy(void);
+void pfe_spd_acc_destroy(pfe_if_db_t *phy_if_db);
 errno_t pfe_spd_acc_add_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd_entry_t *entry);
 errno_t pfe_spd_acc_remove_rule(pfe_phy_if_t * phy_if, uint16_t position);
 errno_t pfe_spd_acc_get_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd_entry_t *entry);
diff --git a/sw/pfe_platform/src/pfe_bmu.c b/sw/pfe_platform/src/pfe_bmu.c
index f9fce09..e5efc34 100644
--- a/sw/pfe_platform/src/pfe_bmu.c
+++ b/sw/pfe_platform/src/pfe_bmu.c
@@ -160,8 +160,8 @@ __attribute__((cold)) pfe_bmu_t *pfe_bmu_create(addr_t cbus_base_va, addr_t bmu_
 		bmu->pool_base_pa = cfg->pool_pa;
 		bmu->pool_base_va = cfg->pool_va;
 		bmu->pool_va_offset = bmu->pool_base_va - bmu->pool_base_pa;
-		bmu->pool_size = ((uint32_t)1U << cfg->buf_size) * cfg->max_buf_cnt;
-		bmu->buf_size = ((uint32_t)1U << cfg->buf_size);
+		bmu->pool_size = cfg->buf_size * cfg->max_buf_cnt;
+		bmu->buf_size = cfg->buf_size;
 
 #ifdef PFE_CFG_PARANOID_IRQ
 		/*	Resource protection */
@@ -401,7 +401,7 @@ __attribute__((cold, pure)) uint32_t pfe_bmu_get_buf_size(const pfe_bmu_t *bmu)
 __attribute__((hot)) void pfe_bmu_free_buf(const pfe_bmu_t *bmu, addr_t buffer)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely((NULL == bmu) || (NULL == buffer)))
+	if (unlikely((NULL == bmu) || (NULL_ADDR == buffer)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
 		return;
diff --git a/sw/pfe_platform/src/pfe_class.c b/sw/pfe_platform/src/pfe_class.c
index 5cce9cb..02decec 100644
--- a/sw/pfe_platform/src/pfe_class.c
+++ b/sw/pfe_platform/src/pfe_class.c
@@ -49,131 +49,6 @@ static void pfe_class_pe_stats_endian(pfe_ct_pe_stats_t *stat);
 static void pfe_class_sum_pe_algo_stats(pfe_ct_class_algo_stats_t *sum, const pfe_ct_class_algo_stats_t *val);
 static uint32_t pfe_class_stat_to_str(const pfe_ct_class_algo_stats_t *stat, char *buf, uint32_t buf_len, uint8_t verb_level);
 
-/**
- * @brief		Read "put" buffer
- * @param[in]	pe The PE instance
- * @param[out]	buf Pointer to memory where buffer shall be written
- * @retval		EOK Success and buffer is valid
- * @retval		EAGAIN Buffer is invalid
- * @retval		ENOENT Buffer not found
- */
-errno_t pfe_pe_get_data(pfe_pe_t *pe, pfe_ct_buffer_t *buf)
-{
-	uint8_t flags;
-	errno_t ret = ENOENT;
-	pfe_ct_pe_mmap_t mmap_data;
-	const pfe_ct_class_mmap_t *class_mmap_data;
-
-	/*	Get mmap base from PE[0] since all PEs have the same memory map */
-	if (EOK != pfe_pe_get_mmap(pe, &mmap_data))
-	{
-		NXP_LOG_ERROR("Could not get memory map\n");
-		return ENOENT;
-	}
-
-	class_mmap_data = &mmap_data.class_pe;
-
-	if (0U == class_mmap_data->put_buffer)
-	{
-		return ENOENT;
-	}
-
-	if (EOK != pfe_pe_lock(pe))
-	{
-		NXP_LOG_DEBUG("PE lock failed\n");
-		return EPERM;
-	}
-
-	/*	Get "put" buffer status */
-	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &flags,
-			oal_ntohl(class_mmap_data->put_buffer) + offsetof(pfe_ct_buffer_t, flags),
-				sizeof(uint8_t));
-
-	if (0U != flags)
-	{
-		/*	Copy buffer to local memory */
-		pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, buf, oal_ntohl(class_mmap_data->put_buffer), sizeof(pfe_ct_buffer_t));
-
-		/*	Clear flags */
-		flags = 0U;
-		pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe,
-				oal_ntohl(class_mmap_data->put_buffer) + offsetof(pfe_ct_buffer_t, flags),
-					&flags, sizeof(uint8_t));
-
-		ret = EOK;
-	}
-	else
-	{
-		ret = EAGAIN;
-	}
-
-	if (EOK != pfe_pe_unlock(pe))
-	{
-		NXP_LOG_DEBUG("PE unlock failed\n");
-	}
-
-
-	return ret;
-}
-
-/**
- * @brief		Write "get" buffer
- * @param[in]	pe The PE instance
- * @param[out]	buf Pointer to data to be written
- * @retval		EOK Success and buffer is valid
- * @retval		EAGAIN Buffer is occupied
- * @retval		ENOENT Buffer not found
- */
-errno_t pfe_pe_put_data(pfe_pe_t *pe, pfe_ct_buffer_t *buf)
-{
-	uint8_t flags;
-	errno_t ret = ENOENT;
-	pfe_ct_pe_mmap_t mmap_data;
-	const pfe_ct_class_mmap_t *class_mmap_data;
-
-	if (EOK != pfe_pe_get_mmap(pe, &mmap_data))
-	{
-		NXP_LOG_ERROR("Could not get memory map\n");
-		return ENOENT;
-	}
-
-	class_mmap_data = &mmap_data.class_pe;
-	if (0U == class_mmap_data->get_buffer)
-	{
-		return ENOENT;
-	}
-
-	if (EOK != pfe_pe_lock(pe))
-	{
-		NXP_LOG_DEBUG("PE lock failed\n");
-	return EPERM;
-	}
-
-	/*	Get "get" buffer status */
-	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &flags,
-			oal_ntohl(class_mmap_data->get_buffer) + offsetof(pfe_ct_buffer_t, flags),
-				sizeof(uint8_t));
-
-	if (0U == flags)
-	{
-		/*	Send data to PFE */
-		buf->flags |= 1U;
-		pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe,
-				oal_ntohl(class_mmap_data->get_buffer), buf, sizeof(pfe_ct_buffer_t));
-		ret = EOK;
-	}
-	else
-	{
-		ret = EAGAIN;
-	}
-
-	if (EOK != pfe_pe_unlock(pe))
-	{
-		NXP_LOG_DEBUG("PE unlock failed\n");
-	}
-	return ret;
-}
-
 /**
  * @brief CLASS ISR
  * @details Checks all PEs whether they report a firmware error
@@ -182,8 +57,8 @@ errno_t pfe_pe_put_data(pfe_pe_t *pe, pfe_ct_buffer_t *buf)
 errno_t pfe_class_isr(const pfe_class_t *class)
 {
 	uint32_t i;
-	pfe_ct_buffer_t buf;
 #ifdef PFE_CFG_FCI_ENABLE
+	pfe_ct_buffer_t buf;
 	fci_msg_t msg;
 #endif /* PFE_CFG_FCI_ENABLE */
 
@@ -195,24 +70,27 @@ errno_t pfe_class_isr(const pfe_class_t *class)
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	/* Read the error record from each PE */
-	for (i = 0U; i < class->pe_num; i++)
-	{
-		(void)pfe_pe_get_fw_errors(class->pe[i]);
-	}
-
-	/*	Read data to be delivered to host */
 	for (i=0U; i<class->pe_num; i++)
 	{
-		/*	Check if there is new message */
-		if (EOK == pfe_pe_get_data(class->pe[i], &buf))
+		/*	Allow safe use of _nolock() functions. We don't call the _mem_lock()
+			here as we don't need to have coherent accesses. */
+		if (EOK != pfe_pe_lock(class->pe[i]))
 		{
+			NXP_LOG_DEBUG("pfe_pe_lock() failed\n");
+		}
+
+		/*	Read and print the error record from each PE */
+		(void)pfe_pe_get_fw_errors_nolock(class->pe[i]);
+
 #ifdef PFE_CFG_FCI_ENABLE
+		/*	Check if there is new message */
+		if (EOK == pfe_pe_get_data_nolock(class->pe[i], &buf))
+		{
 			/*	Provide data to user via FCI */
 			msg.msg_cmd.code = FPP_CMD_DATA_BUF_AVAIL;
 			msg.msg_cmd.length = buf.len;
 
-			if (buf.len > sizeof(msg.msg_cmd.payload))
+			if (msg.msg_cmd.length > (uint32_t)sizeof(msg.msg_cmd.payload))
 			{
 				NXP_LOG_ERROR("FCI buffer is too small\n");
 			}
@@ -224,7 +102,12 @@ errno_t pfe_class_isr(const pfe_class_t *class)
 					NXP_LOG_ERROR("Can't report data to FCI clients\n");
 				}
 			}
-#endif
+		}
+#endif /* PFE_CFG_FCI_ENABLE */
+
+		if (EOK != pfe_pe_unlock(class->pe[i]))
+		{
+			NXP_LOG_DEBUG("pfe_pe_unlock() failed\n");
 		}
 	}
 
@@ -464,6 +347,9 @@ void pfe_class_reset(pfe_class_t *class)
  */
 void pfe_class_enable(pfe_class_t *class)
 {
+	uint16_t timeout = 50U;
+	pfe_ct_pe_sw_state_t state;
+
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == class))
 	{
@@ -483,7 +369,23 @@ void pfe_class_enable(pfe_class_t *class)
 	}
 
 	pfe_class_cfg_enable(class->cbus_base_va);
-	class->enabled = TRUE;
+
+	do
+	{
+		oal_time_usleep(5U);
+		timeout--;
+		state = pfe_pe_get_fw_state(class->pe[0U]);
+	}
+	while ((state < PFE_FW_STATE_INIT) && (timeout > 0U));
+	
+	if (timeout == 0U)
+	{
+		NXP_LOG_ERROR("Time-out waiting for classifier to init\n");
+	}
+	else
+	{
+		class->enabled = TRUE;
+	}
 
 	if (EOK != oal_mutex_unlock(&class->mutex))
 	{
@@ -595,6 +497,7 @@ static errno_t pfe_class_load_fw_features(pfe_class_t *class)
 	errno_t ret = EOK;
     pfe_ct_feature_desc_t *entry;
     uint32_t i, j;
+    bool_t val_break = FALSE;
 
 	ret = pfe_pe_get_mmap(class->pe[0U], &mmap);
 	if(EOK == ret)
@@ -630,46 +533,59 @@ static errno_t pfe_class_load_fw_features(pfe_class_t *class)
                         class->fw_features = NULL;
                         class->fw_features_count = 0U;
                         ret = ENOMEM;
-                        break;
+                        val_break = TRUE;
                     }
-                    /* Get feature low level data */
-                    ret = pfe_pe_get_fw_feature_entry(class->pe[0U], i, &entry);
-                    if(EOK != ret)
+                    else
                     {
-                         NXP_LOG_ERROR("Failed get ll data for feature %u\n", (uint_t)i);
-                        /* Destroy previously created and return failure */
-                        for(j = 0U; j < i; j++)
+                        /* Get feature low level data */
+                        ret = pfe_pe_get_fw_feature_entry(class->pe[0U], i, &entry);
+                        if(EOK != ret)
                         {
-                            pfe_fw_feature_destroy(class->fw_features[j]);
-                            class->fw_features[j] = NULL;
+                             NXP_LOG_ERROR("Failed get ll data for feature %u\n", (uint_t)i);
+                            /* Destroy previously created and return failure */
+                            for(j = 0U; j < i; j++)
+                            {
+                                pfe_fw_feature_destroy(class->fw_features[j]);
+                                class->fw_features[j] = NULL;
+                            }
+                            oal_mm_free(class->fw_features);
+                            class->fw_features = NULL;
+                            class->fw_features_count = 0U;
+                            ret = EINVAL;
+                            val_break = TRUE;
                         }
-                        oal_mm_free(class->fw_features);
-                        class->fw_features = NULL;
-                        class->fw_features_count = 0U;
-                        ret = EINVAL;
-                        break;
-                    }
-                    /* Set the low level data in the feature */
-                    (void)pfe_fw_feature_set_ll_data(class->fw_features[i], entry);
-                    /* Set the feature string base */
-                    ret = pfe_fw_feature_set_string_base(class->fw_features[i], pfe_pe_get_fw_feature_str_base(class->pe[0U]));
-                    if(EOK != ret)
-                    {
-                        NXP_LOG_ERROR("Failed to set string base for feature %u\n", (uint_t)i);
-                        /* Destroy previously created and return failure */
-                        for(j = 0U; j < i; j++)
+                        else
                         {
-                            pfe_fw_feature_destroy(class->fw_features[j]);
-                            class->fw_features[j] = NULL;
+                            /* Set the low level data in the feature */
+                            (void)pfe_fw_feature_set_ll_data(class->fw_features[i], entry);
+                            /* Set the feature string base */
+                            ret = pfe_fw_feature_set_string_base(class->fw_features[i], pfe_pe_get_fw_feature_str_base(class->pe[0U]));
+                            if(EOK != ret)
+                            {
+                                NXP_LOG_ERROR("Failed to set string base for feature %u\n", (uint_t)i);
+                                /* Destroy previously created and return failure */
+                                for(j = 0U; j < i; j++)
+                                {
+                                    pfe_fw_feature_destroy(class->fw_features[j]);
+                                    class->fw_features[j] = NULL;
+                                }
+                                oal_mm_free(class->fw_features);
+                                class->fw_features = NULL;
+                                class->fw_features_count = 0U;
+                                ret = EINVAL;
+                                val_break = TRUE;
+                            }
+                            else
+                            {
+                                /* Set functions to read/write DMEM and their data */
+                                (void)pfe_fw_feature_set_dmem_funcs(class->fw_features[i], pfe_class_read_dmem, pfe_class_write_dmem, (void *)class);
+                            }
                         }
-                        oal_mm_free(class->fw_features);
-                        class->fw_features = NULL;
-                        class->fw_features_count = 0U;
-                        ret = EINVAL;
+                    }
+                    if (TRUE == val_break)
+                    {
                         break;
                     }
-                    /* Set functions to read/write DMEM and their data */
-                    (void)pfe_fw_feature_set_dmem_funcs(class->fw_features[i], pfe_class_read_dmem, pfe_class_write_dmem, (void *)class);
                 }
             }
         } /* Else is OK too */
@@ -949,7 +865,7 @@ errno_t pfe_class_set_rtable(pfe_class_t *class, addr_t rtable_pa, uint32_t rtab
 {
 	errno_t ret = EOK;
 #if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely((NULL == class) || (NULL == rtable_pa)))
+	if (unlikely((NULL == class) || (NULL_ADDR == rtable_pa)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
 		return EINVAL;
@@ -1032,7 +948,7 @@ errno_t pfe_class_get_feature(const pfe_class_t *class, pfe_fw_feature_t **featu
     const char *fname;
     errno_t ret;
 #if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely((NULL == class)||(NULL = feature)||(NULL = name)))
+	if (unlikely((NULL == class)||(NULL == feature)||(NULL == name)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
 		return EINVAL;
@@ -1062,7 +978,7 @@ errno_t pfe_class_get_feature(const pfe_class_t *class, pfe_fw_feature_t **featu
 errno_t pfe_class_get_feature_first(pfe_class_t *class, pfe_fw_feature_t **feature)
 {
  #if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely((NULL == class)||(NULL = feature)))
+	if (unlikely((NULL == class)||(NULL == feature)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
 		return EINVAL;
@@ -1087,7 +1003,7 @@ errno_t pfe_class_get_feature_first(pfe_class_t *class, pfe_fw_feature_t **featu
 errno_t pfe_class_get_feature_next(pfe_class_t *class, pfe_fw_feature_t **feature)
 {
  #if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely((NULL == class)||(NULL = feature)))
+	if (unlikely((NULL == class)||(NULL == feature)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
 		return EINVAL;
@@ -1130,7 +1046,7 @@ static void pfe_class_alg_stats_endian(pfe_ct_class_algo_stats_t *stat)
 void pfe_class_flexi_parser_stats_endian(pfe_ct_class_flexi_parser_stats_t *stats)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely(NULL == stat))
+	if (unlikely(NULL == stats))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
 		return;
@@ -1261,10 +1177,17 @@ uint32_t pfe_class_put_data(const pfe_class_t *class, pfe_ct_buffer_t *buf)
 
 	for (ii=0U; ii<class->pe_num; ii++)
 	{
+		/*	Allow safe use of _nolock() functions. We don't call the _mem_lock()
+		 	here as we don't need to have coherent accesses. */
+		if (EOK != pfe_pe_lock(class->pe[ii]))
+		{
+			NXP_LOG_DEBUG("pfe_pe_lock() failed\n");
+		}
+
 		tries = 0U;
 		do
 		{
-			ret = pfe_pe_put_data(class->pe[ii], buf);
+			ret = pfe_pe_put_data_nolock(class->pe[ii], buf);
 			if (EAGAIN == ret)
 			{
 				tries++;
@@ -1272,6 +1195,11 @@ uint32_t pfe_class_put_data(const pfe_class_t *class, pfe_ct_buffer_t *buf)
 			}
 		} while ((ret == EAGAIN) && (tries < 10U));
 
+		if (EOK != pfe_pe_unlock(class->pe[ii]))
+		{
+			NXP_LOG_DEBUG("pfe_pe_lock() failed\n");
+		}
+
 		if (EOK != ret)
 		{
 			NXP_LOG_ERROR("Unable to update pe %u\n", (uint_t)ii);
@@ -1328,56 +1256,71 @@ uint32_t pfe_class_get_text_statistics(pfe_class_t *class, char_t *buf, uint32_t
 
 	len += pfe_class_cfg_get_text_stat(class->cbus_base_va, buf + len, buf_len - len, verb_level);
 
-
 	/* Allocate memory to copy the statistics from PEs + one position for sums
 	   (having sums separate from data allows to print also per PE details) */
 	pe_stats = oal_mm_malloc(sizeof(pfe_ct_pe_stats_t) * (class->pe_num + 1U));
-	if(NULL == pe_stats)
+	if (NULL == pe_stats)
 	{
 		NXP_LOG_ERROR("Memory allocation failed\n");
 		return len;
 	}
+
 	(void)memset(pe_stats, 0, sizeof(pfe_ct_pe_stats_t) * (class->pe_num + 1U));
+
 	c_alg_stats = oal_mm_malloc(sizeof(pfe_ct_classify_stats_t) * (class->pe_num + 1U));
-	if(NULL == c_alg_stats)
+	if (NULL == c_alg_stats)
 	{
 		NXP_LOG_ERROR("Memory allocation failed\n");
 		oal_mm_free(pe_stats);
 		return len;
 	}
+
 	(void)memset(c_alg_stats, 0, sizeof(pfe_ct_classify_stats_t) * (class->pe_num + 1U));
+
 	/* Get the memory map - all PEs share the same memory map
 	   therefore we can read arbitrary one (in this case 0U) */
 	ret = pfe_pe_get_mmap(class->pe[0U], &mmap);
-	if(EOK != ret)
+	if (EOK != ret)
 	{
 		NXP_LOG_ERROR("Cannot get PE memory map\n");
 		oal_mm_free(c_alg_stats);
 		oal_mm_free(pe_stats);
 		return len;
 	}
-	/* Lock all PEs - they will stop processing frames and wait */
+
+	/* Lock all PEs - they will stop processing frames and wait. This will
+	   ensure data coherence. */
 	for (ii = 0U; ii < class->pe_num; ii++)
 	{
 		ret = pfe_pe_mem_lock(class->pe[ii]);
-		if(EOK != ret)
+		if (EOK != ret)
 		{
 			NXP_LOG_ERROR("PE %u could not be locked\n", (uint_t)ii);
-			len += oal_util_snprintf(buf + len, buf_len - len, "PE %u could not be locked - statistics are not coherent\n", ii);
+			len += oal_util_snprintf(buf + len, buf_len - len,
+					"PE %u could not be locked - statistics are not coherent\n", ii);
 		}
 	}
+
 	/* Get PE info per PE
 	   - leave 1st position in allocated memory empty for sums */
 	for (ii = 0U; ii < class->pe_num; ii++)
 	{
-		(void)pfe_pe_get_classify_stats(class->pe[ii], oal_ntohl(mmap.class_pe.classification_stats), &c_alg_stats[ii + 1U]);
-		(void)pfe_pe_get_pe_stats(class->pe[ii], oal_ntohl(mmap.class_pe.pe_stats), &pe_stats[ii + 1U]);
+		(void)pfe_pe_get_classify_stats_nolock(
+							class->pe[ii],
+							oal_ntohl(mmap.class_pe.classification_stats),
+							&c_alg_stats[ii + 1U]);
+
+		(void)pfe_pe_get_pe_stats_nolock(
+					class->pe[ii],
+					oal_ntohl(mmap.class_pe.pe_stats),
+					&pe_stats[ii + 1U]);
 	}
-	 /* Enable all PEs */
+
+	/* Unlock all PEs */
 	for (ii = 0U; ii < class->pe_num; ii++)
 	{
 		ret = pfe_pe_mem_unlock(class->pe[ii]);
-		if(EOK != ret)
+		if (EOK != ret)
 		{
 			NXP_LOG_ERROR("PE %u could not be unlocked\n", (uint_t)ii);
 		}
@@ -1399,14 +1342,17 @@ uint32_t pfe_class_get_text_statistics(pfe_class_t *class, char_t *buf, uint32_t
 		pfe_class_alg_stats_endian(&c_alg_stats[ii + 1U].hif_to_hif);
 		pfe_class_flexi_parser_stats_endian(&c_alg_stats[ii + 1U].flexible_filter);
 		pfe_class_pe_stats_endian(&pe_stats[ii + 1U]);
+
 		/* Calculate sums */
 		pe_stats[0].processed += pe_stats[ii + 1U].processed;
 		pe_stats[0].discarded += pe_stats[ii + 1U].discarded;
 		pe_stats[0].injected += pe_stats[ii + 1U].injected;
+
 		for(j = 0U; j < ((uint32_t)PFE_PHY_IF_ID_MAX + 1U); j++)
 		{
 			pe_stats[0].replicas[j] += pe_stats[ii + 1U].replicas[j];
 		}
+
 		pfe_class_sum_pe_algo_stats(&c_alg_stats[0U].flexible_router, &c_alg_stats[ii + 1U].flexible_router);
 		pfe_class_sum_pe_algo_stats(&c_alg_stats[0U].ip_router, &c_alg_stats[ii + 1U].ip_router);
 		pfe_class_sum_pe_algo_stats(&c_alg_stats[0U].l2_bridge, &c_alg_stats[ii + 1U].l2_bridge);
@@ -1418,18 +1364,22 @@ uint32_t pfe_class_get_text_statistics(pfe_class_t *class, char_t *buf, uint32_t
 
 	/* Print results */
 	len += oal_util_snprintf(buf + len, buf_len - len, "-- Per PE statistics --\n");
+
 	for (ii = 0U; ii < class->pe_num; ii++)
 	{
 		len += oal_util_snprintf(buf + len, buf_len - len, "PE %u Frames processed: %u\n", ii, pe_stats[ii + 1U].processed);
 		len += oal_util_snprintf(buf + len, buf_len - len, "PE %u Frames discarded: %u\n", ii, pe_stats[ii + 1U].discarded);
 	}
+
 	len += oal_util_snprintf(buf + len, buf_len - len, "-- Summary statistics --\n");
 	len += oal_util_snprintf(buf + len, buf_len - len, "Frames processed: %u\n", pe_stats[0].processed);
 	len += oal_util_snprintf(buf + len, buf_len - len, "Frames discarded: %u\n", pe_stats[0].discarded);
-	for(j = 0U; j < ((uint32_t)PFE_PHY_IF_ID_MAX + 1U); j++)
+
+	for (j = 0U; j < ((uint32_t)PFE_PHY_IF_ID_MAX + 1U); j++)
 	{
 		len += oal_util_snprintf(buf + len, buf_len - len, "Frames with %u replicas: %u\n", j + 1U, pe_stats[0].replicas[j]);
 	}
+
 	len += oal_util_snprintf(buf + len, buf_len - len, "Frames with HIF_TX_INJECT: %u\n", pe_stats[0].injected);
 
 	len += oal_util_snprintf(buf + len, buf_len - len, "- Flexible router -\n");
@@ -1449,9 +1399,11 @@ uint32_t pfe_class_get_text_statistics(pfe_class_t *class, char_t *buf, uint32_t
 
 	len += oal_util_snprintf(buf + len, buf_len - len, "\nDMEM heap\n---------\n");
 	len += blalloc_get_text_statistics(class->heap_context, buf + len, buf_len - len, verb_level);
+
 	/* Free allocated memory */
 	oal_mm_free(c_alg_stats);
 	oal_mm_free(pe_stats);
+
 	if (EOK != oal_mutex_unlock(&class->mutex))
 	{
 		NXP_LOG_DEBUG("mutex unlock failed\n");
diff --git a/sw/pfe_platform/src/pfe_emac.c b/sw/pfe_platform/src/pfe_emac.c
index 3390f96..efa912a 100644
--- a/sw/pfe_platform/src/pfe_emac.c
+++ b/sw/pfe_platform/src/pfe_emac.c
@@ -52,10 +52,10 @@ static bool_t pfe_emac_flush_criterion_eval(const pfe_mac_addr_db_entry_t *entry
 static void pfe_emac_addr_db_init(pfe_emac_t *emac);
 static errno_t pfe_emac_addr_db_add(pfe_emac_t *emac, const pfe_mac_addr_t addr, bool_t in_hash_grp, uint32_t data, pfe_drv_id_t owner);
 static pfe_mac_addr_db_entry_t *pfe_emac_addr_db_find_by_hash(const pfe_emac_t *emac, uint32_t hash);
-static pfe_mac_addr_db_entry_t *pfe_emac_addr_db_find_by_addr(const pfe_emac_t *emac, const pfe_mac_addr_t addr);
+static pfe_mac_addr_db_entry_t *pfe_emac_addr_db_find_by_addr(const pfe_emac_t *emac, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
 static errno_t pfe_emac_addr_db_del_entry(const pfe_emac_t *emac, pfe_mac_addr_db_entry_t *entry);
 static void pfe_emac_addr_db_drop_all(const pfe_emac_t *emac);
-static errno_t pfe_emac_del_addr_nolock(pfe_emac_t *emac, const pfe_mac_addr_t addr);
+static errno_t pfe_emac_del_addr_nolock(pfe_emac_t *emac, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
 
 /**
  * @brief		Evaluate given DB entry against specified criterion
@@ -235,9 +235,10 @@ static void pfe_emac_addr_db_drop_all(const pfe_emac_t *emac)
  * @details		Access to the shared resources => needs to be called within the critical section!
  * @param[in]	emac The EMAC instance
  * @param[in]	addr The MAC address to search
+ * @param[in]	owner The identification of driver instance
  * @return		The DB entry if found or NULL if address is not present
  */
-static pfe_mac_addr_db_entry_t *pfe_emac_addr_db_find_by_addr(const pfe_emac_t *emac, const pfe_mac_addr_t addr)
+static pfe_mac_addr_db_entry_t *pfe_emac_addr_db_find_by_addr(const pfe_emac_t *emac, const pfe_mac_addr_t addr, pfe_drv_id_t owner)
 {
 	pfe_mac_addr_db_entry_t *entry = NULL;
 	LLIST_t *curItem;
@@ -253,7 +254,7 @@ static pfe_mac_addr_db_entry_t *pfe_emac_addr_db_find_by_addr(const pfe_emac_t *
 	LLIST_ForEach(curItem, &emac->mac_addr_list)
 	{
 		entry = LLIST_Data(curItem, pfe_mac_addr_db_entry_t, iterator);
-		if (0 == memcmp(addr, entry->addr, sizeof(pfe_mac_addr_t)))
+		if ((entry->owner == owner) && (0 == memcmp(addr, entry->addr, sizeof(pfe_mac_addr_t))))
 		{
 			return entry;
 		}
@@ -1093,7 +1094,7 @@ errno_t pfe_emac_flush_mac_addrs(pfe_emac_t *emac, pfe_emac_crit_t crit, pfe_mac
 			(void)memcpy(addr, entry->addr, sizeof(pfe_mac_addr_t));
 			if (TRUE == pfe_emac_flush_criterion_eval(entry, crit, type, owner))
 			{
-				ret = pfe_emac_del_addr_nolock(emac, entry->addr);
+				ret = pfe_emac_del_addr_nolock(emac, entry->addr, entry->owner);
 				if (EOK != ret)
 				{
 					NXP_LOG_WARNING("Can't remove MAC address within the flush function\n");
@@ -1128,11 +1129,12 @@ errno_t pfe_emac_flush_mac_addrs(pfe_emac_t *emac, pfe_emac_crit_t crit, pfe_mac
  * @details		Address resolution will be done using exact match with the added address 
  * @param[in]	emac The EMAC instance
  * @param[in]	addr The MAC address to delete
+ * @param[in]	owner The identification of driver instance
  * @retval		EOK Success
  * @retval		ENOENT Address not found
  * @note		Must not be preempted by: pfe_emac_add_addr(), pfe_emac_destroy()
  */
-errno_t pfe_emac_del_addr(pfe_emac_t *emac, const pfe_mac_addr_t addr)
+errno_t pfe_emac_del_addr(pfe_emac_t *emac, const pfe_mac_addr_t addr, pfe_drv_id_t owner)
 {
 	errno_t ret;
 	
@@ -1148,7 +1150,7 @@ errno_t pfe_emac_del_addr(pfe_emac_t *emac, const pfe_mac_addr_t addr)
 		NXP_LOG_DEBUG("Mutex lock failed\n");
 	}
 
-	ret = pfe_emac_del_addr_nolock(emac, addr);
+	ret = pfe_emac_del_addr_nolock(emac, addr, owner);
 
 	if (EOK != oal_mutex_unlock(&emac->mutex))
 	{
@@ -1163,11 +1165,12 @@ errno_t pfe_emac_del_addr(pfe_emac_t *emac, const pfe_mac_addr_t addr)
  * @details		Address resolution will be done using exact match with the added address 
  * @param[in]	emac The EMAC instance
  * @param[in]	addr The MAC address to delete
+ * @param[in]	owner The identification of driver instance
  * @retval		EOK Success
  * @retval		ENOENT Address not found
  * @note		Must not be preempted by: pfe_emac_add_addr(), pfe_emac_destroy()
  */
-static errno_t pfe_emac_del_addr_nolock(pfe_emac_t *emac, const pfe_mac_addr_t addr)
+static errno_t pfe_emac_del_addr_nolock(pfe_emac_t *emac, const pfe_mac_addr_t addr, pfe_drv_id_t owner)
 {
 	pfe_mac_addr_db_entry_t *entry, local_entry;
 	errno_t ret;
@@ -1181,7 +1184,7 @@ static errno_t pfe_emac_del_addr_nolock(pfe_emac_t *emac, const pfe_mac_addr_t a
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/*	Get address entry from the internal DB */
-	entry = pfe_emac_addr_db_find_by_addr(emac, addr);
+	entry = pfe_emac_addr_db_find_by_addr(emac, addr, owner);
 
 	if (NULL == entry)
 	{
@@ -1216,16 +1219,7 @@ static errno_t pfe_emac_del_addr_nolock(pfe_emac_t *emac, const pfe_mac_addr_t a
 		else
 		{
 			/*	Configure the HW */
-			if (pfe_emac_is_multi(addr))
-			{
-				/*	Multicast */
-				pfe_emac_cfg_set_multi_group(emac->emac_base_va, local_entry.hash, FALSE);
-			}
-			else
-			{
-				/*	Unicast */
-				pfe_emac_cfg_set_uni_group(emac->emac_base_va, local_entry.hash, FALSE);
-			}
+			pfe_emac_cfg_set_hash_group(emac->emac_base_va, local_entry.hash, FALSE);
 		}
 	}
 	else
@@ -1275,7 +1269,7 @@ errno_t pfe_emac_add_addr(pfe_emac_t *emac, const pfe_mac_addr_t addr, pfe_drv_i
 	}
 
 	/*	Check if address is already registered */
-	entry = pfe_emac_addr_db_find_by_addr(emac, addr);
+	entry = pfe_emac_addr_db_find_by_addr(emac, addr, owner);
 
 	if (NULL != entry)
 	{
@@ -1326,16 +1320,7 @@ errno_t pfe_emac_add_addr(pfe_emac_t *emac, const pfe_mac_addr_t addr, pfe_drv_i
 		}
 
 		/*	Configure the HW */
-		if (pfe_emac_is_multi(addr))
-		{
-			/*	Multicast */
-			pfe_emac_cfg_set_multi_group(emac->emac_base_va, hash, TRUE);
-		}
-		else
-		{
-			/*	Unicast */
-			pfe_emac_cfg_set_uni_group(emac->emac_base_va, hash, TRUE);
-		}	
+		pfe_emac_cfg_set_hash_group(emac->emac_base_va, hash, TRUE);
 	}
 	/* There is free address slot, use it */
 	else
@@ -1439,7 +1424,7 @@ void pfe_emac_destroy(pfe_emac_t *emac)
 		LLIST_ForEachRemovable(curItem, tmp_item, &emac->mac_addr_list)
 		{
 			entry = LLIST_Data(curItem, pfe_mac_addr_db_entry_t, iterator);
-			if (EOK != pfe_emac_del_addr_nolock(emac, entry->addr))
+			if (EOK != pfe_emac_del_addr_nolock(emac, entry->addr, entry->owner))
 			{
 				NXP_LOG_WARNING("Can't remove MAC address within the destroy function\n");
 			}
diff --git a/sw/pfe_platform/src/pfe_flexible_filter.c b/sw/pfe_platform/src/pfe_flexible_filter.c
index 2774499..486903c 100644
--- a/sw/pfe_platform/src/pfe_flexible_filter.c
+++ b/sw/pfe_platform/src/pfe_flexible_filter.c
@@ -44,7 +44,7 @@ errno_t pfe_flexible_filter_set(pfe_class_t *class, const uint32_t dmem_addr)
     /* Get the memory map */
 	/* All PEs share the same memory map therefore we can read
 	   arbitrary one (in this case 0U) */
-	ret = pfe_class_get_mmap(class, 0U, &mmap);
+	ret = pfe_class_get_mmap(class, 0, &mmap);
 	if(EOK == ret)
 	{
         /* Get the flexible filter address */
diff --git a/sw/pfe_platform/src/pfe_fp.c b/sw/pfe_platform/src/pfe_fp.c
index fabb127..e0215f9 100644
--- a/sw/pfe_platform/src/pfe_fp.c
+++ b/sw/pfe_platform/src/pfe_fp.c
@@ -38,7 +38,7 @@ uint32_t pfe_fp_create_table(pfe_class_t *class, uint8_t rules_count)
     errno_t res;
 
     /* Calculate needed size */
-    size = sizeof(pfe_ct_fp_table_t) + (rules_count * sizeof(pfe_ct_fp_rule_t));
+    size = (uint32_t)sizeof(pfe_ct_fp_table_t) + ((uint32_t)rules_count * sizeof(pfe_ct_fp_rule_t));
     /* Allocate DMEM */
     addr = pfe_class_dmem_heap_alloc(class, size);
     if(0U == addr)
@@ -49,7 +49,7 @@ uint32_t pfe_fp_create_table(pfe_class_t *class, uint8_t rules_count)
     /* Write the table header */
     temp.count = rules_count;
     temp.rules = oal_htonl(addr + sizeof(pfe_ct_fp_table_t));
-    memset(&temp.fp_stats, 0, sizeof(pfe_ct_class_flexi_parser_stats_t));
+    (void)memset(&temp.fp_stats, 0, sizeof(pfe_ct_class_flexi_parser_stats_t));
     res = pfe_class_write_dmem(class, -1, addr, (void *)&temp, sizeof(pfe_ct_fp_table_t));
     if(EOK != res)
     {
@@ -70,7 +70,7 @@ uint32_t pfe_fp_create_table(pfe_class_t *class, uint8_t rules_count)
 * @details Function writes the rule at specified position in the previously created table.
 * @return 0 on failure otherwise the DMEM address of the rule.
 */
-uint32_t pfe_fp_table_write_rule(pfe_class_t *class, uint32_t table_address, pfe_ct_fp_rule_t *rule, uint8_t position)
+uint32_t pfe_fp_table_write_rule(pfe_class_t *class, uint32_t table_address, const pfe_ct_fp_rule_t *rule, uint8_t position)
 {
     pfe_ct_fp_rule_t temp;
     addr_t addr;
@@ -99,7 +99,7 @@ uint32_t pfe_fp_table_write_rule(pfe_class_t *class, uint32_t table_address, pfe
 * @param[in] class Classifier used to create the table
 * @param[in] table_address Address returned by the pfe_fp_create_table()
 */
-void pfe_fp_destroy_table(pfe_class_t *class, uint32_t table_address)
+void pfe_fp_destroy_table(const pfe_class_t *class, uint32_t table_address)
 {
     /* Just free the memory */
     pfe_class_dmem_heap_free(class, table_address);
@@ -112,13 +112,15 @@ errno_t pfe_fp_table_get_statistics(pfe_class_t *class, uint32_t pe_idx, uint32_
     addr_t addr;
 
     addr = table_address;
-    res = pfe_class_read_dmem(class, pe_idx, (void *)&temp, addr, sizeof(pfe_ct_fp_table_t));
+    res = pfe_class_read_dmem(class, (int32_t)pe_idx, (void *)&temp, addr, sizeof(pfe_ct_fp_table_t));
     if(EOK != res)
     {
         NXP_LOG_ERROR("Cannot read from DMEM\n");
-	return res;
+    }
+    else
+    {
+        (void)memcpy(stats, &temp.fp_stats, sizeof(pfe_ct_class_flexi_parser_stats_t));
     }
 
-    memcpy(stats, &temp.fp_stats, sizeof(pfe_ct_class_flexi_parser_stats_t));
     return res;
 }
diff --git a/sw/pfe_platform/src/pfe_fw_feature.c b/sw/pfe_platform/src/pfe_fw_feature.c
index 339e414..73c32d6 100644
--- a/sw/pfe_platform/src/pfe_fw_feature.c
+++ b/sw/pfe_platform/src/pfe_fw_feature.c
@@ -230,7 +230,7 @@ errno_t pfe_fw_feature_get_val(const pfe_fw_feature_t *feature, uint8_t *val)
  * @brief Checks whether the given feature is in enabled state
  * @param[in] feature Feature to check the enabled state
  * @retval TRUE Feature is enabled (the enable variable value is not 0)
- * @retval FALSE Feature is disable (or its state could not be read)
+ * @retval FALSE Feature is disabled (or its state could not be read)
  */
 bool_t pfe_fw_feature_enabled(const pfe_fw_feature_t *feature)
 {
diff --git a/sw/pfe_platform/src/pfe_hif_chnl.c b/sw/pfe_platform/src/pfe_hif_chnl.c
index 310b3db..a58bcb7 100644
--- a/sw/pfe_platform/src/pfe_hif_chnl.c
+++ b/sw/pfe_platform/src/pfe_hif_chnl.c
@@ -81,6 +81,7 @@
 #include "oal.h"
 #include "hal.h"
 
+#include "pfe_platform_cfg.h"
 #include "pfe_cbus.h"
 #include "pfe_hif_chnl.h"
 
@@ -122,15 +123,19 @@ struct __attribute__((aligned(HAL_CACHE_LINE_SIZE))) __pfe_hif_chnl_tag
 #if (TRUE == PFE_HIF_CHNL_CFG_RX_BUFFERS_ENABLED)
 	bpool_t *rx_pool;				/*	Pool of available RX buffers */
 #if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
-	pfe_bmu_t *bmu;					/*	Associated BMU instance */
+	const pfe_bmu_t *bmu;					/*	Associated BMU instance */
 	void *tx_ibuf_va;				/*	Intermediate TX buffer VA */
 	uint16_t tx_ibuf_len;			/*	Number of bytes in the ibuf */
+	uint32_t a_cnt;					/*	BMU allocations counter */
+	/*	Mutex protecting the allocations counter */
+	oal_spinlock_t a_lock __attribute__((aligned(HAL_CACHE_LINE_SIZE)));
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
 #endif /* PFE_HIF_CHNL_CFG_RX_BUFFERS_ENABLED */
 	oal_spinlock_t lock __attribute__((aligned(HAL_CACHE_LINE_SIZE)));				/*	Channel HW resources protection */
 	oal_spinlock_t rx_lock __attribute__((aligned(HAL_CACHE_LINE_SIZE)));			/*	RX resource protection */
 	pfe_hif_chnl_cbk_storage_t rx_cbk;		/*	RX callback */
 	pfe_hif_chnl_cbk_storage_t tx_cbk;		/*	TX callback */
+	pfe_hif_chnl_cbk_storage_t rx_tx_cbk;		/*	RX/TX callback */
 #if (TRUE == PFE_HIF_CHNL_CFG_RX_OOB_EVENT_ENABLED)
 	pfe_hif_chnl_cbk_storage_t rx_oob_cbk;	/*	RX Out-Of-Buffers callback */
 #endif
@@ -162,6 +167,74 @@ static uint32_t cbc_lock_initialized = 0U;
 #endif /* PFE_CFG_IP_VERSION */
 #endif /* PFE_CFG_HIF_TX_FIFO_FIX */
 
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+/*
+ * @brief	Increment buffer allocation counter
+ * @details	To monitor how many BMU buffers have been allocated
+ * 			by a channel instance we need to provide a SW counter.
+ */
+static void pfe_hif_chnl_alloc_inc(pfe_hif_chnl_t *chnl)
+{
+	if (EOK != oal_spinlock_lock(&chnl->a_lock))
+	{
+		NXP_LOG_DEBUG("Mutex lock failed\n");
+	}
+
+	chnl->a_cnt++;
+
+	if (EOK != oal_spinlock_unlock(&chnl->a_lock))
+	{
+		NXP_LOG_DEBUG("Mutex unlock failed\n");
+	}
+}
+
+/*
+ * @brief	Decrement buffer allocation counter
+ * @details	To monitor how many BMU buffers have been allocated
+ * 			by a channel instance we need to provide a SW counter.
+ */
+static void pfe_hif_chnl_alloc_dec(pfe_hif_chnl_t *chnl)
+{
+	if (EOK != oal_spinlock_lock(&chnl->a_lock))
+	{
+		NXP_LOG_DEBUG("Mutex lock failed\n");
+	}
+
+	chnl->a_cnt--;
+
+	if (EOK != oal_spinlock_unlock(&chnl->a_lock))
+	{
+		NXP_LOG_DEBUG("Mutex unlock failed\n");
+	}
+}
+
+/*
+ * @brief	Get state of allocation counter
+ * @details	To monitor how many BMU buffers have been allocated
+ * 			by a channel instance we need to provide a SW counter.
+ * @return	Current number of allocated buffers.
+ */
+static uint32_t pfe_hif_chnl_get_alloc_cnt(pfe_hif_chnl_t *chnl)
+{
+	uint32_t ret;
+
+	if (EOK != oal_spinlock_lock(&chnl->a_lock))
+	{
+		NXP_LOG_DEBUG("Mutex lock failed\n");
+	}
+
+	ret = chnl->a_cnt;
+
+	if (EOK != oal_spinlock_unlock(&chnl->a_lock))
+	{
+		NXP_LOG_DEBUG("Mutex unlock failed\n");
+	}
+
+	return ret;
+}
+
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
+
 /**
  * @brief		Channel master ISR
  * @param[in]	chnl The channel instance
@@ -204,27 +277,38 @@ __attribute__((hot)) errno_t pfe_hif_chnl_isr(pfe_hif_chnl_t *chnl)
 	}
 
 	/*	Run callbacks for identified interrupts here */
-	if (HIF_CHNL_EVT_RX_IRQ == (events & HIF_CHNL_EVT_RX_IRQ))
+	if (NULL != chnl->rx_tx_cbk.cbk)
 	{
-		if (NULL != chnl->rx_cbk.cbk)
+		if (events & HIF_CHNL_EVT_RX_IRQ || events & HIF_CHNL_EVT_TX_IRQ)
 		{
-			chnl->rx_cbk.cbk(chnl->rx_cbk.arg);
-		}
-		else
-		{
-			NXP_LOG_DEBUG("Unhandled HIF_CHNL_EVT_RX_IRQ detected\n");
+			chnl->rx_tx_cbk.cbk(chnl->rx_tx_cbk.arg);
 		}
 	}
-
-	if (HIF_CHNL_EVT_TX_IRQ == (events & HIF_CHNL_EVT_TX_IRQ))
+	else
 	{
-		if (NULL != chnl->tx_cbk.cbk)
+
+		if (HIF_CHNL_EVT_RX_IRQ == (events & HIF_CHNL_EVT_RX_IRQ))
 		{
-			chnl->tx_cbk.cbk(chnl->tx_cbk.arg);
+			if (NULL != chnl->rx_cbk.cbk)
+			{
+				chnl->rx_cbk.cbk(chnl->rx_cbk.arg);
+			}
+			else
+			{
+				NXP_LOG_DEBUG("Unhandled HIF_CHNL_EVT_RX_IRQ detected\n");
+			}
 		}
-		else
+
+		if (HIF_CHNL_EVT_TX_IRQ == (events & HIF_CHNL_EVT_TX_IRQ))
 		{
-			NXP_LOG_DEBUG("Unhandled HIF_CHNL_EVT_TX_IRQ detected\n");
+			if (NULL != chnl->tx_cbk.cbk)
+			{
+				chnl->tx_cbk.cbk(chnl->tx_cbk.arg);
+			}
+			else
+			{
+				NXP_LOG_DEBUG("Unhandled HIF_CHNL_EVT_TX_IRQ detected\n");
+			}
 		}
 	}
 
@@ -397,21 +481,42 @@ __attribute__((cold)) pfe_hif_chnl_t *pfe_hif_chnl_create(addr_t cbus_base_va, u
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
 #endif /* PFE_HIF_CHNL_CFG_RX_BUFFERS_ENABLED */
 
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+		if (EOK != oal_spinlock_init(&chnl->a_lock))
+		{
+			NXP_LOG_ERROR("Channel BMU allocation mutex initialization failed\n");
+			oal_mm_free_contig(chnl);
+			return NULL;
+		}
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
+
 		if (EOK != oal_spinlock_init(&chnl->lock))
 		{
 			NXP_LOG_ERROR("Channel mutex initialization failed\n");
+
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+			if (EOK != oal_spinlock_destroy(&chnl->a_lock))
+			{
+				NXP_LOG_WARNING("Could not properly destroy mutex\n");
+			}
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
+
 			oal_mm_free_contig(chnl);
+
 			return NULL;
 		}
 
 		if (EOK != oal_spinlock_init(&chnl->rx_lock))
 		{
 			NXP_LOG_ERROR("Channel RX mutex initialization failed\n");
-			if (EOK != oal_spinlock_destroy(&chnl->lock))
-			{
-				NXP_LOG_WARNING("Could not properly destroy mutex\n");
-			}
+
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+			(void)oal_spinlock_destroy(&chnl->a_lock);
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
+
+			(void)oal_spinlock_destroy(&chnl->lock);
 			oal_mm_free_contig(chnl);
+
 			return NULL;
 		}
 
@@ -421,15 +526,21 @@ __attribute__((cold)) pfe_hif_chnl_t *pfe_hif_chnl_create(addr_t cbus_base_va, u
 			if (EOK != oal_spinlock_init(&cbc_lock))
 			{
 				NXP_LOG_ERROR("CBC lock initialization failed\n");
+
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+				(void)oal_spinlock_destroy(&chnl->a_lock);
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
+
 				(void)oal_spinlock_destroy(&chnl->lock);
 				(void)oal_spinlock_destroy(&chnl->rx_lock);
 				oal_mm_free_contig(chnl);
+
 				return NULL;
 			}
 		}
 
 		cbc_lock_initialized++;
-#endif /* */
+#endif /* PFE_CFG_HIF_TX_FIFO_FIX */
 
 #if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
 		if (chnl->id >= PFE_HIF_CHNL_NOCPY_ID)
@@ -480,8 +591,13 @@ __attribute__((cold)) pfe_hif_chnl_t *pfe_hif_chnl_create(addr_t cbus_base_va, u
 	return chnl;
 
 free_and_fail:
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+	(void)oal_spinlock_destroy(&chnl->a_lock);
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
+
 	(void)oal_spinlock_destroy(&chnl->lock);
 	(void)oal_spinlock_destroy(&chnl->rx_lock);
+
 #if defined(PFE_CFG_HIF_TX_FIFO_FIX)
 	cbc_lock_initialized--;
 	if (0U == cbc_lock_initialized)
@@ -768,7 +884,8 @@ __attribute__((hot)) void pfe_hif_chnl_tx_dma_start(const pfe_hif_chnl_t *chnl)
 /**
  * @brief		Attach event callback
  * @param[in]	chnl The channel instance
- * @param[in]	event Event triggering the handler
+ * @param[in]	event Event triggering the handler. Rx and Tx events can
+ *			have a shared callback.
  * @param[in]	isr The ISR
  * @param[in]	arg The ISR argument
  * @return		EOK if success, error code otherwise
@@ -790,7 +907,13 @@ errno_t pfe_hif_chnl_set_event_cbk(pfe_hif_chnl_t *chnl, pfe_hif_chnl_event_t ev
 		NXP_LOG_DEBUG("Mutex lock failed\n");
 	}
 
-	if (HIF_CHNL_EVT_TX_IRQ == event)
+	if ((HIF_CHNL_EVT_TX_IRQ | HIF_CHNL_EVT_RX_IRQ) == event)
+	{
+		/*	RX/TX callback */
+		chnl->rx_tx_cbk.arg = arg;
+		chnl->rx_tx_cbk.cbk = cbk;
+	}
+	else if (HIF_CHNL_EVT_TX_IRQ == event)
 	{
 		/*	TX callback */
 		chnl->tx_cbk.arg = arg;
@@ -1207,15 +1330,12 @@ __attribute__((pure, cold)) uint32_t pfe_hif_chnl_get_tx_fifo_depth(const pfe_hi
  * @retval		ENOSPC TX queue is full
  * @retval		EIO Internal error
  */
-__attribute__((hot)) errno_t pfe_hif_chnl_tx(const pfe_hif_chnl_t *chnl, const void *buf_pa, const void *buf_va, uint32_t len, bool_t lifm)
+__attribute__((hot)) errno_t pfe_hif_chnl_tx(pfe_hif_chnl_t *chnl, const void *buf_pa, const void *buf_va, uint32_t len, bool_t lifm)
 {
 	errno_t err = EOK;
 #if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
 	uint32_t u32tmp;
 	void *tx_ibuf_pa;
-#if defined(PFE_CFG_HIF_NOCPY_DIRECT)
-	pfe_ct_hif_tx_hdr_t *hif_tx_hdr;
-#endif /* PFE_CFG_HIF_NOCPY_DIRECT */
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
@@ -1257,65 +1377,70 @@ __attribute__((hot)) errno_t pfe_hif_chnl_tx(const pfe_hif_chnl_t *chnl, const v
 			}
 			else
 			{
-				chnl->tx_ibuf_va = pfe_bmu_get_va(chnl->bmu, tx_ibuf_pa);
+				/*	Increment BMU allocations counter */
+				pfe_hif_chnl_alloc_inc(chnl);
+
+				/*	Get VA */
+				chnl->tx_ibuf_va = pfe_bmu_get_va(chnl->bmu, (addr_t)tx_ibuf_pa);
 				chnl->tx_ibuf_len = 0U;
 			}
 		}
 
-		/*	Copy payload into the intermediate buffer */
-		if (unlikely((chnl->tx_ibuf_len + len) > pfe_bmu_get_buf_size(chnl->bmu)))
+		tx_ibuf_pa = pfe_bmu_get_pa(chnl->bmu, (addr_t)chnl->tx_ibuf_va);
+
+		/*	Copy payload into the intermediate buffer, leave 256 + PFE_CFG_LMEM_HDR_SIZE bytes empty like
+		    HIF and EMAC do. This space is then used. */
+		if (unlikely((chnl->tx_ibuf_len + len) > (pfe_bmu_get_buf_size(chnl->bmu) - (256U + PFE_CFG_LMEM_HDR_SIZE))))
 		{
 			NXP_LOG_ERROR("Payload exceeds BMU buffer length\n");
 
 			/*	Drop. Resource protection is embedded. */
-			tx_ibuf_pa = pfe_bmu_get_pa(chnl->bmu, chnl->tx_ibuf_va);
-			pfe_bmu_free_buf(chnl->bmu, tx_ibuf_pa);
+			pfe_bmu_free_buf(chnl->bmu, (addr_t)tx_ibuf_pa);
 			chnl->tx_ibuf_va = NULL;
 			chnl->tx_ibuf_len = 0U;
 
+			/*	Decrement BMU allocations counter */
+			pfe_hif_chnl_alloc_dec(chnl);
+
 			return ENOMEM;
 		}
 
-		memcpy((void *)((addr_t)chnl->tx_ibuf_va + sizeof(pfe_ct_post_cls_hdr_t) + chnl->tx_ibuf_len), buf_va, len);
+		memcpy((void *)((addr_t)chnl->tx_ibuf_va + (256U + PFE_CFG_LMEM_HDR_SIZE) + chnl->tx_ibuf_len), buf_va, len);
 		chnl->tx_ibuf_len = chnl->tx_ibuf_len + len;
 
 		if (TRUE == lifm)
 		{
-			/*	We expect that the caller will prepend the packet data with HIF TX header. Subtract
-				therefore the TX header length to get clean packet length as required by HIF NOCPY. */
-			chnl->tx_ibuf_len = chnl->tx_ibuf_len - sizeof(pfe_ct_hif_tx_hdr_t);
-
-			/*	Post classification header insertion. Should match the pfe_ct_post_cls_hdr_t (network endian). */
-			u32tmp = 0x2020U; /* <-- This is taken from reference code */
-			u32tmp = u32tmp | (oal_htons(chnl->tx_ibuf_len) << 16);
-			memcpy((chnl->tx_ibuf_va), &u32tmp, sizeof(u32tmp));
-
 			/*	Enqueue the intermediate buffer */
-#if defined(PFE_CFG_HIF_NOCPY_DIRECT)
-			/*	In this case we must specify egress interface (because it is not enough to have
-				the information within TX header and the post-cls header...*/
-			hif_tx_hdr = (pfe_ct_hif_tx_hdr_t *)((addr_t)chnl->tx_ibuf_va + sizeof(pfe_ct_post_cls_hdr_t));
-
-			/*	Default is EMAC0 */
-			pfe_hif_ring_set_egress_if(chnl->tx_ring, PFE_PHY_IF_ID_EMAC0);
-
-			for (u32tmp=0U; u32tmp<PFE_PHY_IF_ID_MAX; u32tmp++)
-			{
-				if (0U != (hif_tx_hdr->e_phy_ifs & (1U << u32tmp)))
-				{
-					pfe_hif_ring_set_egress_if(chnl->tx_ring, u32tmp);
-					break;
-				}
-			}
-#endif /* PFE_CFG_HIF_NOCPY_DIRECT */
-
-			tx_ibuf_pa = pfe_bmu_get_pa(chnl->bmu, chnl->tx_ibuf_va);
+			/* Documentation says we need to build structure as described in
+			   Figure 5: GPI-RX- LMEM Buffer Structure & DDR Buffer Structure */
+			/* DDR buffer physical address */
+			u32tmp = oal_htonl((addr_t)tx_ibuf_pa);
+			memcpy(chnl->tx_ibuf_va, &u32tmp, sizeof(u32tmp));
+
+			/* Length and PHYNO */
+			u32tmp = oal_htons(chnl->tx_ibuf_len) | (PFE_PHY_IF_ID_HIF_NOCPY << 24U);
+			memcpy(chnl->tx_ibuf_va + sizeof(u32tmp), &u32tmp, sizeof(u32tmp));
+
+			/* EMAC statistics */
+			memset(chnl->tx_ibuf_va + (2U * sizeof(uint32_t)), 0U, sizeof(uint32_t));
+
+			/* Copy the portion of data to get into LMEM buffer */
+			/* AAVB-3403 shall remove this memcpy() call */
+			u32tmp = ((PFE_CFG_LMEM_BUF_SIZE - PFE_CFG_LMEM_HDR_SIZE) < chnl->tx_ibuf_len)
+							? (PFE_CFG_LMEM_BUF_SIZE - PFE_CFG_LMEM_HDR_SIZE) : chnl->tx_ibuf_len;
+			memcpy(chnl->tx_ibuf_va + PFE_CFG_LMEM_HDR_SIZE, chnl->tx_ibuf_va + (256U + PFE_CFG_LMEM_HDR_SIZE), u32tmp);
+
+			/*	Enqueue the buffer into TX ring */
+			tx_ibuf_pa = pfe_bmu_get_pa(chnl->bmu, (addr_t)chnl->tx_ibuf_va);
 			err = pfe_hif_ring_enqueue_buf(chnl->tx_ring, tx_ibuf_pa, chnl->tx_ibuf_len, TRUE);
 
 			if (unlikely(EOK != err))
 			{
 				/*	Drop. Resource protection is embedded. */
-				pfe_bmu_free_buf(chnl->bmu, tx_ibuf_pa);
+				pfe_bmu_free_buf(chnl->bmu, (addr_t)tx_ibuf_pa);
+
+				/*	Decrement BMU allocations counter */
+				pfe_hif_chnl_alloc_dec(chnl);
 			}
 
 			/*	Reset the intermediate buffer. No release here since it will
@@ -1369,7 +1494,7 @@ __attribute__((hot)) errno_t pfe_hif_chnl_tx(const pfe_hif_chnl_t *chnl, const v
  * @retval		EOK Next frame has been transmitted
  * @retval		EAGAIN No pending confirmations
  */
-__attribute__((hot)) errno_t pfe_hif_chnl_get_tx_conf(const pfe_hif_chnl_t *chnl)
+__attribute__((hot)) errno_t pfe_hif_chnl_get_tx_conf(pfe_hif_chnl_t *chnl)
 {
 	bool_t lifm;
 #ifdef PFE_CFG_HIF_TX_FIFO_FIX
@@ -1400,7 +1525,17 @@ __attribute__((hot)) errno_t pfe_hif_chnl_get_tx_conf(const pfe_hif_chnl_t *chnl
 	while (EOK == pfe_hif_ring_dequeue_plain(chnl->tx_ring, &lifm))
 	{
 #endif /* PFE_CFG_HIF_TX_FIFO_FIX */
-		
+
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+		if (chnl->id >= PFE_HIF_CHNL_NOCPY_ID)
+		{
+			/*	Decrement BMU allocations counter. It is here because we expect that
+				the PFE HW just released a TX buffer previously allocated from BMU
+				pool within the pfe_hif_chnl_tx(). */
+			pfe_hif_chnl_alloc_dec(chnl);
+		}
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
+
 		if (TRUE == lifm)
 		{
 #ifdef PFE_CFG_HIF_TX_FIFO_FIX
@@ -1453,6 +1588,17 @@ __attribute__((hot)) errno_t pfe_hif_chnl_rx(pfe_hif_chnl_t *chnl, void **buf_pa
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	err = pfe_hif_ring_dequeue_buf(chnl->rx_ring, buf_pa, len, lifm);
+	
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+	if (chnl->id >= PFE_HIF_CHNL_NOCPY_ID)
+	{
+		/*	Increment BMU allocations counter. We have not allocated a buffer from BMU
+			directly but the HW did that and then provided us the buffer. Therefore we
+			need to properly handle it (release it once it has been processed). So we
+			are counting it as allocated buffer here... */
+		pfe_hif_chnl_alloc_inc(chnl);
+	}
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
 
 #if (TRUE == PFE_HIF_CHNL_CFG_RX_OOB_EVENT_ENABLED)
 	/*	Check if ring has enough RX buffers */
@@ -1491,7 +1637,7 @@ __attribute__((hot)) errno_t pfe_hif_chnl_rx(pfe_hif_chnl_t *chnl, void **buf_pa
  * @retval		EAGAIN No more data to receive right now
  * @retval		ENOMEM Out of memory
  */
-__attribute__((hot)) errno_t pfe_hif_chnl_rx_va(const pfe_hif_chnl_t *chnl, void **buf_va, uint32_t *len, bool_t *lifm, void **meta)
+__attribute__((hot)) errno_t pfe_hif_chnl_rx_va(pfe_hif_chnl_t *chnl, void **buf_va, uint32_t *len, bool_t *lifm, void **meta)
 {
 	errno_t err;
 	void *buf_pa;
@@ -1517,11 +1663,11 @@ __attribute__((hot)) errno_t pfe_hif_chnl_rx_va(const pfe_hif_chnl_t *chnl, void
 			 	using as well as specific HIF header. Headers start from buffer offset 0x0 and we shall
 				strip-off the post-classification header here since upper layers do not know about such
 				thing. The space can be (and will be) used as the buffer-specific metadata storage. */
-			*buf_va = pfe_bmu_get_va(chnl->bmu, buf_pa);
+			*buf_va = pfe_bmu_get_va(chnl->bmu, (addr_t)buf_pa);
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 			if (unlikely(NULL == *buf_va))
 			{
-				NXP_LOG_DEBUG("Fatal: BMU converted p0x%p to v0x0\n", (uint32_t)(addr_t)buf_pa);
+				NXP_LOG_DEBUG("Fatal: BMU converted p0x%p to v0x0\n", buf_pa);
 			}
 			else
 #endif /* PFE_CFG_NULL_ARG_CHECK */
@@ -1530,7 +1676,7 @@ __attribute__((hot)) errno_t pfe_hif_chnl_rx_va(const pfe_hif_chnl_t *chnl, void
 			*meta = *buf_va;
 
 			/*	Skip the post-classification header to gain space for metadata storage.
-			 	The pfe_hif_chnl_release_buf() muse be aware of this adjustment before
+			 	The pfe_hif_chnl_release_buf() must be aware of this adjustment before
 				it will attempt to release buffer back to BMU hardware pool. This will
 				ensure the caller will receive also the HIF TX header but can reuse it
 				for custom purposes (see the pfe_hif_chnl_get_meta_size()). */
@@ -1540,6 +1686,12 @@ __attribute__((hot)) errno_t pfe_hif_chnl_rx_va(const pfe_hif_chnl_t *chnl, void
 			/*	Invalidate cache over the buffer */
 			oal_mm_cache_inval(*buf_va, buf_pa, *len);
 #endif /* HAL_HANDLE_CACHE */
+
+			/*	Increment BMU allocations counter. We have not allocated a buffer from BMU
+				directly but the HW did that and then provided us the buffer. Therefore we
+				need to properly handle it (release it once it has been processed). So we
+				are counting this reception as allocated buffer here... */
+			pfe_hif_chnl_alloc_inc(chnl);
 		}
 		else
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
@@ -1639,14 +1791,17 @@ __attribute__((hot)) errno_t pfe_hif_chnl_release_buf(pfe_hif_chnl_t *chnl, void
 		/*	HIF NOCPY */
 
 		/*	Get physical address */
-		buf_pa = (addr_t)pfe_bmu_get_pa(chnl->bmu, buf_va);
+		buf_pa = (addr_t)pfe_bmu_get_pa(chnl->bmu, (addr_t)buf_va);
 
 		/*	Apply the correction due to post-classification header skip done
 		 	during the buffer reception. */
 		buf_pa = buf_pa - sizeof(pfe_ct_post_cls_hdr_t);
 
 		/*	Release the buffer to BMU pool. Resource protection is embedded. */
-		pfe_bmu_free_buf(chnl->bmu, (void *)buf_pa);
+		pfe_bmu_free_buf(chnl->bmu, buf_pa);
+
+		/*	Decrement BMU allocations counter */
+		pfe_hif_chnl_alloc_dec(chnl);
 
 		ret = EOK;
 	}
@@ -2125,6 +2280,7 @@ static __attribute__((cold)) errno_t pfe_hif_chnl_flush_rx_bd_fifo(pfe_hif_chnl_
 	}
 
 	tx_hdr->flags = (pfe_ct_hif_tx_flags_t)(HIF_TX_INJECT|HIF_TX_IHC);
+	tx_hdr->chid = chnl->id;
 
 	/*	Activate the channel */
 	pfe_hif_chnl_rx_enable(chnl);
@@ -2232,6 +2388,7 @@ __attribute__((cold)) void pfe_hif_chnl_destroy(pfe_hif_chnl_t *chnl)
 		/*	Uninstall callbacks */
 		chnl->rx_cbk.cbk = NULL;
 		chnl->tx_cbk.cbk = NULL;
+		chnl->rx_tx_cbk.cbk = NULL;
 #if (TRUE == PFE_HIF_CHNL_CFG_RX_OOB_EVENT_ENABLED)
 		chnl->rx_oob_cbk.cbk = NULL;
 #endif
@@ -2246,7 +2403,7 @@ __attribute__((cold)) void pfe_hif_chnl_destroy(pfe_hif_chnl_t *chnl)
 				if (chnl->id >= PFE_HIF_CHNL_NOCPY_ID)
 				{
 					/*	HIF NOCPY buffers are provided by BMU so return them to BMU */
-					buf_va = pfe_bmu_get_va(chnl->bmu, buf_pa);
+					buf_va = pfe_bmu_get_va(chnl->bmu, (addr_t)buf_pa);
 				}
 				else
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
@@ -2269,13 +2426,26 @@ __attribute__((cold)) void pfe_hif_chnl_destroy(pfe_hif_chnl_t *chnl)
 #if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
 			if (chnl->id >= PFE_HIF_CHNL_NOCPY_ID)
 			{
-				/*	Nothing to do */
-				;
+				/*	Sanity check to verify if the HIF RX ring and the upper SW layers
+					have properly returned all RX and TX buffers back to the BMU. We're
+					using the allocations counter here to determine delta between number
+					of allocated buffers (either TX buffers we have directly allocated
+					or received buffers which have been allocated by the PFE HW) and
+					number of released buffers. */
+				if (0U != pfe_hif_chnl_get_alloc_cnt(chnl))
+				{
+					NXP_LOG_WARNING("Some buffers not returned to the BMU\n");
+				}
+				else
+				{
+					NXP_LOG_INFO("All buffers returned to the BMU\n");
+				}
 			}
 			else
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
 			{
-				/*	Sanity check */
+				/*	Sanity check to verify if the HIF RX ring and the upper SW layers
+					have properly returned all RX buffers back to the pool. */
 				if (EOK != bpool_get_fill_level(chnl->rx_pool, &level))
 				{
 					NXP_LOG_ERROR("Can't get buffer pool fill level\n ");
@@ -2283,7 +2453,11 @@ __attribute__((cold)) void pfe_hif_chnl_destroy(pfe_hif_chnl_t *chnl)
 
 				if (level < (pfe_hif_chnl_get_rx_fifo_depth(chnl)))
 				{
-					NXP_LOG_WARNING("Some buffers not returned to pool\n");
+					NXP_LOG_WARNING("Some RX buffers not returned to the pool\n");
+				}
+				else
+				{
+					NXP_LOG_INFO("All RX buffers returned to the pool\n");
 				}
 			}
 
@@ -2363,12 +2537,15 @@ __attribute__((cold)) void pfe_hif_chnl_destroy(pfe_hif_chnl_t *chnl)
 		}
 
 #if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
-		/*	Release the intermediate TX buffer */
 		if (NULL != chnl->tx_ibuf_va)
 		{
-			tx_ibuf_pa = pfe_bmu_get_pa(chnl->bmu, chnl->tx_ibuf_va);
-			pfe_bmu_free_buf(chnl->bmu, tx_ibuf_pa);
+			/*	Release the intermediate TX buffer */
+			tx_ibuf_pa = pfe_bmu_get_pa(chnl->bmu, (addr_t)chnl->tx_ibuf_va);
+			pfe_bmu_free_buf(chnl->bmu, (addr_t)tx_ibuf_pa);
 			chnl->tx_ibuf_va = NULL;
+
+			/*	Decrement BMU allocations counter */
+			pfe_hif_chnl_alloc_dec(chnl);
 		}
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
 #endif /* PFE_HIF_CHNL_CFG_RX_BUFFERS_ENABLED */
@@ -2395,6 +2572,13 @@ __attribute__((cold)) void pfe_hif_chnl_destroy(pfe_hif_chnl_t *chnl)
 			NXP_LOG_DEBUG("Mutex unlock failed\n");
 		}
 
+#if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
+		if (EOK != oal_spinlock_destroy(&chnl->a_lock))
+		{
+			NXP_LOG_WARNING("Could not properly destroy allocation counter mutex\n");
+		}
+#endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
+
 		if (EOK != oal_spinlock_destroy(&chnl->lock))
 		{
 			NXP_LOG_WARNING("Could not properly destroy channel mutex\n");
@@ -2471,7 +2655,7 @@ uint32_t pfe_hif_chnl_get_tx_cnt(const pfe_hif_chnl_t *chnl)
 	if (chnl->id >= PFE_HIF_CHNL_NOCPY_ID)
 	{
 		/*	HIF_NOCPY */
-		return pfe_hif_chnl_cfg_get_tx_cnt(chnl->cbus_base_va);
+		return pfe_hif_nocpy_cfg_get_tx_cnt(chnl->cbus_base_va);
 	}
 	else
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
@@ -2499,7 +2683,7 @@ uint32_t pfe_hif_chnl_get_rx_cnt(const pfe_hif_chnl_t *chnl)
 	if (chnl->id >= PFE_HIF_CHNL_NOCPY_ID)
 	{
 		/*	HIF_NOCPY */
-		return pfe_hif_nocpy_chnl_cfg_get_rx_cnt(chnl->cbus_base_va);
+		return pfe_hif_nocpy_cfg_get_rx_cnt(chnl->cbus_base_va);
 	}
 	else
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
diff --git a/sw/pfe_platform/src/pfe_hif_nocpy.c b/sw/pfe_platform/src/pfe_hif_nocpy.c
index b5a7e67..07f6ca1 100644
--- a/sw/pfe_platform/src/pfe_hif_nocpy.c
+++ b/sw/pfe_platform/src/pfe_hif_nocpy.c
@@ -99,10 +99,16 @@ pfe_hif_chnl_t *pfe_hif_nocpy_get_channel(const pfe_hif_nocpy_t *hif, uint32_t c
  * @brief		Destroy HIF_NOCPY instance
  * @param[in]	hif The HIF_NOCPY instance
  */
-void pfe_hif_nocpy_destroy(const pfe_hif_nocpy_t *hif)
+void pfe_hif_nocpy_destroy(pfe_hif_nocpy_t *hif)
 {
 	if (NULL != hif)
 	{
+		if (NULL != hif->channel)
+		{
+			pfe_hif_chnl_destroy(hif->channel);
+			hif->channel = NULL;
+		}
+		
 		pfe_hif_nocpy_cfg_fini(hif->base_va);
 		oal_mm_free(hif);
 	}
diff --git a/sw/pfe_platform/src/pfe_hif_ring.c b/sw/pfe_platform/src/pfe_hif_ring.c
index 8d94f52..159b033 100644
--- a/sw/pfe_platform/src/pfe_hif_ring.c
+++ b/sw/pfe_platform/src/pfe_hif_ring.c
@@ -14,7 +14,7 @@
  * 				possibilities for HIF's RX and TX buffer descriptor rings.
  * 				Each ring is treated as a single instance therefore module can
  * 				be used to handle HIF with multiple channels (RX/TX ring pairs).
- * 
+ *
  * @note		BD and WB BD rings are non-cached entities.
  *
  * @warning		No concurrency prevention is implemented here. User shall
@@ -30,8 +30,8 @@
 #include "pfe_cbus.h"
 #include "pfe_hif_ring.h"
 
-#define RING_LEN						PFE_HIF_RING_CFG_LENGTH
-#define RING_LEN_MASK					(PFE_HIF_RING_CFG_LENGTH - 1U)
+#define RING_LEN						PFE_CFG_HIF_RING_LENGTH
+#define RING_LEN_MASK					(PFE_CFG_HIF_RING_LENGTH - 1U)
 
 /* Buffer descriptor WORD0 */
 #define HIF_RING_BD_W0_DESC_EN				(1U << 31U)
@@ -291,14 +291,14 @@ __attribute__((cold)) static void pfe_hif_ring_invalidate_std(const pfe_hif_ring
 __attribute__((hot)) static inline void inc_write_index_nocpy(pfe_hif_ring_t *ring);
 __attribute__((hot)) static inline void inc_read_index_nocpy(pfe_hif_ring_t *ring);
 __attribute__((cold)) static pfe_hif_ring_t *pfe_hif_ring_create_nocpy(uint16_t seqnum, bool_t rx);
-static inline errno_t pfe_hif_ring_enqueue_buf_nocpy(pfe_hif_ring_t *ring, void *buf_pa, uint32_t length, bool_t lifm);
+static inline errno_t pfe_hif_ring_enqueue_buf_nocpy(pfe_hif_ring_t *ring, const void *buf_pa, uint32_t length, bool_t lifm);
 static inline errno_t pfe_hif_ring_dequeue_buf_nocpy(pfe_hif_ring_t *ring, void **buf_pa, uint32_t *length, bool_t *lifm);
 #ifdef PFE_CFG_HIF_TX_FIFO_FIX
 static inline errno_t pfe_hif_ring_dequeue_plain_nocpy(pfe_hif_ring_t *ring, bool_t *lifm, uint32_t *len);
 #else
 static inline errno_t pfe_hif_ring_dequeue_plain_nocpy(pfe_hif_ring_t *ring, bool_t *lifm);
 #endif /* PFE_CFG_HIF_TX_FIFO_FIX */
-__attribute__((cold)) static void pfe_hif_ring_invalidate_nocpy(pfe_hif_ring_t *ring);
+__attribute__((cold)) static void pfe_hif_ring_invalidate_nocpy(const pfe_hif_ring_t *ring);
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
 
 __attribute__((hot)) static inline void inc_write_index_std(pfe_hif_ring_t *ring)
@@ -469,7 +469,7 @@ __attribute__((pure, cold)) uint32_t pfe_hif_ring_get_wb_tbl_len(const pfe_hif_r
 		return 0U;
 	}
 #else /* PFE_CFG_HIF_NOCPY_SUPPORT */
-    (void)ring;
+	(void)ring;
 #endif /* PFE_CFG_HIF_NOCPY_SUPPORT */
 
 	return RING_LEN;
@@ -489,8 +489,8 @@ __attribute__((pure, hot)) uint32_t pfe_hif_ring_get_len(const pfe_hif_ring_t *r
 		NXP_LOG_ERROR("NULL argument received\n");
 		return 0U;
 	}
-#else 
-    (void)ring;
+#else
+	(void)ring;
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	return RING_LEN;
@@ -533,40 +533,12 @@ __attribute__((hot)) errno_t pfe_hif_ring_enqueue_buf(pfe_hif_ring_t *ring, cons
 }
 
 #if defined(PFE_CFG_HIF_NOCPY_SUPPORT)
-#if defined(PFE_CFG_HIF_NOCPY_DIRECT)
-/**
- * @brief		Set egress interface ID
- * @details		This function allows to modify egress interface to be used to transmit
- * 				frame given by subsequent pfe_hif_ring_enqueue_buf() call. Only reason
- * 				why this exists is the HIF NOCPY 'direct' mode where the egress interface
- * 				must be present in the TX buffer descriptor because the post classification
- * 				header which is required to be prepend to the frame and contains the
- * 				information is partially ignored and the egress interface identifier is
- * 				overwritten with the one programmed within the TX descriptor. Enjoy.
- * @param[in]	ring The ring instance
- * @param[in]	id The physical interface ID
- * @note		Only valid for HIF NOCPY TX ring manipulation. All other usages will be
- * 				ignored.
- */
-__attribute__((hot)) void pfe_hif_ring_set_egress_if(pfe_hif_ring_t *ring, pfe_ct_phy_if_id_t id)
-{
-#if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely(NULL == ring))
-	{
-		NXP_LOG_ERROR("NULL argument received\n");
-		return;
-	}
-#endif /* PFE_CFG_NULL_ARG_CHECK */
-
-	ring->wr_bd_nocpy->tx_portno = id;
-}
-#endif /* PFE_CFG_HIF_NOCPY_DIRECT */
 
 /**
  * @brief		The HIF NOCPY variant
  * @param[in]	buf_pa This must be BMU2 allocated physical address
  */
-static inline errno_t pfe_hif_ring_enqueue_buf_nocpy(pfe_hif_ring_t *ring, void *buf_pa, uint32_t length, bool_t lifm)
+static inline errno_t pfe_hif_ring_enqueue_buf_nocpy(pfe_hif_ring_t *ring, const void *buf_pa, uint32_t length, bool_t lifm)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == ring) | (NULL == buf_pa)))
@@ -587,29 +559,17 @@ static inline errno_t pfe_hif_ring_enqueue_buf_nocpy(pfe_hif_ring_t *ring, void
 		 	the HIF NOCPY is clearing the flags once BD is processed... */
 		ring->wr_bd_nocpy->data = (uint32_t)((addr_t)buf_pa & 0xffffffffU);
 		ring->wr_bd_nocpy->tx_buflen = (uint16_t)length;
-		ring->wr_bd_nocpy->tx_status = 0xf0U; /* This is from reference code. Not documented. */
-
-#if defined(PFE_CFG_HIF_NOCPY_DIRECT)
-		/*	In case the HIF NOCPY TX works in 'direct' mode (packet is not passed to classifier but
-		 	directly transmitted via physical interface. We must deliver the physical interface
-		 	identifier here (because of course the headers we're putting together within the HIF
-			channel layer and which contains the interface identifier, is being overwritten by
-			information taken from the TX BD... So we need to get the egress interface and configure
-			the TX BD here...
-
-			For this purpose the pfe_hif_ring_set_egress_if() has been implemented to not completely
-			break the HIF ring API logic. Therefore we do not touch the tx_portno here and expect
-			that caller has already called the pfe_hif_ring_set_egress_if().
-		*/
-
-		/* ring->wr_bd_nocpy->tx_portno = 0U; */
-#else
-#error LMEM copy mode not implemented yet
-#endif /* PFE_HIF_RING_CFG_NOCPY_DIRECT_MODE */
-
-
+		/* BD_STATUS = {src_buf_offset, dst_buf_offset, buf_len}, the last field tells how many bytes to
+		   copy from the DDR buffer to LMEM buffer (experimentally verified behavior, not documented) in
+		   LMEM copy mode, ignored in DIRECT mode. The value 0xFF was tested
+		   to work correctly. 0xF0 causes 16 bytes to be missing at the end of LMEM buffer. Value 0 causes
+		   all bytes to be missing except the header. */
+		/* AAVB-3403 shall better describe and set the value of tx_status */
+		ring->wr_bd_nocpy->tx_status = 0xFFU;
+		/* Request the LMEM copy mode */
+		ring->wr_bd_nocpy->lmem_cpy = 1U;
 		ring->wr_bd_nocpy->tx_queueno = 0U;
-		ring->wr_bd_nocpy->lmem_cpy = 0U;
+		ring->wr_bd_nocpy->pkt_xfer = 1U;
 
 		if (lifm)
 		{
@@ -622,7 +582,6 @@ static inline errno_t pfe_hif_ring_enqueue_buf_nocpy(pfe_hif_ring_t *ring, void
 
 		/*	Write the BD 'enable' bit */
 		ring->wr_bd_nocpy->desc_en = 1U;
-
 		/*	Increment the write pointer */
 		inc_write_index_nocpy(ring);
 	}
@@ -751,7 +710,7 @@ static inline errno_t pfe_hif_ring_dequeue_buf_nocpy(pfe_hif_ring_t *ring, void
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/* if (unlikely(0U != ring->rd_bd_nocpy->desc_en)) */
-	if (1U != ring->rd_bd_nocpy->pkt_xfer)
+	if (0U != ring->rd_bd_nocpy->pkt_xfer)
 	{
 		return EAGAIN;
 	}
@@ -771,8 +730,10 @@ static inline errno_t pfe_hif_ring_dequeue_buf_nocpy(pfe_hif_ring_t *ring, void
 		*lifm = (0U != ring->rd_bd_nocpy->lifm);
 
 		/*	Re-enable the descriptor so HIF can write another RX buffer there */
-		ring->rd_bd_nocpy->pkt_xfer = 0U;
+		ring->rd_bd_nocpy->pkt_xfer = 1U;
 		ring->rd_bd_nocpy->desc_en = 1U;
+		/*	Must clear also lifm flag to prepare BD for next use */
+		ring->rd_bd_nocpy->lifm = 0U;
 
 		/*	Increment the read pointer */
 		inc_read_index_nocpy(ring);
@@ -916,7 +877,7 @@ static inline errno_t pfe_hif_ring_dequeue_plain_nocpy(pfe_hif_ring_t *ring, boo
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/* if (unlikely((0U != ring->rd_bd_nocpy->desc_en) || (0U == pfe_hif_ring_get_fill_level(ring)))) */
-	if (0U == ring->rd_bd_nocpy->pkt_xfer) /* TODO: Is this OK also within RX ring? */
+	if (1U == ring->rd_bd_nocpy->pkt_xfer) /* TODO: Is this OK also within RX ring? */
 	{
 		/*	Nothing to dequeue */
 		return EAGAIN;
@@ -939,7 +900,7 @@ static inline errno_t pfe_hif_ring_dequeue_plain_nocpy(pfe_hif_ring_t *ring, boo
 #endif /* PFE_CFG_HIF_TX_FIFO_FIX */
 
 		/*	Clear the 'TX done' flag */
-		ring->rd_bd_nocpy->pkt_xfer = 0U;
+		ring->rd_bd_nocpy->pkt_xfer = 1U;
 		ring->rd_bd_nocpy->desc_en = 0U;
 
 		/*	Increment the read pointer */
@@ -1040,12 +1001,12 @@ __attribute__((cold)) errno_t pfe_hif_ring_drain_buf(pfe_hif_ring_t *ring, void
 	if (ring->is_nocpy && ring->is_rx)
 	{
 		bool_t lifm;
-		uint32_t len;
 
 		/*	In this case we will do standard dequeue until the ring is empty. This
 			will ensure that application can drain RX buffers and return all BMU
 			buffers back to the HW pool. */
 #ifdef PFE_CFG_HIF_TX_FIFO_FIX
+		uint32_t len;
 		if (EOK == pfe_hif_ring_dequeue_plain_nocpy(ring, &lifm, &len))
 #else
 		if (EOK == pfe_hif_ring_dequeue_plain_nocpy(ring, &lifm))
@@ -1143,7 +1104,7 @@ __attribute__((cold)) void pfe_hif_ring_invalidate(const pfe_hif_ring_t *ring)
 /**
  * @brief		The HIF NOCPY variant
  */
-__attribute__((cold)) static void pfe_hif_ring_invalidate_nocpy(pfe_hif_ring_t *ring)
+__attribute__((cold)) static void pfe_hif_ring_invalidate_nocpy(const pfe_hif_ring_t *ring)
 {
 	uint32_t ii;
 
@@ -1183,7 +1144,7 @@ __attribute__((cold)) static void pfe_hif_ring_invalidate_std(const pfe_hif_ring
 
 	for (ii=0U; ii<RING_LEN; ii++)
 	{
-		/*	Mark the descriptor as last BD and set enable flag */
+		/*	Mark the descriptor as last BD and clear enable flag */
 		(((pfe_hif_bd_t *)ring->base_va)[ii]).ctrl_seqnum_w0 &= ~HIF_RING_BD_W0_DESC_EN;
 		(((pfe_hif_bd_t *)ring->base_va)[ii]).ctrl_seqnum_w0 |= HIF_RING_BD_W0_LAST_BD;
 
@@ -1357,7 +1318,7 @@ __attribute__((cold)) static pfe_hif_ring_t *pfe_hif_ring_create_nocpy(uint16_t
 	}
 
 	size = RING_LEN * sizeof(pfe_hif_nocpy_bd_t);
-	ring->base_va = oal_mm_malloc_contig_aligned_nocache(size, ii);
+	ring->base_va = oal_mm_malloc_contig_named_aligned_nocache(PFE_CFG_BD_MEM, size, ii);
 
 	if (unlikely(NULL == ring->base_va))
 	{
@@ -1402,14 +1363,16 @@ __attribute__((cold)) static pfe_hif_ring_t *pfe_hif_ring_create_nocpy(uint16_t
 		if (TRUE == ring->is_rx)
 		{
 			/*	Mark BD as RX */
-			hw_desc_va[ii].dir = 1U;
+			hw_desc_va[ii].dir = 0U;
 			/*	Enable the descriptor */
 			hw_desc_va[ii].desc_en = 1U;
+			hw_desc_va[ii].pkt_xfer = 1U;
 		}
 		else
 		{
-			hw_desc_va[ii].dir = 0U;
+			hw_desc_va[ii].dir = 1U;
 			hw_desc_va[ii].desc_en = 0U;
+			hw_desc_va[ii].pkt_xfer = 1U;
 		}
 
 		/*	Enable BD interrupt */
diff --git a/sw/pfe_platform/src/pfe_idex.c b/sw/pfe_platform/src/pfe_idex.c
index 868d7a0..a25eb4e 100644
--- a/sw/pfe_platform/src/pfe_idex.c
+++ b/sw/pfe_platform/src/pfe_idex.c
@@ -13,37 +13,11 @@
 #include "pfe_hif_drv.h"
 #include "pfe_idex.h"
 
-/* #define IDEX_CFG_VERBOSE */
-/* #define IDEX_CFG_VERY_VERBOSE */
-
-/**
- * @brief	Number of request allowed to be pending/waiting for confirmation at
- * 			the same time.
- */
-#define IDEX_CFG_REQ_FIFO_DEPTH		8U
-
 /**
  * @brief	IDEX request timeout in seconds
  */
 #define IDEX_CFG_REQ_TIMEOUT_SEC	1U
 
-/*
- *	IDEX worker mbox codes
- */
-#define IDEX_WORKER_POLL			(1)
-#define IDEX_WORKER_QUIT			(2)
-
-/**
- * @brief	IDEX request return values
- * @details	When IDEX request is finalized, this codes are passed to the
- * 			waiting thread to notify it about request status.
- */
-typedef enum
-{
-	IDEX_REQ_RES_OK,
-	IDEX_REQ_RES_TIMEOUT
-} pfe_idex_request_result_t;
-
 /**
  * @brief		IDEX sequence number type
  */
@@ -228,7 +202,7 @@ static void pfe_idex_do_rx(pfe_hif_drv_client_t *client, pfe_idex_t *idex);
 static void pfe_idex_do_tx(pfe_hif_drv_client_t *client, pfe_idex_t *idex);
 static pfe_idex_request_t *pfe_idex_request_get_by_id(pfe_idex_seqnum_t seqnum);
 static errno_t pfe_idex_request_set_state(pfe_idex_seqnum_t seqnum, pfe_idex_request_state_t state);
-static errno_t pfe_idex_request_finalize(pfe_idex_seqnum_t seqnum, pfe_idex_request_result_t res, void *resp_buf, uint16_t resp_len);
+static errno_t pfe_idex_request_finalize(pfe_idex_seqnum_t seqnum, void *resp_buf, uint16_t resp_len);
 static errno_t pfe_idex_send_response(pfe_ct_phy_if_id_t dst_phy, pfe_idex_response_type_t type, pfe_idex_seqnum_t seqnum, void *data, uint16_t data_len);
 static errno_t pfe_idex_send_frame(pfe_ct_phy_if_id_t dst_phy, pfe_idex_frame_type_t type, void *data, uint16_t data_len);
 #ifdef PFE_CFG_PFE_SLAVE
@@ -311,7 +285,7 @@ static void pfe_idex_do_rx(pfe_hif_drv_client_t *client, pfe_idex_t *idex)
 				idex_req = (pfe_idex_request_t *)((addr_t)idex_header + sizeof(pfe_idex_frame_header_t));
 
 #ifdef IDEX_CFG_VERBOSE
-				NXP_LOG_DEBUG("Request %d received\n", oal_ntohl(idex_req->seqnum));
+				NXP_LOG_DEBUG("Request %u received\n", oal_ntohl(idex_req->seqnum));
 #endif /* IDEX_CFG_VERBOSE */
 
 				switch (idex_req->type)
@@ -351,7 +325,7 @@ static void pfe_idex_do_rx(pfe_hif_drv_client_t *client, pfe_idex_t *idex)
 						else
 						{
 #ifdef IDEX_CFG_VERBOSE
-							NXP_LOG_DEBUG("RPC callback not found, request %d ignored\n", oal_ntohl(idex_req->seqnum));
+							NXP_LOG_DEBUG("RPC callback not found, request %u ignored\n", oal_ntohl(idex_req->seqnum));
 #endif /* IDEX_CFG_VERBOSE */
 						}
 
@@ -376,7 +350,7 @@ static void pfe_idex_do_rx(pfe_hif_drv_client_t *client, pfe_idex_t *idex)
 				idex_resp = (pfe_idex_response_t *)((addr_t)idex_header + sizeof(pfe_idex_frame_header_t));
 
 #ifdef IDEX_CFG_VERBOSE
-				NXP_LOG_DEBUG("Response %d received\n", oal_ntohl(idex_resp->seqnum));
+				NXP_LOG_DEBUG("Response %u received\n", oal_ntohl(idex_resp->seqnum));
 #endif /* IDEX_CFG_VERBOSE */
 
 				/*	Matching request found. Check type. */
@@ -393,7 +367,7 @@ static void pfe_idex_do_rx(pfe_hif_drv_client_t *client, pfe_idex_t *idex)
 						void *resp_payload = (void *)((addr_t)idex_resp + sizeof(pfe_idex_response_t));
 
 						/*	Finalize the associated request */
-						ret = pfe_idex_request_finalize(idex_resp->seqnum, IDEX_REQ_RES_OK, resp_payload, oal_ntohs(idex_resp->plen));
+						ret = pfe_idex_request_finalize(idex_resp->seqnum, resp_payload, oal_ntohs(idex_resp->plen));
 						if (EOK != ret)
 						{
 							NXP_LOG_ERROR("Can't finalize IDEX request %u: %d\n", (uint_t)oal_ntohl(idex_resp->seqnum), ret);
@@ -455,7 +429,7 @@ static void pfe_idex_do_tx(pfe_hif_drv_client_t *client, pfe_idex_t *idex)
 				pfe_idex_request_t *req_header = (pfe_idex_request_t *)((addr_t)idex_header + sizeof(pfe_idex_frame_header_t));
 
 		#ifdef IDEX_CFG_VERBOSE
-				NXP_LOG_DEBUG("Request %d transmitted\n", oal_ntohl(req_header->seqnum));
+				NXP_LOG_DEBUG("Request %u transmitted\n", oal_ntohl(req_header->seqnum));
 		#endif /* IDEX_CFG_VERBOSE */
 
 				/*	Change request state */
@@ -478,7 +452,7 @@ static void pfe_idex_do_tx(pfe_hif_drv_client_t *client, pfe_idex_t *idex)
 		#ifdef IDEX_CFG_VERBOSE
 				pfe_idex_response_t *resp_header = (pfe_idex_response_t *)((addr_t)idex_header + sizeof(pfe_idex_frame_header_t));
 
-				NXP_LOG_DEBUG("Response %d transmitted\n", oal_ntohl(resp_header->seqnum));
+				NXP_LOG_DEBUG("Response %u transmitted\n", oal_ntohl(resp_header->seqnum));
 		#endif /* IDEX_CFG_VERBOSE */
 
 				/*	Responses are released immediately once transmitted */
@@ -531,18 +505,16 @@ static pfe_idex_request_t *pfe_idex_request_get_by_id(pfe_idex_seqnum_t seqnum)
  * 				2.) Pass response data
  * 				3.) Marks request as "completed"
  * @param[in]	seqnum Sequence number identifying the request
- * @param[in]	res Value to be passed to the waiting thread as blocking result
  * @param[in]	resp_buf Pointer to response data buffer. If NULL no response is passed.
  * @param[in]	resp_len Number of byte in response buffer
  * @return		EOK if success, error code otherwise
  */
-static errno_t pfe_idex_request_finalize(pfe_idex_seqnum_t seqnum, pfe_idex_request_result_t res, void *resp_buf, uint16_t resp_len)
+static errno_t pfe_idex_request_finalize(pfe_idex_seqnum_t seqnum, void *resp_buf, uint16_t resp_len)
 {
 	pfe_idex_t *idex = (pfe_idex_t *)&pfe_idex;
 	pfe_idex_request_t *req = NULL;
 	errno_t ret = EOK;
 
-    (void)res;
 	/*	Lock request storage access */
 	if (EOK != oal_mutex_lock(&idex->req_list_lock))
 	{
@@ -656,7 +628,7 @@ static errno_t pfe_idex_send_response(pfe_ct_phy_if_id_t dst_phy, pfe_idex_respo
 	(void)memcpy(payload, data, data_len);
 
 #ifdef IDEX_CFG_VERBOSE
-	NXP_LOG_DEBUG("Sending response %d\n", oal_ntohl(seqnum));
+	NXP_LOG_DEBUG("Sending response %u\n", oal_ntohl(seqnum));
 #endif /* IDEX_CFG_VERBOSE */
 
 	/*	Send it out within IDEX frame */
@@ -740,7 +712,7 @@ static errno_t pfe_idex_request_send(pfe_ct_phy_if_id_t dst_phy, pfe_idex_reques
 
 	/*	3.) Send the request */
 #ifdef IDEX_CFG_VERBOSE
-	NXP_LOG_DEBUG("Sending IDEX request %d\n", oal_ntohl(req->seqnum));
+	NXP_LOG_DEBUG("Sending IDEX request %u\n", oal_ntohl(req->seqnum));
 #endif /* IDEX_CFG_VERBOSE */
 
 	/*	Send it out as payload of IDEX frame */
@@ -785,25 +757,32 @@ static errno_t pfe_idex_request_send(pfe_ct_phy_if_id_t dst_phy, pfe_idex_reques
 			}
 
 			/*	Wait a bit */
-			oal_time_usleep(timeout_step);
+			if (FALSE == oal_irq_in_atomic())
+			{
+				oal_time_usleep(timeout_step);
+			}
+			else
+			{
+				oal_time_udelay(timeout_step);
+			}
 		}
 
 		if (0U == timeout_us)
 		{
 #ifdef IDEX_CFG_VERY_VERBOSE
-			NXP_LOG_DEBUG("IDEX request %d timed-out\n", oal_ntohl(req->seqnum));
+			NXP_LOG_DEBUG("IDEX request %u timed-out\n", oal_ntohl(req->seqnum));
 
 			if (IDEX_REQ_STATE_COMMITTED == req->state)
 			{
-				NXP_LOG_DEBUG("Request %d not transmitted\n", oal_ntohl(req->seqnum));
+				NXP_LOG_DEBUG("Request %u not transmitted\n", oal_ntohl(req->seqnum));
 			}
 			else if (IDEX_REQ_STATE_TRANSMITTED == req->state)
 			{
-				NXP_LOG_DEBUG("Request %d not responded\n", oal_ntohl(req->seqnum));
+				NXP_LOG_DEBUG("Request %u not responded\n", oal_ntohl(req->seqnum));
 			}
 			else
 			{
-				NXP_LOG_DEBUG("Request %d state is: %d\n", oal_ntohl(req->seqnum), req->state);
+				NXP_LOG_DEBUG("Request %u state is: %d\n", oal_ntohl(req->seqnum), req->state);
 			}
 #endif /* IDEX_CFG_VERY_VERBOSE */
 			ret = ETIMEDOUT;
@@ -847,8 +826,11 @@ static errno_t pfe_idex_send_frame(pfe_ct_phy_if_id_t dst_phy, pfe_idex_frame_ty
 	errno_t ret;
 	hif_drv_sg_list_t sg_list = { 0U };
 
-	/*	Get IDX frame buffer */
-	idex_hdr = oal_mm_malloc_contig_aligned_nocache((addr_t)(sizeof(pfe_idex_frame_header_t)) + (addr_t)data_len, 0U);
+	/*	Get IDEX frame buffer */
+	idex_hdr = oal_mm_malloc_contig_named_aligned_cache(
+								PFE_CFG_TX_MEM,
+								(addr_t)(sizeof(pfe_idex_frame_header_t)) + (addr_t)data_len,
+								0U);
 	if (NULL == idex_hdr)
 	{
 		NXP_LOG_ERROR("Memory allocation failed\n");
@@ -882,11 +864,7 @@ static errno_t pfe_idex_send_frame(pfe_ct_phy_if_id_t dst_phy, pfe_idex_frame_ty
 	sg_list.items[0].len = (uint32_t)(sizeof(pfe_idex_frame_header_t)) + (uint32_t)data_len;
 
 	/*	Send it out */
-#ifndef PFE_CFG_TARGET_OS_LINUX
 	ret = pfe_hif_drv_client_xmit_sg_pkt(pfe_idex.ihc_client, 0U, &sg_list, (void *)idex_hdr);
-#else
-	ret = pfe_hif_drv_client_xmit_ihc_pkt(pfe_idex.ihc_client, dst_phy, 0U, (void *)idex_hdr, sg_list.items[0].len);
-#endif /* PFE_CFG_TARGET_OS_LINUX */
 	if (EOK != ret)
 	{
 		NXP_LOG_ERROR("IDEX frame TX failed. Err %u\n", ret);
@@ -1022,7 +1000,7 @@ errno_t pfe_idex_set_rpc_cbk(pfe_idex_rpc_cbk_t cbk, void *arg)
 }
 
 /**
- * @brief		Execute RPC agains IDEX master. Blocking call.
+ * @brief		Execute RPC against IDEX master. Blocking call.
  * @param[in]	id Request identifier to be passed to remote RPC callback
  * @param[in]	buf Buffer containing RPC argument data
  * @param[in]	buf_len Length of RPC argument data in the buffer
@@ -1056,73 +1034,74 @@ errno_t pfe_idex_master_rpc(uint32_t id, void *buf, uint16_t buf_len, void *resp
 errno_t pfe_idex_rpc(pfe_ct_phy_if_id_t dst_phy, uint32_t id, void *buf, uint16_t buf_len, void *resp, uint16_t resp_len)
 {
 	errno_t ret;
-	pfe_idex_msg_rpc_t *msg = oal_mm_malloc((addr_t)(sizeof(pfe_idex_msg_rpc_t)) + (addr_t)buf_len);
-	uint8_t local_resp_buf[256] = { 0U };
+	const uint16_t resp_buf_size = 256U;
+	uint8_t *alloc_buf = oal_mm_malloc((addr_t)resp_buf_size + sizeof(pfe_idex_msg_rpc_t) + (addr_t)buf_len);
+	uint8_t *local_resp_buf = alloc_buf;
+	pfe_idex_msg_rpc_t *msg = (pfe_idex_msg_rpc_t *)&(alloc_buf[resp_buf_size]);
 	uint16_t msg_plen;
 	void *payload;
 
-	if (NULL == msg)
+	if (NULL == alloc_buf)
 	{
-		return ENOMEM;
-	}
-
-	msg->rpc_id = oal_htonl(id);
-	msg->plen = oal_htons(buf_len);
-	msg->rpc_ret = oal_htonl(EOK);
-
-	payload = (void *)((addr_t)msg + sizeof(pfe_idex_msg_rpc_t));
-	(void)memcpy(payload, buf, buf_len);
-
-	/*	This one is blocking */
-	ret = pfe_idex_request_send(dst_phy, IDEX_RPC, msg, sizeof(pfe_idex_msg_rpc_t) + buf_len, local_resp_buf, sizeof(local_resp_buf));
-
-	/*	Dispose the message buffer */
-	oal_mm_free(msg);
-	msg = NULL;
-
-	if (EOK != ret)
-	{
-		/*	Transport error */
-		NXP_LOG_INFO("RPC transport failed: %d\n", ret);
+		ret = ENOMEM;
 	}
 	else
 	{
-		/*	Get the remote return value from the response */
-		msg = (pfe_idex_msg_rpc_t *)&local_resp_buf[0];
-
-		/*	Sanity checks */
-		if (id != oal_ntohl(msg->rpc_id))
+		msg->rpc_id = oal_htonl(id);
+		msg->plen = oal_htons(buf_len);
+		msg->rpc_ret = oal_htonl(EOK);
+	
+		payload = (void *)((addr_t)msg + sizeof(pfe_idex_msg_rpc_t));
+		(void)memcpy(payload, buf, buf_len);
+	
+		/*	This one is blocking */
+		ret = pfe_idex_request_send(dst_phy, IDEX_RPC, msg, sizeof(pfe_idex_msg_rpc_t) + buf_len, local_resp_buf, resp_buf_size);
+	
+		if (EOK != ret)
 		{
-			NXP_LOG_ERROR("RPC response ID does not match the request\n");
-			ret = EINVAL;
+			/*	Transport error */
+			NXP_LOG_INFO("RPC transport failed: %d\n", ret);
 		}
 		else
 		{
-			ret = oal_ntohl(msg->rpc_ret);
-			msg_plen = oal_ntohs(msg->plen);
-
-			/*	Copy RPC response data to caller's buffer */
-			if (0U == msg_plen)
-			{
-#ifdef IDEX_CFG_VERBOSE
-				NXP_LOG_DEBUG("RPC response without payload received\n");
-#endif /* IDEX_CFG_VERBOSE */
-			}
-			else if (msg_plen > resp_len) /* if the response is too big */
+			/*	Get the remote return value from the response */
+			msg = (pfe_idex_msg_rpc_t *)&local_resp_buf[0];
+	
+			/*	Sanity checks */
+			if (id != oal_ntohl(msg->rpc_id))
 			{
-				NXP_LOG_ERROR("Caller's buffer is too small\n");
-				ret = ENOMEM;
+				NXP_LOG_ERROR("RPC response ID does not match the request\n");
+				ret = EINVAL;
 			}
-			else /* there is response, it is not too big and we have buffer */
+			else
 			{
-				payload = (void *)((addr_t)msg + sizeof(pfe_idex_msg_rpc_t));
-				(void)memcpy(resp, payload, msg_plen);
-
+				ret = oal_ntohl(msg->rpc_ret);
+				msg_plen = oal_ntohs(msg->plen);
+	
+				/*	Copy RPC response data to caller's buffer */
+				if (0U == msg_plen)
+				{
+#ifdef IDEX_CFG_VERBOSE
+					NXP_LOG_DEBUG("RPC response without payload received\n");
+#endif /* IDEX_CFG_VERBOSE */
+				}
+				else if (msg_plen > resp_len) /* if the response is too big */
+				{
+					NXP_LOG_ERROR("Caller's buffer is too small\n");
+					ret = ENOMEM;
+				}
+				else /* there is response, it is not too big and we have buffer */
+				{
+					payload = (void *)((addr_t)msg + sizeof(pfe_idex_msg_rpc_t));
+					(void)memcpy(resp, payload, msg_plen);
+	
 #ifdef IDEX_CFG_VERBOSE
-				NXP_LOG_DEBUG("%d bytes of RPC response received\n", msg_plen);
+					NXP_LOG_DEBUG("%d bytes of RPC response received\n", msg_plen);
 #endif /* IDEX_CFG_VERBOSE */
+				}
 			}
 		}
+		oal_mm_free(alloc_buf);
 	}
 
 	return ret;
diff --git a/sw/pfe_platform/src/pfe_l2br.c b/sw/pfe_platform/src/pfe_l2br.c
index d694e90..fbea5a8 100644
--- a/sw/pfe_platform/src/pfe_l2br.c
+++ b/sw/pfe_platform/src/pfe_l2br.c
@@ -45,12 +45,6 @@
 #include "pfe_l2br_table.h"
 #include "pfe_l2br.h"
 
-/**
- * @brief	Tick period for internal timer in seconds
- * @details	The timer is used to generate MAC table aging period.
- */
-#define PFE_L2BR_CFG_TICK_PERIOD_SEC	300U
-
 /**
  * @brief	The L2 Bridge instance structure
  */
@@ -66,8 +60,6 @@ struct __pfe_l2br_tag
 	uint16_t def_vlan;							/*!< Default VLAN */
 	uint32_t dmem_fb_bd_base;					/*!< Address within classifier memory where the fall-back bridge domain structure is located */
 	uint32_t dmem_def_bd_base;					/*!< Address within classifier memory where the default bridge domain structure is located */
-	oal_thread_t *worker;						/*!< Worker thread */
-	oal_mbox_t *mbox;							/*!< Message box to communicate with the worker thread */
 	oal_mutex_t *mutex;							/*!< Mutex protecting shared resources */
 	pfe_l2br_domain_get_crit_t cur_crit;		/*!< Current 'get' criterion (to get domains) */
 	pfe_l2br_static_ent_get_crit_t cur_crit_ent;/*!< Current 'get' criterion (to get static entry) */
@@ -95,7 +87,7 @@ struct __pfe_l2br_domain_tag
 	{
 		pfe_ct_vlan_table_result_t action_data;
 		uint64_t action_data_u64val;
-	};
+	} u;
 
 	pfe_l2br_table_entry_t *vlan_entry;			/*!< This is entry within VLAN table representing the domain */
 	pfe_l2br_t *bridge;
@@ -119,10 +111,9 @@ struct __pfe_l2br_static_entry_tag
 	{
 		pfe_ct_mac_table_result_t action_data;
 		uint64_t action_data_u64val;
-	};
+	} u;
 	uint16_t vlan;
 	pfe_mac_addr_t mac;						/*!< Mac address to be matched */
-	uint32_t fw_list;						/*!< Fw list in bit format */
 	pfe_l2br_table_entry_t *entry;			/*!< This is entry within MAC table representing the static entry */
 	pfe_l2br_t *bridge;
 	LLIST_t list_entry;						/*!< Entry for linked-list purposes */
@@ -131,42 +122,30 @@ struct __pfe_l2br_static_entry_tag
 /**
  * @brief	Internal linked-list element
  */
-typedef struct __pfe_l2br_list_entry_tag
+typedef struct 
 {
 	void *ptr;
 	LLIST_t list_entry;
 } pfe_l2br_list_entry_t;
 
-/**
- * @brief	Worker thread signals
- * @details	Driver is sending signals to the worker thread to request specific
- * 			operations.
- */
-enum pfe_l2br_worker_signals
-{
-	SIG_WORKER_STOP,	/*!< Stop the thread */
-	SIG_TIMER_TICK		/*!< Pulse from timer */
-};
-
 /**
  * @brief	MAC table flush types
  */
 typedef enum
 {
-	PFE_L2BR_FLUSH_ALL,
-	PFE_L2BR_FLUSH_STATIC,
-	PFE_L2BR_FLUSH_LEARNED
+	PFE_L2BR_FLUSH_ALL_MAC,
+	PFE_L2BR_FLUSH_STATIC_MAC,
+	PFE_L2BR_FLUSH_LEARNED_MAC
 } pfe_l2br_flush_types;
 
-static errno_t pfe_bd_write_to_class(pfe_l2br_t *bridge, uint32_t base, pfe_ct_bd_entry_t *class_entry);
+static errno_t pfe_bd_write_to_class(const pfe_l2br_t *bridge, uint32_t base, pfe_ct_bd_entry_t *class_entry);
 static errno_t pfe_l2br_update_hw_entry(pfe_l2br_domain_t *domain);
 static pfe_l2br_domain_t *pfe_l2br_create_default_domain(pfe_l2br_t *bridge, uint16_t vlan);
 static pfe_l2br_domain_t *pfe_l2br_create_fallback_domain(pfe_l2br_t *bridge);
-static void *pfe_l2br_worker_func(void *arg);
-static void pfe_l2br_do_timeouts(pfe_l2br_t *bridge);
-static bool_t pfe_l2br_domain_match_if_criterion(pfe_l2br_domain_t *domain, pfe_phy_if_t *iface);
-static bool_t pfe_l2br_domain_match_criterion(pfe_l2br_t *bridge, pfe_l2br_domain_t *domain);
-static bool_t pfe_l2br_static_entry_match_criterion(pfe_l2br_t *bridge, pfe_l2br_static_entry_t *static_ent);
+static bool_t pfe_l2br_domain_match_if_criterion(const pfe_l2br_domain_t *domain, const pfe_phy_if_t *iface);
+static bool_t pfe_l2br_domain_match_criterion(const pfe_l2br_t *bridge, pfe_l2br_domain_t *domain);
+static bool_t pfe_l2br_static_entry_match_criterion(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t *static_ent);
+static errno_t pfe_l2br_set_mac_aging_timeout(pfe_class_t *class, const uint16_t timeout);
 
 /**
  * @brief		Write bridge domain structure to classifier memory
@@ -176,7 +155,7 @@ static bool_t pfe_l2br_static_entry_match_criterion(pfe_l2br_t *bridge, pfe_l2br
  * @retval		EOK Success
  * @retval		EINVAL Invalid or missing argument
  */
-static errno_t pfe_bd_write_to_class(pfe_l2br_t *bridge, uint32_t base, pfe_ct_bd_entry_t *class_entry)
+static errno_t pfe_bd_write_to_class(const pfe_l2br_t *bridge, uint32_t base, pfe_ct_bd_entry_t *class_entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == class_entry) || (NULL == bridge) || (0U == base)))
@@ -199,21 +178,21 @@ static void pfe_l2br_update_hw_ll_entry(pfe_l2br_domain_t *domain, uint32_t base
 	ct_assert(sizeof(pfe_ct_bd_entry_t) <= sizeof(uint64_t));
 
 	/*	Check if bitfields within structure are aligned as expected */
-	memset(&sw_bd, 0, sizeof(pfe_ct_bd_entry_t));
+	(void)memset(&sw_bd, 0, sizeof(pfe_ct_bd_entry_t));
 	tmp64 = (1ULL << 63);
-	memcpy(&sw_bd, &tmp64, sizeof(uint64_t));
+	(void)memcpy(&sw_bd, &tmp64, sizeof(uint64_t));
 	if (0U == sw_bd.val)
 	{
 		need_shift = TRUE;
 	}
 
 	/*	Convert VLAN table result to fallback domain representation */
-	sw_bd.val = domain->action_data.val;
+	sw_bd.val = domain->u.action_data.val;
 
 	if (TRUE == need_shift)
 	{
 		tmp64 = (uint64_t)sw_bd.val << 9;
-		memcpy(&sw_bd, &tmp64, sizeof(pfe_ct_bd_entry_t));
+		(void)memcpy(&sw_bd, &tmp64, sizeof(pfe_ct_bd_entry_t));
 	}
 
 	/*	Convert to network endian */
@@ -222,7 +201,7 @@ static void pfe_l2br_update_hw_ll_entry(pfe_l2br_domain_t *domain, uint32_t base
 	ENDIAN_SWAP64(&sw_bd.val);
 #elif defined(PFE_CFG_TARGET_OS_LINUX)
 	tmp64 = cpu_to_be64p((uint64_t *)&sw_bd);
-	memcpy(&sw_bd, &tmp64, sizeof(uint64_t));
+	(void)memcpy(&sw_bd, &tmp64, sizeof(uint64_t));
 #elif defined(PFE_CFG_TARGET_OS_AUTOSAR)
 	*(uint64_t*)&sw_bd = cpu_to_be64(*(uint64_t*)&sw_bd);
 #else
@@ -270,7 +249,7 @@ static errno_t pfe_l2br_update_hw_entry(pfe_l2br_domain_t *domain)
 			pfe_l2br_update_hw_ll_entry(domain, domain->bridge->dmem_def_bd_base );
 		}
 		/*	Update standard or default domain entry */
-		ret = pfe_l2br_table_entry_set_action_data(domain->vlan_entry, domain->action_data_u64val);
+		ret = pfe_l2br_table_entry_set_action_data(domain->vlan_entry, domain->u.action_data_u64val);
 		if (EOK != ret)
 		{
 			NXP_LOG_DEBUG("Can't set action data: %d\n", ret);
@@ -324,7 +303,7 @@ errno_t pfe_l2br_domain_create(pfe_l2br_t *bridge, uint16_t vlan)
 	}
 	else
 	{
-		memset(domain, 0, sizeof(pfe_l2br_domain_t));
+		(void)memset(domain, 0, sizeof(pfe_l2br_domain_t));
 		domain->bridge = bridge;
 		domain->vlan = vlan;
 		domain->is_default = FALSE;
@@ -375,16 +354,16 @@ errno_t pfe_l2br_domain_create(pfe_l2br_t *bridge, uint16_t vlan)
 				NXP_LOG_DEBUG("Can't set vlan: %d\n", ret);
 				goto free_and_fail;
 			}
-
-			domain->action_data.item.forward_list = 0U;
-			domain->action_data.item.untag_list = 0U;
-			domain->action_data.item.ucast_hit_action = L2BR_ACT_DISCARD;
-			domain->action_data.item.ucast_miss_action = L2BR_ACT_DISCARD;
-			domain->action_data.item.mcast_hit_action = L2BR_ACT_DISCARD;
-			domain->action_data.item.mcast_miss_action = L2BR_ACT_DISCARD;
+            
+			domain->u.action_data.item.forward_list = 0U;
+			domain->u.action_data.item.untag_list = 0U;
+			domain->u.action_data.item.ucast_hit_action = (uint64_t)L2BR_ACT_DISCARD;
+			domain->u.action_data.item.ucast_miss_action = (uint64_t)L2BR_ACT_DISCARD;
+			domain->u.action_data.item.mcast_hit_action = (uint64_t)L2BR_ACT_DISCARD;
+			domain->u.action_data.item.mcast_miss_action = (uint64_t)L2BR_ACT_DISCARD;
 
 			/*	Set action data */
-			ret = pfe_l2br_table_entry_set_action_data(domain->vlan_entry, domain->action_data_u64val);
+			ret = pfe_l2br_table_entry_set_action_data(domain->vlan_entry, domain->u.action_data_u64val);
 			if (EOK != ret)
 			{
 				NXP_LOG_DEBUG("Can't set action data: %d\n", ret);
@@ -434,7 +413,7 @@ free_and_fail:
  */
 errno_t pfe_l2br_domain_destroy(pfe_l2br_domain_t *domain)
 {
-	errno_t ret;
+	errno_t ret = EOK;
 	LLIST_t *aux, *item;
 	pfe_l2br_list_entry_t *entry;
 
@@ -442,79 +421,88 @@ errno_t pfe_l2br_domain_destroy(pfe_l2br_domain_t *domain)
 	if (unlikely(NULL == domain))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
-		return EINVAL;
+		ret = EINVAL;
 	}
+    else
+    {
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	/*	Remove all associated interfaces */
-	if (FALSE == LLIST_IsEmpty(&domain->ifaces))
-	{
-		NXP_LOG_INFO("Non-empty bridge domain is being destroyed\n");
-		LLIST_ForEachRemovable(item, aux, &domain->ifaces)
-		{
-			entry = LLIST_Data(item, pfe_l2br_list_entry_t, list_entry);
-			oal_mm_free(entry);
-			entry = NULL;
-		}
-	}
-
-	if (NULL != domain->vlan_entry)
-	{
-		/*	Remove entry from the table */
-		ret = pfe_l2br_table_del_entry(domain->bridge->vlan_table, domain->vlan_entry);
-		if (EOK != ret)
-		{
-			NXP_LOG_ERROR("Can't delete entry from VLAN table: %d\n", ret);
-			return ENOEXEC;
-		}
+        /*	Remove all associated interfaces */
+        if (FALSE == LLIST_IsEmpty(&domain->ifaces))
+        {
+            NXP_LOG_INFO("Non-empty bridge domain is being destroyed\n");
+            LLIST_ForEachRemovable(item, aux, &domain->ifaces)
+            {
+                entry = LLIST_Data(item, pfe_l2br_list_entry_t, list_entry);
+                oal_mm_free(entry);
+                entry = NULL;
+            }
+        }
+        
+        if (NULL != domain->vlan_entry)
+        {
+            /*	Remove entry from the table */
+            ret = pfe_l2br_table_del_entry(domain->bridge->vlan_table, domain->vlan_entry);
+            if (EOK != ret)
+            {
+                NXP_LOG_ERROR("Can't delete entry from VLAN table: %d\n", ret);
+                return ENOEXEC;
+            }
+
+            /*	Release the table entry instance */
+            (void)pfe_l2br_table_entry_destroy(domain->vlan_entry);
+            domain->vlan_entry = NULL;
+        }
+
+        if (TRUE == domain->is_fallback)
+        {
+            /*	Disable the fall-back domain traffic */
+            ret = pfe_l2br_domain_set_ucast_action(domain, L2BR_ACT_DISCARD, L2BR_ACT_DISCARD);
+            if (EOK == ret)
+            {
+                ret = pfe_l2br_domain_set_mcast_action(domain, L2BR_ACT_DISCARD, L2BR_ACT_DISCARD);
+            }
+        }
+
+        /*	Remove the domain instance from global list if it has been added there */
+        if (EOK != oal_mutex_lock(domain->bridge->mutex))
+        {
+            NXP_LOG_DEBUG("Mutex lock failed\n");
+        }
+
+        /*	If instance has not been added to the list of domains yet (mainly due to
+            pfe_l2br_domain_create() failure, just skip this step */
+        if ((NULL != domain->list_entry.prPrev) && (NULL != domain->list_entry.prNext))
+        {
+            if (&domain->list_entry == domain->bridge->curr_domain)
+            {
+                /*	Remember the change so we can call destroy() between get_first()
+                    and get_next() calls. */
+                domain->bridge->curr_domain = domain->bridge->curr_domain->prNext;
+            }
+
+            LLIST_Remove(&domain->list_entry);
+        }
+
+        if (EOK != oal_mutex_unlock(domain->bridge->mutex))
+        {
+            NXP_LOG_DEBUG("Mutex unlock failed\n");
+        }
+
+        if (NULL != domain->mutex)
+        {
+            (void)oal_mutex_destroy(domain->mutex);
+            oal_mm_free(domain->mutex);
+            domain->mutex = NULL;
+        }
+
+        oal_mm_free(domain);
 
-		/*	Release the table entry instance */
-		pfe_l2br_table_entry_destroy(domain->vlan_entry);
-		domain->vlan_entry = NULL;
-	}
-
-	if (TRUE == domain->is_fallback)
-	{
-		/*	Disable the fall-back domain traffic */
-		pfe_l2br_domain_set_ucast_action(domain, L2BR_ACT_DISCARD, L2BR_ACT_DISCARD);
-		pfe_l2br_domain_set_mcast_action(domain, L2BR_ACT_DISCARD, L2BR_ACT_DISCARD);
-	}
-
-	/*	Remove the domain instance from global list if it has been added there */
-	if (EOK != oal_mutex_lock(domain->bridge->mutex))
-	{
-		NXP_LOG_DEBUG("Mutex lock failed\n");
-	}
-
-	/*	If instance has not been added to the list of domains yet (mainly due to
-		pfe_l2br_domain_create() failure, just skip this step */
-	if ((NULL != domain->list_entry.prPrev) && (NULL != domain->list_entry.prNext))
-	{
-		if (&domain->list_entry == domain->bridge->curr_domain)
-		{
-			/*	Remember the change so we can call destroy() between get_first()
-				and get_next() calls. */
-			domain->bridge->curr_domain = domain->bridge->curr_domain->prNext;
-		}
-
-		LLIST_Remove(&domain->list_entry);
-	}
-
-	if (EOK != oal_mutex_unlock(domain->bridge->mutex))
-	{
-		NXP_LOG_DEBUG("Mutex unlock failed\n");
-	}
-
-	if (NULL != domain->mutex)
-	{
-		(void)oal_mutex_destroy(domain->mutex);
-		oal_mm_free(domain->mutex);
-		domain->mutex = NULL;
-	}
-
-	oal_mm_free(domain);
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+    }
+#endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	return EOK;
+	return ret;
 }
 
 /**
@@ -587,7 +575,7 @@ static pfe_l2br_domain_t *pfe_l2br_create_fallback_domain(pfe_l2br_t *bridge)
 		return NULL;
 	}
 
-	memset(domain, 0, sizeof(pfe_l2br_domain_t));
+	(void)memset(domain, 0, sizeof(pfe_l2br_domain_t));
 	domain->bridge = bridge;
 	domain->vlan_entry = NULL;
 	domain->is_fallback = TRUE;
@@ -597,7 +585,6 @@ static pfe_l2br_domain_t *pfe_l2br_create_fallback_domain(pfe_l2br_t *bridge)
 	if (NULL == domain->mutex)
 	{
 		NXP_LOG_DEBUG("Memory allocation failed\n");
-		ret = ENOMEM;
 		return NULL;
 	}
 
@@ -621,15 +608,15 @@ static pfe_l2br_domain_t *pfe_l2br_create_fallback_domain(pfe_l2br_t *bridge)
 		bridge->dmem_fb_bd_base = oal_ntohl(class_mmap.dmem_fb_bd_base);
 		bridge->dmem_def_bd_base = oal_ntohl(class_mmap.dmem_def_bd_base);
 
-		NXP_LOG_INFO("Fall-back bridge domain @ 0x%x (class)\n", bridge->dmem_fb_bd_base);
-		NXP_LOG_INFO("Default bridge domain @ 0x%x (class)\n", bridge->dmem_def_bd_base);
+		NXP_LOG_INFO("Fall-back bridge domain @ 0x%x (class)\n", (uint_t)bridge->dmem_fb_bd_base);
+		NXP_LOG_INFO("Default bridge domain @ 0x%x (class)\n", (uint_t)bridge->dmem_def_bd_base);
 
-		domain->action_data.item.forward_list = 0U;
-		domain->action_data.item.untag_list = 0U;
-		domain->action_data.item.ucast_hit_action = L2BR_ACT_DISCARD;
-		domain->action_data.item.ucast_miss_action = L2BR_ACT_DISCARD;
-		domain->action_data.item.mcast_hit_action = L2BR_ACT_DISCARD;
-		domain->action_data.item.mcast_miss_action = L2BR_ACT_DISCARD;
+		domain->u.action_data.item.forward_list = 0U;
+		domain->u.action_data.item.untag_list = 0U;
+		domain->u.action_data.item.ucast_hit_action = (uint64_t)L2BR_ACT_DISCARD;
+		domain->u.action_data.item.ucast_miss_action = (uint64_t)L2BR_ACT_DISCARD;
+		domain->u.action_data.item.mcast_hit_action = (uint64_t)L2BR_ACT_DISCARD;
+		domain->u.action_data.item.mcast_miss_action = (uint64_t)L2BR_ACT_DISCARD;
 
 		if (EOK != pfe_l2br_update_hw_entry(domain))
 		{
@@ -673,8 +660,8 @@ errno_t pfe_l2br_domain_set_ucast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	domain->action_data.item.ucast_hit_action = hit;
-	domain->action_data.item.ucast_miss_action = miss;
+	domain->u.action_data.item.ucast_hit_action = (uint64_t)hit;
+	domain->u.action_data.item.ucast_miss_action = (uint64_t)miss;
 
 	return pfe_l2br_update_hw_entry(domain);
 }
@@ -686,7 +673,7 @@ errno_t pfe_l2br_domain_set_ucast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_
  * @param[out]	miss Pointer to memory where miss action shall be written
  * @return		EOK if success, error code otherwise
  */
-errno_t pfe_l2br_domain_get_ucast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t *hit, pfe_ct_l2br_action_t *miss)
+errno_t pfe_l2br_domain_get_ucast_action(const pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t *hit, pfe_ct_l2br_action_t *miss)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == domain) || (NULL == hit) || (NULL == miss)))
@@ -696,8 +683,8 @@ errno_t pfe_l2br_domain_get_ucast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	*hit = domain->action_data.item.ucast_hit_action;
-	*miss = domain->action_data.item.ucast_miss_action;
+	*hit = (pfe_ct_l2br_action_t)(domain->u.action_data.item.ucast_hit_action);
+	*miss = (pfe_ct_l2br_action_t)(domain->u.action_data.item.ucast_miss_action);
 
 	return EOK;
 }
@@ -721,8 +708,8 @@ errno_t pfe_l2br_domain_set_mcast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	domain->action_data.item.mcast_hit_action = hit;
-	domain->action_data.item.mcast_miss_action = miss;
+	domain->u.action_data.item.mcast_hit_action = (uint64_t)hit;
+	domain->u.action_data.item.mcast_miss_action = (uint64_t)miss;
 
 	return pfe_l2br_update_hw_entry(domain);
 }
@@ -734,7 +721,7 @@ errno_t pfe_l2br_domain_set_mcast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_
  * @param[out]	miss Pointer to memory where miss action shall be written
  * @return		EOK if success, error code otherwise
  */
-errno_t pfe_l2br_domain_get_mcast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t *hit, pfe_ct_l2br_action_t *miss)
+errno_t pfe_l2br_domain_get_mcast_action(const pfe_l2br_domain_t *domain, pfe_ct_l2br_action_t *hit, pfe_ct_l2br_action_t *miss)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == domain) || (NULL == hit) || (NULL == miss)))
@@ -744,8 +731,8 @@ errno_t pfe_l2br_domain_get_mcast_action(pfe_l2br_domain_t *domain, pfe_ct_l2br_
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	*hit = domain->action_data.item.mcast_hit_action;
-	*miss = domain->action_data.item.mcast_miss_action;
+	*hit = (pfe_ct_l2br_action_t)(domain->u.action_data.item.mcast_hit_action);
+	*miss = (pfe_ct_l2br_action_t)(domain->u.action_data.item.mcast_miss_action);
 
 	return EOK;
 }
@@ -798,11 +785,11 @@ errno_t pfe_l2br_domain_add_if(pfe_l2br_domain_t *domain, pfe_phy_if_t *iface, b
 	}
 
 	/*	Add it to this domain = update VLAN table entry */
-	domain->action_data.item.forward_list |= (1U << (uint32_t)id);
+	domain->u.action_data.item.forward_list |= (uint64_t)1U << (uint8_t)id;
 
 	if (FALSE == tagged)
 	{
-		domain->action_data.item.untag_list |= (1U << (uint32_t)id);
+		domain->u.action_data.item.untag_list |= (uint64_t)1U << (uint8_t)id;
 	}
 
 	ret = pfe_l2br_update_hw_entry(domain);
@@ -838,7 +825,7 @@ errno_t pfe_l2br_domain_add_if(pfe_l2br_domain_t *domain, pfe_phy_if_t *iface, b
  * @retval		EINVAL Invalid or missing argument
  * @retval		ENOEXEC Command failed
  */
-errno_t pfe_l2br_domain_del_if(pfe_l2br_domain_t *domain, pfe_phy_if_t *iface)
+errno_t pfe_l2br_domain_del_if(pfe_l2br_domain_t *domain, const pfe_phy_if_t *iface)
 {
 	errno_t ret;
 	LLIST_t *aux, *item;
@@ -869,8 +856,8 @@ errno_t pfe_l2br_domain_del_if(pfe_l2br_domain_t *domain, pfe_phy_if_t *iface)
 			id = pfe_phy_if_get_id((pfe_phy_if_t *)entry->ptr);
 
 			/*	Update HW */
-			domain->action_data.item.forward_list &= ~(1U << (uint32_t)id);
-			domain->action_data.item.untag_list &= ~(1U << (uint32_t)id);
+			domain->u.action_data.item.forward_list &= ~((uint64_t)1U << (uint8_t)id);
+			domain->u.action_data.item.untag_list &= ~((uint64_t)1U << (uint8_t)id);
 
 			ret = pfe_l2br_update_hw_entry(domain);
 			if (EOK != ret)
@@ -916,7 +903,7 @@ errno_t pfe_l2br_domain_del_if(pfe_l2br_domain_t *domain, pfe_phy_if_t *iface)
  * 				corresponding to its position. Bit (1 << 3) represents ID=3. The IDs
  * 				match the pfe_ct_phy_if_id_t values.
  */
-__attribute__((pure)) uint32_t pfe_l2br_domain_get_if_list(pfe_l2br_domain_t *domain)
+__attribute__((pure)) uint32_t pfe_l2br_domain_get_if_list(const pfe_l2br_domain_t *domain)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == domain))
@@ -926,7 +913,7 @@ __attribute__((pure)) uint32_t pfe_l2br_domain_get_if_list(pfe_l2br_domain_t *do
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	return domain->action_data.item.forward_list;
+	return domain->u.action_data.item.forward_list;
 }
 
 /**
@@ -936,7 +923,7 @@ __attribute__((pure)) uint32_t pfe_l2br_domain_get_if_list(pfe_l2br_domain_t *do
  * 				corresponding to its position. Bit (1 << 3) represents ID=3. The IDs
  * 				match the pfe_ct_phy_if_id_t values.
  */
-__attribute__((pure)) uint32_t pfe_l2br_domain_get_untag_if_list(pfe_l2br_domain_t *domain)
+__attribute__((pure)) uint32_t pfe_l2br_domain_get_untag_if_list(const pfe_l2br_domain_t *domain)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == domain))
@@ -946,7 +933,7 @@ __attribute__((pure)) uint32_t pfe_l2br_domain_get_untag_if_list(pfe_l2br_domain
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	return domain->action_data.item.untag_list;
+	return domain->u.action_data.item.untag_list;
 }
 
 /**
@@ -956,7 +943,7 @@ __attribute__((pure)) uint32_t pfe_l2br_domain_get_untag_if_list(pfe_l2br_domain
  * @retval		TRUE Interface matches the criterion
  * @retval		FALSE Interface does not match the criterion
  */
-static bool_t pfe_l2br_domain_match_if_criterion(pfe_l2br_domain_t *domain, pfe_phy_if_t *iface)
+static bool_t pfe_l2br_domain_match_if_criterion(const pfe_l2br_domain_t *domain, const pfe_phy_if_t *iface)
 {
 	bool_t match = FALSE;
 
@@ -971,29 +958,21 @@ static bool_t pfe_l2br_domain_match_if_criterion(pfe_l2br_domain_t *domain, pfe_
 	switch (domain->cur_crit)
 	{
 		case L2BD_IF_CRIT_ALL:
-		{
 			match = TRUE;
 			break;
-		}
 
 		case L2BD_IF_BY_PHY_IF_ID:
-		{
 			match = (domain->cur_crit_arg.id == pfe_phy_if_get_id(iface));
 			break;
-		}
 
 		case L2BD_IF_BY_PHY_IF:
-		{
 			match = (domain->cur_crit_arg.phy_if == iface);
 			break;
-		}
 
 		default:
-		{
 			NXP_LOG_ERROR("Unknown criterion\n");
 			match = FALSE;
 			break;
-		}
 	}
 
 	return match;
@@ -1014,8 +993,9 @@ static bool_t pfe_l2br_domain_match_if_criterion(pfe_l2br_domain_t *domain, pfe_
 pfe_phy_if_t *pfe_l2br_domain_get_first_if(pfe_l2br_domain_t *domain, pfe_l2br_domain_if_get_crit_t crit, void *arg)
 {
 	LLIST_t *item;
-	pfe_phy_if_t *phy_if;
+	pfe_phy_if_t *phy_if = NULL;
 	bool_t match = FALSE;
+    bool_t known_crit = TRUE;
 	pfe_l2br_list_entry_t *entry;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
@@ -1030,19 +1010,14 @@ pfe_phy_if_t *pfe_l2br_domain_get_first_if(pfe_l2br_domain_t *domain, pfe_l2br_d
 	domain->cur_crit = crit;
 	switch (domain->cur_crit)
 	{
-		case L2BD_CRIT_ALL:
-		{
+		case L2BD_IF_CRIT_ALL:
 			break;
-		}
 
 		case L2BD_IF_BY_PHY_IF_ID:
-		{
-			domain->cur_crit_arg.id = (pfe_ct_phy_if_id_t)arg;
+			domain->cur_crit_arg.id = (pfe_ct_phy_if_id_t)(addr_t)arg;
 			break;
-		}
 
 		case L2BD_IF_BY_PHY_IF:
-		{
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 			if (unlikely(NULL == arg))
 			{
@@ -1052,16 +1027,14 @@ pfe_phy_if_t *pfe_l2br_domain_get_first_if(pfe_l2br_domain_t *domain, pfe_l2br_d
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 			domain->cur_crit_arg.phy_if = (pfe_phy_if_t *)arg;
 			break;
-		}
 
 		default:
-		{
 			NXP_LOG_ERROR("Unknown criterion\n");
-			return NULL;
-		}
+            known_crit = FALSE;
+            break;
 	}
 
-	if (FALSE == LLIST_IsEmpty(&domain->ifaces))
+	if ((FALSE == LLIST_IsEmpty(&domain->ifaces)) && (TRUE == known_crit))
 	{
 		/*	Get first matching entry */
 		LLIST_ForEach(item, &domain->ifaces)
@@ -1126,14 +1099,11 @@ pfe_phy_if_t *pfe_l2br_domain_get_next_if(pfe_l2br_domain_t *domain)
 			/*	Remember current item to know where to start later */
 			domain->cur_item = domain->cur_item->prNext;
 
-			if (NULL != domain)
-			{
-				if (true == pfe_l2br_domain_match_if_criterion(domain, phy_if))
-				{
-					match = TRUE;
-					break;
-				}
-			}
+            if (true == pfe_l2br_domain_match_if_criterion(domain, phy_if))
+            {
+                match = TRUE;
+                break;
+            }
 		}
 	}
 
@@ -1154,7 +1124,7 @@ pfe_phy_if_t *pfe_l2br_domain_get_next_if(pfe_l2br_domain_t *domain)
  * @retval		EOK Success
  * @retval		EINVAL Invalid or missing argument
  */
-errno_t pfe_l2br_domain_get_vlan(pfe_l2br_domain_t *domain, uint16_t *vlan)
+errno_t pfe_l2br_domain_get_vlan(const pfe_l2br_domain_t *domain, uint16_t *vlan)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == domain) || (NULL == vlan)))
@@ -1175,7 +1145,7 @@ errno_t pfe_l2br_domain_get_vlan(pfe_l2br_domain_t *domain, uint16_t *vlan)
  * @retval		TRUE Is default
  * @retval		FALSE Is not default
  */
-__attribute__((pure)) bool_t pfe_l2br_domain_is_default(pfe_l2br_domain_t *domain)
+__attribute__((pure)) bool_t pfe_l2br_domain_is_default(const pfe_l2br_domain_t *domain)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == domain))
@@ -1194,7 +1164,7 @@ __attribute__((pure)) bool_t pfe_l2br_domain_is_default(pfe_l2br_domain_t *domai
  * @retval		TRUE Is fall-back
  * @retval		FALSE Is not fall-back
  */
-__attribute__((pure)) bool_t pfe_l2br_domain_is_fallback(pfe_l2br_domain_t *domain)
+__attribute__((pure)) bool_t pfe_l2br_domain_is_fallback(const pfe_l2br_domain_t *domain)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == domain))
@@ -1241,10 +1211,9 @@ errno_t pfe_l2br_static_entry_create(pfe_l2br_t *bridge, uint16_t vlan, pfe_mac_
 	}
 	else
 	{
-		memset(static_entry, 0, sizeof(pfe_l2br_static_entry_t));
+		(void)memset(static_entry, 0, sizeof(pfe_l2br_static_entry_t));
 		static_entry->vlan = vlan;
-		static_entry->fw_list = new_fw_list;
-		memcpy(static_entry->mac, mac, sizeof(pfe_mac_addr_t));
+		(void)memcpy(static_entry->mac, mac, sizeof(pfe_mac_addr_t));
 
 		if (EOK != oal_mutex_lock(bridge->mutex))
 		{
@@ -1291,11 +1260,11 @@ errno_t pfe_l2br_static_entry_create(pfe_l2br_t *bridge, uint16_t vlan, pfe_mac_
 		}
 
 		/* Configure action data */
-		static_entry->action_data.val = 0;
-		static_entry->action_data.item.static_flag = 1;
-		static_entry->action_data.item.fresh_flag = 1;
-        static_entry->action_data.item.local_l3 = 0U;
-		static_entry->action_data.item.forward_list = static_entry->fw_list;
+		static_entry->u.action_data.val = 0;
+		static_entry->u.action_data.item.static_flag = 1;
+		static_entry->u.action_data.item.fresh_flag = 0U;
+		static_entry->u.action_data.item.local_l3 = 0U;
+		static_entry->u.action_data.item.forward_list = new_fw_list;
 
 		if (EOK != pfe_l2br_table_entry_set_vlan(static_entry->entry, vlan))
 		{
@@ -1309,7 +1278,7 @@ errno_t pfe_l2br_static_entry_create(pfe_l2br_t *bridge, uint16_t vlan, pfe_mac_
 			goto table_err;
 		}
 
-		if (EOK != pfe_l2br_table_entry_set_action_data(static_entry->entry, static_entry->action_data_u64val))
+		if (EOK != pfe_l2br_table_entry_set_action_data(static_entry->entry, static_entry->u.action_data_u64val))
 		{
 			NXP_LOG_ERROR("Couldn't set action data\n");
 			goto table_err;
@@ -1341,7 +1310,7 @@ table_err:
 	return EINVAL;
 }
 
-static errno_t pfe_l2br_static_entry_destroy_nolock(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent)
+static errno_t pfe_l2br_static_entry_destroy_nolock(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent)
 {
 	errno_t ret;
 
@@ -1404,14 +1373,15 @@ errno_t pfe_l2br_static_entry_destroy(pfe_l2br_t *bridge, pfe_l2br_static_entry_
 /**
  * @brief		Change L2 static entry forward list
  * @param[in]	bridge Bridge instance
- * @param[in]	static_ent Static entry to change forward list
+ * @param[in]	static_ent Static entry to change
  * @param[in]	new_fw_list New forward list
  * @retval		EOK Success
  * @retval		EINVAL Invalid or missing argument
  * @retval		ENOENT Entry couldn't be updated
  */
-errno_t pfe_l2br_static_entry_replace_fw_list(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, uint32_t new_fw_list)
+errno_t pfe_l2br_static_entry_replace_fw_list(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, uint32_t new_fw_list)
 {
+	uint32_t tmp;
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == bridge) || (NULL == static_ent)))
 	{
@@ -1419,16 +1389,19 @@ errno_t pfe_l2br_static_entry_replace_fw_list(pfe_l2br_t *bridge, pfe_l2br_stati
 		return EINVAL;
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
-	static_ent->fw_list = new_fw_list;
+	tmp = static_ent->u.action_data.item.forward_list;
+	static_ent->u.action_data.item.forward_list = new_fw_list;
 
-	if (EOK != pfe_l2br_table_entry_set_action_data(static_ent->entry, static_ent->action_data_u64val))
+	if (EOK != pfe_l2br_table_entry_set_action_data(static_ent->entry, static_ent->u.action_data_u64val))
 	{
+		static_ent->u.action_data.item.forward_list = tmp;
 		NXP_LOG_ERROR("Couldn't set action data\n");
 		return EINVAL;
 	}
 
 	if (EOK != pfe_l2br_table_update_entry(bridge->mac_table, static_ent->entry))
 	{
+		static_ent->u.action_data.item.forward_list = tmp;
 		NXP_LOG_ERROR("Couldn't update entry\n");
 		return ENOENT;
 	}
@@ -1439,15 +1412,16 @@ errno_t pfe_l2br_static_entry_replace_fw_list(pfe_l2br_t *bridge, pfe_l2br_stati
 /**
  * @brief Sets the local L3 flag (marks/unmarks the MAC address as local one)
  * @param[in]		bridge Bridge instance
- * @param[in]		static_ent Static entry to change forward list
+ * @param[in]		static_ent Static entry to change
  * @param[in]		local Value to be set
  * @retval EOK		Success
  * @retval EINVAL	Invalid or missing argument
  * @retval			ENOENT Entry couldn't be updated
  */
-errno_t pfe_l2br_static_entry_set_local_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t local)
+errno_t pfe_l2br_static_entry_set_local_flag(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t local)
 {
-	uint8_t tmp;
+	uint32_t tmp;
+    
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == bridge) || (NULL == static_ent)))
 	{
@@ -1456,19 +1430,19 @@ errno_t pfe_l2br_static_entry_set_local_flag(pfe_l2br_t *bridge, pfe_l2br_static
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 	/* Make changes */
-	tmp = static_ent->action_data.item.local_l3;
-	static_ent->action_data.item.local_l3 = ((FALSE != local)? 1U : 0U);
+	tmp = static_ent->u.action_data.item.local_l3;
+	static_ent->u.action_data.item.local_l3 = ((FALSE != local)? 1U : 0U);
 	/* Propagate changes to l2br table */
-	if (EOK != pfe_l2br_table_entry_set_action_data(static_ent->entry, static_ent->action_data_u64val))
+	if (EOK != pfe_l2br_table_entry_set_action_data(static_ent->entry, static_ent->u.action_data_u64val))
 	{
-		static_ent->action_data.item.local_l3 = tmp;
+		static_ent->u.action_data.item.local_l3 = tmp;
 		NXP_LOG_ERROR("Couldn't set action data\n");
 		return EINVAL;
 	}
 	/* Write to the HW */
 	if (EOK != pfe_l2br_table_update_entry(bridge->mac_table, static_ent->entry))
 	{
-		static_ent->action_data.item.local_l3 = tmp;
+		static_ent->u.action_data.item.local_l3 = tmp;
 		NXP_LOG_ERROR("Couldn't update entry\n");
 		return ENOENT;
 	}
@@ -1478,15 +1452,16 @@ errno_t pfe_l2br_static_entry_set_local_flag(pfe_l2br_t *bridge, pfe_l2br_static
 /**
  * @brief Sets the src_discard flag (enables/disables discard of frames with given SRC MAC address)
  * @param[in]		bridge Bridge instance
- * @param[in]		static_ent Static entry to change forward list
+ * @param[in]		static_ent Static entry to change
  * @param[in]		src_discard Value to be set
  * @retval EOK		Success
  * @retval EINVAL	Invalid or missing argument
  * @retval			ENOENT Entry couldn't be updated
  */
-errno_t pfe_l2br_static_entry_set_src_discard_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t src_discard)
+errno_t pfe_l2br_static_entry_set_src_discard_flag(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t src_discard)
 {
-	uint8_t tmp;
+	uint32_t tmp;
+    
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == bridge) || (NULL == static_ent)))
 	{
@@ -1495,19 +1470,19 @@ errno_t pfe_l2br_static_entry_set_src_discard_flag(pfe_l2br_t *bridge, pfe_l2br_
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 	/* Make changes */
-	tmp = static_ent->action_data.item.src_discard;
-	static_ent->action_data.item.src_discard = ((FALSE != src_discard)? 1U : 0U);
+	tmp = static_ent->u.action_data.item.src_discard;
+	static_ent->u.action_data.item.src_discard = ((FALSE != src_discard)? 1U : 0U);
 	/* Propagate changes to l2br table */
-	if (EOK != pfe_l2br_table_entry_set_action_data(static_ent->entry, static_ent->action_data_u64val))
+	if (EOK != pfe_l2br_table_entry_set_action_data(static_ent->entry, static_ent->u.action_data_u64val))
 	{
-		static_ent->action_data.item.src_discard = tmp;
+		static_ent->u.action_data.item.src_discard = tmp;
 		NXP_LOG_ERROR("Couldn't set action data\n");
 		return EINVAL;
 	}
 	/* Write to the HW */
 	if (EOK != pfe_l2br_table_update_entry(bridge->mac_table, static_ent->entry))
 	{
-		static_ent->action_data.item.src_discard = tmp;
+		static_ent->u.action_data.item.src_discard = tmp;
 		NXP_LOG_ERROR("Couldn't update entry\n");
 		return ENOENT;
 	}
@@ -1517,51 +1492,62 @@ errno_t pfe_l2br_static_entry_set_src_discard_flag(pfe_l2br_t *bridge, pfe_l2br_
 /**
  * @brief Sets the dst_discard flag (enables/disables discard of frames with given SRC MAC address)
  * @param[in]		bridge Bridge instance
- * @param[in]		static_ent Static entry to change forward list
+ * @param[in]		static_ent Static entry to change
  * @param[in]		dst_discard Value to be set
  * @retval EOK		Success
  * @retval EINVAL	Invalid or missing argument
  * @retval			ENOENT Entry couldn't be updated
  */
-errno_t pfe_l2br_static_entry_set_dst_discard_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t dst_discard)
+errno_t pfe_l2br_static_entry_set_dst_discard_flag(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t dst_discard)
 {
-	uint8_t tmp;
+	uint32_t tmp;
+    errno_t ret = EINVAL;
+    
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == bridge) || (NULL == static_ent)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
-		return EINVAL;
 	}
+    else
+    {
 #endif /* PFE_CFG_NULL_ARG_CHECK */
-	/* Make changes */
-	tmp = static_ent->action_data.item.dst_discard;
-	static_ent->action_data.item.dst_discard = ((FALSE != dst_discard)? 1U : 0U);
-	/* Propagate changes to l2br table */
-	if (EOK != pfe_l2br_table_entry_set_action_data(static_ent->entry, static_ent->action_data_u64val))
-	{
-		static_ent->action_data.item.dst_discard = tmp;
-		NXP_LOG_ERROR("Couldn't set action data\n");
-		return EINVAL;
-	}
-	/* Write to the HW */
-	if (EOK != pfe_l2br_table_update_entry(bridge->mac_table, static_ent->entry))
-	{
-		static_ent->action_data.item.dst_discard = tmp;
-		NXP_LOG_ERROR("Couldn't update entry\n");
-		return ENOENT;
-	}
-	return EOK;
+        /* Make changes */
+        tmp = static_ent->u.action_data.item.dst_discard;
+        static_ent->u.action_data.item.dst_discard = ((FALSE != dst_discard)? 1U : 0U);
+        /* Propagate changes to l2br table */
+        ret = pfe_l2br_table_entry_set_action_data(static_ent->entry, static_ent->u.action_data_u64val);
+        if (EOK != ret)
+        {
+            static_ent->u.action_data.item.dst_discard = tmp;
+            NXP_LOG_ERROR("Couldn't set action data\n");
+            ret = EINVAL;
+        }
+        else
+        {
+            /* Write to the HW */
+            if (EOK != pfe_l2br_table_update_entry(bridge->mac_table, static_ent->entry))
+            {
+                static_ent->u.action_data.item.dst_discard = tmp;
+                NXP_LOG_ERROR("Couldn't update entry\n");
+                ret = ENOENT;
+            }
+        }
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+    }
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+	return ret;
 }
 
 /**
  * @brief Reads the state of local L3 flag
  * @param[in]	bridge Bridge instance
- * @param[in]	static_ent Static entry to change forward list
+ * @param[in]	static_ent Static entry to read from
  * @param[out]	local State of the local L3 flag
  * @retval EOK		Success
  * @retval EINVAL	Invalid or missing argument
  */
-errno_t pfe_l2br_static_entry_get_local_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t *local)
+errno_t pfe_l2br_static_entry_get_local_flag(const pfe_l2br_t *bridge, const pfe_l2br_static_entry_t* static_ent, bool_t *local)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == bridge) || (NULL == static_ent) || (NULL == local)))
@@ -1569,20 +1555,22 @@ errno_t pfe_l2br_static_entry_get_local_flag(pfe_l2br_t *bridge, pfe_l2br_static
 		NXP_LOG_ERROR("NULL argument received\n");
 		return EINVAL;
 	}
+#else
+    (void)bridge;
 #endif /* PFE_CFG_NULL_ARG_CHECK */
-	*local = ((0U != static_ent->action_data.item.local_l3)? TRUE : FALSE);
+	*local = ((0U != static_ent->u.action_data.item.local_l3)? TRUE : FALSE);
 	return EOK;
 }
 
 /**
  * @brief Reads the state of src_discard flag
  * @param[in]	bridge Bridge instance
- * @param[in]	static_ent Static entry to change forward list
+ * @param[in]	static_ent Static entry to read from
  * @param[out]	src_discard State of the src_discard flag
  * @retval EOK		Success
  * @retval EINVAL	Invalid or missing argument
  */
-errno_t pfe_l2br_static_entry_get_src_discard_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t *src_discard)
+errno_t pfe_l2br_static_entry_get_src_discard_flag(pfe_l2br_t *bridge, const pfe_l2br_static_entry_t* static_ent, bool_t *src_discard)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == bridge) || (NULL == static_ent) || (NULL == src_discard)))
@@ -1590,20 +1578,22 @@ errno_t pfe_l2br_static_entry_get_src_discard_flag(pfe_l2br_t *bridge, pfe_l2br_
 		NXP_LOG_ERROR("NULL argument received\n");
 		return EINVAL;
 	}
+#else
+    (void)bridge;
 #endif /* PFE_CFG_NULL_ARG_CHECK */
-	*src_discard = ((0U != static_ent->action_data.item.src_discard)? TRUE : FALSE);
+	*src_discard = ((0U != static_ent->u.action_data.item.src_discard)? TRUE : FALSE);
 	return EOK;
 }
 
 /**
  * @brief Reads the state of dst_discard flag
  * @param[in]	bridge Bridge instance
- * @param[in]	static_ent Static entry to change forward list
+ * @param[in]	static_ent Static entry to read from
  * @param[out]	dst_discard State of the dst_discard flag
  * @retval EOK		Success
  * @retval EINVAL	Invalid or missing argument
  */
-errno_t pfe_l2br_static_entry_get_dst_discard_flag(pfe_l2br_t *bridge, pfe_l2br_static_entry_t* static_ent, bool_t *dst_discard)
+errno_t pfe_l2br_static_entry_get_dst_discard_flag(const pfe_l2br_t *bridge, const pfe_l2br_static_entry_t* static_ent, bool_t *dst_discard)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == bridge) || (NULL == static_ent) || (NULL == dst_discard)))
@@ -1611,19 +1601,32 @@ errno_t pfe_l2br_static_entry_get_dst_discard_flag(pfe_l2br_t *bridge, pfe_l2br_
 		NXP_LOG_ERROR("NULL argument received\n");
 		return EINVAL;
 	}
+#else
+    (void)bridge;
 #endif /* PFE_CFG_NULL_ARG_CHECK */
-	*dst_discard = ((0U != static_ent->action_data.item.dst_discard)? TRUE : FALSE);
+	*dst_discard = ((0U != static_ent->u.action_data.item.dst_discard)? TRUE : FALSE);
 	return EOK;
 }
 
 /**
- * @brief		Get forward list from L2 static entry
- * @param[in]	static_ent Static entry
- * @return		Forward list of static entry
+ * @brief Reads the forward list
+ * @param[in]	bridge Bridge instance
+ * @param[in]	static_ent Static entry to read from
+ * @return		Bitmask representing egress physical interfaces. Every bit represents ID
+ * 				corresponding to its position. Bit (1 << 3) represents ID=3. The IDs
+ * 				match the pfe_ct_phy_if_id_t values.
  */
-__attribute__((pure)) uint32_t pfe_l2br_static_entry_get_fw_list(pfe_l2br_static_entry_t* static_ent)
+__attribute__((pure)) uint32_t pfe_l2br_static_entry_get_fw_list(const pfe_l2br_static_entry_t* static_ent)
 {
-	return static_ent->fw_list;
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+	if (NULL == static_ent)
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+		return 0U;
+	}
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+	return static_ent->u.action_data.item.forward_list;
 }
 
 /**
@@ -1631,7 +1634,7 @@ __attribute__((pure)) uint32_t pfe_l2br_static_entry_get_fw_list(pfe_l2br_static
  * @param[in]	static_ent Static entry
  * @return		Vlan of static entry
  */
-__attribute__((pure)) uint16_t pfe_l2br_static_entry_get_vlan(pfe_l2br_static_entry_t *static_ent)
+__attribute__((pure)) uint16_t pfe_l2br_static_entry_get_vlan(const pfe_l2br_static_entry_t *static_ent)
 {
 	return static_ent->vlan;
 }
@@ -1641,9 +1644,9 @@ __attribute__((pure)) uint16_t pfe_l2br_static_entry_get_vlan(pfe_l2br_static_en
  * @param[in]	static_ent Static entry
  * @return		Mac of static entry
  */
-void pfe_l2br_static_entry_get_mac(pfe_l2br_static_entry_t *static_ent, pfe_mac_addr_t mac)
+void pfe_l2br_static_entry_get_mac(const pfe_l2br_static_entry_t *static_ent, pfe_mac_addr_t mac)
 {
-	memcpy(mac, static_ent->mac, sizeof(pfe_mac_addr_t));
+	(void)memcpy(mac, static_ent->mac, sizeof(pfe_mac_addr_t));
 }
 
 /**
@@ -1654,7 +1657,7 @@ void pfe_l2br_static_entry_get_mac(pfe_l2br_static_entry_t *static_ent, pfe_mac_
  * @param[in]	arg2 Argument for criterion
  * @return		Static entry on success or NULL on failure
  */
-pfe_l2br_static_entry_t *pfe_l2br_static_entry_get_first(pfe_l2br_t *bridge, pfe_l2br_static_ent_get_crit_t crit, void* arg1, void *arg2)
+pfe_l2br_static_entry_t *pfe_l2br_static_entry_get_first(pfe_l2br_t *bridge, pfe_l2br_static_ent_get_crit_t crit, void* arg1,const void *arg2)
 {
 	bool_t match = FALSE;
 	LLIST_t *item;
@@ -1673,25 +1676,24 @@ pfe_l2br_static_entry_t *pfe_l2br_static_entry_get_first(pfe_l2br_t *bridge, pfe
 	switch (bridge->cur_crit_ent)
 	{
 		case L2SENT_CRIT_ALL:
-		{
 			break;
-		}
+            
 		case L2SENT_CRIT_BY_MAC:
-		{
-			memcpy(bridge->cur_static_ent_crit_arg.mac, arg2, sizeof(pfe_mac_addr_t));
+			(void)memcpy((void *)bridge->cur_static_ent_crit_arg.mac, arg2, sizeof(pfe_mac_addr_t));
 			break;
-		}
+            
 		case L2SENT_CRIT_BY_VLAN:
-		{
 			bridge->cur_static_ent_crit_arg.vlan = (uint16_t)((addr_t)arg1);
 			break;
-		}
+            
 		case L2SENT_CRIT_BY_MAC_VLAN:
-		{
 			bridge->cur_static_ent_crit_arg.vlan = (uint16_t)((addr_t)arg1);
-			memcpy(bridge->cur_static_ent_crit_arg.mac, arg2, sizeof(pfe_mac_addr_t));
+			(void)memcpy((void *)bridge->cur_static_ent_crit_arg.mac, arg2, sizeof(pfe_mac_addr_t));
 			break;
-		}
+            
+        default:
+            NXP_LOG_DEBUG("Invalid static entry type");
+            break;
 	}
 
 	if (EOK != oal_mutex_lock(bridge->mutex))
@@ -1786,17 +1788,7 @@ pfe_l2br_static_entry_t *pfe_l2br_static_entry_get_next(pfe_l2br_t *bridge)
 		NXP_LOG_DEBUG("Mutex unlock failed\n");
 	}
 
-
-	if (TRUE == match)
-	{
-		return static_ent;
-	}
-	else
-	{
-		return NULL;
-	}
-
-	return EOK;
+	return (TRUE == match) ? static_ent : NULL;
 }
 
 /**
@@ -1804,7 +1796,7 @@ pfe_l2br_static_entry_t *pfe_l2br_static_entry_get_next(pfe_l2br_t *bridge)
  * @param[in]	bridge The bridge instance
  * @param[in]	static_ent Static entry to be matched to criterion parameters
  */
-static bool_t pfe_l2br_static_entry_match_criterion(pfe_l2br_t *bridge, pfe_l2br_static_entry_t *static_ent)
+static bool_t pfe_l2br_static_entry_match_criterion(const pfe_l2br_t *bridge, pfe_l2br_static_entry_t *static_ent)
 {
 	bool_t match = FALSE;
 
@@ -1812,34 +1804,28 @@ static bool_t pfe_l2br_static_entry_match_criterion(pfe_l2br_t *bridge, pfe_l2br
 	if (unlikely((NULL == bridge) || (NULL == static_ent)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
-		return NULL;
+		return FALSE;
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	switch (bridge->cur_crit_ent)
 	{
 		case L2SENT_CRIT_ALL:
-		{
 			match = TRUE;
 			break;
-		}
 
 		case L2SENT_CRIT_BY_MAC:
-		{
 			if (0 == memcmp(static_ent->mac, bridge->cur_static_ent_crit_arg.mac, sizeof(pfe_mac_addr_t)))
 			{
 				match = TRUE;
 			}
 			break;
-		}
 
 		case L2SENT_CRIT_BY_VLAN:
-		{
 			match = (static_ent->vlan == bridge->cur_static_ent_crit_arg.vlan);
 			break;
-		}
+            
 		case L2SENT_CRIT_BY_MAC_VLAN:
-		{
 			match = (static_ent->vlan == bridge->cur_static_ent_crit_arg.vlan);
 			if (TRUE == match) {
 				if (0 == memcmp(static_ent->mac, bridge->cur_static_ent_crit_arg.mac, sizeof(pfe_mac_addr_t)))
@@ -1852,149 +1838,16 @@ static bool_t pfe_l2br_static_entry_match_criterion(pfe_l2br_t *bridge, pfe_l2br
 				}
 			}
 			break;
-		}
 
 		default:
-		{
 			NXP_LOG_ERROR("Unknown criterion\n");
 			match = FALSE;
-		}
+            break;
 	}
 
 	return match;
 }
 
-/**
- * @brief		Worker function running within internal thread
- */
-static void *pfe_l2br_worker_func(void *arg)
-{
-	pfe_l2br_t *bridge = (pfe_l2br_t *)arg;
-	errno_t err;
-	oal_mbox_msg_t msg;
-
-#if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely(NULL == bridge))
-	{
-		NXP_LOG_ERROR("NULL argument received\n");
-		return NULL;
-	}
-#endif /* PFE_CFG_NULL_ARG_CHECK */
-
-	while (3)
-	{
-		err = oal_mbox_receive(bridge->mbox, &msg);
-		if (EOK != err)
-		{
-			NXP_LOG_WARNING("mbox: Problem receiving message: %d", err);
-		}
-		else
-		{
-			switch (msg.payload.code)
-			{
-				case SIG_WORKER_STOP:
-				{
-					/*	Exit the thread */
-					oal_mbox_ack_msg(&msg);
-					return NULL;
-				}
-
-				case SIG_TIMER_TICK:
-				{
-					pfe_l2br_do_timeouts(bridge);
-					break;
-				}
-			}
-		}
-
-		oal_mbox_ack_msg(&msg);
-	}
-
-	return NULL;
-}
-
-/**
- * @brief		Perform aging
- * @param[in]	bridge The bridge instance
- */
-static void pfe_l2br_do_timeouts(pfe_l2br_t *bridge)
-{
-	errno_t ret;
-	pfe_l2br_table_entry_t *entry;
-	pfe_l2br_table_iterator_t* l2t_iter;
-	char_t text_buf[256];
-
-#if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely(NULL == bridge))
-	{
-		NXP_LOG_ERROR("NULL argument received\n");
-		return;
-	}
-#endif /* PFE_CFG_NULL_ARG_CHECK */
-
-	/*	Create entry storage */
-	entry = pfe_l2br_table_entry_create(bridge->mac_table);
-
-	l2t_iter = pfe_l2br_iterator_create();
-
-	if (EOK != oal_mutex_lock(bridge->mutex))
-	{
-		NXP_LOG_DEBUG("Mutex lock failed\n");
-	}
-
-	/*	Go through all entries */
-	ret = pfe_l2br_table_get_first(bridge->mac_table, l2t_iter, L2BR_TABLE_CRIT_VALID, entry);
-	while (EOK == ret)
-	{
-		if (FALSE == pfe_l2br_table_entry_is_static(entry))
-		{
-			if (TRUE == pfe_l2br_table_entry_is_fresh(entry))
-			{
-				ret = pfe_l2br_table_del_entry(bridge->mac_table, entry);
-				if (EOK != ret)
-				{
-					NXP_LOG_ERROR("Could not delete MAC table entry: %d\n", ret);
-				}
-				else
-				{
-					pfe_l2br_table_entry_to_str(entry, text_buf, 256);
-					NXP_LOG_DEBUG("Aging:\n%s\n", text_buf);
-				}
-			/* If we delete an entry that has links in collision domain then the entry from collision domain will be moved to hash on the same address from witch we delete the entry */
-				pfe_l2br_iterator_halt(l2t_iter);
-			}
-			else
-			{
-				/*	Reset the fresh flag */
-				ret = pfe_l2br_table_entry_set_fresh(bridge->mac_table, entry, TRUE);
-				if (EOK != ret)
-				{
-					NXP_LOG_DEBUG("Can't set fresh flag: %d\n", ret);
-				}
-
-				/*	Update the entry */
-				ret = pfe_l2br_table_update_entry(bridge->mac_table, entry);
-				if (EOK != ret)
-				{
-					NXP_LOG_ERROR("Unable to update MAC table entry: %d\n", ret);
-				}
-			}
-		}
-
-		ret = pfe_l2br_table_get_next(bridge->mac_table, l2t_iter, entry);
-	}
-
-	if (EOK != oal_mutex_unlock(bridge->mutex))
-	{
-		NXP_LOG_DEBUG("Mutex unlock failed\n");
-	}
-
-	/*	Release entry storage */
-	(void)pfe_l2br_table_entry_destroy(entry);
-	/*  Release iterator */
-	pfe_l2br_iterator_destroy(l2t_iter);
-}
-
 /*
  * @brief		Flush MAC table entries
  * @param[in]	bridge The bridge instance
@@ -2030,7 +1883,7 @@ static errno_t pfe_l2br_flush(pfe_l2br_t *bridge, pfe_l2br_flush_types type)
 
 	switch (type)
 	{
-		case PFE_L2BR_FLUSH_STATIC:
+		case PFE_L2BR_FLUSH_STATIC_MAC:
 		{
 			/*	Remove all static entries from local DB */
 			if (FALSE == LLIST_IsEmpty(&bridge->static_entries))
@@ -2053,7 +1906,7 @@ static errno_t pfe_l2br_flush(pfe_l2br_t *bridge, pfe_l2br_flush_types type)
 			break;
 		}
 
-		case PFE_L2BR_FLUSH_ALL:
+		case PFE_L2BR_FLUSH_ALL_MAC:
 		{
 			/*	Remove all static entries from local DB. This must be done before
 				the pfe_l2br_table_flush() because otherwise would report "entry
@@ -2094,7 +1947,7 @@ static errno_t pfe_l2br_flush(pfe_l2br_t *bridge, pfe_l2br_flush_types type)
 			break;
 		}
 
-		case PFE_L2BR_FLUSH_LEARNED:
+		case PFE_L2BR_FLUSH_LEARNED_MAC:
 		{
 			/*	Go through all entries */
 			query_ret = pfe_l2br_table_get_first(bridge->mac_table, l2t_iter, L2BR_TABLE_CRIT_VALID, entry);
@@ -2133,7 +1986,7 @@ static errno_t pfe_l2br_flush(pfe_l2br_t *bridge, pfe_l2br_flush_types type)
 	(void)pfe_l2br_table_entry_destroy(entry);
 
 	/*  Release iterator */
-	pfe_l2br_iterator_destroy(l2t_iter);
+	(void)pfe_l2br_iterator_destroy(l2t_iter);
 
 	return ret;
 }
@@ -2153,7 +2006,7 @@ errno_t pfe_l2br_flush_learned(pfe_l2br_t *bridge)
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	return pfe_l2br_flush(bridge, PFE_L2BR_FLUSH_LEARNED);
+	return pfe_l2br_flush(bridge, PFE_L2BR_FLUSH_LEARNED_MAC);
 }
 
 /**
@@ -2171,7 +2024,7 @@ errno_t pfe_l2br_flush_static(pfe_l2br_t *bridge)
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	return pfe_l2br_flush(bridge, PFE_L2BR_FLUSH_STATIC);
+	return pfe_l2br_flush(bridge, PFE_L2BR_FLUSH_STATIC_MAC);
 }
 
 /**
@@ -2189,7 +2042,7 @@ errno_t pfe_l2br_flush_all(pfe_l2br_t *bridge)
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	return pfe_l2br_flush(bridge, PFE_L2BR_FLUSH_ALL);
+	return pfe_l2br_flush(bridge, PFE_L2BR_FLUSH_ALL_MAC);
 }
 
 /**
@@ -2203,32 +2056,91 @@ errno_t pfe_l2br_flush_all(pfe_l2br_t *bridge)
 static bool_t pfe_platform_class_feature_enabled(const pfe_class_t *class, const char *name)
 {
 	pfe_fw_feature_t *fw_feature;
-	errno_t ret;
 	uint8_t variant = 0;
-	/* Does the feature exist? */
-	ret = pfe_class_get_feature(class, &fw_feature, name);
-
-	if(EOK == ret)
-	{       /* Feature exists */
+    bool_t retval = FALSE;
+     
+    /* Does the feature exist? */
+	if(EOK == pfe_class_get_feature(class, &fw_feature, name))
+	{   /* Feature exists */
 		/* Get variant */
-		pfe_fw_feature_get_variant(fw_feature, &variant);
+		if (EOK == pfe_fw_feature_get_variant(fw_feature, &variant))
+        {
+            if (variant == 1U)
+            {
+                retval = TRUE;
+            }   
+        }
 	}
 
-	if (variant == 1)
-		return TRUE;
+	return retval;
+}
+
+/**
+ * @brief		Enable the firmware feature with given name
+ * @param[in]	class Class instance
+ * @param[in]	name Name of the feature to enable
+ * @retval		EOK if success, error code otherwise
+ */
+
+static errno_t pfe_platform_class_feature_enable(const pfe_class_t *class, const char *name)
+{
+	pfe_fw_feature_t *fw_feature;
+	errno_t ret = EINVAL;
+	uint8_t variant = 0;
 
-	return FALSE;
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+	if (unlikely((NULL == class) || (NULL == name)))
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+	}
+    else
+    {
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+        /* Does the feature exist? */
+        ret = pfe_class_get_feature(class, &fw_feature, name);
+        if(EOK != ret)
+        {
+            NXP_LOG_ERROR("%s FW feature doesn't exist!\n", name);
+        }
+        else
+        {
+            /* Get feature variant */
+            if (EOK == pfe_fw_feature_get_variant(fw_feature, &variant))
+            {
+                if (variant != 1U)
+                {
+                    NXP_LOG_ERROR("%s FW feature has invalid variant!\n", name);
+                    ret = EINVAL;
+                }
+                else
+                {
+                    /* Enable feature */
+                    ret = pfe_fw_feature_set_val(fw_feature, 1U);
+                    if(EOK != ret)
+                    {
+                        NXP_LOG_ERROR("%s FW feature can't be enabled!\n", name);
+                    }
+                }
+            }
+        }
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+    }
+#endif
+
+	return ret;
 }
 
 /**
  * @brief		Create L2 bridge instance
  * @param[in]	class The classifier instance
  * @param[in]	def_vlan Default VLAN
+ * @param[in]	def_aging_time Default aging timeout in seconds.
  * @param[in]	mac_table The MAC table instance
  * @param[in]	vlan_table The VLAN table instance
  * @return		The instance or NULL if failed
  */
-pfe_l2br_t *pfe_l2br_create(pfe_class_t *class, uint16_t def_vlan, pfe_l2br_table_t *mac_table, pfe_l2br_table_t *vlan_table)
+pfe_l2br_t *pfe_l2br_create(pfe_class_t *class, uint16_t def_vlan, uint16_t def_aging_time, pfe_l2br_table_t *mac_table, pfe_l2br_table_t *vlan_table)
 {
 	pfe_l2br_t *bridge;
 
@@ -2248,7 +2160,7 @@ pfe_l2br_t *pfe_l2br_create(pfe_class_t *class, uint16_t def_vlan, pfe_l2br_tabl
 	}
 	else
 	{
-		memset(bridge, 0, sizeof(pfe_l2br_t));
+		(void)memset(bridge, 0, sizeof(pfe_l2br_t));
 		bridge->class = class;
 		bridge->mac_table = mac_table;
 		bridge->vlan_table = vlan_table;
@@ -2290,32 +2202,20 @@ pfe_l2br_t *pfe_l2br_create(pfe_class_t *class, uint16_t def_vlan, pfe_l2br_tabl
 		/*	Configure classifier */
 		(void)pfe_class_set_default_vlan(class, def_vlan);
 
-		/*	Create mbox */
-		bridge->mbox = oal_mbox_create();
-		if (NULL == bridge->mbox)
+		if (EOK != pfe_l2br_set_mac_aging_timeout(bridge->class, def_aging_time))
 		{
-			NXP_LOG_ERROR("MBox creation failed\n");
+			NXP_LOG_DEBUG("Could not set mac aging timeout\n");
 			goto free_and_fail;
 		}
-		/*	Do the aging on host only when FW aging is off */
+
+		/*	If the FW aging is off, turn it on */
 		if (pfe_platform_class_feature_enabled(bridge->class, "l2_bridge_aging")==FALSE)
 		{
-
-			/*	Create worker thread */
-			bridge->worker = oal_thread_create(&pfe_l2br_worker_func, bridge, "l2br worker", 0);
-			if (NULL == bridge->worker)
+			if (EOK != pfe_platform_class_feature_enable(bridge->class, "l2_bridge_aging"))
 			{
-				NXP_LOG_ERROR("Couldn't start worker thread\n");
+				NXP_LOG_ERROR("Could not enable L2 bridge aging FW feature\n");
 				goto free_and_fail;
 			}
-			else
-			{
-				if (EOK != oal_mbox_attach_timer(bridge->mbox, PFE_L2BR_CFG_TICK_PERIOD_SEC * 1000, SIG_TIMER_TICK))
-				{
-					NXP_LOG_ERROR("Unable to attach timer\n");
-					goto free_and_fail;
-				}
-			}
 		}
 	}
 
@@ -2335,57 +2235,30 @@ free_and_fail:
  */
 errno_t pfe_l2br_destroy(pfe_l2br_t *bridge)
 {
-	errno_t ret;
-
 	if (NULL != bridge)
 	{
-		if (NULL != bridge->mbox)
-		{
-			if (EOK != oal_mbox_detach_timer(bridge->mbox))
-			{
-				NXP_LOG_DEBUG("Could not detach timer\n");
-			}
-		}
-
-		if (NULL != bridge->worker)
-		{
-			NXP_LOG_INFO("Stopping bridge worker...\n");
-
-			ret = oal_mbox_send_signal(bridge->mbox, SIG_WORKER_STOP);
-			if (EOK != ret)
-			{
-				NXP_LOG_ERROR("Signal failed: %d\n", ret);
-			}
-			else
-			{
-				ret = oal_thread_join(bridge->worker, NULL);
-				if (EOK != ret)
-				{
-					NXP_LOG_ERROR("Can't join the worker thread: %d\n", ret);
-				}
-				else
-				{
-					NXP_LOG_INFO("L2 bridge worker stopped\n");
-				}
-			}
-		}
-
-		if (NULL != bridge->mbox)
-		{
-			oal_mbox_destroy(bridge->mbox);
-			bridge->mbox = NULL;
-		}
-
 		if (NULL != bridge->default_domain)
 		{
-			pfe_l2br_domain_destroy(bridge->default_domain);
-			bridge->default_domain = NULL;
+			if (EOK == pfe_l2br_domain_destroy(bridge->default_domain))
+            {
+                bridge->default_domain = NULL;
+            }
+			else
+            {
+                NXP_LOG_DEBUG("Could not destroy default domain\n");
+            }
 		}
 
 		if (NULL != bridge->fallback_domain)
 		{
-			pfe_l2br_domain_destroy(bridge->fallback_domain);
-			bridge->fallback_domain = NULL;
+			if (EOK == pfe_l2br_domain_destroy(bridge->fallback_domain))
+            {
+                bridge->fallback_domain = NULL;
+            }
+			else
+            {
+                NXP_LOG_DEBUG("Could not destroy fallback domain\n");
+            }
 		}
 
 		if (FALSE == LLIST_IsEmpty(&bridge->domains))
@@ -2420,7 +2293,7 @@ errno_t pfe_l2br_destroy(pfe_l2br_t *bridge)
  * @param[in]	bridge The bridge instance
  * @return		The domain instance or NULL if failed
  */
-__attribute__((pure)) pfe_l2br_domain_t *pfe_l2br_get_default_domain(pfe_l2br_t *bridge)
+__attribute__((pure)) pfe_l2br_domain_t *pfe_l2br_get_default_domain(const pfe_l2br_t *bridge)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == bridge))
@@ -2438,7 +2311,7 @@ __attribute__((pure)) pfe_l2br_domain_t *pfe_l2br_get_default_domain(pfe_l2br_t
  * @param[in]	bridge The bridge instance
  * @return		The domain instance or NULL if failed
  */
-__attribute__((pure)) pfe_l2br_domain_t *pfe_l2br_get_fallback_domain(pfe_l2br_t *bridge)
+__attribute__((pure)) pfe_l2br_domain_t *pfe_l2br_get_fallback_domain(const pfe_l2br_t *bridge)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == bridge))
@@ -2458,7 +2331,7 @@ __attribute__((pure)) pfe_l2br_domain_t *pfe_l2br_get_fallback_domain(pfe_l2br_t
  * @retval		TRUE Domain matches the criterion
  * @retval		FALSE Domain does not match the criterion
  */
-static bool_t pfe_l2br_domain_match_criterion(pfe_l2br_t *bridge, pfe_l2br_domain_t *domain)
+static bool_t pfe_l2br_domain_match_criterion(const pfe_l2br_t *bridge, pfe_l2br_domain_t *domain)
 {
 	bool_t match = FALSE;
 	LLIST_t *item;
@@ -2475,19 +2348,14 @@ static bool_t pfe_l2br_domain_match_criterion(pfe_l2br_t *bridge, pfe_l2br_domai
 	switch (bridge->cur_crit)
 	{
 		case L2BD_CRIT_ALL:
-		{
 			match = TRUE;
 			break;
-		}
 
 		case L2BD_CRIT_BY_VLAN:
-		{
 			match = (domain->vlan == bridge->cur_domain_crit_arg.vlan);
 			break;
-		}
 
 		case L2BD_BY_PHY_IF:
-		{
 			/*	Find out if domain contains given interface */
 			if (FALSE == LLIST_IsEmpty(&domain->ifaces))
 			{
@@ -2501,15 +2369,12 @@ static bool_t pfe_l2br_domain_match_criterion(pfe_l2br_t *bridge, pfe_l2br_domai
 					}
 				}
 			}
-
 			break;
-		}
 
 		default:
-		{
 			NXP_LOG_ERROR("Unknown criterion\n");
 			match = FALSE;
-		}
+            break;
 	}
 
 	return match;
@@ -2525,8 +2390,9 @@ static bool_t pfe_l2br_domain_match_criterion(pfe_l2br_t *bridge, pfe_l2br_domai
 pfe_l2br_domain_t *pfe_l2br_get_first_domain(pfe_l2br_t *bridge, pfe_l2br_domain_get_crit_t crit, void *arg)
 {
 	LLIST_t *item;
-	pfe_l2br_domain_t *domain;
+	pfe_l2br_domain_t *domain = NULL;
 	bool_t match = FALSE;
+    bool_t known_crit = TRUE;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == bridge))
@@ -2541,30 +2407,23 @@ pfe_l2br_domain_t *pfe_l2br_get_first_domain(pfe_l2br_t *bridge, pfe_l2br_domain
 	switch (bridge->cur_crit)
 	{
 		case L2BD_CRIT_ALL:
-		{
 			break;
-		}
 
 		case L2BD_CRIT_BY_VLAN:
-		{
 			bridge->cur_domain_crit_arg.vlan = (uint16_t)((addr_t)arg & 0xffffU);
 			break;
-		}
 
 		case L2BD_BY_PHY_IF:
-		{
 			bridge->cur_domain_crit_arg.phy_if = (pfe_phy_if_t *)arg;
 			break;
-		}
 
 		default:
-		{
 			NXP_LOG_ERROR("Unknown criterion\n");
-			return NULL;
-		}
+            known_crit = FALSE;
+            break;
 	}
 
-	if (FALSE == LLIST_IsEmpty(&bridge->domains))
+	if ((FALSE == LLIST_IsEmpty(&bridge->domains)) && (TRUE == known_crit))
 	{
 		/*	Get first matching entry */
 		LLIST_ForEach(item, &bridge->domains)
@@ -2648,6 +2507,44 @@ pfe_l2br_domain_t *pfe_l2br_get_next_domain(pfe_l2br_t *bridge)
 	}
 }
 
+/**
+ * @brief Configures the l2 bridge mac aging timeout
+ * @param[in] class The classifier instance
+ * @param[in] timeout Timeout time in seconds.
+ * @return Either EOK or error code.
+ */
+static errno_t pfe_l2br_set_mac_aging_timeout(pfe_class_t *class, const uint16_t timeout)
+{
+	pfe_ct_class_mmap_t mmap;
+	pfe_ct_misc_config_t misc_config;
+
+	errno_t ret = EOK;
+    uint32_t ff_addr;
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+	if (unlikely(NULL == class))
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+		return EINVAL;
+	}
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+	misc_config.l2_mac_aging_timeout = oal_htons(timeout);
+
+    /* Get the memory map */
+	/* All PEs share the same memory map therefore we can read
+	   arbitrary one (in this case 0U)
+	   Also mac aging algorithm will work only on core 0*/
+	ret = pfe_class_get_mmap(class, 0U, &mmap);
+	if(EOK == ret)
+	{
+        /* Get the misc address */
+        ff_addr = oal_ntohl(mmap.common.misc_config);
+        /* Write new address of misc config */
+        ret = pfe_class_write_dmem(class, 0, (addr_t)ff_addr, (void *)&misc_config, sizeof(pfe_ct_misc_config_t));
+    }
+    return ret;
+}
+
 /**
  * @brief		Return L2 Bridge runtime statistics in text form
  * @details		Function writes formatted text into given buffer.
@@ -2657,7 +2554,7 @@ pfe_l2br_domain_t *pfe_l2br_get_next_domain(pfe_l2br_t *bridge)
  * @param[in]	verb_level 	Verbosity level
  * @return		Number of bytes written to the buffer
  */
-uint32_t pfe_l2br_get_text_statistics(pfe_l2br_t *bridge, char_t *buf, uint32_t buf_len, uint8_t verb_level)
+uint32_t pfe_l2br_get_text_statistics(const pfe_l2br_t *bridge, char_t *buf, uint32_t buf_len, uint8_t verb_level)
 {
     uint32_t len = 0U;
     pfe_l2br_table_entry_t *entry;
@@ -2665,6 +2562,9 @@ uint32_t pfe_l2br_get_text_statistics(pfe_l2br_t *bridge, char_t *buf, uint32_t
     errno_t ret;
     uint32_t count = 0U;
 
+	/* We keep unused parameter verb_level for consistency with rest of the *_get_text_statistics() functions */
+	(void)verb_level;
+    
     /* Get memory */
     entry = pfe_l2br_table_entry_create(bridge->mac_table);
     /* Get the first entry */
@@ -2682,6 +2582,6 @@ uint32_t pfe_l2br_get_text_statistics(pfe_l2br_t *bridge, char_t *buf, uint32_t
     len += oal_util_snprintf(buf + len, buf_len - len, "\nEntries count: %u\n", count);
     /* Free memory */
     (void)pfe_l2br_table_entry_destroy(entry);
-    pfe_l2br_iterator_destroy(l2t_iter);
+    (void)pfe_l2br_iterator_destroy(l2t_iter);
     return len;
 }
diff --git a/sw/pfe_platform/src/pfe_l2br_table.c b/sw/pfe_platform/src/pfe_l2br_table.c
index 10daa62..12b2f82 100644
--- a/sw/pfe_platform/src/pfe_l2br_table.c
+++ b/sw/pfe_platform/src/pfe_l2br_table.c
@@ -17,12 +17,12 @@
 #include "pfe_l2br_table_csr.h"
 
 /*	MAC address type must be 48-bits long */
-ct_assert(sizeof(pfe_mac_addr_t) * 8 == 48);
+ct_assert((sizeof(pfe_mac_addr_t) * 8) == 48);
 
 /**
  * @brief HASH registers associated with a table
  */
-typedef struct __pfe_mac_table_regs_tag
+typedef struct 
 {
 	addr_t cmd_reg;				/* REQ1_CMD_REG */
 	addr_t mac1_addr_reg;		/* REQ1_MAC1_ADDR_REG */
@@ -62,7 +62,7 @@ struct __pfe_l2br_table_iterator_tag
 /**
  * @brief	2-field MAC table entry
  */
-typedef struct __attribute__((packed)) __pfe_mac2f_table_entry_tag
+typedef struct __attribute__((packed, aligned(4))) 
 {
 	pfe_mac_addr_t mac;										/*!< [47:0]												*/
 	uint32_t vlan 								: 13;		/*!< [60:48]											*/
@@ -103,7 +103,7 @@ typedef enum
 /**
  * @brief	VLAN table entry
  */
-typedef struct __attribute__((packed)) __pfe_vlan_table_entry_tag
+typedef struct __attribute__((packed, aligned(4)))
 {
 	uint32_t vlan			: 13;	/*!< [12:0]											*/
 	uint64_t action_data	: 55;	/*!< [67:13], see pfe_vlan_table_action_entry_t		*/
@@ -146,7 +146,7 @@ struct __pfe_l2br_table_entry_tag
 	{
 		pfe_mac2f_table_entry_t mac2f_entry;
 		pfe_vlan_table_entry_t vlan_entry;
-	};
+	} u;
 
 	pfe_l2br_table_type_t type;
 	bool_t action_data_set;
@@ -155,12 +155,13 @@ struct __pfe_l2br_table_entry_tag
 };
 
 static errno_t pfe_l2br_table_init_cmd(pfe_l2br_table_t *l2br);
-static errno_t pfe_l2br_table_write_cmd(pfe_l2br_table_t *l2br, uint16_t addr, pfe_l2br_table_entry_t *entry);
-static errno_t pfe_l2br_table_read_cmd(pfe_l2br_table_t *l2br, uint16_t addr, pfe_l2br_table_entry_t *entry);
-static errno_t pfe_l2br_wait_for_cmd_done(pfe_l2br_table_t *l2br, uint32_t *status_val);
-static errno_t pfe_l2br_entry_to_cmd_args(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry);
-static uint32_t pfe_l2br_table_get_col_ptr(pfe_l2br_table_entry_t *entry);
-static bool_t pfe_l2br_table_entry_match_criterion(pfe_l2br_table_t *l2br, pfe_l2br_table_iterator_t *l2t_iter, pfe_l2br_table_entry_t *entry);
+static errno_t pfe_l2br_table_write_cmd(pfe_l2br_table_t *l2br, uint32_t addr, pfe_l2br_table_entry_t *entry);
+static errno_t pfe_l2br_table_read_cmd(pfe_l2br_table_t *l2br, uint32_t addr, pfe_l2br_table_entry_t *entry);
+static errno_t pfe_l2br_wait_for_cmd_done(const pfe_l2br_table_t *l2br, uint32_t *status_val);
+static errno_t pfe_l2br_entry_to_cmd_args(const pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry);
+static uint32_t pfe_l2br_table_get_col_ptr(const pfe_l2br_table_entry_t *entry);
+static void pfe_l2br_get_data(const pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry);
+static bool_t pfe_l2br_table_entry_match_criterion(const pfe_l2br_table_t *l2br, const pfe_l2br_table_iterator_t *l2t_iter, const pfe_l2br_table_entry_t *entry);
 
 /**
  * @brief		Match entry with latest criterion provided via pfe_l2br_table_get_first()
@@ -169,7 +170,7 @@ static bool_t pfe_l2br_table_entry_match_criterion(pfe_l2br_table_t *l2br, pfe_l
  * @retval		True Entry matches the criterion
  * @retval		False Entry does not match the criterion
  */
-static bool_t pfe_l2br_table_entry_match_criterion(pfe_l2br_table_t *l2br, pfe_l2br_table_iterator_t *l2t_iter, pfe_l2br_table_entry_t *entry)
+static bool_t pfe_l2br_table_entry_match_criterion(const pfe_l2br_table_t *l2br, const pfe_l2br_table_iterator_t *l2t_iter, const pfe_l2br_table_entry_t *entry)
 {
 	bool_t match = FALSE;
 
@@ -195,13 +196,13 @@ static bool_t pfe_l2br_table_entry_match_criterion(pfe_l2br_table_t *l2br, pfe_l
 			{
 				case PFE_L2BR_TABLE_MAC2F:
 				{
-					match = (0U != (entry->mac2f_entry.flags & MAC2F_ENTRY_VALID_FLAG));
+					match = (0U != (entry->u.mac2f_entry.flags & (uint32_t)MAC2F_ENTRY_VALID_FLAG));
 					break;
 				}
 
 				case PFE_L2BR_TABLE_VLAN:
 				{
-					match = (0U != (entry->vlan_entry.flags & VLAN_ENTRY_VALID_FLAG));
+					match = (0U != (entry->u.vlan_entry.flags & (uint32_t)VLAN_ENTRY_VALID_FLAG));
 					break;
 				}
 
@@ -225,12 +226,34 @@ static bool_t pfe_l2br_table_entry_match_criterion(pfe_l2br_table_t *l2br, pfe_l
 	return match;
 }
 
+/**
+ * @brief		Get action data
+ */
+static void pfe_l2br_get_data(const pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry)
+{
+    uint64_t vlan_action_data;
+    uint32_t mac_action_data;
+    
+    /*	Get action data */
+    if (PFE_L2BR_TABLE_MAC2F == l2br->type)
+    {
+        mac_action_data = hal_read32(l2br->regs.entry_reg) & 0x7fffffffU;
+        entry->u.mac2f_entry.action_data = mac_action_data;
+    }
+    else 
+    {
+        vlan_action_data = (uint64_t)hal_read32(l2br->regs.entry_reg);
+        vlan_action_data |= ((uint64_t)hal_read32(l2br->regs.direct_reg) << 32U);
+        entry->u.vlan_entry.action_data = (vlan_action_data & 0x7fffffffffffffULL);
+    }
+}
+
 /**
  * @brief		Get collision pointer
  * @param[in]	entry The table entry instance
  * @return		Collision pointer or 0 if not found
  */
-static uint32_t pfe_l2br_table_get_col_ptr(pfe_l2br_table_entry_t *entry)
+static uint32_t pfe_l2br_table_get_col_ptr(const pfe_l2br_table_entry_t *entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -244,9 +267,9 @@ static uint32_t pfe_l2br_table_get_col_ptr(pfe_l2br_table_entry_t *entry)
 	{
 		case PFE_L2BR_TABLE_MAC2F:
 		{
-			if (entry->mac2f_entry.flags & MAC2F_ENTRY_COL_PTR_VALID_FLAG)
+			if (0U != (entry->u.mac2f_entry.flags & (uint32_t)MAC2F_ENTRY_COL_PTR_VALID_FLAG))
 			{
-				return entry->mac2f_entry.col_ptr;
+				return entry->u.mac2f_entry.col_ptr;
 			}
 
 			break;
@@ -254,9 +277,9 @@ static uint32_t pfe_l2br_table_get_col_ptr(pfe_l2br_table_entry_t *entry)
 
 		case PFE_L2BR_TABLE_VLAN:
 		{
-			if (entry->vlan_entry.flags & VLAN_ENTRY_COL_PTR_VALID_FLAG)
+			if (0U != (entry->u.vlan_entry.flags & (uint32_t)VLAN_ENTRY_COL_PTR_VALID_FLAG))
 			{
-				return entry->vlan_entry.col_ptr;
+				return entry->u.vlan_entry.col_ptr;
 			}
 
 			break;
@@ -280,7 +303,7 @@ static uint32_t pfe_l2br_table_get_col_ptr(pfe_l2br_table_entry_t *entry)
  * @retval		EOK Success
  * @retval		EINVAL Invalid/missing argument
  */
-static errno_t pfe_l2br_entry_to_cmd_args(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry)
+static errno_t pfe_l2br_entry_to_cmd_args(const pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry)
 {
 	uint32_t *entry32 = (uint32_t *)entry;
 	uint64_t action_data = 0ULL;
@@ -298,20 +321,20 @@ static errno_t pfe_l2br_entry_to_cmd_args(pfe_l2br_table_t *l2br, pfe_l2br_table
 	{
 		/*	Write MAC (in network byte order) and VLAN */
 		hal_write32(oal_htonl(entry32[0]), l2br->regs.mac1_addr_reg);
-		hal_write32(oal_htons(entry32[1] & 0x0000ffffU) | (entry32[1] & 0xffff0000U), l2br->regs.mac2_addr_reg);
+		hal_write32((uint32_t)oal_htons(entry32[1] & 0x0000ffffU) | (entry32[1] & 0xffff0000U), l2br->regs.mac2_addr_reg);
 
 		/*	Write action entry */
-		hal_write32(entry->mac2f_entry.action_data & 0x7fffffffU, l2br->regs.entry_reg);
+		hal_write32(entry->u.mac2f_entry.action_data & 0x7fffffffU, l2br->regs.entry_reg);
 	}
 	else if (PFE_L2BR_TABLE_VLAN == l2br->type)
 	{
 		/*	Write VLAN */
-		hal_write32(entry->vlan_entry.vlan, l2br->regs.mac1_addr_reg);
+		hal_write32(entry->u.vlan_entry.vlan, l2br->regs.mac1_addr_reg);
 
 		/*	Write action entry */
-		action_data = entry->vlan_entry.action_data & 0xffffffffU;
+		action_data = entry->u.vlan_entry.action_data & 0xffffffffU;
 		hal_write32(action_data, l2br->regs.entry_reg);
-		action_data = (entry->vlan_entry.action_data >> 32) & 0x7fffffU;
+		action_data = (entry->u.vlan_entry.action_data >> 32U) & 0x7fffffU;
 		hal_write32(action_data, l2br->regs.direct_reg);
 	}
 	else
@@ -357,7 +380,7 @@ static errno_t pfe_l2br_table_do_update_entry_nolock(pfe_l2br_table_t *l2br, pfe
 			return EINVAL;
 		}
 
-		cmd = L2BR_CMD_UPDATE | ((entry->mac2f_entry.field_valids & 0x1fU) << 8) | (0 << 13);
+		cmd = (uint32_t)L2BR_CMD_UPDATE | (((uint32_t)entry->u.mac2f_entry.field_valids & 0x1fU) << 8U);
 	}
 	else if (PFE_L2BR_TABLE_VLAN == l2br->type)
 	{
@@ -367,7 +390,7 @@ static errno_t pfe_l2br_table_do_update_entry_nolock(pfe_l2br_table_t *l2br, pfe
 			return EINVAL;
 		}
 
-		cmd = L2BR_CMD_UPDATE | ((entry->vlan_entry.field_valids & 0x1fU) << 8) | (0 << 13);
+		cmd = (uint32_t)L2BR_CMD_UPDATE | (((uint32_t)entry->u.vlan_entry.field_valids & 0x1fU) << 8U);
 	}
 	else
 	{
@@ -433,7 +456,7 @@ static errno_t pfe_l2br_table_do_del_entry_nolock(pfe_l2br_table_t *l2br, pfe_l2
 			return EINVAL;
 		}
 
-		cmd = L2BR_CMD_DELETE | ((entry->mac2f_entry.field_valids & 0x1fU) << 8) | (0 << 13);
+		cmd = (uint32_t)L2BR_CMD_DELETE | (((uint32_t)entry->u.mac2f_entry.field_valids & 0x1fU) << 8U);
 	}
 	else if (PFE_L2BR_TABLE_VLAN == l2br->type)
 	{
@@ -443,7 +466,7 @@ static errno_t pfe_l2br_table_do_del_entry_nolock(pfe_l2br_table_t *l2br, pfe_l2
 			return EINVAL;
 		}
 
-		cmd = L2BR_CMD_DELETE | ((entry->vlan_entry.field_valids & 0x1fU) << 8) | (0 << 13);
+		cmd = (uint32_t)L2BR_CMD_DELETE | (((uint32_t)entry->u.vlan_entry.field_valids & 0x1fU) << 8U);
 	}
 	else
 	{
@@ -475,68 +498,72 @@ static errno_t pfe_l2br_table_do_del_entry_nolock(pfe_l2br_table_t *l2br, pfe_l2
 static errno_t pfe_l2br_table_do_add_entry_nolock(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry)
 {
 	uint32_t status, cmd;
-	errno_t ret;
+	errno_t ret = EINVAL;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == l2br) || (NULL == entry)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
-		return EINVAL;
 	}
+    else
+    {
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	/*	Prepare command arguments */
-	ret = pfe_l2br_entry_to_cmd_args(l2br, entry);
-	if (EOK != ret)
-	{
-		NXP_LOG_ERROR("Entry-to-args conversion failed: %d\n", ret);
-		return ret;
-	}
-
-	/*	Argument registers are prepared. Compile the ADD command. */
-	if (PFE_L2BR_TABLE_MAC2F == l2br->type)
-	{
-		if (((FALSE == entry->mac_addr_set) && (FALSE == entry->vlan_set))
-				|| (FALSE == entry->action_data_set))
-		{
-			NXP_LOG_DEBUG("MAC/VLAN and action must be set\n");
-			return EINVAL;
-		}
-
-		cmd = L2BR_CMD_ADD | ((entry->mac2f_entry.field_valids & 0x1fU) << 8) | (0 << 13) | (entry->mac2f_entry.port << 16);
-	}
-	else if (PFE_L2BR_TABLE_VLAN == l2br->type)
-	{
-		if ((FALSE == entry->vlan_set) || (FALSE == entry->action_data_set))
-		{
-			NXP_LOG_DEBUG("VLAN and action must be set\n");
-			return EINVAL;
-		}
-
-		cmd = L2BR_CMD_ADD | ((entry->vlan_entry.field_valids & 0x1fU) << 8) | (0 << 13) | (entry->vlan_entry.port << 16);
-	}
-	else
-	{
-		NXP_LOG_ERROR("Invalid table type\n");
-		return EINVAL;
-	}
-
-	/*	Issue the ADD command */
-	hal_write32(cmd, l2br->regs.cmd_reg);
-
-	ret = pfe_l2br_wait_for_cmd_done(l2br, &status);
-	if (EOK != ret)
-	{
-		return ret;
-	}
-
-	if (0U == (status & STATUS_REG_SIG_ENTRY_ADDED))
-	{
-		NXP_LOG_ERROR("Table entry ADD CMD failed\n");
-		return ENOEXEC;
-	}
+        /*	Prepare command arguments */
+        ret = pfe_l2br_entry_to_cmd_args(l2br, entry);
+        if (EOK != ret)
+        {
+            NXP_LOG_ERROR("Entry-to-args conversion failed: %d\n", ret);
+            return ret;
+        }
+
+        /*	Argument registers are prepared. Compile the ADD command. */
+        if (PFE_L2BR_TABLE_MAC2F == l2br->type)
+        {
+            if (((FALSE == entry->mac_addr_set) && (FALSE == entry->vlan_set))
+                    || (FALSE == entry->action_data_set))
+            {
+                NXP_LOG_DEBUG("MAC/VLAN and action must be set\n");
+                return EINVAL;
+            }
+
+            cmd = (uint32_t)L2BR_CMD_ADD | ((entry->u.mac2f_entry.field_valids & 0x1fU) << 8U) | (entry->u.mac2f_entry.port << 16U);
+        }
+        else if (PFE_L2BR_TABLE_VLAN == l2br->type)
+        {
+            if ((FALSE == entry->vlan_set) || (FALSE == entry->action_data_set))
+            {
+                NXP_LOG_DEBUG("VLAN and action must be set\n");
+                return EINVAL;
+            }
+
+            cmd = (uint32_t)L2BR_CMD_ADD | ((entry->u.vlan_entry.field_valids & 0x1fU) << 8U) | (entry->u.vlan_entry.port << 16U);
+        }
+        else
+        {
+            NXP_LOG_ERROR("Invalid table type\n");
+            return EINVAL;
+        }
+
+        /*	Issue the ADD command */
+        hal_write32(cmd, l2br->regs.cmd_reg);
+
+        ret = pfe_l2br_wait_for_cmd_done(l2br, &status);
+        if (EOK != ret)
+        {
+            return ret;
+        }
+
+        if (0U == (status & STATUS_REG_SIG_ENTRY_ADDED))
+        {
+            NXP_LOG_ERROR("Table entry ADD CMD failed\n");
+            return ENOEXEC;
+        }
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+    }
+#endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	return EOK;
+	return ret;
 }
 
 /**
@@ -546,90 +573,79 @@ static errno_t pfe_l2br_table_do_add_entry_nolock(pfe_l2br_table_t *l2br, pfe_l2
 static errno_t pfe_l2br_table_do_search_entry_nolock(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry)
 {
 	uint32_t status, cmd;
-	errno_t ret;
-	uint64_t action_data = 0ULL;
+	errno_t ret = EINVAL;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == l2br) || (NULL == entry)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
-		return EINVAL;
 	}
+    else
+    {
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	/*	Prepare command arguments */
-	ret = pfe_l2br_entry_to_cmd_args(l2br, entry);
-	if (EOK != ret)
-	{
-		NXP_LOG_ERROR("Entry-to-args conversion failed: %d\n", ret);
-		return ret;
-	}
-
-	/*	Argument registers are prepared. Compile the SEARCH command. */
-	if (PFE_L2BR_TABLE_MAC2F == l2br->type)
-	{
-		if ((FALSE == entry->mac_addr_set) && (FALSE == entry->vlan_set))
-		{
-			NXP_LOG_DEBUG("MAC or VLAN must be set\n");
-			return EINVAL;
-		}
-
-		cmd = L2BR_CMD_SEARCH | ((entry->mac2f_entry.field_valids & 0x1fU) << 8) | (0 << 13) | (entry->mac2f_entry.port << 16);
-	}
-	else if (PFE_L2BR_TABLE_VLAN == l2br->type)
-	{
-		if (FALSE == entry->vlan_set)
-		{
-			NXP_LOG_DEBUG("VLAN must be set\n");
-			return EINVAL;
-		}
-
-		cmd = L2BR_CMD_SEARCH | ((entry->vlan_entry.field_valids & 0x1fU) << 8) | (0 << 13) | (entry->vlan_entry.port << 16);
-	}
-	else
-	{
-		NXP_LOG_ERROR("Invalid table type\n");
-		return EINVAL;
-	}
-
-	/*	Issue the SEARCH command */
-	hal_write32(cmd, l2br->regs.cmd_reg);
-
-	ret = pfe_l2br_wait_for_cmd_done(l2br, &status);
-	if (EOK != ret)
-	{
-		return ret;
-	}
-
-	if (0U != (status & STATUS_REG_SIG_ENTRY_NOT_FOUND))
-	{
-		NXP_LOG_DEBUG("L2BR table entry not found\n");
-		return ENOENT;
-	}
-
-	if (0U == (status & STATUS_REG_MATCH))
-	{
-		NXP_LOG_DEBUG("L2BR table entry mismatch\n");
-		return ENOENT;
-	}
+        /*	Prepare command arguments */
+        ret = pfe_l2br_entry_to_cmd_args(l2br, entry);
+        if (EOK != ret)
+        {
+            NXP_LOG_ERROR("Entry-to-args conversion failed: %d\n", ret);
+            return ret;
+        }
+
+        /*	Argument registers are prepared. Compile the SEARCH command. */
+        if (PFE_L2BR_TABLE_MAC2F == l2br->type)
+        {
+            if ((FALSE == entry->mac_addr_set) && (FALSE == entry->vlan_set))
+            {
+                NXP_LOG_DEBUG("MAC or VLAN must be set\n");
+                return EINVAL;
+            }
+
+            cmd = (uint32_t)L2BR_CMD_SEARCH | ((entry->u.mac2f_entry.field_valids & 0x1fU) << 8U) | (entry->u.mac2f_entry.port << 16U);
+        }
+        else if (PFE_L2BR_TABLE_VLAN == l2br->type)
+        {
+            if (FALSE == entry->vlan_set)
+            {
+                NXP_LOG_DEBUG("VLAN must be set\n");
+                return EINVAL;
+            }
+
+            cmd = (uint32_t)L2BR_CMD_SEARCH | ((entry->u.vlan_entry.field_valids & 0x1fU) << 8U) | (entry->u.vlan_entry.port << 16U);
+        }
+        else
+        {
+            NXP_LOG_ERROR("Invalid table type\n");
+            return EINVAL;
+        }
+
+        /*	Issue the SEARCH command */
+        hal_write32(cmd, l2br->regs.cmd_reg);
+
+        ret = pfe_l2br_wait_for_cmd_done(l2br, &status);
+        if (EOK != ret)
+        {
+            return ret;
+        }
+
+        if (0U != (status & STATUS_REG_SIG_ENTRY_NOT_FOUND))
+        {
+            NXP_LOG_DEBUG("L2BR table entry not found\n");
+            return ENOENT;
+        }
+
+        if (0U == (status & STATUS_REG_MATCH))
+        {
+            NXP_LOG_DEBUG("L2BR table entry mismatch\n");
+            return ENOENT;
+        }
+        
+        pfe_l2br_get_data(l2br, entry);
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+    }
+#endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	/*	Get action data */
-	if (PFE_L2BR_TABLE_MAC2F == l2br->type)
-	{
-		action_data = hal_read32(l2br->regs.entry_reg) & 0x7fffffffU;
-		entry->mac2f_entry.action_data = action_data;
-	}
-	else if (PFE_L2BR_TABLE_VLAN == l2br->type)
-	{
-		action_data = hal_read32(l2br->regs.entry_reg);
-		action_data |= ((uint64_t)hal_read32(l2br->regs.direct_reg) << 32);
-		entry->vlan_entry.action_data = (action_data & 0x7fffffffffffffULL);
-	}
-	else
-	{
-		;
-	}
-	return EOK;
+	return ret;
 }
 
 
@@ -764,7 +780,7 @@ pfe_l2br_table_iterator_t *pfe_l2br_iterator_create(void)
 	loop_inst->cur_hash_addr = 0;
 	loop_inst->cur_coll_addr = 0;
 	loop_inst->next_coll_addr = 0;
-	loop_inst->cur_crit = 0;
+	loop_inst->cur_crit = L2BR_TABLE_CRIT_ALL;
 
 	return loop_inst;
 }
@@ -774,7 +790,7 @@ pfe_l2br_table_iterator_t *pfe_l2br_iterator_create(void)
  * @param[in]		inst Iterator instance to be destroyed
  * @retval			EOK on success
  */
-errno_t pfe_l2br_iterator_destroy(pfe_l2br_table_iterator_t *inst)
+errno_t pfe_l2br_iterator_destroy(const pfe_l2br_table_iterator_t *inst)
 {
 	oal_mm_free(inst);
 	return EOK;
@@ -792,13 +808,18 @@ errno_t pfe_l2br_iterator_destroy(pfe_l2br_table_iterator_t *inst)
 
 errno_t pfe_l2br_iterator_halt(pfe_l2br_table_iterator_t *inst)
 {
-
-	if ((inst->cur_hash_addr > 0) && (inst->next_coll_addr != 0))
-		inst->cur_hash_addr--;
+    errno_t ret = ENOENT;
+    
+	if ((inst->cur_hash_addr > 0U) && (inst->next_coll_addr != 0U))
+    {
+        inst->cur_hash_addr--;
 
         inst->next_coll_addr = inst->cur_coll_addr;
+        
+        ret = EOK;
+    }
 
-        return EOK;
+    return ret;
 }
 
 /**
@@ -832,7 +853,7 @@ errno_t pfe_l2br_table_get_first(pfe_l2br_table_t *l2br, pfe_l2br_table_iterator
 		ret = pfe_l2br_table_read_cmd(l2br, l2t_iter->cur_hash_addr, entry);
 		if (EOK != ret)
 		{
-			NXP_LOG_DEBUG("Can not read table entry from location %d\n", l2t_iter->cur_hash_addr);
+			NXP_LOG_DEBUG("Can not read table entry from location %d\n", (int_t)l2t_iter->cur_hash_addr);
 			break;
 		}
 		else
@@ -862,7 +883,7 @@ errno_t pfe_l2br_table_get_first(pfe_l2br_table_t *l2br, pfe_l2br_table_iterator
  */
 errno_t pfe_l2br_table_get_next(pfe_l2br_table_t *l2br, pfe_l2br_table_iterator_t *l2t_iter, pfe_l2br_table_entry_t *entry)
 {
-	uint32_t ret;
+	errno_t ret;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == l2br) || (NULL == entry)))
@@ -913,7 +934,7 @@ errno_t pfe_l2br_table_get_next(pfe_l2br_table_t *l2br, pfe_l2br_table_iterator_
  * @retval		EOK Success
  * @retval		ETIMEDOUT Timed out
  */
-static errno_t pfe_l2br_wait_for_cmd_done(pfe_l2br_table_t *l2br, uint32_t *status_val)
+static errno_t pfe_l2br_wait_for_cmd_done(const pfe_l2br_table_t *l2br, uint32_t *status_val)
 {
 	uint32_t ii = 100U;
 
@@ -965,7 +986,7 @@ static errno_t pfe_l2br_wait_for_cmd_done(pfe_l2br_table_t *l2br, uint32_t *stat
  * @retval		EINVAL Invalid/missing argument
  * @retval		ETIMEDOUT Command timed-out
  */
-static errno_t pfe_l2br_table_write_cmd(pfe_l2br_table_t *l2br, uint16_t addr, pfe_l2br_table_entry_t *entry)
+static errno_t pfe_l2br_table_write_cmd(pfe_l2br_table_t *l2br, uint32_t addr, pfe_l2br_table_entry_t *entry)
 {
 	uint32_t *wdata = (uint32_t *)entry;
 
@@ -977,21 +998,21 @@ static errno_t pfe_l2br_table_write_cmd(pfe_l2br_table_t *l2br, uint16_t addr, p
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	if (addr >= (l2br->hash_space_depth + l2br->coll_space_depth))
+	if (addr >= ((uint32_t)l2br->hash_space_depth + l2br->coll_space_depth))
 	{
-		NXP_LOG_ERROR("Hash table address 0x%x is out of range\n", addr);
+		NXP_LOG_ERROR("Hash table address 0x%x is out of range\n",(uint_t)addr);
 		return EINVAL;
 	}
 
 	if (PFE_L2BR_TABLE_MAC2F == l2br->type)
 	{
 		ct_assert(sizeof(pfe_mac2f_table_entry_t) == 16);
-		wdata = (uint32_t *)&entry->mac2f_entry;
+		wdata = (uint32_t *)&entry->u.mac2f_entry;
 	}
 	else if (PFE_L2BR_TABLE_VLAN == l2br->type)
 	{
 		ct_assert(sizeof(pfe_vlan_table_entry_t) == 16);
-		wdata = (uint32_t *)&entry->vlan_entry;
+		wdata = (uint32_t *)&entry->u.vlan_entry;
 	}
 	else
 	{
@@ -1005,7 +1026,7 @@ static errno_t pfe_l2br_table_write_cmd(pfe_l2br_table_t *l2br, uint16_t addr, p
 	hal_write32(wdata[2], l2br->regs.mac3_addr_reg);	/* wdata[95:64]   */
 	hal_write32(wdata[3], l2br->regs.mac4_addr_reg);	/* wdata[127:96]  */
 
-	hal_write32(L2BR_CMD_MEM_WRITE | (addr << 16), l2br->regs.cmd_reg);
+	hal_write32((uint32_t)L2BR_CMD_MEM_WRITE | (addr << 16U), l2br->regs.cmd_reg);
 
 	return pfe_l2br_wait_for_cmd_done(l2br, NULL);
 }
@@ -1020,7 +1041,7 @@ static errno_t pfe_l2br_table_write_cmd(pfe_l2br_table_t *l2br, uint16_t addr, p
  * @retval		EINVAL Invalid/missing argument
  * @retval		ETIMEDOUT Command timed-out
  */
-static errno_t pfe_l2br_table_read_cmd(pfe_l2br_table_t *l2br, uint16_t addr, pfe_l2br_table_entry_t *entry)
+static errno_t pfe_l2br_table_read_cmd(pfe_l2br_table_t *l2br, uint32_t addr, pfe_l2br_table_entry_t *entry)
 {
 	errno_t ret;
 	uint32_t *rdata;
@@ -1033,21 +1054,21 @@ static errno_t pfe_l2br_table_read_cmd(pfe_l2br_table_t *l2br, uint16_t addr, pf
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	if (addr >= (l2br->hash_space_depth + l2br->coll_space_depth))
+	if (addr >= ((uint32_t)l2br->hash_space_depth + l2br->coll_space_depth))
 	{
-		NXP_LOG_ERROR("Hash table address 0x%x is out of range\n", addr);
+		NXP_LOG_ERROR("Hash table address 0x%x is out of range\n", (uint_t)addr);
 		return EINVAL;
 	}
 
 	if (PFE_L2BR_TABLE_MAC2F == l2br->type)
 	{
 		ct_assert(sizeof(pfe_mac2f_table_entry_t) == 16);
-		rdata = (uint32_t *)&entry->mac2f_entry;
+		rdata = (uint32_t *)&entry->u.mac2f_entry;
 	}
 	else if (PFE_L2BR_TABLE_VLAN == l2br->type)
 	{
 		ct_assert(sizeof(pfe_vlan_table_entry_t) == 16);
-		rdata = (uint32_t *)&entry->vlan_entry;
+		rdata = (uint32_t *)&entry->u.vlan_entry;
 	}
 	else
 	{
@@ -1056,7 +1077,7 @@ static errno_t pfe_l2br_table_read_cmd(pfe_l2br_table_t *l2br, uint16_t addr, pf
 	}
 
 	/*	Issue the READ command */
-	hal_write32(L2BR_CMD_MEM_READ | (addr << 16), l2br->regs.cmd_reg);
+	hal_write32((uint32_t)L2BR_CMD_MEM_READ | ((uint32_t)addr << 16), l2br->regs.cmd_reg);
 
 	ret = pfe_l2br_wait_for_cmd_done(l2br, NULL);
 	if (EOK != ret)
@@ -1078,8 +1099,8 @@ static errno_t pfe_l2br_table_read_cmd(pfe_l2br_table_t *l2br, uint16_t addr, pf
 		rdata[4] = hal_read32(l2br->regs.mac5_addr_reg);
 		rdata[5] = hal_read32(l2br->regs.entry_reg);
 
-		memcpy(&entry->mac2f_entry.mac[0], &data32, sizeof(uint32_t));
-		memcpy(&entry->mac2f_entry.mac[4], &data16, sizeof(uint16_t));
+		(void)memcpy(&entry->u.mac2f_entry.mac[0], &data32, sizeof(uint32_t));
+		(void)memcpy(&entry->u.mac2f_entry.mac[4], &data16, sizeof(uint16_t));
 
 		entry->mac_addr_set = TRUE;
 	}
@@ -1137,13 +1158,13 @@ static errno_t pfe_l2br_table_init_cmd(pfe_l2br_table_t *l2br)
 	{
 		if (PFE_L2BR_TABLE_MAC2F == l2br->type)
 		{
-			entry.mac2f_entry.col_ptr = l2br->hash_space_depth + ii + 1U;
-			entry.mac2f_entry.flags = MAC2F_ENTRY_COL_PTR_VALID_FLAG;
+			entry.u.mac2f_entry.col_ptr = l2br->hash_space_depth + ii + 1U;
+			entry.u.mac2f_entry.flags = (uint32_t)MAC2F_ENTRY_COL_PTR_VALID_FLAG;
 		}
 		else if (PFE_L2BR_TABLE_VLAN == l2br->type)
 		{
-			entry.vlan_entry.col_ptr = l2br->hash_space_depth + ii + 1U;
-			entry.vlan_entry.flags = VLAN_ENTRY_COL_PTR_VALID_FLAG;
+			entry.u.vlan_entry.col_ptr = l2br->hash_space_depth + ii + 1U;
+			entry.u.vlan_entry.flags = (uint32_t)VLAN_ENTRY_COL_PTR_VALID_FLAG;
 		}
 		else
 		{
@@ -1160,7 +1181,7 @@ static errno_t pfe_l2br_table_init_cmd(pfe_l2br_table_t *l2br)
 	}
 
 	hal_write32(l2br->hash_space_depth, l2br->regs.free_head_ptr_reg);
-	hal_write32(l2br->hash_space_depth + l2br->coll_space_depth - 1U, l2br->regs.free_tail_ptr_reg);
+	hal_write32((uint32_t)l2br->hash_space_depth + l2br->coll_space_depth - 1U, l2br->regs.free_tail_ptr_reg);
 	hal_write32(l2br->coll_space_depth, l2br->regs.free_entries_reg);
 
 	return EOK;
@@ -1178,32 +1199,31 @@ static errno_t pfe_l2br_table_init_cmd(pfe_l2br_table_t *l2br)
 static errno_t pfe_l2br_table_flush_cmd(pfe_l2br_table_t *l2br)
 {
 	uint32_t cmd;
-
+    errno_t ret;
+    
 	/*	Prepare command arguments */
-	if (PFE_L2BR_TABLE_MAC2F == l2br->type)
-	{
-		cmd = L2BR_CMD_FLUSH | (1U << 14);
-	}
-	else if (PFE_L2BR_TABLE_VLAN == l2br->type)
+	if ((PFE_L2BR_TABLE_MAC2F == l2br->type) || (PFE_L2BR_TABLE_VLAN == l2br->type))
 	{
-		cmd = L2BR_CMD_FLUSH | (1U << 14);
+		cmd = (uint32_t)L2BR_CMD_FLUSH | ((uint32_t)1U << 14);
+        
+        hal_write32(0U, l2br->regs.mac1_addr_reg);
+        hal_write32(0U, l2br->regs.mac2_addr_reg);
+        hal_write32(0U, l2br->regs.mac3_addr_reg);
+        hal_write32(0U, l2br->regs.mac4_addr_reg);
+        hal_write32(0U, l2br->regs.mac5_addr_reg);
+
+        /*	Issue the FLUSH command */
+        hal_write32(cmd, l2br->regs.cmd_reg);
+        
+        ret = pfe_l2br_wait_for_cmd_done(l2br, NULL);
 	}
 	else
 	{
 		NXP_LOG_ERROR("Invalid table type\n");
-		return EINVAL;
+		ret = EINVAL;
 	}
 
-	hal_write32(0U, l2br->regs.mac1_addr_reg);
-	hal_write32(0U, l2br->regs.mac2_addr_reg);
-	hal_write32(0U, l2br->regs.mac3_addr_reg);
-	hal_write32(0U, l2br->regs.mac4_addr_reg);
-	hal_write32(0U, l2br->regs.mac5_addr_reg);
-
-	/*	Issue the FLUSH command */
-	hal_write32(cmd, l2br->regs.cmd_reg);
-
-	return pfe_l2br_wait_for_cmd_done(l2br, NULL);
+	return ret;
 }
 
 /**
@@ -1233,7 +1253,7 @@ pfe_l2br_table_t *pfe_l2br_table_create(addr_t cbus_base_va, pfe_l2br_table_type
 	}
 	else
 	{
-		memset(l2br, 0, sizeof(pfe_l2br_table_t));
+		(void)memset(l2br, 0, sizeof(pfe_l2br_table_t));
 		l2br->cbus_base_va = cbus_base_va;
 		l2br->type = type;
 	}
@@ -1262,8 +1282,8 @@ pfe_l2br_table_t *pfe_l2br_table_create(addr_t cbus_base_va, pfe_l2br_table_type
 			l2br->regs.free_entries_reg = l2br->cbus_base_va + HOST_MAC2F_FREE_LIST_ENTRIES;
 			l2br->regs.free_head_ptr_reg = l2br->cbus_base_va + HOST_MAC2F_FREE_LIST_HEAD_PTR;
 			l2br->regs.free_tail_ptr_reg = l2br->cbus_base_va + HOST_MAC2F_FREE_LIST_TAIL_PTR;
-			l2br->hash_space_depth = _MAC2F_TABLE_HASH_ENTRIES;
-			l2br->coll_space_depth = _MAC2F_TABLE_COLL_ENTRIES;
+			l2br->hash_space_depth = MAC2F_TABLE_HASH_ENTRIES;
+			l2br->coll_space_depth = MAC2F_TABLE_COLL_ENTRIES;
 			break;
 		}
 
@@ -1281,8 +1301,8 @@ pfe_l2br_table_t *pfe_l2br_table_create(addr_t cbus_base_va, pfe_l2br_table_type
 			l2br->regs.free_entries_reg = l2br->cbus_base_va + HOST_VLAN_FREE_LIST_ENTRIES;
 			l2br->regs.free_head_ptr_reg = l2br->cbus_base_va + HOST_VLAN_FREE_LIST_HEAD_PTR;
 			l2br->regs.free_tail_ptr_reg = l2br->cbus_base_va + HOST_VLAN_FREE_LIST_TAIL_PTR;
-			l2br->hash_space_depth = _VLAN_TABLE_HASH_ENTRIES;
-			l2br->coll_space_depth = _VLAN_TABLE_COLL_ENTRIES;
+			l2br->hash_space_depth = VLAN_TABLE_HASH_ENTRIES;
+			l2br->coll_space_depth = VLAN_TABLE_COLL_ENTRIES;
 			break;
 		}
 
@@ -1290,19 +1310,23 @@ pfe_l2br_table_t *pfe_l2br_table_create(addr_t cbus_base_va, pfe_l2br_table_type
 		{
 			NXP_LOG_ERROR("Invalid table type\n");
 			oal_mm_free(l2br);
-			return NULL;
+			l2br = NULL;
+            break;
 		}
 	}
-
-	/*	Initialize the table */
-	ret = pfe_l2br_table_init_cmd(l2br);
-	if (EOK != ret)
-	{
-		NXP_LOG_ERROR("Table initialization failed: %d\n", ret);
-		oal_mm_free(l2br);
-		l2br = NULL;
-	}
-
+    
+    if (NULL != l2br)
+    {
+        /*	Initialize the table */
+        ret = pfe_l2br_table_init_cmd(l2br);
+        if (EOK != ret)
+        {
+            NXP_LOG_ERROR("Table initialization failed: %d\n", ret);
+            oal_mm_free(l2br);
+            l2br = NULL;
+        }
+    }
+	
 	return l2br;
 }
 
@@ -1348,7 +1372,7 @@ errno_t pfe_l2br_table_flush(pfe_l2br_table_t *l2br)
  * @brief		Destroy L2 bridge table instance
  * @param[in]	l2br The L2 bridge table instance
  */
-void pfe_l2br_table_destroy(pfe_l2br_table_t *l2br)
+void pfe_l2br_table_destroy(const pfe_l2br_table_t *l2br)
 {
 	if (NULL != l2br)
 	{
@@ -1362,7 +1386,7 @@ void pfe_l2br_table_destroy(pfe_l2br_table_t *l2br)
  * @param[in]	l2br The L2 bridge table instance
  * @return		Bridge table entry instance or NULL if failed
  */
-pfe_l2br_table_entry_t *pfe_l2br_table_entry_create(pfe_l2br_table_t *l2br)
+pfe_l2br_table_entry_t *pfe_l2br_table_entry_create(const pfe_l2br_table_t *l2br)
 {
 	pfe_l2br_table_entry_t *entry = NULL;
 
@@ -1381,15 +1405,14 @@ pfe_l2br_table_entry_t *pfe_l2br_table_entry_create(pfe_l2br_table_t *l2br)
 	}
 	else
 	{
-		memset(entry, 0, sizeof(pfe_l2br_table_entry_t));
+		(void)memset(entry, 0, sizeof(pfe_l2br_table_entry_t));
 		entry->type = l2br->type;
+        /*	TODO: Only for debug purposes */
+        entry->action_data_set = FALSE;
+        entry->mac_addr_set = FALSE;
+        entry->vlan_set = FALSE;
 	}
 
-	/*	TODO: Only for debug purposes */
-	entry->action_data_set = FALSE;
-	entry->mac_addr_set = FALSE;
-	entry->vlan_set = FALSE;
-
 	return entry;
 }
 
@@ -1399,7 +1422,7 @@ pfe_l2br_table_entry_t *pfe_l2br_table_entry_create(pfe_l2br_table_t *l2br)
  * @retval		EOK Success
  * @retval		EINVAL Invalid/missing argument
  */
-errno_t pfe_l2br_table_entry_destroy(pfe_l2br_table_entry_t *entry)
+errno_t pfe_l2br_table_entry_destroy(const pfe_l2br_table_entry_t *entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -1422,7 +1445,7 @@ errno_t pfe_l2br_table_entry_destroy(pfe_l2br_table_entry_t *entry)
  * @retval		EINVAL Invalid/missing argument
  * @retval		EPERM Operation not permitted
  */
-errno_t pfe_l2br_table_entry_set_mac_addr(pfe_l2br_table_entry_t *entry, pfe_mac_addr_t mac_addr)
+errno_t pfe_l2br_table_entry_set_mac_addr(pfe_l2br_table_entry_t *entry,const pfe_mac_addr_t mac_addr)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -1434,8 +1457,8 @@ errno_t pfe_l2br_table_entry_set_mac_addr(pfe_l2br_table_entry_t *entry, pfe_mac
 
 	if (PFE_L2BR_TABLE_MAC2F == entry->type)
 	{
-		memcpy(entry->mac2f_entry.mac, mac_addr, sizeof(pfe_mac_addr_t));
-		entry->mac2f_entry.field_valids |= MAC2F_ENTRY_MAC_VALID;
+		(void)memcpy(entry->u.mac2f_entry.mac, mac_addr, sizeof(pfe_mac_addr_t));
+		entry->u.mac2f_entry.field_valids |= MAC2F_ENTRY_MAC_VALID;
 	}
 	else if (PFE_L2BR_TABLE_VLAN == entry->type)
 	{
@@ -1472,13 +1495,13 @@ errno_t pfe_l2br_table_entry_set_vlan(pfe_l2br_table_entry_t *entry, uint16_t vl
 
 	if (PFE_L2BR_TABLE_MAC2F == entry->type)
 	{
-		entry->mac2f_entry.vlan = (vlan & 0x1fffU);
-		entry->mac2f_entry.field_valids |= MAC2F_ENTRY_VLAN_VALID;
+		entry->u.mac2f_entry.vlan = ((uint32_t)vlan & (uint32_t)0x1fffU);
+		entry->u.mac2f_entry.field_valids |= MAC2F_ENTRY_VLAN_VALID;
 	}
 	else if (PFE_L2BR_TABLE_VLAN == entry->type)
 	{
-		entry->vlan_entry.vlan = (vlan & 0x1fffU);
-		entry->vlan_entry.field_valids |= VLAN_ENTRY_VLAN_VALID;
+		entry->u.vlan_entry.vlan = ((uint32_t)vlan & (uint32_t)0x1fffU);
+		entry->u.vlan_entry.field_valids |= VLAN_ENTRY_VLAN_VALID;
 	}
 	else
 	{
@@ -1516,7 +1539,7 @@ errno_t pfe_l2br_table_entry_set_action_data(pfe_l2br_table_entry_t *entry, uint
 			NXP_LOG_DEBUG("Action data too long. Max 31bits allowed for MAC table.\n");
 		}
 
-		entry->mac2f_entry.action_data = (uint32_t)(action_data & 0x7fffffffU);
+		entry->u.mac2f_entry.action_data = (uint32_t)(action_data & 0x7fffffffU);
 	}
 	else if (PFE_L2BR_TABLE_VLAN == entry->type)
 	{
@@ -1525,7 +1548,7 @@ errno_t pfe_l2br_table_entry_set_action_data(pfe_l2br_table_entry_t *entry, uint
 			NXP_LOG_DEBUG("Action data too long. Max 55bits allowed for VLAN table.\n");
 		}
 
-		entry->vlan_entry.action_data = (uint64_t)(action_data & 0x7fffffffffffffULL);
+		entry->u.vlan_entry.action_data = (uint64_t)(action_data & 0x7fffffffffffffULL);
 	}
 	else
 	{
@@ -1548,7 +1571,7 @@ errno_t pfe_l2br_table_entry_set_action_data(pfe_l2br_table_entry_t *entry, uint
  * @retval		ENOEXEC Command failed
  * @retval		ETIMEDOUT Command timed-out
  */
-errno_t pfe_l2br_table_entry_set_fresh(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry, bool_t is_fresh)
+errno_t pfe_l2br_table_entry_set_fresh(const pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry, bool_t is_fresh)
 {
 	uint32_t action_data;
 	pfe_ct_mac_table_result_t *mac_entry = (pfe_ct_mac_table_result_t *)&action_data;
@@ -1568,9 +1591,9 @@ errno_t pfe_l2br_table_entry_set_fresh(pfe_l2br_table_t *l2br, pfe_l2br_table_en
 	}
 
 	/*	Update the action entry */
-	action_data = entry->mac2f_entry.action_data;
+	action_data = entry->u.mac2f_entry.action_data;
 	mac_entry->item.fresh_flag = (TRUE == is_fresh) ? 1U : 0U;
-	entry->mac2f_entry.action_data = action_data;
+	entry->u.mac2f_entry.action_data = action_data;
 
 	return EOK;
 }
@@ -1583,7 +1606,7 @@ errno_t pfe_l2br_table_entry_set_fresh(pfe_l2br_table_t *l2br, pfe_l2br_table_en
  * @param[in]	entry The entry
  * @return		TRUE if entry is fresh, FALSE otherwise
  */
-__attribute__((pure)) bool_t pfe_l2br_table_entry_is_fresh(pfe_l2br_table_entry_t *entry)
+__attribute__((pure)) bool_t pfe_l2br_table_entry_is_fresh(const pfe_l2br_table_entry_t *entry)
 {
 	uint32_t action_data;
 	pfe_ct_mac_table_result_t *mac_entry;
@@ -1596,7 +1619,7 @@ __attribute__((pure)) bool_t pfe_l2br_table_entry_is_fresh(pfe_l2br_table_entry_
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	action_data = entry->mac2f_entry.action_data;
+	action_data = entry->u.mac2f_entry.action_data;
 	mac_entry = (pfe_ct_mac_table_result_t *)&action_data;
 
 	if (PFE_L2BR_TABLE_MAC2F == entry->type)
@@ -1622,7 +1645,7 @@ __attribute__((pure)) bool_t pfe_l2br_table_entry_is_fresh(pfe_l2br_table_entry_
  * @retval		ENOEXEC Command failed
  * @retval		ETIMEDOUT Command timed-out
  */
-errno_t pfe_l2br_table_entry_set_static(pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry, bool_t is_static)
+errno_t pfe_l2br_table_entry_set_static(const pfe_l2br_table_t *l2br, pfe_l2br_table_entry_t *entry, bool_t is_static)
 {
 	uint32_t action_data;
 	pfe_ct_mac_table_result_t *mac_entry = (pfe_ct_mac_table_result_t *)&action_data;
@@ -1642,9 +1665,9 @@ errno_t pfe_l2br_table_entry_set_static(pfe_l2br_table_t *l2br, pfe_l2br_table_e
 	}
 
 	/*	Update the action entry */
-	action_data = entry->mac2f_entry.action_data;
+	action_data = entry->u.mac2f_entry.action_data;
 	mac_entry->item.static_flag = (TRUE == is_static) ? 1U : 0U;
-	entry->mac2f_entry.action_data = action_data;
+	entry->u.mac2f_entry.action_data = action_data;
 
 	return EOK;
 }
@@ -1655,10 +1678,10 @@ errno_t pfe_l2br_table_entry_set_static(pfe_l2br_table_t *l2br, pfe_l2br_table_e
  * @param[in]	entry The entry
  * @return		TRUE if entry is fresh, FALSE otherwise
  */
-__attribute__((pure)) bool_t pfe_l2br_table_entry_is_static(pfe_l2br_table_entry_t *entry)
+__attribute__((pure)) bool_t pfe_l2br_table_entry_is_static(const pfe_l2br_table_entry_t *entry)
 {
-	uint32_t action_data = entry->mac2f_entry.action_data;
-	pfe_ct_mac_table_result_t *mac_entry = (pfe_ct_mac_table_result_t *)&action_data;
+	uint32_t action_data = entry->u.mac2f_entry.action_data;
+	const pfe_ct_mac_table_result_t *mac_entry = (pfe_ct_mac_table_result_t *)&action_data;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -1685,7 +1708,7 @@ __attribute__((pure)) bool_t pfe_l2br_table_entry_is_static(pfe_l2br_table_entry
  * @param[in]	buf Buffer to write the final string to
  * @param[in]	buf_len Buffer length
  */
-uint32_t pfe_l2br_table_entry_to_str(pfe_l2br_table_entry_t *entry, char_t *buf, uint32_t buf_len)
+uint32_t pfe_l2br_table_entry_to_str(const pfe_l2br_table_entry_t *entry, char_t *buf, uint32_t buf_len)
 {
 	uint32_t len = 0U;
 
@@ -1701,33 +1724,36 @@ uint32_t pfe_l2br_table_entry_to_str(pfe_l2br_table_entry_t *entry, char_t *buf,
 	{
 		len += (uint32_t)snprintf(buf + len, buf_len - len, "[MAC+VLAN Table Entry]\n");
 		len += (uint32_t)snprintf(buf + len, buf_len - len, "MAC Address: %02x:%02x:%02x:%02x:%02x:%02x\n",
-				entry->mac2f_entry.mac[0],
-				entry->mac2f_entry.mac[1],
-				entry->mac2f_entry.mac[2],
-				entry->mac2f_entry.mac[3],
-				entry->mac2f_entry.mac[4],
-				entry->mac2f_entry.mac[5]);
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "VLAN       : 0x%x\n", entry->mac2f_entry.vlan);
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "Action Data: 0x%x\n", entry->mac2f_entry.action_data);
+				entry->u.mac2f_entry.mac[0],
+				entry->u.mac2f_entry.mac[1],
+				entry->u.mac2f_entry.mac[2],
+				entry->u.mac2f_entry.mac[3],
+				entry->u.mac2f_entry.mac[4],
+				entry->u.mac2f_entry.mac[5]);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "VLAN       : 0x%x\n", entry->u.mac2f_entry.vlan);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "Action Data: 0x%x\n", entry->u.mac2f_entry.action_data);
 #if 0
 		/* Currently not used - action data stores the port information, FW does not have access to port field */
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "Port       : 0x%x\n", entry->mac2f_entry.port);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "Port       : 0x%x\n", entry->u.mac2f_entry.port);
 #endif
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "Col Ptr    : 0x%x\n", entry->mac2f_entry.col_ptr);
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "Flags      : 0x%x\n", entry->mac2f_entry.flags);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "Col Ptr    : 0x%x\n", entry->u.mac2f_entry.col_ptr);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "Flags      : 0x%x\n", entry->u.mac2f_entry.flags);
 	}
 	else if (PFE_L2BR_TABLE_VLAN == entry->type)
 	{
 		len += (uint32_t)snprintf(buf + len, buf_len - len, "[VLAN Table Entry]\n");
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "VLAN       : 0x%x\n", entry->vlan_entry.vlan);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "VLAN       : 0x%x\n", entry->u.vlan_entry.vlan);
+#ifndef __ghs__
+		/* Workaround for ghs linker error with long long printf AAVB-3569 */
 		/*	Native type used to fix compiler warning */
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "Action Data: 0x%llx\n", (unsigned long long)entry->vlan_entry.action_data);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "Action Data: 0x%"PRINT64"x\n", (uint64_t)entry->u.vlan_entry.action_data);
+#endif
 #if 0
 		/* Currently not used - action data stores the port information, FW does not have access to port field */
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "Port       : 0x%x\n", entry->vlan_entry.port);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "Port       : 0x%x\n", entry->u.vlan_entry.port);
 #endif
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "Col Ptr    : 0x%x\n", entry->vlan_entry.col_ptr);
-		len += (uint32_t)snprintf(buf + len, buf_len - len, "Flags      : 0x%x\n", entry->vlan_entry.flags);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "Col Ptr    : 0x%x\n", entry->u.vlan_entry.col_ptr);
+		len += (uint32_t)snprintf(buf + len, buf_len - len, "Flags      : 0x%x\n", entry->u.vlan_entry.flags);
 	}
 	else
 	{
diff --git a/sw/pfe_platform/src/pfe_log_if.c b/sw/pfe_platform/src/pfe_log_if.c
index 203ed57..de8b120 100644
--- a/sw/pfe_platform/src/pfe_log_if.c
+++ b/sw/pfe_platform/src/pfe_log_if.c
@@ -86,7 +86,7 @@ static errno_t pfe_log_if_write_to_class_nostats(const pfe_log_if_t *iface, pfe_
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/* Be sure that class_stats are at correct place */
-	ct_assert((sizeof(pfe_ct_log_if_t) - sizeof(pfe_ct_class_algo_stats_t)) == offsetof(pfe_ct_log_if_t, class_stats));
+	ct_assert_offsetof((sizeof(pfe_ct_log_if_t) - sizeof(pfe_ct_class_algo_stats_t)) == offsetof(pfe_ct_log_if_t, class_stats));
 
 	return pfe_class_write_dmem(iface->class, -1, iface->dmem_base, (void *)class_if,
 							    sizeof(pfe_ct_log_if_t) - sizeof(pfe_ct_class_algo_stats_t));
@@ -963,6 +963,11 @@ errno_t pfe_log_if_add_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr,
 		if (EOK != pfe_phy_if_add_mac_addr(iface->parent, addr, owner))
 		{
 			NXP_LOG_ERROR("Could not add MAC address (%s, parent: %s)\n", iface->name, pfe_phy_if_get_name(iface->parent));
+			/* Delete the MAC address from database */
+			ret = pfe_mac_db_del_addr(iface->mac_db, addr, owner);
+			if (EOK != ret) {
+				NXP_LOG_ERROR("Unable to delete MAC address: %d\n", ret);
+			}
 			ret = ENOEXEC;
 		}
 	}
@@ -979,12 +984,13 @@ errno_t pfe_log_if_add_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr,
  * @brief		Delete MAC address
  * @param[in]	iface The interface instance
  * @param[in]	addr The MAC address to delete
+ * @param[in]	owner The identification of driver instance
  * @retval		EOK Success
  * @retval		EINVAL Invalid or missing argument
  * @retval		ENOENT MAC address not found in local database
  * @retval		ENOEXEC Command failed
  */
-errno_t pfe_log_if_del_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr)
+errno_t pfe_log_if_del_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr, pfe_drv_id_t owner)
 {
 	errno_t ret = EOK;
 
@@ -1001,14 +1007,14 @@ errno_t pfe_log_if_del_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr)
 		NXP_LOG_DEBUG("mutex lock failed\n");
 	}
 
-	ret = pfe_mac_db_del_addr(iface->mac_db, addr);
+	ret = pfe_mac_db_del_addr(iface->mac_db, addr, owner);
 	if(EOK != ret)
 	{
 		NXP_LOG_WARNING("Unable to remove MAC address from log_if MAC database: %d\n", ret);
 	}
 	else
 	{
-		ret = pfe_phy_if_del_mac_addr(iface->parent, addr);
+		ret = pfe_phy_if_del_mac_addr(iface->parent, addr, owner);
 		if (EOK != ret)
 		{
 			NXP_LOG_ERROR("Unable to del MAC address: %d\n", ret);
@@ -1709,32 +1715,6 @@ errno_t pfe_log_if_promisc_enable(pfe_log_if_t *iface)
 		NXP_LOG_DEBUG("mutex unlock failed\n");
 	}
 
-	if (EOK == ret)
-	{
-		/*	Enable the underlying physical interface */
-		ret = pfe_phy_if_promisc_enable(iface->parent);
-		if (EOK != ret)
-		{
-			/*	Revert */
-			if (EOK != oal_mutex_lock(&iface->lock))
-			{
-				NXP_LOG_DEBUG("mutex lock failed\n");
-			}
-
-			iface->log_if_class.flags = tmp;
-			ret = pfe_log_if_write_to_class_nostats(iface, &iface->log_if_class);
-			if (EOK != ret)
-			{
-				NXP_LOG_ERROR("Could not revert DMEM change\n");
-			}
-
-			if (EOK != oal_mutex_unlock(&iface->lock))
-			{
-				NXP_LOG_DEBUG("mutex unlock failed\n");
-			}
-		}
-	}
-
 	return ret;
 }
 
@@ -1777,32 +1757,6 @@ errno_t pfe_log_if_promisc_disable(pfe_log_if_t *iface)
 		NXP_LOG_DEBUG("mutex unlock failed\n");
 	}
 
-	if (EOK == ret)
-	{
-		/*	Disable the underlying physical interface */
-		ret = pfe_phy_if_promisc_disable(iface->parent);
-		if (EOK != ret)
-		{
-			/*	Revert */
-			if (EOK != oal_mutex_lock(&iface->lock))
-			{
-				NXP_LOG_DEBUG("mutex lock failed\n");
-			}
-
-			iface->log_if_class.flags = tmp;
-			ret = pfe_log_if_write_to_class_nostats(iface, &iface->log_if_class);
-			if (EOK != ret)
-			{
-				NXP_LOG_ERROR("Could not revert DMEM change\n");
-			}
-
-			if (EOK != oal_mutex_unlock(&iface->lock))
-			{
-				NXP_LOG_DEBUG("mutex unlock failed\n");
-			}
-		}
-	}
-
 	return ret;
 }
 
diff --git a/sw/pfe_platform/src/pfe_log_if_slave.c b/sw/pfe_platform/src/pfe_log_if_slave.c
index b00032e..247e1f9 100644
--- a/sw/pfe_platform/src/pfe_log_if_slave.c
+++ b/sw/pfe_platform/src/pfe_log_if_slave.c
@@ -597,7 +597,7 @@ errno_t pfe_log_if_add_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr,
 			NXP_LOG_DEBUG("Can't set MAC address: %d\n", ret);
 
 			/*	Remove the address from local database */
-			ret = pfe_mac_db_del_addr(iface->mac_db, addr);
+			ret = pfe_mac_db_del_addr(iface->mac_db, addr, owner);
 			if(EOK != ret)
 			{
 				NXP_LOG_WARNING("Unable to remove MAC address from phy_if MAC database: %d\n", ret);
@@ -619,11 +619,12 @@ errno_t pfe_log_if_add_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr,
  * @brief		Delete MAC address
  * @param[in]	iface The interface instance
  * @param[in]	addr The MAC address to delete
+ * @param[in]	owner The identification of driver instance
  * @retval		EOK Success
  * @retval		EINVAL Invalid or missing argument
  * @retval		ENOEXEC Command failed
  */
-errno_t pfe_log_if_del_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr)
+errno_t pfe_log_if_del_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr, pfe_drv_id_t owner)
 {
 	pfe_platform_rpc_pfe_log_if_del_mac_addr_arg_t req = {0};
 	errno_t ret = EOK;
@@ -647,7 +648,7 @@ errno_t pfe_log_if_del_mac_addr(pfe_log_if_t *iface, const pfe_mac_addr_t addr)
 
 	(void)pfe_log_if_db_lock();
 
-	ret = pfe_mac_db_del_addr(iface->mac_db, addr);
+	ret = pfe_mac_db_del_addr(iface->mac_db, addr, owner);
 	if(EOK != ret)
 	{
 		NXP_LOG_WARNING("Unable to remove MAC address from log_if MAC database: %d\n", ret);
@@ -1218,6 +1219,119 @@ errno_t pfe_log_if_loopback_disable(pfe_log_if_t *iface)
 	return ret;
 }
 
+/**
+ * @brief		Check if interface is configured to discard accepted frames
+ * @param[in]	iface The interface instance
+ * @return		TRUE if discarding is enabled, FALSE otherwise
+ */
+bool_t pfe_log_if_is_discard(pfe_log_if_t *iface)
+{
+	pfe_platform_rpc_pfe_log_if_is_discard_arg_t req = {0};
+	pfe_platform_rpc_pfe_log_if_is_discard_ret_t rpc_ret = {0};
+	errno_t ret;
+
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+	if (unlikely(NULL == iface))
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+		return FALSE;
+	}
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+	req.log_if_id = iface->id;
+
+	(void)pfe_log_if_db_lock();
+
+	/*	Query the master driver */
+	ret = pfe_idex_master_rpc(PFE_PLATFORM_RPC_PFE_LOG_IF_IS_DISCARD, &req, sizeof(req), &rpc_ret, sizeof(rpc_ret));
+
+	(void)pfe_log_if_db_unlock();
+
+	if (EOK != ret)
+	{
+		NXP_LOG_DEBUG("Can't get discard status: %d\n", ret);
+		return FALSE;
+	}
+	else
+	{
+		return rpc_ret.status;
+	}
+}
+
+/**
+ * @brief		Disable discarding frames accepted by logical interface
+ * @details		Function configures logical interface to stop to discard all accepted frames
+ *				and to pass them to the configured egress interfaces.
+ * @param[in]	iface The interface instance
+ * @retval		EOK Success
+ * @retval		EINVAL Invalid or missing argument
+ */
+errno_t pfe_log_if_discard_enable(pfe_log_if_t *iface)
+{
+	errno_t ret = EOK;
+	pfe_platform_rpc_pfe_log_if_discard_enable_arg_t req = {0};
+
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+	if (unlikely(NULL == iface))
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+		return EINVAL;
+	}
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+	req.log_if_id = iface->id;
+
+	(void)pfe_log_if_db_lock();
+
+	/* Enable loopback mode */
+	ret = pfe_idex_master_rpc(PFE_PLATFORM_RPC_PFE_LOG_IF_DISCARD_ENABLE, &req, sizeof(req), NULL, 0U);
+	if (EOK != ret)
+	{
+		NXP_LOG_DEBUG("Can't enable discard: %d\n", ret);
+	}
+
+	(void)pfe_log_if_db_unlock();
+
+	return ret;
+}
+
+/**
+ * @brief		Enable discarding frames accepted by logical interface
+ * @details		Function configures logical interface to discard all accepted frames instead of
+ *				passing them to the configured egress interfaces.
+ * @param[in]	iface The interface instance
+ * @retval		EOK Success
+ * @retval		EINVAL Invalid or missing argument
+ */
+errno_t pfe_log_if_discard_disable(pfe_log_if_t *iface)
+{
+	errno_t ret = EOK;
+	pfe_platform_rpc_pfe_log_if_discard_disable_arg_t req = {0};
+
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+	if (unlikely(NULL == iface))
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+		return EINVAL;
+	}
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+	req.log_if_id = iface->id;
+
+	(void)pfe_log_if_db_lock();
+
+	/* Enable loopback mode */
+	ret = pfe_idex_master_rpc(PFE_PLATFORM_RPC_PFE_LOG_IF_DISCARD_DISABLE, &req, sizeof(req), NULL, 0U);
+	if (EOK != ret)
+	{
+		NXP_LOG_DEBUG("Can't disable discard: %d\n", ret);
+	}
+
+	(void)pfe_log_if_db_unlock();
+
+	return ret;
+}
+
 /**
  * @brief		Enable ALLMULTI mode
  * @details		Function sets logical interface to ALLMULTI mode and
diff --git a/sw/pfe_platform/src/pfe_mac_db.c b/sw/pfe_platform/src/pfe_mac_db.c
index 00a973a..c8b3b2a 100644
--- a/sw/pfe_platform/src/pfe_mac_db.c
+++ b/sw/pfe_platform/src/pfe_mac_db.c
@@ -24,7 +24,7 @@ struct pfe_mac_db_tag
 };
 
 static bool_t pfe_mac_db_criterion_eval(const pfe_mac_db_list_entry_t *entry, pfe_mac_db_crit_t crit, pfe_mac_type_t type, pfe_drv_id_t owner);
-static pfe_mac_db_list_entry_t *pfe_mac_db_find_by_addr(const pfe_mac_db_t *db, const pfe_mac_addr_t addr);
+static pfe_mac_db_list_entry_t *pfe_mac_db_find_by_addr(const pfe_mac_db_t *db, const pfe_mac_addr_t addr, pfe_drv_id_t owner);
 
 /**
  * @brief		Evaluate given DB entry against specified criterion
@@ -162,7 +162,8 @@ errno_t pfe_mac_db_destroy(pfe_mac_db_t *db)
  * @param[in]	addr MAC address to search for
  * @return		Pointer to related entry, NULL if address not found
  */
-static pfe_mac_db_list_entry_t *pfe_mac_db_find_by_addr(const pfe_mac_db_t *db, const pfe_mac_addr_t addr)
+static pfe_mac_db_list_entry_t *pfe_mac_db_find_by_addr(const pfe_mac_db_t *db, const pfe_mac_addr_t addr,
+							pfe_drv_id_t owner)
 {
 	pfe_mac_db_list_entry_t *entry = NULL;
 	LLIST_t *item;
@@ -171,7 +172,7 @@ static pfe_mac_db_list_entry_t *pfe_mac_db_find_by_addr(const pfe_mac_db_t *db,
 	LLIST_ForEach(item, &db->mac_list)
 	{
 		entry = LLIST_Data(item, pfe_mac_db_list_entry_t, iterator);
-		if (0 == memcmp(addr, entry->addr, sizeof(pfe_mac_addr_t)))
+		if ((entry->owner == owner) && (0 == memcmp(addr, entry->addr, sizeof(pfe_mac_addr_t))))
 		{
 			found = TRUE;
 			break;
@@ -204,7 +205,7 @@ errno_t pfe_mac_db_add_addr(pfe_mac_db_t *db, const pfe_mac_addr_t addr, pfe_drv
 	}
 
 	/* Add only if the same address does not already exist in DB */
-	entry = pfe_mac_db_find_by_addr(db, addr);
+	entry = pfe_mac_db_find_by_addr(db, addr, owner);
 	if (NULL == entry)
 	{
 		/*	Add address to local list */
@@ -252,7 +253,7 @@ errno_t pfe_mac_db_add_addr(pfe_mac_db_t *db, const pfe_mac_addr_t addr, pfe_drv
  * @param[in]		addr The MAC address to delete from database
  * @return			Execution status, EOK if success, error code otherwise
  */
-errno_t pfe_mac_db_del_addr(pfe_mac_db_t *db, const pfe_mac_addr_t addr)
+errno_t pfe_mac_db_del_addr(pfe_mac_db_t *db, const pfe_mac_addr_t addr, pfe_drv_id_t owner)
 {
 	errno_t ret = EOK;
 	pfe_mac_db_list_entry_t *entry;
@@ -262,7 +263,7 @@ errno_t pfe_mac_db_del_addr(pfe_mac_db_t *db, const pfe_mac_addr_t addr)
 		NXP_LOG_DEBUG("mutex lock failed\n");
 	}
 
-	entry = pfe_mac_db_find_by_addr(db, addr);
+	entry = pfe_mac_db_find_by_addr(db, addr, owner);
 	if (NULL == entry)
 	{
 		NXP_LOG_DEBUG("MAC address was not found\n");
diff --git a/sw/pfe_platform/src/pfe_pe.c b/sw/pfe_platform/src/pfe_pe.c
index e67d138..d2c715b 100644
--- a/sw/pfe_platform/src/pfe_pe.c
+++ b/sw/pfe_platform/src/pfe_pe.c
@@ -28,7 +28,7 @@ static oal_mutex_t mem_access_lock;
 struct pfe_pe_tag
 {
 	pfe_ct_pe_type_t type;				/* PE type */
-	addr_t cbus_base_va;					/* CBUS base (virtual) */
+	addr_t cbus_base_va;				/* CBUS base (virtual) */
 	uint8_t id;							/* PE HW ID (0..N) */
 
 	/*	DMEM */
@@ -44,14 +44,14 @@ struct pfe_pe_tag
 	addr_t lmem_size;					/* PE's LMEM size */
 
 	/*	DDR */
-	addr_t ddr_base_addr_pa;				/* PE's DDR base address (physical, as seen by host) */
-	addr_t ddr_base_addr_va;				/* PE's DDR base address (virtual) */
+	addr_t ddr_base_addr_pa;			/* PE's DDR base address (physical, as seen by host) */
+	addr_t ddr_base_addr_va;			/* PE's DDR base address (virtual) */
 	addr_t ddr_size;					/* PE's DDR size */
 
 	/*	Indirect Access */
-	addr_t mem_access_wdata;				/* PE's _MEM_ACCESS_WDATA register address (virtual) */
+	addr_t mem_access_wdata;			/* PE's _MEM_ACCESS_WDATA register address (virtual) */
 	addr_t mem_access_addr;				/* PE's _MEM_ACCESS_ADDR register address (virtual) */
-	addr_t mem_access_rdata;				/* PE's _MEM_ACCESS_RDATA register address (virtual) */
+	addr_t mem_access_rdata;			/* PE's _MEM_ACCESS_RDATA register address (virtual) */
 
 	/* FW Errors*/
 	uint32_t error_record_addr;			/* Error record storage address in DMEM */
@@ -66,8 +66,10 @@ struct pfe_pe_tag
 
 	/*	MMap */
 	pfe_ct_pe_mmap_t *mmap_data;		/* Buffer containing the memory map data */
+
 	/* Mutex */
 	oal_mutex_t lock_mutex;				/* Locking PE API mutex */
+	bool_t miflock;						/* When TRUE then PFE memory interface is locked */
 };
 
 typedef enum
@@ -76,11 +78,20 @@ typedef enum
 	PFE_PE_IMEM
 } pfe_pe_mem_t;
 
-static void pfe_pe_memcpy_from_host_to_imem_32_nolock(pfe_pe_t *pe, addr_t dst_addr, const void *src_ptr, uint32_t len);
-static bool_t pfe_pe_is_active(pfe_pe_t *pe);
-static void pfe_pe_memcpy_from_imem_to_host_32_nolock(pfe_pe_t *pe, void *dst_ptr, addr_t src_addr, uint32_t len);
-static void pfe_pe_mem_memset_nolock(pfe_pe_t *pe, pfe_pe_mem_t mem, uint8_t val, addr_t addr, uint32_t len);
-static errno_t pfe_pe_set_number(pfe_pe_t *pe);
+static void pfe_pe_memcpy_from_host_to_imem_32_nolock(
+		pfe_pe_t *pe, addr_t dst_addr, const void *src_ptr, uint32_t len);
+static bool_t pfe_pe_is_active_nolock(pfe_pe_t *pe);
+static void pfe_pe_memcpy_from_imem_to_host_32_nolock(
+		pfe_pe_t *pe, void *dst_ptr, addr_t src_addr, uint32_t len);
+static void pfe_pe_mem_memset_nolock(
+		pfe_pe_t *pe, pfe_pe_mem_t mem, uint8_t val, addr_t addr, uint32_t len);
+static void pfe_pe_memcpy_from_host_to_dmem_32_nolock(
+		pfe_pe_t *pe, addr_t dst_addr, const void *src_ptr, uint32_t len);
+
+/*	This one is not static because a firmware test code is using it but it is
+	neither declared in public header because it should not be public. */
+void pfe_pe_memcpy_from_dmem_to_host_32_nolock(
+		pfe_pe_t *pe, void *dst_ptr, addr_t src_addr, uint32_t len);
 
 /**
  * @brief		Query if PE is active
@@ -88,31 +99,34 @@ static errno_t pfe_pe_set_number(pfe_pe_t *pe);
  * @param[in]	pe The PE instance
  * @return		TRUE if PE is active, FALSE if not
  */
-static bool_t pfe_pe_is_active(pfe_pe_t *pe)
+static bool_t pfe_pe_is_active_nolock(pfe_pe_t *pe)
 {
 	pfe_ct_pe_sw_state_monitor_t state_monitor;
-
+    bool_t ret = FALSE;
+    
 	if(NULL == pe->mmap_data)
-	{   /* Not loaded */
-		NXP_LOG_WARNING("PE %u; Firmware not loaded\n", pe->id);
-		return FALSE;
-	}
-
-	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &state_monitor, oal_ntohl(pe->mmap_data->common.state_monitor), sizeof(pfe_ct_pe_sw_state_monitor_t));
-
-	if(PFE_FW_STATE_STOPPED == state_monitor.state)
-	{   /* Stopped */
-		return FALSE;
-	}
-
-	if(PFE_FW_STATE_UNINIT == state_monitor.state)
-	{   /* Not initialized yet */
-		return FALSE;
-	}
-	/* PFE_FW_STATE_INIT == state_monitor.state is considered as running because
-	   the transition to next state is short */
+	{
+		NXP_LOG_WARNING("PE %u: Firmware not loaded\n", pe->id);
+	}
+    else
+    {
+        ret = TRUE;
+        /*	Get state */
+        pfe_pe_memcpy_from_dmem_to_host_32_nolock(
+                pe,
+                &state_monitor,
+                oal_ntohl(pe->mmap_data->common.state_monitor),
+                sizeof(pfe_ct_pe_sw_state_monitor_t));
+
+        if ((PFE_FW_STATE_STOPPED == state_monitor.state) || (PFE_FW_STATE_UNINIT == state_monitor.state))
+        {
+            ret = FALSE;
+        }
+        /*	PFE_FW_STATE_INIT == state_monitor.state is considered as running because
+		the transition to next state is short */
+    }
 
-	return TRUE;
+	return ret;
 }
 
 /**
@@ -122,7 +136,20 @@ static bool_t pfe_pe_is_active(pfe_pe_t *pe)
 */
 errno_t pfe_pe_lock(pfe_pe_t *pe)
 {
-    return oal_mutex_lock(&pe->lock_mutex);
+	errno_t ret = oal_mutex_lock(&pe->lock_mutex);
+
+	if (unlikely(pe->miflock))
+	{
+		NXP_LOG_ERROR("Lock already indicated.\n");
+	}
+
+	if (likely(EOK == ret))
+	{
+		/*	Indicate the 'lock' status */
+		pe->miflock = TRUE;
+	}
+
+	return ret;
 }
 
 /**
@@ -132,13 +159,16 @@ errno_t pfe_pe_lock(pfe_pe_t *pe)
 */
 errno_t pfe_pe_unlock(pfe_pe_t *pe)
 {
-    return oal_mutex_unlock(&pe->lock_mutex);
+	/*	Indicate the 'unlock' status */
+	pe->miflock = FALSE;
+
+	return oal_mutex_unlock(&pe->lock_mutex);
 }
 
 /**
  * @brief		Lock PE memory
  * @details		While locked, the PE can't access internal memory. Invoke the PE graceful
- *				stop request and wait for confirmation.
+ *				stop request and wait for confirmation. Also lock the PE memory interface.
  * @param[in]	pe The PE instance
  * @return		EOK if success, error code otherwise
  */
@@ -159,14 +189,15 @@ errno_t pfe_pe_mem_lock(pfe_pe_t *pe)
 		return EINVAL;
 	}
 
-	if (EOK != oal_mutex_lock(&pe->lock_mutex))
+	if (EOK != pfe_pe_lock(pe))
 	{
-		NXP_LOG_DEBUG("mutex lock failed\n");
+		NXP_LOG_DEBUG("pfe_pe_lock() failed\n");
 		return EPERM;
 	}
 
 	/*	Read the misc control structure from DMEM */
-	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &misc_ctrl, misc_dmem, sizeof(pfe_ct_pe_misc_control_t));
+	pfe_pe_memcpy_from_dmem_to_host_32_nolock(
+			pe, &misc_ctrl, misc_dmem, sizeof(pfe_ct_pe_misc_control_t));
 
 	if (0U != misc_ctrl.graceful_stop_request)
 	{
@@ -178,10 +209,12 @@ errno_t pfe_pe_mem_lock(pfe_pe_t *pe)
 		{
 			NXP_LOG_ERROR("Duplicate stop request\n");
 		}
-		if (EOK != oal_mutex_unlock(&pe->lock_mutex))
+
+		if (EOK != pfe_pe_unlock(pe))
 		{
-			NXP_LOG_ERROR("mutex unlock failed\n");
+			NXP_LOG_ERROR("pfe_pe_unlock() failed\n");
 		}
+
 		return EPERM;
 	}
 	else
@@ -193,15 +226,13 @@ errno_t pfe_pe_mem_lock(pfe_pe_t *pe)
 	}
 
 	/*	Use 'nolock' variant here. Accessing this data can't lead to conflicts. */
-	pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe, misc_dmem, &misc_ctrl, sizeof(pfe_ct_pe_misc_control_t));
+	pfe_pe_memcpy_from_host_to_dmem_32_nolock(
+			pe, misc_dmem, &misc_ctrl, sizeof(pfe_ct_pe_misc_control_t));
 
-	if (FALSE == pfe_pe_is_active(pe))
+	if (FALSE == pfe_pe_is_active_nolock(pe))
 	{
-		/*	Access to PE memories is considered to be safe */
-		if (EOK != oal_mutex_unlock(&pe->lock_mutex))
-		{
-			NXP_LOG_ERROR("mutex unlock failed\n");
-		}
+		/*	Access to PE memories is considered to be safe. PE memory
+			interface is locked. */
 		return EOK;
 	}
 
@@ -216,30 +247,32 @@ errno_t pfe_pe_mem_lock(pfe_pe_t *pe)
 			misc_ctrl.graceful_stop_request = 0U;
 
 			/*	Use 'nolock' variant here. Accessing this data can't lead to conflicts. */
-			pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe, misc_dmem, &misc_ctrl, sizeof(pfe_ct_pe_misc_control_t));
-			if (EOK != oal_mutex_unlock(&pe->lock_mutex))
+			pfe_pe_memcpy_from_host_to_dmem_32_nolock(
+					pe, misc_dmem, &misc_ctrl, sizeof(pfe_ct_pe_misc_control_t));
+
+			if (EOK != pfe_pe_unlock(pe))
 			{
-				NXP_LOG_ERROR("mutex unlock failed\n");
+				NXP_LOG_ERROR("pfe_pe_unlock() failed\n");
 			}
+
 			return ETIME;
 		}
 
 		oal_time_usleep(10U);
 		timeout--;
-		pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &misc_ctrl, misc_dmem, sizeof(pfe_ct_pe_misc_control_t));
+		pfe_pe_memcpy_from_dmem_to_host_32_nolock(
+				pe, &misc_ctrl, misc_dmem, sizeof(pfe_ct_pe_misc_control_t));
 
-	} while(0U == misc_ctrl.graceful_stop_confirmation);
-	if (EOK != oal_mutex_unlock(&pe->lock_mutex))
-	{
-		NXP_LOG_ERROR("mutex unlock failed\n");
-	}
+	} while (0U == misc_ctrl.graceful_stop_confirmation);
+
+	/*	Access to PE memory interface is locked */
 	return EOK;
 }
 
 /**
  * @brief		Unlock PE memory
  * @details		While locked, the PE can't access internal memory. Here the memory
- * 				will be unlocked.
+ * 				and the memory interface will be unlocked.
  * @param[in]	pe The PE instance
  * @return		EOK if success, error code otherwise
  */
@@ -258,20 +291,20 @@ errno_t pfe_pe_mem_unlock(pfe_pe_t *pe)
 	{
 		return EINVAL;
 	}
-	if (EOK != oal_mutex_lock(&pe->lock_mutex))
-	{
-		NXP_LOG_DEBUG("mutex lock failed\n");
-		return EPERM;
-	}
+
 	/*	Cancel the stop request */
 	misc_ctrl.graceful_stop_request = 0U;
 
 	/*	Use 'nolock' variant here. Accessing this data can't lead to conflicts. */
-	pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe, misc_dmem, &misc_ctrl, sizeof(pfe_ct_pe_misc_control_t));
-	if (EOK != oal_mutex_unlock(&pe->lock_mutex))
+	pfe_pe_memcpy_from_host_to_dmem_32_nolock(
+			pe, misc_dmem, &misc_ctrl, sizeof(pfe_ct_pe_misc_control_t));
+
+	/*	Unlock access to PE memory interface */
+	if (EOK != pfe_pe_unlock(pe))
 	{
-		NXP_LOG_ERROR("mutex unlock failed\n");
+		NXP_LOG_ERROR("pfe_pe_unlock() failed\n");
 	}
+
 	return EOK;
 }
 
@@ -343,19 +376,15 @@ static uint32_t pfe_pe_mem_read(pfe_pe_t *pe, pfe_pe_mem_t mem, addr_t addr, uin
 				| PE_IBUS_PE_ID(pe->id)
 				| PE_IBUS_WREN(0U);
 
-	if (EOK != oal_mutex_lock(&mem_access_lock))
+	/*	Sanity check if we can safely access the memory interface */
+	if (unlikely(!pe->miflock))
 	{
-		NXP_LOG_DEBUG("Mutex lock failed\n");
+		NXP_LOG_ERROR("Accessing unlocked PE memory interface (read).\n");
 	}
 
 	hal_write32((uint32_t)adrr_temp, pe->mem_access_addr);
 	val = oal_ntohl(hal_read32(pe->mem_access_rdata));
 
-	if (EOK != oal_mutex_unlock(&mem_access_lock))
-	{
-		NXP_LOG_DEBUG("Mutex unlock failed\n");
-	}
-
 	if (unlikely(adrr_temp & 0x3U))
 	{
 		/*	Move the value to the desired address offset */
@@ -438,18 +467,14 @@ static void pfe_pe_mem_write(pfe_pe_t *pe, pfe_pe_mem_t mem, uint32_t val, addr_
 			| PE_IBUS_PE_ID(pe->id)
 			| PE_IBUS_WREN(bytesel);
 
-	if (EOK != oal_mutex_lock(&mem_access_lock))
+	/*	Sanity check if we can safely access the memory interface */
+	if (unlikely(!pe->miflock))
 	{
-		NXP_LOG_DEBUG("Mutex lock failed\n");
+		NXP_LOG_ERROR("Accessing unlocked PE memory interface (write).\n");
 	}
 
 	hal_write32(oal_htonl(val_temp), pe->mem_access_wdata);
 	hal_write32((uint32_t)addr_temp, pe->mem_access_addr);
-
-	if (EOK != oal_mutex_unlock(&mem_access_lock))
-	{
-		NXP_LOG_DEBUG("Mutex unlock failed\n");
-	}
 }
 
 /**
@@ -546,7 +571,8 @@ void pfe_pe_imem_memset(pfe_pe_t *pe, uint8_t val, addr_t addr, uint32_t len)
  * @param[in]	dst_addr DMEM destination address (must be 32-bit aligned)
  * @param[in]	len Number of bytes to read
  */
-void pfe_pe_memcpy_from_host_to_dmem_32_nolock(pfe_pe_t *pe, addr_t dst_addr, const void *src_ptr, uint32_t len)
+static void pfe_pe_memcpy_from_host_to_dmem_32_nolock(
+		pfe_pe_t *pe, addr_t dst_addr, const void *src_ptr, uint32_t len)
 {
 	uint32_t val;
 	uint32_t offset;
@@ -717,26 +743,31 @@ errno_t pfe_pe_gather_memcpy_from_dmem_to_host_32(pfe_pe_t **pe, int32_t pe_coun
 	while (ii < pe_count)
 	{
 		ret = pfe_pe_mem_lock(pe[ii]);
-		if(EOK != ret)
+		if (EOK != ret)
 		{
 			NXP_LOG_DEBUG("Memory unlock failed\n");
+
 			/* Free all already locked PEs */
-			for(; ii >= 0; ii--)
+			for (; ii >= 0; ii--)
 			{
 				(void)pfe_pe_mem_unlock(pe[ii]);
 			}
+
 			return ret;
 		}
+
 		ii++;
 	}
 
-	/* Perform the read from required PEs*/
-	for(ii = 0; ii < pe_count; ii++)
+	/* Perform the read from required PEs */
+	for (ii = 0; ii < pe_count; ii++)
 	{
 		/* Check if there is still memory  */
-		if(buffer_len >= ((read_len * (uint32_t)ii) + read_len))
+		if (buffer_len >= ((read_len * (uint32_t)ii) + read_len))
 		{
-			pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe[ii], (void *)((uint8_t*)dst_ptr + (read_len * (uint32_t)ii)), src_addr, read_len);
+			pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe[ii],
+					(void *)((uint8_t*)dst_ptr + (read_len * (uint32_t)ii)),
+						src_addr, read_len);
 		}
 		else
 		{
@@ -745,15 +776,16 @@ errno_t pfe_pe_gather_memcpy_from_dmem_to_host_32(pfe_pe_t **pe, int32_t pe_coun
 		}
 	}
 
-	for(ii = 0; ii < pe_count; ii++)
+	for (ii = 0; ii < pe_count; ii++)
 	{
-		/* Backup return from mecpy */
+		/* Backup return from memcpy */
 		ret_store = ret;
 		ret = pfe_pe_mem_unlock(pe[ii]);
 		if(EOK != ret)
 		{
 			NXP_LOG_DEBUG("Memory unlock failed\n");
-			/* Error occurred override the return from previous actions */
+
+			/* Error occurred. Override the return from previous actions. */
 			ret_store = ret;
 		}
 	}
@@ -933,7 +965,7 @@ void pfe_pe_memcpy_from_imem_to_host_32(pfe_pe_t *pe, void *dst_ptr, addr_t src_
  * @retval		EOK Success
  * @retval		EINVAL Unsupported section type or wrong input address alignment
  */
-static errno_t pfe_pe_load_dmem_section(pfe_pe_t *pe, const void *sdata, addr_t addr, addr_t size, uint32_t type)
+static errno_t pfe_pe_load_dmem_section_nolock(pfe_pe_t *pe, const void *sdata, addr_t addr, addr_t size, uint32_t type)
 {
 	errno_t ret = EOK;
 
@@ -941,65 +973,74 @@ static errno_t pfe_pe_load_dmem_section(pfe_pe_t *pe, const void *sdata, addr_t
 	if (unlikely((NULL == pe) || (NULL == sdata)))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
-		return EINVAL;
+		ret = EINVAL;
 	}
+    else
+    {
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	if (((addr_t)(sdata) & 0x3U) != (addr & 0x3U))
-	{
-		NXP_LOG_ERROR("Load address 0x%p and elf file address 0x%p don't have the same alignment\n", (void *)addr, sdata);
-		return EINVAL;
-	}
-
-	if ((addr & 0x3U) != 0U)
-	{
-		NXP_LOG_ERROR("Load address 0x%p is not 32bit aligned\n", (void *)addr);
-		return EINVAL;
-	}
-
-	switch (type)
-	{
-		case 0x7000002aU: /* MIPS.abiflags */
-		{
-			/* Skip the section */
-			break;
-		}
-		case (uint32_t)SHT_PROGBITS:
-		{
-#if defined(FW_WRITE_CHECK_EN)
-			void *buf = oal_mm_malloc(size);
-#endif /* FW_WRITE_CHECK_EN */
-
-			/*	Write section data */
-			pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe, addr - pe->dmem_elf_base_va, sdata, size);
-
-#if defined(FW_WRITE_CHECK_EN)
-			pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, buf, addr, size);
-
-			if (0 != memcmp(buf, sdata, size))
-			{
-				NXP_LOG_ERROR("DMEM data inconsistent\n");
-			}
-
-			oal_mm_free(buf);
-#endif /* FW_WRITE_CHECK_EN */
-
-			break;
-		}
-
-		case (uint32_t)SHT_NOBITS:
-		{
-			pfe_pe_dmem_memset(pe, 0U, addr, size);
-			break;
-		}
-
-		default:
-		{
-			NXP_LOG_ERROR("Unsupported section type: 0x%x\n", (uint_t)type);
-			ret = EINVAL;
-			break;
-		}
-	}
+        if (((addr_t)(sdata) & 0x3U) != (addr & 0x3U))
+        {
+            NXP_LOG_ERROR("Load address 0x%p and elf file address 0x%p don't have the same alignment\n", (void *)addr, sdata);
+            ret = EINVAL;
+        }
+        else
+        {
+            if ((addr & 0x3U) != 0U)
+            {
+                NXP_LOG_ERROR("Load address 0x%p is not 32bit aligned\n", (void *)addr);
+                ret = EINVAL;
+            }
+            else
+            {
+                switch (type)
+                {
+                    case 0x7000002aU: /* MIPS.abiflags */
+                    {
+                        /* Skip the section */
+                        break;
+                    }
+                    case (uint32_t)SHT_PROGBITS:
+                    {
+            #if defined(FW_WRITE_CHECK_EN)
+                        void *buf = oal_mm_malloc(size);
+            #endif /* FW_WRITE_CHECK_EN */
+
+                        /*	Write section data */
+                        pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe, addr - pe->dmem_elf_base_va, sdata, size);
+
+            #if defined(FW_WRITE_CHECK_EN)
+                        pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, buf, addr, size);
+
+                        if (0 != memcmp(buf, sdata, size))
+                        {
+                            NXP_LOG_ERROR("DMEM data inconsistent\n");
+                        }
+
+                        oal_mm_free(buf);
+            #endif /* FW_WRITE_CHECK_EN */
+
+                        break;
+                    }
+
+                    case (uint32_t)SHT_NOBITS:
+                    {
+                        pfe_pe_mem_memset_nolock(pe, PFE_PE_DMEM, 0U, addr, size);
+                        break;
+                    }
+
+                    default:
+                    {
+                        NXP_LOG_ERROR("Unsupported section type: 0x%x\n", (uint_t)type);
+                        ret = EINVAL;
+                        break;
+                    }
+                }
+            }
+        }
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+    }
+#endif
 
 	return ret;
 }
@@ -1016,7 +1057,7 @@ static errno_t pfe_pe_load_dmem_section(pfe_pe_t *pe, const void *sdata, addr_t
  * @retval		EFAULT Wrong input address alignment
  * @retval		EINVAL Unsupported section type
  */
-static errno_t pfe_pe_load_imem_section(pfe_pe_t *pe, const void *data, addr_t addr, addr_t size, uint32_t type)
+static errno_t pfe_pe_load_imem_section_nolock(pfe_pe_t *pe, const void *data, addr_t addr, addr_t size, uint32_t type)
 {
 	errno_t ret = EOK;
 
@@ -1031,7 +1072,8 @@ static errno_t pfe_pe_load_imem_section(pfe_pe_t *pe, const void *data, addr_t a
 	/*	Check alignment first */
 	if (((addr_t)(data) & 0x3U) != (addr & 0x1U))
 	{
-		NXP_LOG_ERROR("Load address 0x%p and elf file address 0x%p) don't have the same alignment\n", (void *)addr, data);
+		NXP_LOG_ERROR("Load address 0x%p and elf file address 0x%p) don't have the same alignment\n",
+				(void *)addr, data);
 		return EFAULT;
 	}
 
@@ -1206,12 +1248,12 @@ static errno_t pfe_pe_load_elf_section(pfe_pe_t *pe, const void *sdata, addr_t l
 	if (pfe_pe_is_dmem(pe, load_addr, size))
 	{
 		/*	Section belongs to DMEM */
-		ret_val = pfe_pe_load_dmem_section(pe, sdata, load_addr, size, type);
+		ret_val = pfe_pe_load_dmem_section_nolock(pe, sdata, load_addr, size, type);
 	}
 	else if (pfe_pe_is_imem(pe, load_addr, size))
 	{
 		/*	Section belongs to IMEM */
-		ret_val = pfe_pe_load_imem_section(pe, sdata, load_addr, size, type);
+		ret_val = pfe_pe_load_imem_section_nolock(pe, sdata, load_addr, size, type);
 	}
 	else if (pfe_pe_is_lmem(pe, load_addr, size))
 	{
@@ -1347,7 +1389,6 @@ void pfe_pe_set_dmem(pfe_pe_t *pe, addr_t elf_base, addr_t len)
 
 	pe->dmem_elf_base_va = elf_base;
 	pe->dmem_size = len;
-	pfe_pe_mem_memset_nolock(pe, PFE_PE_DMEM, 0U, 0U, len);
 }
 
 /**
@@ -1369,7 +1410,6 @@ void pfe_pe_set_imem(pfe_pe_t *pe, addr_t elf_base, addr_t len)
 
 	pe->imem_elf_base_va = elf_base;
 	pe->imem_size = len;
-	pfe_pe_mem_memset_nolock(pe, PFE_PE_IMEM, 0U, 0U, len);
 }
 
 /**
@@ -1436,24 +1476,6 @@ void pfe_pe_set_iaccess(pfe_pe_t *pe, uint32_t wdata_reg, uint32_t rdata_reg, ui
 	pe->mem_access_wdata = (pe->cbus_base_va + wdata_reg);
 }
 
-/**
- * @brief Sets the PE ID in the FW
- * @param[in] pe The PE which ID shall be set in the FW
- * @return EOK if success, error code otherwise
- */
-static errno_t pfe_pe_set_number(pfe_pe_t *pe)
-{
-	if(NULL == pe->mmap_data)
-	{
-		NXP_LOG_WARNING("Memory map is not known\n");
-		return ENOENT;
-	}
-
-	pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe, oal_ntohl(pe->mmap_data->common.pe_id), &pe->id, sizeof(uint8_t));
-
-	return EOK;
-}
-
 static void print_fw_issue(const pfe_ct_pe_mmap_t *fw_mmap)
 {
 #ifdef NXP_LOG_ENABLED 
@@ -1477,7 +1499,7 @@ errno_t pfe_pe_load_firmware(pfe_pe_t *pe, const void *elf)
 	addr_t load_addr;
 	void *buf;
 	errno_t ret;
-	uint32_t section_idx;
+	uint32_t section_idx = 0U;
 	uint32_t mask_sectIdx;
 	const ELF_File_t *elf_file = (ELF_File_t *)elf;
 	const Elf32_Shdr *shdr = NULL;
@@ -1492,6 +1514,15 @@ errno_t pfe_pe_load_firmware(pfe_pe_t *pe, const void *elf)
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
+	if (EOK != pfe_pe_lock(pe))
+	{
+		NXP_LOG_DEBUG("pfe_pe_lock() failed\n");
+	}
+
+	/*	Initialize DMEM and IMEM */
+	pfe_pe_mem_memset_nolock(pe, PFE_PE_DMEM, 0U, 0U, pe->dmem_size);
+	pfe_pe_mem_memset_nolock(pe, PFE_PE_IMEM, 0U, 0U, pe->imem_size);
+
 	/*	Attempt to get section containing firmware memory map data */
 	if (TRUE == ELF_SectFindName(elf_file, ".pfe_pe_mmap", &section_idx, NULL, NULL))
 	{
@@ -1500,11 +1531,18 @@ errno_t pfe_pe_load_firmware(pfe_pe_t *pe, const void *elf)
 
 		/*	Load section to RAM */
 		shdr = &elf_file->arSectHead32[mask_sectIdx];
-        /* Get the mmap size */
-        (void)memcpy((void*)&mmap_size, (const void*)((addr_t)elf_file->pvData + shdr->sh_offset), sizeof(uint32_t));
-        /* Convert mmap size endian ! */
-        mmap_size = oal_ntohl(mmap_size);
-        tmp_mmap = (pfe_ct_pe_mmap_t *)oal_mm_malloc(mmap_size);
+
+		/* Get the mmap size, used to load correct data from FW file*/
+		(void)memcpy(
+				(void*)&mmap_size,
+				(const void*)((addr_t)elf_file->pvData + shdr->sh_offset),
+				sizeof(uint32_t));
+
+		/* Convert mmap size endian ! */
+		mmap_size = oal_ntohl(mmap_size);
+
+		/* Allocate memory with size of union variable to maintain memory consistency */
+		tmp_mmap = (pfe_ct_pe_mmap_t *)oal_mm_malloc(sizeof(*tmp_mmap));
 		if (NULL == tmp_mmap)
 		{
 			ret = ENOMEM;
@@ -1514,14 +1552,21 @@ errno_t pfe_pe_load_firmware(pfe_pe_t *pe, const void *elf)
 		{
 			/*  Firmware version check */
 			static const char_t mmap_version_str[] = TOSTRING(PFE_CFG_PFE_CT_H_MD5);
-			(void)memcpy((void*)tmp_mmap, (const void*)((addr_t)elf_file->pvData + shdr->sh_offset), mmap_size);
+
+			(void)memcpy(
+					(void*)tmp_mmap,
+					(const void*)((addr_t)elf_file->pvData + shdr->sh_offset),
+					mmap_size);
+
 			if(0 != strcmp(mmap_version_str, tmp_mmap->common.version.cthdr))
 			{
 				ret = EINVAL;
 				print_fw_issue(tmp_mmap);
 				goto free_and_fail;
 			}
-			NXP_LOG_INFO("pfe_ct.h file version\"%s\"\n",mmap_version_str);
+
+			NXP_LOG_INFO("pfe_ct.h file version\"%s\"\n", mmap_version_str);
+
 			/*	Indicate that mmap_data is available */
 			pe->mmap_data = tmp_mmap;
 		}
@@ -1625,12 +1670,15 @@ errno_t pfe_pe_load_firmware(pfe_pe_t *pe, const void *elf)
 		}
 	}
 
+	if (EOK != pfe_pe_unlock(pe))
+	{
+		NXP_LOG_DEBUG("pfe_pe_unlock() failed\n");
+	}
+
 	/* Clear the internal copy of the index on each FW load because
 	   FW will also start from 0 */
 	pe->last_error_write_index = 0U;
 	pe->error_record_addr = 0U;
-	/* Set the PE number in the FW */
-	(void)pfe_pe_set_number(pe);
 	return EOK;
 
 free_and_fail:
@@ -1654,6 +1702,11 @@ free_and_fail:
 		pe->fw_feature_section_size = 0U;
 	}
 
+	if (EOK != pfe_pe_unlock(pe))
+	{
+		NXP_LOG_DEBUG("pfe_pe_unlock() failed\n");
+	}
+
 	return ret;
 }
 
@@ -1764,18 +1817,21 @@ errno_t pfe_pe_get_fw_feature_entry(pfe_pe_t *pe, uint32_t id, pfe_ct_feature_de
 	{	/* Avoid running uninitialized */
 		return ENOENT;
 	}
+
 	/* Get the pointer to the descriptions and count of the features
-	   (do it only once and remember the values)
-	*/
+	   (do it only once and remember the values) */
 	if(INVALID_FEATURES_BASE == pe->fw_features_base)
-	{   /* The mmap has not been queried for error record yet */
+	{
 		pfe_ct_pe_mmap_t pfe_pe_mmap;
-		/* Query map for the error record address */
+
+		/* The mmap has not been queried for error record yet. Query map for
+		   the error record address. */
 		if (EOK != pfe_pe_get_mmap(pe, &pfe_pe_mmap))
 		{
 			NXP_LOG_ERROR("Could not get memory map\n");
 			return ENOENT;
 		}
+
 		/* Remember the features record address and size */
 		pe->fw_features_base = oal_ntohl(pfe_pe_mmap.common.version.features);
 		if(pe->fw_features_base > pe->fw_feature_section_size)
@@ -1784,63 +1840,80 @@ errno_t pfe_pe_get_fw_feature_entry(pfe_pe_t *pe, uint32_t id, pfe_ct_feature_de
 			pe->fw_features_base = INVALID_FEATURES_BASE;
 			return EIO;
 		}
+
 		pe->fw_features_size = oal_ntohl(pfe_pe_mmap.common.version.features_count);
 	}
 
 	/* Check if the requested id does exist */
 	if(id < pe->fw_features_size)
-	{   /* Entry at given id does exist */
-		entry_ptr = oal_ntohl(*(uint32_t *)((addr_t)pe->fw_feature_section + (pe->fw_features_base + (id * sizeof(PFE_PTR(pfe_ct_feature_desc_t))))));
+	{
+		/* Entry at given id does exist so return it */
+		entry_ptr = oal_ntohl(*(uint32_t *)(
+						(addr_t)pe->fw_feature_section
+							+ (pe->fw_features_base
+							+ (id * sizeof(PFE_PTR(pfe_ct_feature_desc_t))))));
+
 		*entry = (pfe_ct_feature_desc_t *)((addr_t)pe->fw_feature_section + entry_ptr);
+
 		return EOK;
 	}
+
 	return ENOENT;
 }
 
 /**
  * @brief		Reads out errors reported by the PE Firmware and prints them on debug console
  * @param[in]	pe PE which error report shall be read out
- * @return EOK on success or error code
+ * @return		EOK on success or error code
  */
-errno_t pfe_pe_get_fw_errors(pfe_pe_t *pe)
+errno_t pfe_pe_get_fw_errors_nolock(pfe_pe_t *pe)
 {
 #ifdef NXP_LOG_ENABLED
 	pfe_ct_error_record_t error_record; /* Copy of the PE error record */
 	uint32_t read_start;                /* Starting position in error record to read */
 	uint32_t i;
 	uint32_t errors_count;
+	pfe_ct_pe_mmap_t pfe_pe_mmap;
 
 	if(NULL == pe->fw_err_section)
-	{	/* Avoid running uninitialized */
+	{
+		/* Avoid running uninitialized */
 		return ENOENT;
 	}
 
 	if(0U == pe->error_record_addr)
-	{   /* The mmap has not been queried for error record yet */
-		pfe_ct_pe_mmap_t pfe_pe_mmap;
-		/* Query map for the error record address */
+	{
+		/* The memory map has not been queried for error record yet. Get
+		   the map and query it for the error record address. */
 		if (EOK != pfe_pe_get_mmap(pe, &pfe_pe_mmap))
 		{
 			NXP_LOG_ERROR("Could not get memory map\n");
 			return ENOENT;
 		}
+
 		/* Remember the error record address */
 		pe->error_record_addr = oal_ntohl(pfe_pe_mmap.common.error_record);
 	}
 
-	/* Copy error record from PE to local memory */
-	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &error_record, pe->error_record_addr, sizeof(pfe_ct_error_record_t));
+	pfe_pe_memcpy_from_dmem_to_host_32_nolock(
+			pe, &error_record, pe->error_record_addr, sizeof(pfe_ct_error_record_t));
+
 	/* Get the number of new errors */
 	errors_count = oal_ntohl(error_record.write_index) - pe->last_error_write_index;
+
 	/* First unread error */
 	read_start = pe->last_error_write_index;
+
 	/* Where to continue next time */
 	pe->last_error_write_index = oal_ntohl(error_record.write_index);
 	if(0U != errors_count)
-	{   /* New errors reported - go through them */
+	{
+		/* New errors reported - go through them */
 		if(errors_count > FP_ERROR_RECORD_SIZE)
 		{
-			NXP_LOG_WARNING("FW error log overflow by %u\n", (uint_t)errors_count - FP_ERROR_RECORD_SIZE + 1U);
+			NXP_LOG_WARNING("FW error log overflow by %u\n",
+					(uint_t)errors_count - FP_ERROR_RECORD_SIZE + 1U);
+
 			/* Overflow has occurred - the write_index contains oldest record */
 			read_start = oal_ntohl(error_record.write_index);
 			errors_count = FP_ERROR_RECORD_SIZE;
@@ -1853,31 +1926,40 @@ errno_t pfe_pe_get_fw_errors(pfe_pe_t *pe)
 			const pfe_ct_error_t *error_ptr;
 			const char_t *error_str;
 			const char_t *error_file;
-			 uint32_t error_val;
+			uint32_t error_val;
 
-			error_addr = oal_ntohl(error_record.errors[(read_start + i) & (FP_ERROR_RECORD_SIZE - 1U)]);
-			error_val = oal_ntohl(error_record.values[(read_start + i) & (FP_ERROR_RECORD_SIZE - 1U)]);
+			error_addr = oal_ntohl(error_record.errors[(read_start + i)
+													  & (FP_ERROR_RECORD_SIZE - 1U)]);
+			error_val = oal_ntohl(error_record.values[(read_start + i)
+													  & (FP_ERROR_RECORD_SIZE - 1U)]);
 			if(error_addr > pe->fw_err_section_size)
 			{
 				NXP_LOG_ERROR("Invalid error address from FW 0x%x\n", (uint_t)error_addr);
 				break;
 			}
+
 			/* Get to the error message through the .errors section */
 			error_ptr = (pfe_ct_error_t *)((addr_t)pe->fw_err_section + error_addr);
 			if(oal_ntohl(error_ptr->message) > pe->fw_err_section_size)
 			{
-				NXP_LOG_ERROR("Invalid error message from FW 0x%x", (uint_t)oal_ntohl(error_ptr->message));
+				NXP_LOG_ERROR("Invalid error message from FW 0x%x",
+						(uint_t)oal_ntohl(error_ptr->message));
 				break;
 			}
+
 			error_str = (char_t *)((addr_t)pe->fw_err_section + oal_ntohl(error_ptr->message));
 			if(oal_ntohl(error_ptr->file) > pe->fw_err_section_size)
 			{
-				NXP_LOG_ERROR("Invalid file name from FW 0x%x", (uint_t)oal_ntohl(error_ptr->file));
+				NXP_LOG_ERROR("Invalid file name from FW 0x%x",
+						(uint_t)oal_ntohl(error_ptr->file));
 				break;
 			}
+
 			error_file =  (char_t *)((addr_t)pe->fw_err_section + oal_ntohl(error_ptr->file));
 			error_line = oal_ntohl(error_ptr->line);
-			NXP_LOG_ERROR("PE%d: %s line %u: %s (0x%x)\n", pe->id, error_file, (uint_t)error_line, error_str, (uint_t)error_val);
+
+			NXP_LOG_ERROR("PE%d: %s line %u: %s (0x%x)\n",
+					pe->id, error_file, (uint_t)error_line, error_str, (uint_t)error_val);
 		}
 	}
 #else
@@ -1921,7 +2003,7 @@ errno_t pfe_pe_check_mmap(const pfe_pe_t *pe)
  * @retval		EOK		Success
  * @retval		EINVAL	Invalid argument
  */
-errno_t pfe_pe_get_pe_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_pe_stats_t *stats)
+errno_t pfe_pe_get_pe_stats_nolock(pfe_pe_t *pe, uint32_t addr, pfe_ct_pe_stats_t *stats)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == pe) || (NULL == stats)))
@@ -1935,7 +2017,9 @@ errno_t pfe_pe_get_pe_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_pe_stats_t *stat
 		return EINVAL;
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
+
 	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, stats, addr, sizeof(pfe_ct_pe_stats_t));
+
 	return EOK;
 }
 
@@ -1947,7 +2031,7 @@ errno_t pfe_pe_get_pe_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_pe_stats_t *stat
  * @retval		EOK		Success
  * @retval		EINVAL	Invalid argument
  */
-errno_t pfe_pe_get_classify_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_classify_stats_t *stats)
+errno_t pfe_pe_get_classify_stats_nolock(pfe_pe_t *pe, uint32_t addr, pfe_ct_classify_stats_t *stats)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == pe) || (NULL == stats)))
@@ -1961,7 +2045,9 @@ errno_t pfe_pe_get_classify_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_classify_s
 		return EINVAL;
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
+
 	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, stats, addr, sizeof(pfe_ct_classify_stats_t));
+
 	return EOK;
 }
 
@@ -1973,7 +2059,7 @@ errno_t pfe_pe_get_classify_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_classify_s
  * @retval		EOK		Success
  * @retval		EINVAL	Invalid argument
  */
-errno_t pfe_pe_get_class_algo_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_class_algo_stats_t *stats)
+errno_t pfe_pe_get_class_algo_stats_nolock(pfe_pe_t *pe, uint32_t addr, pfe_ct_class_algo_stats_t *stats)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == pe) || (NULL == stats)))
@@ -1987,7 +2073,9 @@ errno_t pfe_pe_get_class_algo_stats(pfe_pe_t *pe, uint32_t addr, pfe_ct_class_al
 		return EINVAL;
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
+
 	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, stats, addr, sizeof(pfe_ct_class_algo_stats_t));
+
 	return EOK;
 }
 
@@ -2004,6 +2092,7 @@ uint32_t pfe_pe_stat_to_str(const pfe_ct_class_algo_stats_t *stat, char *buf, ui
 	uint32_t len = 0U;
 
 	(void)verb_level;
+
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == stat) || (NULL == buf)))
 	{
@@ -2011,10 +2100,12 @@ uint32_t pfe_pe_stat_to_str(const pfe_ct_class_algo_stats_t *stat, char *buf, ui
 		return 0U;
 	}
 #endif
+
 	len += oal_util_snprintf(buf + len, buf_len - len, "Frames processed: %u\n", oal_ntohl(stat->processed));
 	len += oal_util_snprintf(buf + len, buf_len - len, "Frames accepted:  %u\n", oal_ntohl(stat->accepted));
 	len += oal_util_snprintf(buf + len, buf_len - len, "Frames rejected:  %u\n", oal_ntohl(stat->rejected));
 	len += oal_util_snprintf(buf + len, buf_len - len, "Frames discarded: %u\n", oal_ntohl(stat->discarded));
+
 	return len;
 }
 
@@ -2072,43 +2163,190 @@ static inline const char_t *pfe_pe_get_fw_state_str(pfe_ct_pe_sw_state_t state)
 * @param[in] verb_level Verbosity level
 * @return Number of bytes written into the text buffer
 */
-static uint32_t pfe_pe_get_measurements(pfe_pe_t *pe, uint32_t count, uint32_t ptr, char_t *buf, uint32_t buf_len, uint8_t verb_level)
+static uint32_t pfe_pe_get_measurements_nolock(pfe_pe_t *pe, uint32_t count, uint32_t ptr, char_t *buf, uint32_t buf_len, uint8_t verb_level)
 {
 	pfe_ct_measurement_t *m = NULL;
 	uint_t i;
 	uint32_t len = 0U;
 
-    (void)verb_level;
+	(void)verb_level;
+
 	if(0U == ptr)
 	{   /* This shall not happen - FW did not initialize data correctly */
 		NXP_LOG_ERROR("Inconsistent data in pfe_pe_mmap\n");
-		return 0U;
+	}
+    else
+    {
+        /* Get buffer to read data from DMEM */
+        m = oal_mm_malloc(sizeof(pfe_ct_measurement_t) * count);
+        if(NULL != m)
+        {   /* Memory allocation succeed */
+            /* Copy the data into the allocated buffer */
+            pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, m, ptr, sizeof(pfe_ct_measurement_t) * count);
+
+            /* Print the data */
+            for(i = 0U; i < count; i++)
+            {
+                /* Variables just to make code more readable */
+                uint32_t avg = oal_ntohl(m[i].avg);
+                uint32_t min = oal_ntohl(m[i].min);
+                uint32_t max = oal_ntohl(m[i].max);
+                uint32_t cnt = oal_ntohl(m[i].cnt);
+
+                /* Just print the data without interpreting them */
+                len += oal_util_snprintf(buf + len, buf_len - len,
+                        "Measurement %u:\tmin %10u\tmax %10u\tavg %10u\tcnt %10u\n",
+                            i, min, max, avg, cnt);
+            }
+
+            /* Free the allocated buffer */
+            oal_mm_free(m);
+        }
+    }
+	
+	return len;
+}
+
+/**
+ * @brief		Provides current state of PE firmware
+ * @param[in]	pe 			The PE instance
+ * @return		Current state of PE firmware
+ *
+ */
+pfe_ct_pe_sw_state_t pfe_pe_get_fw_state(pfe_pe_t *pe)
+{
+	pfe_ct_pe_sw_state_monitor_t state_monitor;
+
+	/* Get the pfe_ct_pe_mmap_t structure from PE */
+	if (NULL == pe->mmap_data)
+	{
+		return PFE_FW_STATE_UNINIT;
 	}
 
-	/* Get buffer to read data from DMEM */
-	m = oal_mm_malloc(sizeof(pfe_ct_measurement_t) * count);
-	if(NULL == m)
-	{   /* Memory allocation failed */
-	    return 0U;
+	/*	We don't need coherent data here so only lock the
+	 	memory interface without locking the PE memory. */
+	if (EOK != pfe_pe_lock(pe))
+	{
+		NXP_LOG_DEBUG("pfe_pe_lock() failed\n");
 	}
-	/* Copy the data into the allocated buffer */
-	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, m, ptr, sizeof(pfe_ct_measurement_t) * count);
-	/* Print the data */
-	for(i = 0U; i < count; i++)
+
+	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &state_monitor,
+					oal_ntohl(pe->mmap_data->common.state_monitor), 
+					sizeof(pfe_ct_pe_sw_state_monitor_t));
+
+	if (EOK != pfe_pe_unlock(pe))
 	{
-		/* Variables just to make code more readable */
-		uint32_t avg = oal_ntohl(m[i].avg);
-		uint32_t min = oal_ntohl(m[i].min);
-		uint32_t max = oal_ntohl(m[i].max);
-		uint32_t cnt = oal_ntohl(m[i].cnt);
-		/* Just print the data without interpreting them */
-		len += oal_util_snprintf(buf + len, buf_len - len, "Measurement %u:\tmin %10u\tmax %10u\tavg %10u\tcnt %10u\n", i, min, max, avg, cnt);
+		NXP_LOG_DEBUG("pfe_pe_unlock() failed\n");
 	}
-	/* Free the allocated buffer */
-	oal_mm_free(m);
 
-	return len;
+	return state_monitor.state;
+}
+
+/**
+ * @brief		Read "put" buffer
+ * @param[in]	pe The PE instance
+ * @param[out]	buf Pointer to memory where buffer shall be written
+ * @retval		EOK Success and buffer is valid
+ * @retval		EAGAIN Buffer is invalid
+ * @retval		ENOENT Buffer not found
+ */
+errno_t pfe_pe_get_data_nolock(pfe_pe_t *pe, pfe_ct_buffer_t *buf)
+{
+	uint8_t flags;
+	errno_t ret = ENOENT;
+	pfe_ct_pe_mmap_t mmap_data;
+	const pfe_ct_class_mmap_t *class_mmap_data;
+
+	/*	Get mmap base from PE[0] since all PEs have the same memory map */
+	if (EOK != pfe_pe_get_mmap(pe, &mmap_data))
+	{
+		NXP_LOG_ERROR("Could not get memory map\n");
+	}
+    else
+    {
+        class_mmap_data = &mmap_data.class_pe;
+
+        if (0U != class_mmap_data->put_buffer)
+        {
+            /*	Get "put" buffer status */
+            pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &flags,
+                    oal_ntohl(class_mmap_data->put_buffer) + offsetof(pfe_ct_buffer_t, flags),
+                        sizeof(uint8_t));
+
+            if (0U != flags)
+            {
+                /*	Copy buffer to local memory */
+                pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, buf, oal_ntohl(class_mmap_data->put_buffer), sizeof(pfe_ct_buffer_t));
+
+                /*	Clear flags */
+                flags = 0U;
+
+                pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe,
+                        oal_ntohl(class_mmap_data->put_buffer) + offsetof(pfe_ct_buffer_t, flags),
+                            &flags, sizeof(uint8_t));
+
+                ret = EOK;
+            }
+            else
+            {
+                ret = EAGAIN;
+            }
+        }
+    }
+	
+
+	return ret;
+}
+
+/**
+ * @brief		Write "get" buffer
+ * @param[in]	pe The PE instance
+ * @param[out]	buf Pointer to data to be written
+ * @retval		EOK Success and buffer is valid
+ * @retval		EAGAIN Buffer is occupied
+ * @retval		ENOENT Buffer not found
+ */
+errno_t pfe_pe_put_data_nolock(pfe_pe_t *pe, pfe_ct_buffer_t *buf)
+{
+	uint8_t flags;
+	errno_t ret = ENOENT;
+	pfe_ct_pe_mmap_t mmap_data;
+	const pfe_ct_class_mmap_t *class_mmap_data;
+
+	if (EOK != pfe_pe_get_mmap(pe, &mmap_data))
+	{
+		NXP_LOG_ERROR("Could not get memory map\n");
+	}
+    else
+    {
+        class_mmap_data = &mmap_data.class_pe;
+        if (0U != class_mmap_data->get_buffer)
+        {
+            /*	Get "get" buffer status */
+            pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &flags,
+                    oal_ntohl(class_mmap_data->get_buffer) + offsetof(pfe_ct_buffer_t, flags),
+                        sizeof(uint8_t));
+
+            if (0U == flags)
+            {
+                /*	Send data to PFE */
+                buf->flags |= 1U;
+
+                pfe_pe_memcpy_from_host_to_dmem_32_nolock(pe,
+                        oal_ntohl(class_mmap_data->get_buffer), buf, sizeof(pfe_ct_buffer_t));
+
+                ret = EOK;
+            }
+            else
+            {
+                ret = EAGAIN;
+            }
+        }
+    }
+
+	return ret;
 }
+
 /**
  * @brief		Return PE runtime statistics in text form
  * @details		Function writes formatted text into given buffer.
@@ -2124,24 +2362,40 @@ uint32_t pfe_pe_get_text_statistics(pfe_pe_t *pe, char_t *buf, uint32_t buf_len,
 	uint32_t len = 0U;
 	pfe_ct_pe_sw_state_monitor_t state_monitor;
 
-	/* Get the pfe_ct_pe_mmap_t structure from PE */
 	if (NULL == pe->mmap_data)
 	{
 		return 0U;
 	}
+
 	len += oal_util_snprintf(buf + len, buf_len - len, "\nPE %u\n----\n", pe->id);
 	len += oal_util_snprintf(buf + len, buf_len - len, "- PE state monitor -\n");
-	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &state_monitor, oal_ntohl(pe->mmap_data->common.state_monitor), sizeof(pfe_ct_pe_sw_state_monitor_t));
-	len += oal_util_snprintf(buf + len, buf_len - len, "FW State: %u (%s), counter %u\n",state_monitor.state,
-	                         pfe_pe_get_fw_state_str(state_monitor.state), oal_ntohl(state_monitor.counter));
 
-    /* This is a class PE therefore we may access the specific data */
-	if(0U != oal_ntohl(pe->mmap_data->common.measurement_count))
-	{   /* The FW provides processing time measurements */
+	/*	Make the PFE data coherent */
+	if (EOK != pfe_pe_mem_lock(pe))
+	{
+		NXP_LOG_DEBUG("Memory lock failed\n");
+	}
+
+	pfe_pe_memcpy_from_dmem_to_host_32_nolock(pe, &state_monitor,
+			oal_ntohl(pe->mmap_data->common.state_monitor), sizeof(pfe_ct_pe_sw_state_monitor_t));
+
+	len += oal_util_snprintf(buf + len, buf_len - len, "FW State: %u (%s), counter %u\n",
+			state_monitor.state, pfe_pe_get_fw_state_str(state_monitor.state),
+				oal_ntohl(state_monitor.counter));
+
+	/* This is a class PE therefore we may access the specific data */
+	if (0U != oal_ntohl(pe->mmap_data->common.measurement_count))
+	{
 		len += oal_util_snprintf(buf + len, buf_len - len, "- Measurements -\n");
-		len += pfe_pe_get_measurements(pe, oal_ntohl(pe->mmap_data->common.measurement_count),
-		                                oal_ntohl(pe->mmap_data->common.measurements),
-		                                buf + len, buf_len - len, verb_level);
+
+		/* Read processing time measurements */
+		len += pfe_pe_get_measurements_nolock(pe, oal_ntohl(pe->mmap_data->common.measurement_count),
+				oal_ntohl(pe->mmap_data->common.measurements), buf + len, buf_len - len, verb_level);
+	}
+
+	if (EOK != pfe_pe_mem_unlock(pe))
+	{
+		NXP_LOG_DEBUG("Memory unlock failed\n");
 	}
 
 	return len;
diff --git a/sw/pfe_platform/src/pfe_phy_if.c b/sw/pfe_platform/src/pfe_phy_if.c
index cec2235..0828178 100644
--- a/sw/pfe_platform/src/pfe_phy_if.c
+++ b/sw/pfe_platform/src/pfe_phy_if.c
@@ -58,7 +58,6 @@ static errno_t pfe_phy_if_write_to_class_nostats(const pfe_phy_if_t *iface, pfe_
 static errno_t pfe_phy_if_write_to_class(const pfe_phy_if_t *iface, pfe_ct_phy_if_t *class_if);
 static bool_t pfe_phy_if_has_log_if_nolock(const pfe_phy_if_t *iface, const pfe_log_if_t *log_if);
 static bool_t pfe_phy_if_has_enabled_log_if_nolock(const pfe_phy_if_t *iface);
-static bool_t pfe_phy_if_has_promisc_log_if_nolock(const pfe_phy_if_t *iface);
 static bool_t pfe_phy_if_has_loopback_log_if_nolock(const pfe_phy_if_t *iface);
 static errno_t pfe_phy_if_disable_nolock(pfe_phy_if_t *iface);
 static errno_t pfe_phy_if_set_flag_nolock(pfe_phy_if_t *iface, pfe_ct_if_flags_t flag);
@@ -84,7 +83,7 @@ static errno_t pfe_phy_if_write_to_class_nostats(const pfe_phy_if_t *iface, pfe_
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/* Be sure that phy_stats are at correct place */
-	ct_assert((sizeof(pfe_ct_phy_if_t) - sizeof(pfe_ct_phy_if_stats_t)) == offsetof(pfe_ct_phy_if_t, phy_stats));
+	ct_assert_offsetof((sizeof(pfe_ct_phy_if_t) - sizeof(pfe_ct_phy_if_stats_t)) == offsetof(pfe_ct_phy_if_t, phy_stats));
 
 	return pfe_class_write_dmem(iface->class, -1, iface->dmem_base, (void *)class_if,
 								sizeof(pfe_ct_phy_if_t) - sizeof(pfe_ct_phy_if_stats_t));
@@ -218,7 +217,7 @@ pfe_phy_if_t *pfe_phy_if_create(pfe_class_t *class, pfe_ct_phy_if_id_t id, const
 		iface->phy_if_class.id = id;
 		iface->phy_if_class.block_state = IF_BS_FORWARDING;
 		iface->phy_if_class.mirror = PFE_PHY_IF_ID_INVALID;
-		iface->phy_if_class.flags = (pfe_ct_if_flags_t)oal_htonl(IF_FL_ALLOW_Q_IN_Q|IF_FL_FF_ALL_TCP);
+		iface->phy_if_class.flags = (pfe_ct_if_flags_t)oal_htonl(IF_FL_ALLOW_Q_IN_Q|IF_FL_FF_ALL_TCP|IF_FL_ENABLED);
 
 		/* Be sure that statistics are zeroed (endianness doesn't mater for this) */
 		iface->phy_if_class.phy_stats.ingress	= 0;
@@ -533,32 +532,6 @@ static bool_t pfe_phy_if_has_enabled_log_if_nolock(const pfe_phy_if_t *iface)
 	return FALSE;
 }
 
-static bool_t pfe_phy_if_has_promisc_log_if_nolock(const pfe_phy_if_t *iface)
-{
-	LLIST_t *curItem;
-	const pfe_phy_if_list_entry_t *entry;
-
-#if defined(PFE_CFG_NULL_ARG_CHECK)
-	if (unlikely(NULL == iface))
-	{
-		NXP_LOG_ERROR("NULL argument received\n");
-		return FALSE;
-	}
-#endif /* PFE_CFG_NULL_ARG_CHECK */
-
-	LLIST_ForEach(curItem, &iface->log_ifs)
-	{
-		entry = LLIST_Data(curItem, pfe_phy_if_list_entry_t, iterator);
-		if ((TRUE == pfe_log_if_is_enabled(entry->log_if))
-				&& (TRUE == pfe_log_if_is_promisc(entry->log_if)))
-		{
-			return TRUE;
-		}
-	}
-
-	return FALSE;
-}
-
 static bool_t pfe_phy_if_has_loopback_log_if_nolock(const pfe_phy_if_t *iface)
 {
 	LLIST_t *curItem;
@@ -1685,7 +1658,7 @@ errno_t pfe_phy_if_loopback_enable(pfe_phy_if_t *iface)
 
 	/*      Enable instance loopback mode. Backup flags and write the changes. */
 	tmp = iface->phy_if_class.flags;
-	iface->phy_if_class.flags |= IF_FL_LOOPBACK;
+	iface->phy_if_class.flags |= oal_htonl(IF_FL_LOOPBACK);
 	ret = pfe_phy_if_write_to_class_nostats(iface, &iface->phy_if_class);
 	if (EOK != ret)
 	{
@@ -1772,7 +1745,7 @@ errno_t pfe_phy_if_loopback_disable(pfe_phy_if_t *iface)
 
 	/*      Disable instance loopback mode. Backup flags and write the changes. */
 	tmp = iface->phy_if_class.flags;
-	iface->phy_if_class.flags &= ~IF_FL_LOOPBACK;
+	iface->phy_if_class.flags &= (pfe_ct_if_flags_t)oal_htonl(~IF_FL_LOOPBACK);
 	ret = pfe_phy_if_write_to_class_nostats(iface, &iface->phy_if_class);
 	if (EOK != ret)
 	{
@@ -1908,24 +1881,6 @@ errno_t pfe_phy_if_promisc_disable(pfe_phy_if_t *iface)
 		NXP_LOG_DEBUG("mutex lock failed\n");
 	}
 
-	/*
-		Go through all associated logical interfaces and search
-		for promiscuous ones. If there is some enabled promiscuous
-		logical interface, don't disable promiscuous mode on the
-		physical one.
-	*/
-	if (TRUE == pfe_phy_if_has_promisc_log_if_nolock(iface))
-	{
-		NXP_LOG_INFO("%s primiscuous mode not disabled since contains promiscuous logical interface(s)\n", iface->name);
-
-		if (EOK != oal_mutex_unlock(&iface->lock))
-		{
-			NXP_LOG_DEBUG("mutex unlock failed\n");
-		}
-
-		return EOK;
-	}
-
 	/*	Disable instance promiscuous mode. Backup flags and write the changes. */
 	tmp = iface->phy_if_class.flags;
 	iface->phy_if_class.flags &= (pfe_ct_if_flags_t)oal_htonl(~IF_FL_PROMISC);
@@ -2002,9 +1957,9 @@ errno_t pfe_phy_if_loadbalance_enable(pfe_phy_if_t *iface)
 		NXP_LOG_DEBUG("mutex lock failed\n");
 	}
 
-	/*	Enable instance loadbalance mode. Backup flags and write the changes. */
+	/*	Enable instance load balance mode. Backup flags and write the changes. */
 	tmp = iface->phy_if_class.flags;
-	iface->phy_if_class.flags |= IF_FL_LOAD_BALANCE;
+	iface->phy_if_class.flags |= oal_htonl(IF_FL_LOAD_BALANCE);
 	ret = pfe_phy_if_write_to_class_nostats(iface, &iface->phy_if_class);
 	if (EOK != ret)
 	{
@@ -2054,7 +2009,7 @@ errno_t pfe_phy_if_loadbalance_disable(pfe_phy_if_t *iface)
 
 	/*	Disable instance loadbalance mode. Backup flags and write the changes. */
 	tmp = iface->phy_if_class.flags;
-	iface->phy_if_class.flags &= ~IF_FL_LOAD_BALANCE;
+	iface->phy_if_class.flags &= (pfe_ct_if_flags_t)oal_htonl(~IF_FL_LOAD_BALANCE);
 	ret = pfe_phy_if_write_to_class_nostats(iface, &iface->phy_if_class);
 	if (EOK != ret)
 	{
@@ -2377,6 +2332,11 @@ errno_t pfe_phy_if_add_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr,
 				if (EOK != ret)
 				{
 					NXP_LOG_ERROR("Unable to add MAC address: %d\n", ret);
+					/* Delete the MAC address from database */
+					ret = pfe_mac_db_del_addr(iface->mac_db, addr, owner);
+					if (EOK != ret) {
+						NXP_LOG_ERROR("Unable to delete MAC address: %d\n", ret);
+					}
 					ret = ENOEXEC;
 				}
 			}
@@ -2410,11 +2370,12 @@ errno_t pfe_phy_if_add_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr,
  * @brief		Delete MAC address
  * @param[in]	iface The interface instance
  * @param[in]	addr The MAC address to delete
+ * @param[in]	owner The identification of driver instance
  * @retval		EOK Success
  * @retval		EINVAL Invalid or missing argument
  * @retval		ENOENT Address not found
  */
-errno_t pfe_phy_if_del_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr)
+errno_t pfe_phy_if_del_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr, pfe_drv_id_t owner)
 {
 	errno_t ret = EOK;
 
@@ -2441,14 +2402,14 @@ errno_t pfe_phy_if_del_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr)
 	{
 		if (PFE_PHY_IF_EMAC == iface->type)
 		{
-			ret = pfe_mac_db_del_addr(iface->mac_db, addr);
+			ret = pfe_mac_db_del_addr(iface->mac_db, addr, owner);
 			if(EOK != ret)
 			{
 				NXP_LOG_WARNING("Unable to remove MAC address from phy_if MAC database: %d\n", ret);
 			}
 			else
 			{
-				ret = pfe_emac_del_addr(iface->port.emac, addr);
+				ret = pfe_emac_del_addr(iface->port.emac, addr, owner);
 				if (EOK != ret)
 				{
 					NXP_LOG_ERROR("Unable to del MAC address: %d\n", ret);
@@ -2537,7 +2498,7 @@ errno_t pfe_phy_if_get_mac_addr(pfe_phy_if_t *iface, pfe_mac_addr_t addr)
 			ret = pfe_mac_db_get_first_addr(iface->mac_db, MAC_DB_CRIT_ALL, PFE_TYPE_ANY, PFE_CFG_LOCAL_IF, addr);
 			if(EOK != ret)
 			{
-				NXP_LOG_WARNING("unable to get MAC address: %d\n", ret);
+				NXP_LOG_WARNING("%s: Unable to get MAC address: %d\n", iface->name, ret);
 			}
 		}
 		else if (PFE_PHY_IF_HIF == iface->type)
diff --git a/sw/pfe_platform/src/pfe_phy_if_slave.c b/sw/pfe_platform/src/pfe_phy_if_slave.c
index b6eadce..1722432 100644
--- a/sw/pfe_platform/src/pfe_phy_if_slave.c
+++ b/sw/pfe_platform/src/pfe_phy_if_slave.c
@@ -351,7 +351,7 @@ errno_t pfe_phy_if_del_log_if(pfe_phy_if_t *iface, const pfe_log_if_t *log_if)
 pfe_ct_if_op_mode_t pfe_phy_if_get_op_mode(pfe_phy_if_t *iface)
 {
 	errno_t ret;
-	pfe_ct_if_op_mode_t mode = IF_OP_DISABLED;
+	pfe_ct_if_op_mode_t mode = IF_OP_DEFAULT;
 	pfe_platform_rpc_pfe_phy_if_get_op_mode_arg_t arg = {0};
 	pfe_platform_rpc_pfe_phy_if_get_op_mode_ret_t rpc_ret = {0};
 
@@ -359,7 +359,7 @@ pfe_ct_if_op_mode_t pfe_phy_if_get_op_mode(pfe_phy_if_t *iface)
 	if (unlikely(NULL == iface))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
-		return IF_OP_DISABLED;
+		return IF_OP_DEFAULT;
 	}
 #endif /* GLOBAL_CFG_NULL_ARG_CHECK */
 
@@ -1147,7 +1147,7 @@ errno_t pfe_phy_if_add_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr,
 		if (EOK != ret)
 		{
 			NXP_LOG_DEBUG("PFE_PLATFORM_RPC_PFE_PHY_IF_ADD_MAC_ADDR failed: %d\n", ret);
-			ret = pfe_mac_db_del_addr(iface->mac_db, addr);
+			ret = pfe_mac_db_del_addr(iface->mac_db, addr, owner);
 			if(EOK != ret)
 			{
 				NXP_LOG_WARNING("Unable to remove MAC address from phy_if MAC database: %d\n", ret);
@@ -1169,11 +1169,12 @@ errno_t pfe_phy_if_add_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr,
  * @brief		Delete MAC address
  * @param[in]	iface The interface instance
  * @param[in]	addr The MAC address to delete
+ * @param[in]	owner The identification of driver instance
  * @retval		EOK Success
  * @retval		EINVAL Invalid or missing argument
  * @retval		ENOENT Address not found
  */
-errno_t pfe_phy_if_del_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr)
+errno_t pfe_phy_if_del_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr, pfe_ct_phy_if_id_t owner)
 {
 	errno_t ret = EOK;
 	pfe_platform_rpc_pfe_phy_if_del_mac_addr_arg_t arg = {0};
@@ -1205,7 +1206,7 @@ errno_t pfe_phy_if_del_mac_addr(pfe_phy_if_t *iface, const pfe_mac_addr_t addr)
 	}
 	else
 	{
-		ret = pfe_mac_db_del_addr(iface->mac_db, addr);
+		ret = pfe_mac_db_del_addr(iface->mac_db, addr, owner);
 		if(EOK != ret)
 		{
 			NXP_LOG_WARNING("Unable to remove MAC address from phy_if MAC database: %d\n", ret);
@@ -1268,7 +1269,7 @@ errno_t pfe_phy_if_get_mac_addr(pfe_phy_if_t *iface, pfe_mac_addr_t addr)
 	ret = pfe_mac_db_get_first_addr(iface->mac_db, MAC_DB_CRIT_ALL, PFE_TYPE_ANY, PFE_CFG_LOCAL_IF, addr);
 	if(EOK != ret)
 	{
-		NXP_LOG_WARNING("unable to get MAC address: %d\n", ret);
+		NXP_LOG_WARNING("%s: Unable to get MAC address: %d\n", iface->name, ret);
 	}
 
 	if (EOK != oal_mutex_unlock(&iface->lock))
diff --git a/sw/pfe_platform/src/pfe_rtable.c b/sw/pfe_platform/src/pfe_rtable.c
index 99abc88..fda60d0 100644
--- a/sw/pfe_platform/src/pfe_rtable.c
+++ b/sw/pfe_platform/src/pfe_rtable.c
@@ -29,13 +29,6 @@
 #include "pfe_rtable.h"
 #include "pfe_class.h"
 
-/**
- * @brief	Tick period for internal timer in seconds
- * @details	The timer is used to sample the active routing table entries and decrement
- * 			associated time-out values when entries are not being used by the firmware.
- */
-#define PFE_RTABLE_CFG_TICK_PERIOD_SEC			1
-
 /**
  * @brief	If TRUE then driver performs an entry update only if it is ensured that firmware
  *			and the driver are not accessing/updating the same entry in the same time.
@@ -79,8 +72,10 @@ struct pfe_rtable_tag
 	LLIST_t active_entries;					/*	List of active entries. Need to be protected by mutex */
 
 	oal_mutex_t *lock;						/*	Mutex to protect the table and related resources from concurrent accesses */
+#if !defined(PFE_CFG_TARGET_OS_AUTOSAR)
 	oal_thread_t *worker;					/*	Worker thread */
 	oal_mbox_t *mbox;						/*	Message box to communicate with the worker thread */
+#endif /* !defined(PFE_CFG_TARGET_OS_AUTOSAR) */
 
 	pfe_rtable_get_criterion_t cur_crit;	/*	Current criterion */
 	LLIST_t *cur_item;						/*	Current entry to be returned. See ...get_first() and ...get_next() */
@@ -146,6 +141,7 @@ typedef enum
 	IPV_INVALID = 0xff
 } pfe_ipv_type_t;
 
+#if !defined(PFE_CFG_TARGET_OS_AUTOSAR)
 /**
  * @brief	Worker thread signals
  * @details	Driver is sending signals to the worker thread to request specific
@@ -156,24 +152,27 @@ enum pfe_rtable_worker_signals
 	SIG_WORKER_STOP,	/*	!< Stop the thread */
 	SIG_TIMER_TICK		/*	!< Pulse from timer */
 };
+#endif /* !defined(PFE_CFG_TARGET_OS_AUTOSAR) */
 
 static uint32_t pfe_get_crc32_be(uint32_t crc, uint8_t *data, uint16_t len);
 static void pfe_rtable_invalidate(pfe_rtable_t *rtable);
 static uint32_t pfe_rtable_entry_get_hash(pfe_rtable_entry_t *entry, pfe_rtable_hash_type_t htype, uint32_t hash_mask);
-static bool_t pfe_rtable_phys_entry_is_htable(pfe_rtable_t *rtable, pfe_ct_rtable_entry_t *phys_entry);
-static bool_t pfe_rtable_phys_entry_is_pool(pfe_rtable_t *rtable, pfe_ct_rtable_entry_t *phys_entry);
+static bool_t pfe_rtable_phys_entry_is_htable(const pfe_rtable_t *rtable, const pfe_ct_rtable_entry_t *phys_entry);
+static bool_t pfe_rtable_phys_entry_is_pool(const pfe_rtable_t *rtable, const pfe_ct_rtable_entry_t *phys_entry);
 static pfe_ct_rtable_entry_t *pfe_rtable_phys_entry_get_pa(pfe_rtable_t *rtable, pfe_ct_rtable_entry_t *phys_entry_va);
 static pfe_ct_rtable_entry_t *pfe_rtable_phys_entry_get_va(pfe_rtable_t *rtable, pfe_ct_rtable_entry_t *phys_entry_pa);
 static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry);
-static void rtable_do_timeouts(pfe_rtable_t *rtable);
-static void *rtable_worker_func(void *arg);
-static bool_t pfe_rtable_match_criterion(pfe_rtable_get_criterion_t crit, pfe_rtable_criterion_arg_t *arg, pfe_rtable_entry_t *entry);
-static bool_t pfe_rtable_entry_is_in_table(pfe_rtable_entry_t *entry);
-static pfe_rtable_entry_t *pfe_rtable_get_by_phys_entry_va(pfe_rtable_t *rtable, pfe_ct_rtable_entry_t *phys_entry_va);
+static bool_t pfe_rtable_match_criterion(pfe_rtable_get_criterion_t crit, const pfe_rtable_criterion_arg_t *arg, pfe_rtable_entry_t *entry);
+static bool_t pfe_rtable_entry_is_in_table(const pfe_rtable_entry_t *entry);
+static pfe_rtable_entry_t *pfe_rtable_get_by_phys_entry_va(const pfe_rtable_t *rtable, const pfe_ct_rtable_entry_t *phys_entry_va);
 
-#define CRCPOLY_BE 0x04c11db7
+#if !defined(PFE_CFG_TARGET_OS_AUTOSAR)
+	static void *rtable_worker_func(void *arg);
+#endif /* !defined(PFE_CFG_TARGET_OS_AUTOSAR) */
 
-static pfe_rtable_entry_t *pfe_rtable_get_by_phys_entry_va(pfe_rtable_t *rtable, pfe_ct_rtable_entry_t *phys_entry_va)
+#define CRCPOLY_BE 0x04C11DB7U
+
+static pfe_rtable_entry_t *pfe_rtable_get_by_phys_entry_va(const pfe_rtable_t *rtable, const pfe_ct_rtable_entry_t *phys_entry_va)
 {
 	LLIST_t *item;
 	pfe_rtable_entry_t *entry;
@@ -215,19 +214,25 @@ static pfe_rtable_entry_t *pfe_rtable_get_by_phys_entry_va(pfe_rtable_t *rtable,
 
 static uint32_t pfe_get_crc32_be(uint32_t crc, uint8_t *data, uint16_t len)
 {
-	int32_t i;
+	uint8_t i;
+    uint16_t length = len;
+    uint32_t tempcrc = crc;
+    const uint8_t *tempdata = data;
 
-	while (len--)
+	while (length > 0U)
 	{
-		crc ^= *data++ << 24;
-
-		for (i = 0; i < 8; i++)
+		tempcrc ^= ((uint32_t)(*tempdata) << 24U);
+        tempdata++;
+        
+		for (i = 0U; i < 8U; i++)
 		{
-			crc = (crc << 1) ^ ((crc & 0x80000000) ? CRCPOLY_BE : 0);
+			tempcrc = (tempcrc << 1U) ^ ((0U != (tempcrc & 0x80000000U)) ? CRCPOLY_BE : 0U);
 		}
+        
+        length--;
 	}
 
-	return crc;
+	return tempcrc;
 }
 
 /**
@@ -249,11 +254,14 @@ static void pfe_rtable_invalidate(pfe_rtable_t *rtable)
 
 	table = (pfe_ct_rtable_entry_t *)rtable->htable_base_va;
 
-	oal_mutex_lock(rtable->lock);
+	if (unlikely(EOK != oal_mutex_lock(rtable->lock)))
+    {
+        NXP_LOG_DEBUG("Mutex lock failed\n");
+    }
 
 	for (ii=0U; ii<rtable->htable_size; ii++)
 	{
-		table[ii].flags = oal_ntohl(0);
+		table[ii].flags = (pfe_ct_rtable_flags_t)(oal_ntohl(0));
 		table[ii].next = oal_ntohl(0);
 	}
 
@@ -261,11 +269,14 @@ static void pfe_rtable_invalidate(pfe_rtable_t *rtable)
 
 	for (ii=0U; ii<rtable->pool_size; ii++)
 	{
-		table[ii].flags = oal_ntohl(0);
+		table[ii].flags = (pfe_ct_rtable_flags_t)(oal_ntohl(0));
 		table[ii].next = oal_ntohl(0);
 	}
 
-	oal_mutex_unlock(rtable->lock);
+    if (unlikely(EOK != oal_mutex_unlock(rtable->lock)))
+    {
+        NXP_LOG_DEBUG("Mutex unlock failed\n");
+    }
 }
 
 /**
@@ -281,137 +292,136 @@ static uint32_t pfe_rtable_entry_get_hash(pfe_rtable_entry_t *entry, pfe_rtable_
 	uint32_t crc = 0xffffffffU;
 	uint32_t sport = 0U;
 	uint32_t ip_addr;
-
+    
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
-		return 0U;
+        return 0;
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
-
-	if (htype & IPV4_5T)
-	{
-		if ((htype & ADD_SIP_CRC) && (htype & ADD_SPORT_CRC))
-		{
-			/*	CRC(SIP) + DIP + CRC(SPORT) + DPORT + PROTO */
-			sport = oal_ntohl(entry->phys_entry->u.v4.sip) ^ (uint32_t)oal_ntohs(entry->phys_entry->sport);
-			temp = pfe_get_crc32_be(crc, (uint8_t *)&sport, 4);
-			temp += oal_ntohl(entry->phys_entry->u.v4.dip);
-			temp += entry->phys_entry->proto;
-			temp += oal_ntohs(entry->phys_entry->dport);
-		}
-		else if (htype & ADD_SIP_CRC)
-		{
-			/*	CRC(SIP) + DIP + SPORT + DPORT + PROTO */
-			ip_addr = oal_ntohl(entry->phys_entry->u.v4.sip);
-			temp = pfe_get_crc32_be(crc, (uint8_t *)&ip_addr, 4);
-		    temp += oal_ntohl(entry->phys_entry->u.v4.dip);
-		    temp += entry->phys_entry->proto;
-		    temp += oal_ntohs(entry->phys_entry->sport);
-		    temp += oal_ntohs(entry->phys_entry->dport);
-		}
-		else if (htype & ADD_SPORT_CRC)
-		{
-			/*	SIP + DIP + CRC(SPORT) + DPORT + PROTO */
-			sport = oal_ntohs(entry->phys_entry->sport);
-			temp = pfe_get_crc32_be(crc, (uint8_t *)&sport, 4);
-			temp += oal_ntohl(entry->phys_entry->u.v4.sip);
-			temp += oal_ntohl(entry->phys_entry->u.v4.dip);
-			temp += entry->phys_entry->proto;
-			temp += oal_ntohs(entry->phys_entry->dport);
-		}
-		else
-		{
-			/*	SIP + DIP + SPORT + DPORT + PROTO */
-			temp = oal_ntohl(entry->phys_entry->u.v4.sip);
-			temp += oal_ntohl(entry->phys_entry->u.v4.dip);
-			temp += entry->phys_entry->proto;
-			temp += oal_ntohs(entry->phys_entry->sport);
-			temp += oal_ntohs(entry->phys_entry->dport);
-		}
-	}
-	else if (htype & IPV6_5T)
-	{
-		uint32_t crc_ipv6 = 0;
-		int32_t jj;
-
-		for(jj=0; jj<4 ; jj++)
-		{
-			crc_ipv6 += (oal_ntohl(entry->phys_entry->u.v6.sip[jj]));
-		}
-
-		if ((htype & ADD_SIP_CRC) && (htype & ADD_SPORT_CRC))
-		{
-			/*	CRC(SIP) + DIP + CRC(SPORT) + DPORT + PROTO */
-			sport = crc_ipv6 ^ (uint32_t)oal_ntohs(entry->phys_entry->sport);
-			temp = pfe_get_crc32_be(crc,(uint8_t *)&sport, 4);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[0]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[1]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[2]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[3]);
-			temp += entry->phys_entry->proto;
-			temp += oal_ntohs(entry->phys_entry->dport);
-		}
-		else if (htype & ADD_SIP_CRC)
-		{
-			/*	CRC(SIP) + DIP + SPORT + DPORT + PROTO */
-			temp = pfe_get_crc32_be(crc, (uint8_t *)&crc_ipv6, 4);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[0]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[1]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[2]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[3]);
-			temp += entry->phys_entry->proto;
-			temp += oal_ntohs(entry->phys_entry->sport);
-			temp += oal_ntohs(entry->phys_entry->dport);
-		}
-		else if (htype & ADD_SPORT_CRC)
-		{
-			/*	SIP + DIP + CRC(SPORT) + DPORT + PROTO */
-			sport = oal_ntohs(entry->phys_entry->sport);
-			temp = pfe_get_crc32_be(crc,(uint8_t *)&sport, 4);
-			temp += oal_ntohl(entry->phys_entry->u.v6.sip[0]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.sip[1]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.sip[2]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.sip[3]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[0]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[1]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[2]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[3]);
-			temp += entry->phys_entry->proto;
-			temp += oal_ntohs(entry->phys_entry->dport);
-		}
-		else
-		{
-			/*	SIP + DIP + SPORT + DPORT + PROTO */
-			temp = oal_ntohl(entry->phys_entry->u.v6.sip[0]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.sip[1]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.sip[2]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.sip[3]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[0]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[1]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[2]);
-			temp += oal_ntohl(entry->phys_entry->u.v6.dip[3]);
-			temp += entry->phys_entry->proto;
-			temp += oal_ntohs(entry->phys_entry->sport);
-			temp += oal_ntohs(entry->phys_entry->dport);
-		}
-	}
-	else
-	{
-		NXP_LOG_ERROR("Unknown hash type requested\n");
-		return 0U;
-	}
-
-	if (htype & ADD_SRC_PHY)
-	{
-		/*	+ PHY_ID */
+    if (0U != ((uint8_t)htype & (uint8_t)IPV4_5T))
+    {
+        if ((0U != ((uint8_t)htype & (uint8_t)ADD_SIP_CRC)) && (0U != ((uint8_t)htype & (uint8_t)ADD_SPORT_CRC)))
+        {
+            /*	CRC(SIP) + DIP + CRC(SPORT) + DPORT + PROTO */
+            sport = oal_ntohl(entry->phys_entry->u.v4.sip) ^ (uint32_t)oal_ntohs(entry->phys_entry->sport);
+            temp = pfe_get_crc32_be(crc, (uint8_t *)&sport, 4);
+            temp += oal_ntohl(entry->phys_entry->u.v4.dip);
+            temp += entry->phys_entry->proto;
+            temp += oal_ntohs(entry->phys_entry->dport);
+        }
+        else if (0U != ((uint8_t)htype & (uint8_t)ADD_SIP_CRC))
+        {
+            /*	CRC(SIP) + DIP + SPORT + DPORT + PROTO */
+            ip_addr = oal_ntohl(entry->phys_entry->u.v4.sip);
+            temp = pfe_get_crc32_be(crc, (uint8_t *)&ip_addr, 4);
+            temp += oal_ntohl(entry->phys_entry->u.v4.dip);
+            temp += entry->phys_entry->proto;
+            temp += oal_ntohs(entry->phys_entry->sport);
+            temp += oal_ntohs(entry->phys_entry->dport);
+        }
+        else if (0U != ((uint8_t)htype & (uint8_t)ADD_SPORT_CRC))
+        {
+            /*	SIP + DIP + CRC(SPORT) + DPORT + PROTO */
+            sport = (uint32_t)oal_ntohs(entry->phys_entry->sport);
+            temp = pfe_get_crc32_be(crc, (uint8_t *)&sport, 4);
+            temp += oal_ntohl(entry->phys_entry->u.v4.sip);
+            temp += oal_ntohl(entry->phys_entry->u.v4.dip);
+            temp += entry->phys_entry->proto;
+            temp += oal_ntohs(entry->phys_entry->dport);
+        }
+        else
+        {
+            /*	SIP + DIP + SPORT + DPORT + PROTO */
+            temp = oal_ntohl(entry->phys_entry->u.v4.sip);
+            temp += oal_ntohl(entry->phys_entry->u.v4.dip);
+            temp += entry->phys_entry->proto;
+            temp += oal_ntohs(entry->phys_entry->sport);
+            temp += oal_ntohs(entry->phys_entry->dport);
+        }
+    }
+    else if (0U != ((uint32_t)htype & (uint32_t)IPV6_5T))
+    {
+        uint32_t crc_ipv6 = 0;
+        int32_t jj;
+
+        for(jj=0; jj<4 ; jj++)
+        {
+            crc_ipv6 += (oal_ntohl(entry->phys_entry->u.v6.sip[jj]));
+        }
+
+        if ((0U != ((uint8_t)htype & (uint8_t)ADD_SIP_CRC)) && (0U != ((uint8_t)htype & (uint8_t)ADD_SPORT_CRC)))
+        {
+            /*	CRC(SIP) + DIP + CRC(SPORT) + DPORT + PROTO */
+            sport = crc_ipv6 ^ (uint32_t)oal_ntohs(entry->phys_entry->sport);
+            temp = pfe_get_crc32_be(crc,(uint8_t *)&sport, 4);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[0]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[1]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[2]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[3]);
+            temp += entry->phys_entry->proto;
+            temp += oal_ntohs(entry->phys_entry->dport);
+        }
+        else if (0U != ((uint8_t)htype & (uint8_t)ADD_SIP_CRC))
+        {
+            /*	CRC(SIP) + DIP + SPORT + DPORT + PROTO */
+            temp = pfe_get_crc32_be(crc, (uint8_t *)&crc_ipv6, 4);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[0]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[1]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[2]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[3]);
+            temp += entry->phys_entry->proto;
+            temp += oal_ntohs(entry->phys_entry->sport);
+            temp += oal_ntohs(entry->phys_entry->dport);
+        }
+        else if (0U != ((uint8_t)htype & (uint8_t)ADD_SPORT_CRC))
+        {
+            /*	SIP + DIP + CRC(SPORT) + DPORT + PROTO */
+            sport = (uint32_t)oal_ntohs(entry->phys_entry->sport);
+            temp = pfe_get_crc32_be(crc,(uint8_t *)&sport, 4);
+            temp += oal_ntohl(entry->phys_entry->u.v6.sip[0]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.sip[1]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.sip[2]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.sip[3]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[0]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[1]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[2]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[3]);
+            temp += entry->phys_entry->proto;
+            temp += oal_ntohs(entry->phys_entry->dport);
+        }
+        else
+        {
+            /*	SIP + DIP + SPORT + DPORT + PROTO */
+            temp = oal_ntohl(entry->phys_entry->u.v6.sip[0]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.sip[1]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.sip[2]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.sip[3]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[0]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[1]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[2]);
+            temp += oal_ntohl(entry->phys_entry->u.v6.dip[3]);
+            temp += entry->phys_entry->proto;
+            temp += oal_ntohs(entry->phys_entry->sport);
+            temp += oal_ntohs(entry->phys_entry->dport);
+        }
+    }
+    else
+    {
+        NXP_LOG_ERROR("Unknown hash type requested\n");
+        return 0U;
+    }
+
+    if (0U != ((uint8_t)htype & (uint8_t)ADD_SRC_PHY))
+    {
+        /*	+ PHY_ID */
 #if 0
-		temp += entry->phys_entry->inPhyPortNum;
+        temp += entry->phys_entry->inPhyPortNum;
 #else
-		NXP_LOG_ERROR("Unsupported hash algorithm\n");
+        NXP_LOG_ERROR("Unsupported hash algorithm\n");
 #endif /* 0 */
-	}
+    }
 
 	return (temp & hash_mask);
 }
@@ -423,7 +433,7 @@ static uint32_t pfe_rtable_entry_get_hash(pfe_rtable_entry_t *entry, pfe_rtable_
  * @retval		TRUE Entry belongs to hash table
  * @retval		FALSE Entry does not belong to hash table
  */
-static bool_t pfe_rtable_phys_entry_is_htable(pfe_rtable_t *rtable, pfe_ct_rtable_entry_t *phys_entry)
+static bool_t pfe_rtable_phys_entry_is_htable(const pfe_rtable_t *rtable, const pfe_ct_rtable_entry_t *phys_entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == rtable) || (NULL == phys_entry)))
@@ -457,7 +467,7 @@ static bool_t pfe_rtable_phys_entry_is_htable(pfe_rtable_t *rtable, pfe_ct_rtabl
  * @retval		TRUE Entry belongs to the pool
  * @retval		FALSE Entry does not belong to the pool
  */
-static bool_t pfe_rtable_phys_entry_is_pool(pfe_rtable_t *rtable, pfe_ct_rtable_entry_t *phys_entry)
+static bool_t pfe_rtable_phys_entry_is_pool(const pfe_rtable_t *rtable, const pfe_ct_rtable_entry_t *phys_entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == rtable) || (NULL == phys_entry)))
@@ -569,7 +579,7 @@ pfe_rtable_entry_t *pfe_rtable_entry_create(void)
 	}
 	else
 	{
-		memset(entry, 0, sizeof(pfe_rtable_entry_t));
+		(void)memset(entry, 0, sizeof(pfe_rtable_entry_t));
 		entry->temp_phys_entry = NULL;
 		entry->phys_entry = NULL;
 
@@ -582,7 +592,7 @@ pfe_rtable_entry_t *pfe_rtable_entry_create(void)
 		}
 		else
 		{
-			memset(entry->temp_phys_entry, 0, sizeof(pfe_ct_rtable_entry_t));
+			(void)memset(entry->temp_phys_entry, 0, sizeof(pfe_ct_rtable_entry_t));
 			entry->phys_entry = entry->temp_phys_entry;
 
 			/*	Set defaults */
@@ -597,7 +607,7 @@ pfe_rtable_entry_t *pfe_rtable_entry_create(void)
 			entry->child = NULL;
 		}
 
-		entry->temp_phys_entry->flag_ipv6 = IPV_INVALID;
+		entry->temp_phys_entry->flag_ipv6 = (uint8_t)IPV_INVALID;
 	}
 
 	return entry;
@@ -668,7 +678,7 @@ errno_t pfe_rtable_entry_set_5t(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple)
  * @retval		EOK Success
  * @retval		EINVAL Invalid argument
  */
-errno_t pfe_rtable_entry_set_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_addr)
+errno_t pfe_rtable_entry_set_sip(pfe_rtable_entry_t *entry,const pfe_ip_addr_t *ip_addr)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == entry) || (NULL == ip_addr)))
@@ -680,25 +690,25 @@ errno_t pfe_rtable_entry_set_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_ad
 
 	if (ip_addr->is_ipv4)
 	{
-		if ((entry->phys_entry->flag_ipv6 != IPV_INVALID) && (entry->phys_entry->flag_ipv6 != IPV4))
+		if ((entry->phys_entry->flag_ipv6 != (uint8_t)IPV_INVALID) && (entry->phys_entry->flag_ipv6 != (uint8_t)IPV4))
 		{
 			NXP_LOG_ERROR("IP version mismatch\n");
 			return EINVAL;
 		}
 
-		memcpy(&entry->phys_entry->u.v4.sip, &ip_addr->v4, 4);
-		entry->phys_entry->flag_ipv6 = IPV4;
+		(void)memcpy(&entry->phys_entry->u.v4.sip, &ip_addr->v4, 4);
+		entry->phys_entry->flag_ipv6 = (uint8_t)IPV4;
 	}
 	else
 	{
-		if ((entry->phys_entry->flag_ipv6 != IPV_INVALID) && (entry->phys_entry->flag_ipv6 != IPV6))
+		if ((entry->phys_entry->flag_ipv6 != (uint8_t)IPV_INVALID) && (entry->phys_entry->flag_ipv6 != (uint8_t)IPV6))
 		{
 			NXP_LOG_ERROR("IP version mismatch\n");
 			return EINVAL;
 		}
 
-		memcpy(&entry->phys_entry->u.v6.sip[0], &ip_addr->v6, 16);
-		entry->phys_entry->flag_ipv6 = IPV6;
+		(void)memcpy(&entry->phys_entry->u.v6.sip[0], &ip_addr->v6, 16);
+		entry->phys_entry->flag_ipv6 = (uint8_t)IPV6;
 	}
 
 	return EOK;
@@ -726,7 +736,7 @@ void pfe_rtable_entry_get_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_addr)
 		NXP_LOG_ERROR("Entry conversion failed\n");
 	}
 
-	memcpy(ip_addr, &tuple.src_ip, sizeof(pfe_ip_addr_t));
+	(void)memcpy(ip_addr, &tuple.src_ip, sizeof(pfe_ip_addr_t));
 }
 
 /**
@@ -736,7 +746,7 @@ void pfe_rtable_entry_get_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_addr)
  * @retval		EOK Success
  * @retval		EINVAL Invalid argument
  */
-errno_t pfe_rtable_entry_set_dip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_addr)
+errno_t pfe_rtable_entry_set_dip(pfe_rtable_entry_t *entry, const pfe_ip_addr_t *ip_addr)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == entry) || (NULL == ip_addr)))
@@ -748,25 +758,25 @@ errno_t pfe_rtable_entry_set_dip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_ad
 
 	if (ip_addr->is_ipv4)
 	{
-		if ((entry->phys_entry->flag_ipv6 != IPV_INVALID) && (entry->phys_entry->flag_ipv6 != IPV4))
+		if ((entry->phys_entry->flag_ipv6 != (uint8_t)IPV_INVALID) && (entry->phys_entry->flag_ipv6 != (uint8_t)IPV4))
 		{
 			NXP_LOG_ERROR("IP version mismatch\n");
 			return EINVAL;
 		}
 
-		memcpy(&entry->phys_entry->u.v4.dip, &ip_addr->v4, 4);
-		entry->phys_entry->flag_ipv6 = IPV4;
+		(void)memcpy(&entry->phys_entry->u.v4.dip, &ip_addr->v4, 4);
+		entry->phys_entry->flag_ipv6 = (uint8_t)IPV4;
 	}
 	else
 	{
-		if ((entry->phys_entry->flag_ipv6 != IPV_INVALID) && (entry->phys_entry->flag_ipv6 != IPV6))
+		if ((entry->phys_entry->flag_ipv6 != (uint8_t)IPV_INVALID) && (entry->phys_entry->flag_ipv6 != (uint8_t)IPV6))
 		{
 			NXP_LOG_ERROR("IP version mismatch\n");
 			return EINVAL;
 		}
 
-		memcpy(&entry->phys_entry->u.v6.dip[0], &ip_addr->v6, 16);
-		entry->phys_entry->flag_ipv6 = IPV6;
+		(void)memcpy(&entry->phys_entry->u.v6.dip[0], &ip_addr->v6, 16);
+		entry->phys_entry->flag_ipv6 = (uint8_t)IPV6;
 	}
 
 	return EOK;
@@ -794,7 +804,7 @@ void pfe_rtable_entry_get_dip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *ip_addr)
 		NXP_LOG_ERROR("Entry conversion failed\n");
 	}
 
-	memcpy(ip_addr, &tuple.dst_ip, sizeof(pfe_ip_addr_t));
+	(void)memcpy(ip_addr, &tuple.dst_ip, sizeof(pfe_ip_addr_t));
 }
 
 /**
@@ -820,7 +830,7 @@ void pfe_rtable_entry_set_sport(pfe_rtable_entry_t *entry, uint16_t sport)
  * @param[in]	entry The routing table entry instance
  * @return		The assigned source port number
  */
-uint16_t pfe_rtable_entry_get_sport(pfe_rtable_entry_t *entry)
+uint16_t pfe_rtable_entry_get_sport(const pfe_rtable_entry_t *entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -856,7 +866,7 @@ void pfe_rtable_entry_set_dport(pfe_rtable_entry_t *entry, uint16_t dport)
  * @param[in]	entry The routing table entry instance
  * @return		The assigned destination port number
  */
-uint16_t pfe_rtable_entry_get_dport(pfe_rtable_entry_t *entry)
+uint16_t pfe_rtable_entry_get_dport(const pfe_rtable_entry_t *entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -892,7 +902,7 @@ void pfe_rtable_entry_set_proto(pfe_rtable_entry_t *entry, uint8_t proto)
  * @param[in]	entry The routing table entry instance
  * @return		The assigned protocol number
  */
-uint8_t pfe_rtable_entry_get_proto(pfe_rtable_entry_t *entry)
+uint8_t pfe_rtable_entry_get_proto(const pfe_rtable_entry_t *entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -938,7 +948,7 @@ errno_t pfe_rtable_entry_set_dstif_id(pfe_rtable_entry_t *entry, pfe_ct_phy_if_i
  * @retval		EOK Success
  * @retval		EINVAL Invalid argument
  */
-errno_t pfe_rtable_entry_set_dstif(pfe_rtable_entry_t *entry, pfe_phy_if_t *iface)
+errno_t pfe_rtable_entry_set_dstif(pfe_rtable_entry_t *entry, const pfe_phy_if_t *iface)
 {
 	pfe_ct_phy_if_id_t if_id = PFE_PHY_IF_ID_INVALID;
 
@@ -965,7 +975,7 @@ errno_t pfe_rtable_entry_set_dstif(pfe_rtable_entry_t *entry, pfe_phy_if_t *ifac
  * @retval		EOK Success
  * @retval		EINVAL Invalid argument
  */
-errno_t pfe_rtable_entry_set_out_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *output_sip)
+errno_t pfe_rtable_entry_set_out_sip(pfe_rtable_entry_t *entry, const pfe_ip_addr_t *output_sip)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == entry) || (NULL == output_sip)))
@@ -975,15 +985,15 @@ errno_t pfe_rtable_entry_set_out_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *o
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	if ((IPV_INVALID != entry->phys_entry->flag_ipv6) && (output_sip->is_ipv4))
+	if (((uint8_t)IPV_INVALID != entry->phys_entry->flag_ipv6) && (output_sip->is_ipv4))
 	{
-		memcpy(&entry->phys_entry->args.ipv.v4.sip, &output_sip->v4, 4);
-		entry->phys_entry->flag_ipv6 = IPV4;
+		(void)memcpy(&entry->phys_entry->args.ipv.v4.sip, &output_sip->v4, 4);
+		entry->phys_entry->flag_ipv6 = (uint8_t)IPV4;
 	}
-	else if ((IPV_INVALID != entry->phys_entry->flag_ipv6) && (!output_sip->is_ipv4))
+	else if (((uint8_t)IPV_INVALID != entry->phys_entry->flag_ipv6) && (!output_sip->is_ipv4))
 	{
-		memcpy(&entry->phys_entry->args.ipv.v6.sip[0], &output_sip->v6, 16);
-		entry->phys_entry->flag_ipv6 = IPV6;
+		(void)memcpy(&entry->phys_entry->args.ipv.v6.sip[0], &output_sip->v6, 16);
+		entry->phys_entry->flag_ipv6 = (uint8_t)IPV6;
 	}
 	else
 	{
@@ -991,7 +1001,7 @@ errno_t pfe_rtable_entry_set_out_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *o
 		return EINVAL;
 	}
 
-	entry->phys_entry->actions = oal_htonl(RT_ACT_CHANGE_SIP_ADDR);
+	entry->phys_entry->actions |= oal_htonl(RT_ACT_CHANGE_SIP_ADDR);
 
 	return EOK;
 }
@@ -1005,7 +1015,7 @@ errno_t pfe_rtable_entry_set_out_sip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *o
  * @retval		EOK Success
  * @retval		EINVAL Invalid argument
  */
-errno_t pfe_rtable_entry_set_out_dip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *output_dip)
+errno_t pfe_rtable_entry_set_out_dip(pfe_rtable_entry_t *entry, const pfe_ip_addr_t *output_dip)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == entry) || (NULL == output_dip)))
@@ -1015,15 +1025,15 @@ errno_t pfe_rtable_entry_set_out_dip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *o
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	if ((IPV_INVALID != entry->phys_entry->flag_ipv6) && (output_dip->is_ipv4))
+	if (((uint8_t)IPV_INVALID != entry->phys_entry->flag_ipv6) && (output_dip->is_ipv4))
 	{
-		memcpy(&entry->phys_entry->args.ipv.v4.dip, &output_dip->v4, 4);
-		entry->phys_entry->flag_ipv6 = IPV4;
+		(void)memcpy(&entry->phys_entry->args.ipv.v4.dip, &output_dip->v4, 4);
+		entry->phys_entry->flag_ipv6 = (uint8_t)IPV4;
 	}
-	else if ((IPV_INVALID != entry->phys_entry->flag_ipv6) && (!output_dip->is_ipv4))
+	else if (((uint8_t)IPV_INVALID != entry->phys_entry->flag_ipv6) && (!output_dip->is_ipv4))
 	{
-		memcpy(&entry->phys_entry->args.ipv.v6.dip[0], &output_dip->v6, 16);
-		entry->phys_entry->flag_ipv6 = IPV6;
+		(void)memcpy(&entry->phys_entry->args.ipv.v6.dip[0], &output_dip->v6, 16);
+		entry->phys_entry->flag_ipv6 = (uint8_t)IPV6;
 	}
 	else
 	{
@@ -1031,7 +1041,7 @@ errno_t pfe_rtable_entry_set_out_dip(pfe_rtable_entry_t *entry, pfe_ip_addr_t *o
 		return EINVAL;
 	}
 
-	entry->phys_entry->actions = oal_htonl(RT_ACT_CHANGE_DIP_ADDR);
+	entry->phys_entry->actions |= oal_htonl(RT_ACT_CHANGE_DIP_ADDR);
 
 	return EOK;
 }
@@ -1130,7 +1140,7 @@ void pfe_rtable_entry_remove_ttl_decrement(pfe_rtable_entry_t *entry)
  * @param[in]	smac The desired output source MAC address
  * @param[in]	dmac The desired output destination MAC address
  */
-void pfe_rtable_entry_set_out_mac_addrs(pfe_rtable_entry_t *entry, pfe_mac_addr_t smac, pfe_mac_addr_t dmac)
+void pfe_rtable_entry_set_out_mac_addrs(pfe_rtable_entry_t *entry, const pfe_mac_addr_t smac, const pfe_mac_addr_t dmac)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -1140,8 +1150,8 @@ void pfe_rtable_entry_set_out_mac_addrs(pfe_rtable_entry_t *entry, pfe_mac_addr_
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	memcpy(entry->phys_entry->args.smac, smac, sizeof(pfe_mac_addr_t));
-	memcpy(entry->phys_entry->args.dmac, dmac, sizeof(pfe_mac_addr_t));
+	(void)memcpy(entry->phys_entry->args.smac, smac, sizeof(pfe_mac_addr_t));
+	(void)memcpy(entry->phys_entry->args.dmac, dmac, sizeof(pfe_mac_addr_t));
 	entry->phys_entry->actions |= oal_htonl(RT_ACT_ADD_ETH_HDR);
 }
 
@@ -1176,24 +1186,28 @@ void pfe_rtable_entry_set_out_vlan(pfe_rtable_entry_t *entry, uint16_t vlan)
  * return		Non-zero VLAN ID (host endian) if VLAN manipulation has been
  *				requested, zero otherwise
  */
-uint16_t pfe_rtable_entry_get_out_vlan(pfe_rtable_entry_t *entry)
+uint16_t pfe_rtable_entry_get_out_vlan(const pfe_rtable_entry_t *entry)
 {
+    uint16_t ret = 0U;
+    
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
 	{
 		NXP_LOG_ERROR("NULL argument received\n");
-		return 0U;
 	}
+    else
+    {
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	if (0U != (oal_ntohl(entry->phys_entry->actions) & RT_ACT_ADD_VLAN_HDR))
-	{
-		return oal_ntohs(entry->phys_entry->args.vlan);
-	}
-	else
-	{
-		return 0U;
-	}
+        if (0U != (oal_ntohl(entry->phys_entry->actions) & (uint32_t)RT_ACT_ADD_VLAN_HDR))
+        {
+            ret = oal_ntohs(entry->phys_entry->args.vlan);
+        }
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+    }
+#endif /* PFE_CFG_NULL_ARG_CHECK */
+
+    return ret;
 }
 
 /**
@@ -1226,7 +1240,7 @@ void pfe_rtable_entry_set_out_inner_vlan(pfe_rtable_entry_t *entry, uint16_t vla
  */
 void pfe_rtable_entry_set_out_pppoe_sid(pfe_rtable_entry_t *entry, uint16_t sid)
 {
-	pfe_ct_route_actions_t flags;
+	uint32_t flags;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -1236,15 +1250,15 @@ void pfe_rtable_entry_set_out_pppoe_sid(pfe_rtable_entry_t *entry, uint16_t sid)
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	flags = oal_ntohl(entry->phys_entry->actions);
+	flags = (pfe_ct_route_actions_t)(oal_ntohl(entry->phys_entry->actions));
 
-	if (0 != (flags & RT_ACT_ADD_VLAN1_HDR))
+	if (0U != (flags & (uint32_t)RT_ACT_ADD_VLAN1_HDR))
 	{
 		NXP_LOG_ERROR("Action (PFE_RTABLE_ADD_PPPOE_HDR) must no be combined with PFE_RTABLE_ADD_VLAN1_HDR\n");
 		return;
 	}
 
-	if (0 == (flags & RT_ACT_ADD_ETH_HDR))
+	if (0U == (flags & (uint32_t)RT_ACT_ADD_ETH_HDR))
 	{
 		NXP_LOG_ERROR("Action (PFE_RTABLE_ADD_PPPOE_HDR) requires also the PFE_RTABLE_ADD_ETH_HDR flag set\n");
 		return;
@@ -1267,7 +1281,7 @@ void pfe_rtable_entry_set_id5t(pfe_rtable_entry_t *entry, uint32_t id5t)
 	entry->phys_entry->id5t = oal_htonl(id5t);   
 }
 
-errno_t pfe_rtable_entry_get_id5t(pfe_rtable_entry_t *entry, uint32_t *id5t)
+errno_t pfe_rtable_entry_get_id5t(const pfe_rtable_entry_t *entry, uint32_t *id5t)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -1318,7 +1332,10 @@ void pfe_rtable_entry_set_timeout(pfe_rtable_entry_t *entry, uint32_t timeout)
 
 	if (NULL != entry->rtable)
 	{
-		oal_mutex_lock(entry->rtable->lock);
+        if (unlikely(EOK != oal_mutex_lock(entry->rtable->lock)))
+        {
+            NXP_LOG_DEBUG("Mutex lock failed\n");
+        }
 	}
 
 	if (0xffffffffU == entry->timeout)
@@ -1345,7 +1362,10 @@ void pfe_rtable_entry_set_timeout(pfe_rtable_entry_t *entry, uint32_t timeout)
 
 	if (NULL != entry->rtable)
 	{
-		oal_mutex_unlock(entry->rtable->lock);
+        if (unlikely(EOK != oal_mutex_unlock(entry->rtable->lock)))
+        {
+            NXP_LOG_DEBUG("Mutex unlock failed\n");
+        }
 	}
 }
 
@@ -1375,7 +1395,7 @@ void pfe_rtable_entry_set_route_id(pfe_rtable_entry_t *entry, uint32_t route_id)
  * @retval		EOK Success
  * @retval		ENOENT No route ID associated with the entry
  */
-errno_t pfe_rtable_entry_get_route_id(pfe_rtable_entry_t *entry, uint32_t *route_id)
+errno_t pfe_rtable_entry_get_route_id(const pfe_rtable_entry_t *entry, uint32_t *route_id)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == entry) || (NULL == route_id)))
@@ -1481,7 +1501,7 @@ void pfe_rtable_entry_set_child(pfe_rtable_entry_t *entry, pfe_rtable_entry_t *c
  * @param[in]	entry The routing table entry instance
  * @return		The associated routing table entry linked with the 'entry'. NULL if there is not link.
  */
-pfe_rtable_entry_t *pfe_rtable_entry_get_child(pfe_rtable_entry_t *entry)
+pfe_rtable_entry_t *pfe_rtable_entry_get_child(const pfe_rtable_entry_t *entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -1500,7 +1520,7 @@ pfe_rtable_entry_t *pfe_rtable_entry_get_child(pfe_rtable_entry_t *entry)
  * @retval		TRUE Entry is in a routing table
  * @retval		FALSE Entry is not in a routing table
  */
-static bool_t pfe_rtable_entry_is_in_table(pfe_rtable_entry_t *entry)
+static bool_t pfe_rtable_entry_is_in_table(const pfe_rtable_entry_t *entry)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == entry))
@@ -1549,7 +1569,7 @@ static bool_t pfe_rtable_entry_is_duplicate(pfe_rtable_t *rtable, pfe_rtable_ent
 	if (EOK != pfe_rtable_entry_to_5t(entry, &arg.five_tuple))
 	{
 		NXP_LOG_ERROR("Entry conversion failed\n");
-		return EINVAL;
+		return FALSE;
 	}
 
 	/*	Search for first matching entry */
@@ -1561,14 +1581,11 @@ static bool_t pfe_rtable_entry_is_duplicate(pfe_rtable_t *rtable, pfe_rtable_ent
 			/*	Get data */
 			entry2 = LLIST_Data(item, pfe_rtable_entry_t, list_entry);
 
-			if (NULL != entry)
-			{
-				if (TRUE == pfe_rtable_match_criterion(RTABLE_CRIT_BY_5_TUPLE, &arg, entry2))
-				{
-					match = TRUE;
-					break;
-				}
-			}
+            if (TRUE == pfe_rtable_match_criterion(RTABLE_CRIT_BY_5_TUPLE, &arg, entry2))
+            {
+                match = TRUE;
+                break;
+            }
 		}
 	}
 
@@ -1587,13 +1604,14 @@ static bool_t pfe_rtable_entry_is_duplicate(pfe_rtable_t *rtable, pfe_rtable_ent
  */
 errno_t pfe_rtable_add_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
 {
-	pfe_rtable_hash_type_t hash_type = (IPV4 == entry->phys_entry->flag_ipv6) ? IPV4_5T : IPV6_5T;
+	pfe_rtable_hash_type_t hash_type = ((uint8_t)IPV4 == entry->phys_entry->flag_ipv6) ? IPV4_5T : IPV6_5T;
 	uint32_t hash;
 	pfe_ct_rtable_entry_t *hash_table_va = (pfe_ct_rtable_entry_t *)rtable->htable_base_va;
 	pfe_ct_rtable_entry_t *new_phys_entry_va = NULL, *new_phys_entry_pa = NULL, *last_phys_entry_va = NULL;
+    errno_t ret;
 
 #if (TRUE == PFE_RTABLE_CFG_PARANOID_ENTRY_UPDATE)
-	uint32_t valid_tmp;
+	pfe_ct_rtable_flags_t valid_tmp;
 #endif /* PFE_RTABLE_CFG_PARANOID_ENTRY_UPDATE */
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
@@ -1605,22 +1623,30 @@ errno_t pfe_rtable_add_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/*	Protect table accesses */
-	oal_mutex_lock(rtable->lock);
+	if (unlikely(EOK != oal_mutex_lock(rtable->lock)))
+    {
+        NXP_LOG_DEBUG("Mutex lock failed\n");
+    }
 
 	/*	Check for duplicates */
 	if (TRUE == pfe_rtable_entry_is_duplicate(rtable, entry))
 	{
 		NXP_LOG_INFO("Entry already added\n");
-		oal_mutex_unlock(rtable->lock);
+        
+        if (unlikely(EOK != oal_mutex_unlock(rtable->lock)))
+        {
+            NXP_LOG_DEBUG("Mutex unlock failed\n");
+        }
+
 		return EEXIST;
 	}
 
-	hash = pfe_rtable_entry_get_hash(entry, hash_type, (rtable->htable_size-1));
-	entry->temp_phys_entry->flags = 0U;
-	entry->temp_phys_entry->status &= ~RT_STATUS_ACTIVE;
+	hash = pfe_rtable_entry_get_hash(entry, hash_type, (rtable->htable_size - 1U));
+	entry->temp_phys_entry->flags = RT_FL_NONE;
+	entry->temp_phys_entry->status &= ~(uint8_t)RT_STATUS_ACTIVE;
 
 	/*	Allocate 'real' entry from hash heads or pool */
-	if (FALSE == !!(oal_ntohl(hash_table_va[hash].flags) & RT_FL_VALID))
+	if (0U == (oal_ntohl(hash_table_va[hash].flags) & (uint32_t)RT_FL_VALID))
 	{
 		new_phys_entry_va = &hash_table_va[hash];
 	}
@@ -1631,13 +1657,17 @@ errno_t pfe_rtable_add_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
 		new_phys_entry_va = fifo_get(rtable->pool_va);
 		if (NULL == new_phys_entry_va)
 		{
-			oal_mutex_unlock(rtable->lock);
+            if (unlikely(EOK != oal_mutex_unlock(rtable->lock)))
+            {
+                NXP_LOG_DEBUG("Mutex unlock failed\n");
+            }
+
 			return ENOENT;
 		}
 	}
 
 	/*	Make sure the new entry is invalid */
-	new_phys_entry_va->flags = 0U;
+	new_phys_entry_va->flags = RT_FL_NONE;
 
 	/*	Get physical address */
 	new_phys_entry_pa = pfe_rtable_phys_entry_get_pa(rtable, new_phys_entry_va);
@@ -1667,7 +1697,7 @@ errno_t pfe_rtable_add_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
 #if (TRUE == PFE_RTABLE_CFG_PARANOID_ENTRY_UPDATE)
 		/*	Invalidate the last entry first */
 		valid_tmp = last_phys_entry_va->flags;
-		last_phys_entry_va->flags = 0U;
+		last_phys_entry_va->flags = RT_FL_NONE;
 
 		/*	Wait some time due to sync with firmware */
 		oal_time_usleep(1000U);
@@ -1686,7 +1716,7 @@ errno_t pfe_rtable_add_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
 	}
 
 	/*	Copy temporary entry into its destination (pool/hash entry) */
-	memcpy(new_phys_entry_va, entry->temp_phys_entry, sizeof(pfe_ct_rtable_entry_t));
+	(void)memcpy(new_phys_entry_va, entry->temp_phys_entry, sizeof(pfe_ct_rtable_entry_t));
 
 	/*	Remember the real pointer */
 	entry->phys_entry = new_phys_entry_va;
@@ -1701,8 +1731,7 @@ errno_t pfe_rtable_add_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
 	hal_wmb();
 
 	/*	Validate the new entry */
-	entry->phys_entry->flags = oal_htonl(RT_FL_VALID | ((IPV4 == entry->phys_entry->flag_ipv6) ? 0 : RT_FL_IPV6));
-
+	entry->phys_entry->flags = (pfe_ct_rtable_flags_t)oal_htonl((uint32_t)RT_FL_VALID | (((uint8_t)IPV4 == entry->phys_entry->flag_ipv6) ? 0U : (uint32_t)RT_FL_IPV6));
 	entry->prev = (NULL == last_phys_entry_va) ? NULL : pfe_rtable_get_by_phys_entry_va(rtable, last_phys_entry_va);
 	entry->next = NULL;
 	if (NULL != entry->prev)
@@ -1713,24 +1742,32 @@ errno_t pfe_rtable_add_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
 
 	LLIST_AddAtEnd(&entry->list_entry, &rtable->active_entries);
 
-	NXP_LOG_INFO("RTable entry added, hash: 0x%x\n", hash);
+	NXP_LOG_INFO("RTable entry added, hash: 0x%x\n", (uint_t)hash);
 
 	entry->rtable = rtable;
 
-	oal_mutex_unlock(rtable->lock);
+    if (unlikely(EOK != oal_mutex_unlock(rtable->lock)))
+    {
+        NXP_LOG_DEBUG("Mutex unlock failed\n");
+    }
+
 	return EOK;
 
 free_and_fail:
-	if (NULL != new_phys_entry_va)
-	{
-		if (pfe_rtable_phys_entry_is_pool(rtable, new_phys_entry_va))
-		{
-			/*	Entry from the pool. Return it. */
-			fifo_put(rtable->pool_va, new_phys_entry_va);
-		}
-	}
-
-	oal_mutex_unlock(rtable->lock);
+    if (pfe_rtable_phys_entry_is_pool(rtable, new_phys_entry_va))
+    {
+        /*	Entry from the pool. Return it. */
+        ret = fifo_put(rtable->pool_va, new_phys_entry_va);
+        if (EOK != ret)
+        {
+            NXP_LOG_ERROR("Couldn't return routing table entry to the pool\n");
+        }
+    }
+    
+    if (unlikely(EOK != oal_mutex_unlock(rtable->lock)))
+    {
+        NXP_LOG_DEBUG("Mutex unlock failed\n");
+    }
 
 	return EFAULT;
 }
@@ -1755,11 +1792,17 @@ errno_t pfe_rtable_del_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/*	Protect table accesses */
-	oal_mutex_lock(rtable->lock);
+	if (unlikely(EOK != oal_mutex_lock(rtable->lock)))
+    {
+        NXP_LOG_DEBUG("Mutex lock failed\n");
+    }
 
 	ret = pfe_rtable_del_entry_nolock(rtable, entry);
-
-	oal_mutex_unlock(rtable->lock);
+    
+    if (unlikely(EOK != oal_mutex_unlock(rtable->lock)))
+    {
+        NXP_LOG_DEBUG("Mutex unlock failed\n");
+    }
 
 	return ret;
 }
@@ -1774,7 +1817,9 @@ errno_t pfe_rtable_del_entry(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
  */
 static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entry_t *entry)
 {
-	uint32_t valid_tmp;
+    pfe_ct_rtable_entry_t *next_phys_entry_pa = NULL;
+    errno_t ret;
+	pfe_ct_rtable_flags_t valid_tmp;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == rtable) || (NULL == entry)))
@@ -1792,7 +1837,7 @@ static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entr
 	if (TRUE == pfe_rtable_phys_entry_is_htable(rtable, entry->phys_entry))
 	{
 		/*	Invalidate the found entry. This will disable the whole chain. */
-		entry->phys_entry->flags = 0U;
+		entry->phys_entry->flags = RT_FL_NONE;
 
 		if (NULL != entry->next)
 		{
@@ -1800,7 +1845,7 @@ static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entr
 			/*	Invalidate also the next entry if any. This will prevent uncertainty
 				during copying next entry to the place of the found one. */
 			valid_tmp = entry->next->phys_entry->flags;
-			entry->next->phys_entry->flags = 0U;
+			entry->next->phys_entry->flags = RT_FL_NONE;
 
 			/*	Ensure that all previous writes has been done */
 			hal_wmb();
@@ -1810,13 +1855,14 @@ static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entr
 #endif /* PFE_RTABLE_CFG_PARANOID_ENTRY_UPDATE */
 
 			/*	Replace hash table entry with next (pool) entry */
-			memcpy(entry->phys_entry, entry->next->phys_entry, sizeof(pfe_ct_rtable_entry_t));
+			(void)memcpy(entry->phys_entry, entry->next->phys_entry, sizeof(pfe_ct_rtable_entry_t));
 
 			/*	Clear the copied entry (next one) and return it back to the pool */
-			memset(entry->next->phys_entry, 0, sizeof(pfe_ct_rtable_entry_t));
+			(void)memset(entry->next->phys_entry, 0, sizeof(pfe_ct_rtable_entry_t));
 			if (TRUE == pfe_rtable_phys_entry_is_pool(rtable, entry->next->phys_entry))
 			{
-				if (EOK != fifo_put(rtable->pool_va, entry->next->phys_entry))
+                ret = fifo_put(rtable->pool_va, entry->next->phys_entry);
+				if (EOK != ret)
 				{
 					NXP_LOG_ERROR("Couldn't return routing table entry to the pool\n");
 				}
@@ -1828,7 +1874,8 @@ static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entr
 
 			/*	Next entry now points to the copied physical one */
 			entry->next->phys_entry = entry->phys_entry;
-			entry->next->phys_entry->rt_orig = oal_htonl((uint32_t)((addr_t)pfe_rtable_phys_entry_get_pa(rtable, entry->next->phys_entry) & 0xffffffffU));
+            next_phys_entry_pa = pfe_rtable_phys_entry_get_pa(rtable, entry->next->phys_entry);
+			entry->next->phys_entry->rt_orig = oal_htonl((uint32_t)((addr_t)next_phys_entry_pa & 0xffffffffU));
 
 			/*	Remove entry from the list of active entries and ensure consistency
 			 	of get_first() and get_next() calls */
@@ -1863,7 +1910,7 @@ static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entr
 			oal_time_usleep(1000);
 
 			/*	Zero-out the entry */
-			memset(entry->phys_entry, 0, sizeof(pfe_ct_rtable_entry_t));
+			(void)memset(entry->phys_entry, 0, sizeof(pfe_ct_rtable_entry_t));
 
 			/*	Remove entry from the list of active entries and ensure consistency
 				of get_first() and get_next() calls */
@@ -1884,10 +1931,10 @@ static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entr
 #if (TRUE == PFE_RTABLE_CFG_PARANOID_ENTRY_UPDATE)
 		/*	Invalidate the previous entry */
 		valid_tmp = entry->prev->phys_entry->flags;
-		entry->prev->phys_entry->flags = 0U;
+		entry->prev->phys_entry->flags = RT_FL_NONE;
 
 		/*	Invalidate the found entry */
-		entry->phys_entry->flags = 0U;
+		entry->phys_entry->flags = RT_FL_NONE;
 
 		/*	Wait some time to sync with firmware */
 		oal_time_usleep(1000U);
@@ -1905,9 +1952,9 @@ static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entr
 #endif /* PFE_RTABLE_CFG_PARANOID_ENTRY_UPDATE */
 
 		/*	Clear the found entry and return it back to the pool */
-		memset(entry->phys_entry, 0, sizeof(pfe_ct_rtable_entry_t));
-
-		if (EOK != fifo_put(rtable->pool_va, entry->phys_entry))
+		(void)memset(entry->phys_entry, 0, sizeof(pfe_ct_rtable_entry_t));
+        ret = fifo_put(rtable->pool_va, entry->phys_entry);
+		if (EOK != ret)
 		{
 			NXP_LOG_ERROR("Couldn't return routing table entry to the pool\n");
 		}
@@ -1934,7 +1981,7 @@ static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entr
 	}
 	else
 	{
-		NXP_LOG_ERROR("Wrong address (found rtable entry @ v0x%p)\n", entry->phys_entry);
+		NXP_LOG_ERROR("Wrong address (found rtable entry @ v0x%p)\n", (void *)entry->phys_entry);
 	}
 
 	entry->rtable = NULL;
@@ -1947,7 +1994,7 @@ static errno_t pfe_rtable_del_entry_nolock(pfe_rtable_t *rtable, pfe_rtable_entr
  * @param[in]	rtable The routing table instance
  * @note		Runs within the rtable worker thread context
  */
-static void rtable_do_timeouts(pfe_rtable_t *rtable)
+void pfe_rtable_do_timeouts(pfe_rtable_t *rtable)
 {
 	LLIST_t *item;
 	LLIST_t to_be_removed_list;
@@ -1963,7 +2010,10 @@ static void rtable_do_timeouts(pfe_rtable_t *rtable)
 	}
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
-	oal_mutex_lock(rtable->lock);
+	if (unlikely(EOK != oal_mutex_lock(rtable->lock)))
+    {
+        NXP_LOG_DEBUG("Mutex lock failed\n");
+    }
 
 	LLIST_Init(&to_be_removed_list);
 
@@ -1971,23 +2021,32 @@ static void rtable_do_timeouts(pfe_rtable_t *rtable)
 	LLIST_ForEach(item, &rtable->active_entries)
 	{
 		entry = LLIST_Data(item, pfe_rtable_entry_t, list_entry);
-		flags = entry->phys_entry->status;
+		flags = (uint8_t)entry->phys_entry->status;
 
 		if (0xffffffffU == entry->timeout)
 		{
 			continue;
 		}
 
-		if (0 != (RT_STATUS_ACTIVE & flags))
+		if (0U != ((uint8_t)RT_STATUS_ACTIVE & flags))
 		{
 			/*	Entry is active. Reset timeout and the active flag. */
 			entry->curr_timeout = entry->timeout;
-			entry->phys_entry->status &= ~RT_STATUS_ACTIVE;
+			entry->phys_entry->status &= ~(uint8_t)RT_STATUS_ACTIVE;
 		}
 		else
 		{
+			if (entry->curr_timeout >= PFE_RTABLE_CFG_TICK_PERIOD_SEC)
+			{
+				entry->curr_timeout -= PFE_RTABLE_CFG_TICK_PERIOD_SEC;
+			}
+			else
+			{
+				entry->curr_timeout = 0;
+			}
+			
 			/*	Entry is not active */
-			if (0 == entry->curr_timeout)
+			if (0U == entry->curr_timeout)
 			{
 				/*	Call user's callback if requested */
 				if (NULL != entry->callback)
@@ -1998,17 +2057,6 @@ static void rtable_do_timeouts(pfe_rtable_t *rtable)
 				/*	Collect entries to be removed */
 				LLIST_AddAtEnd(&entry->list_to_remove_entry, &to_be_removed_list);
 			}
-			else
-			{
-				if (entry->curr_timeout >= PFE_RTABLE_CFG_TICK_PERIOD_SEC)
-				{
-					entry->curr_timeout -= PFE_RTABLE_CFG_TICK_PERIOD_SEC;
-				}
-				else
-				{
-					entry->curr_timeout = 0;
-				}
-			}
 		}
 	}
 
@@ -2024,11 +2072,15 @@ static void rtable_do_timeouts(pfe_rtable_t *rtable)
 		}
 	}
 
-	oal_mutex_unlock(rtable->lock);
+    if (unlikely(EOK != oal_mutex_unlock(rtable->lock)))
+    {
+        NXP_LOG_DEBUG("Mutex unlock failed\n");
+    }
 
 	return;
 }
 
+#if !defined(PFE_CFG_TARGET_OS_AUTOSAR)
 /**
  * @brief		Worker function running within internal thread
  */
@@ -2057,18 +2109,24 @@ static void *rtable_worker_func(void *arg)
 		{
 			switch (msg.payload.code)
 			{
-				case SIG_WORKER_STOP:
+				case (int32_t)SIG_WORKER_STOP:
 				{
-					/*	Exit the thread */
-					oal_mbox_ack_msg(&msg);
-					return NULL;
+                    /* Exit the thread */
+                    oal_mbox_ack_msg(&msg);
+                    return NULL;
 				}
 
-				case SIG_TIMER_TICK:
+				case (int32_t)SIG_TIMER_TICK:
 				{
-					rtable_do_timeouts(rtable);
+					pfe_rtable_do_timeouts(rtable);
 					break;
 				}
+
+				default:
+				{
+                    /*Do Nothing*/
+                    break;
+				}
 			}
 		}
 
@@ -2077,6 +2135,7 @@ static void *rtable_worker_func(void *arg)
 
 	return NULL;
 }
+#endif /* !defined(PFE_CFG_TARGET_OS_AUTOSAR) */
 
 /**
  * @brief		Create routing table instance
@@ -2093,6 +2152,7 @@ pfe_rtable_t *pfe_rtable_create(pfe_class_t *class, addr_t htable_base_va, uint3
 	pfe_rtable_t *rtable;
 	pfe_ct_rtable_entry_t *table_va;
 	uint32_t ii;
+    errno_t ret;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL_ADDR == htable_base_va) || (NULL_ADDR == pool_base_va) || (NULL == class)))
@@ -2111,7 +2171,7 @@ pfe_rtable_t *pfe_rtable_create(pfe_class_t *class, addr_t htable_base_va, uint3
 	else
 	{
 		/*	Initialize the instance */
-		memset(rtable, 0, sizeof(pfe_rtable_t));
+		(void)memset(rtable, 0, sizeof(pfe_rtable_t));
 
 		/*	Create mutex */
 		rtable->lock = (oal_mutex_t *)oal_mm_malloc(sizeof(oal_mutex_t));
@@ -2123,91 +2183,95 @@ pfe_rtable_t *pfe_rtable_create(pfe_class_t *class, addr_t htable_base_va, uint3
 		}
 		else
 		{
-			oal_mutex_init(rtable->lock);
-		}
-
-		/*	Store properties */
-		rtable->htable_base_va = htable_base_va;
-		rtable->htable_base_pa = (addr_t)oal_mm_virt_to_phys_contig((void *)htable_base_va);
-		rtable->htable_size = htable_size;
-		rtable->htable_end_va = rtable->htable_base_va + (rtable->htable_size * sizeof(pfe_ct_rtable_entry_t)) - 1;
-		rtable->htable_end_pa = rtable->htable_base_pa + (rtable->htable_size * sizeof(pfe_ct_rtable_entry_t)) - 1;
-
-		rtable->pool_base_va = pool_base_va;
-		rtable->pool_base_pa = rtable->htable_base_pa + (pool_base_va - htable_base_va);
-		rtable->pool_size = pool_size;
-		rtable->pool_end_va = rtable->pool_base_va + (rtable->pool_size * sizeof(pfe_ct_rtable_entry_t)) - 1;
-		rtable->pool_end_pa = rtable->pool_base_pa + (rtable->pool_size * sizeof(pfe_ct_rtable_entry_t)) - 1;
-
-		if ((NULL_ADDR == rtable->htable_base_va) || (NULL_ADDR == rtable->pool_base_va))
-		{
-			NXP_LOG_ERROR("Can't map the table memory\n");
-			goto free_and_fail;
-		}
-		else
-		{
-			/*	Pre-compute conversion offsets */
-			rtable->htable_va_pa_offset = rtable->htable_base_va - rtable->htable_base_pa;
-			rtable->pool_va_pa_offset = rtable->pool_base_va - rtable->pool_base_pa;
-		}
-
-		/*	Configure the classifier */
-		if (EOK != pfe_class_set_rtable(class, rtable->htable_base_pa, rtable->htable_size, sizeof(pfe_ct_rtable_entry_t)))
-		{
-			NXP_LOG_ERROR("Unable to set routing table address\n");
-			goto free_and_fail;
-		}
-
-		/*	Initialize the table */
-		pfe_rtable_invalidate(rtable);
-
-		/*	Create pool. No protection needed. */
-		rtable->pool_va = fifo_create(rtable->pool_size);
-
-		if (NULL == rtable->pool_va)
-		{
-			NXP_LOG_ERROR("Can't create pool\n");
-			goto free_and_fail;
-		}
-
-		/*	Fill the pool */
-		table_va = (pfe_ct_rtable_entry_t *)rtable->pool_base_va;
-
-		for (ii=0U; ii<rtable->pool_size; ii++)
-		{
-			if (EOK != fifo_put(rtable->pool_va, (void *)&table_va[ii]))
-			{
-				NXP_LOG_ERROR("Pool filling failed (VA pool)\n");
-				goto free_and_fail;
-			}
-		}
-
-		/*	Create list */
-		LLIST_Init(&rtable->active_entries);
-
-		/*	Create mbox */
-		rtable->mbox = oal_mbox_create();
-		if (NULL == rtable->mbox)
-		{
-			NXP_LOG_ERROR("Mbox creation failed\n");
-			goto free_and_fail;
-		}
-
-		/*	Create worker thread */
-		rtable->worker = oal_thread_create(&rtable_worker_func, rtable, "rtable worker", 0);
-		if (NULL == rtable->worker)
-		{
-			NXP_LOG_ERROR("Couldn't start worker thread\n");
-			goto free_and_fail;
-		}
-		else
-		{
-			if (EOK != oal_mbox_attach_timer(rtable->mbox, PFE_RTABLE_CFG_TICK_PERIOD_SEC * 1000, SIG_TIMER_TICK))
-			{
-				NXP_LOG_ERROR("Unable to attach timer\n");
-				goto free_and_fail;
-			}
-		}
+			if (EOK == oal_mutex_init(rtable->lock))
+            {
+                /*	Store properties */
+                rtable->htable_base_va = htable_base_va;
+                rtable->htable_base_pa = (addr_t)oal_mm_virt_to_phys_contig((void *)htable_base_va);
+                rtable->htable_size = htable_size;
+                rtable->htable_end_va = rtable->htable_base_va + (rtable->htable_size * sizeof(pfe_ct_rtable_entry_t)) - 1U;
+                rtable->htable_end_pa = rtable->htable_base_pa + (rtable->htable_size * sizeof(pfe_ct_rtable_entry_t)) - 1U;
+
+                rtable->pool_base_va = pool_base_va;
+                rtable->pool_base_pa = rtable->htable_base_pa + (pool_base_va - htable_base_va);
+                rtable->pool_size = pool_size;
+                rtable->pool_end_va = rtable->pool_base_va + (rtable->pool_size * sizeof(pfe_ct_rtable_entry_t)) - 1U;
+                rtable->pool_end_pa = rtable->pool_base_pa + (rtable->pool_size * sizeof(pfe_ct_rtable_entry_t)) - 1U;
+
+                if ((NULL_ADDR == rtable->htable_base_va) || (NULL_ADDR == rtable->pool_base_va))
+                {
+                    NXP_LOG_ERROR("Can't map the table memory\n");
+                    goto free_and_fail;
+                }
+                else
+                {
+                    /*	Pre-compute conversion offsets */
+                    rtable->htable_va_pa_offset = rtable->htable_base_va - rtable->htable_base_pa;
+                    rtable->pool_va_pa_offset = rtable->pool_base_va - rtable->pool_base_pa;
+                }
+
+                /*	Configure the classifier */
+                if (EOK != pfe_class_set_rtable(class, rtable->htable_base_pa, rtable->htable_size, sizeof(pfe_ct_rtable_entry_t)))
+                {
+                    NXP_LOG_ERROR("Unable to set routing table address\n");
+                    goto free_and_fail;
+                }
+
+                /*	Initialize the table */
+                pfe_rtable_invalidate(rtable);
+
+                /*	Create pool. No protection needed. */
+                rtable->pool_va = fifo_create(rtable->pool_size);
+
+                if (NULL == rtable->pool_va)
+                {
+                    NXP_LOG_ERROR("Can't create pool\n");
+                    goto free_and_fail;
+                }
+
+                /*	Fill the pool */
+                table_va = (pfe_ct_rtable_entry_t *)rtable->pool_base_va;
+
+                for (ii=0U; ii<rtable->pool_size; ii++)
+                {
+                    ret = fifo_put(rtable->pool_va, (void *)&table_va[ii]);
+                    if (EOK != ret)
+                    {
+                        NXP_LOG_ERROR("Pool filling failed (VA pool)\n");
+                        goto free_and_fail;
+                    }
+                }
+
+                /*	Create list */
+                LLIST_Init(&rtable->active_entries);
+
+        #if !defined(PFE_CFG_TARGET_OS_AUTOSAR)
+                /*	Create mbox */
+                rtable->mbox = oal_mbox_create();
+                if (NULL == rtable->mbox)
+                {
+                    NXP_LOG_ERROR("Mbox creation failed\n");
+                    goto free_and_fail;
+                }
+
+                /*	Create worker thread */
+                rtable->worker = oal_thread_create(&rtable_worker_func, rtable, "rtable worker", 0);
+                if (NULL == rtable->worker)
+                {
+                    NXP_LOG_ERROR("Couldn't start worker thread\n");
+                    goto free_and_fail;
+                }
+                else
+                {
+                    if (EOK != oal_mbox_attach_timer(rtable->mbox, (uint32_t)PFE_RTABLE_CFG_TICK_PERIOD_SEC * 1000U, SIG_TIMER_TICK))
+                    {
+                        NXP_LOG_ERROR("Unable to attach timer\n");
+                        goto free_and_fail;
+                    }
+                }
+        #endif /* !defined(PFE_CFG_TARGET_OS_AUTOSAR) */
+            }
+        }
 	}
 
 	return rtable;
@@ -2223,7 +2287,7 @@ free_and_fail:
 * @param[in]	rtable The routing table instance
 * @return		Total count of entries within the table 
 */
-uint32_t pfe_rtable_get_size(pfe_rtable_t *rtable)
+uint32_t pfe_rtable_get_size(const pfe_rtable_t *rtable)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == rtable))
@@ -2241,10 +2305,13 @@ uint32_t pfe_rtable_get_size(pfe_rtable_t *rtable)
  */
 void pfe_rtable_destroy(pfe_rtable_t *rtable)
 {
+#if !defined(PFE_CFG_TARGET_OS_AUTOSAR)
 	errno_t err;
+#endif /* !defined(PFE_CFG_TARGET_OS_AUTOSAR) */
 
 	if (NULL != rtable)
 	{
+#if !defined(PFE_CFG_TARGET_OS_AUTOSAR)
 		if (NULL != rtable->mbox)
 		{
 			oal_mbox_detach_timer(rtable->mbox);
@@ -2278,6 +2345,7 @@ void pfe_rtable_destroy(pfe_rtable_t *rtable)
 			oal_mbox_destroy(rtable->mbox);
 			rtable->mbox = NULL;
 		}
+#endif /* !defined(PFE_CFG_TARGET_OS_AUTOSAR) */
 
 		if (NULL_ADDR != rtable->htable_base_va)
 		{
@@ -2299,7 +2367,10 @@ void pfe_rtable_destroy(pfe_rtable_t *rtable)
 
 		if (NULL != rtable->lock)
 		{
-			oal_mutex_destroy(rtable->lock);
+			if (EOK != oal_mutex_destroy(rtable->lock))
+            {
+                NXP_LOG_ERROR("Failed to destroy rtable\n");
+            }
 			oal_mm_free(rtable->lock);
 			rtable->lock = NULL;
 		}
@@ -2323,7 +2394,7 @@ uint32_t pfe_rtable_get_entry_size(void)
  * @param[out]	tuple Pointer where the 5-tuple will be written
  * @return		EOK if success, error code otherwise
  */
-errno_t pfe_rtable_entry_to_5t(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple)
+errno_t pfe_rtable_entry_to_5t(const pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == entry) || (NULL == tuple)))
@@ -2334,21 +2405,21 @@ errno_t pfe_rtable_entry_to_5t(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple)
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/*	Clean the destination */
-	memset(tuple, 0, sizeof(pfe_5_tuple_t));
+	(void)memset(tuple, 0, sizeof(pfe_5_tuple_t));
 
-	if (IPV4 == entry->phys_entry->flag_ipv6)
+	if ((uint8_t)IPV4 == entry->phys_entry->flag_ipv6)
 	{
 		/*	SRC + DST IP */
-		memcpy(&tuple->src_ip.v4, &entry->phys_entry->u.v4.sip, 4);
-		memcpy(&tuple->dst_ip.v4, &entry->phys_entry->u.v4.dip, 4);
+		(void)memcpy(&tuple->src_ip.v4, &entry->phys_entry->u.v4.sip, 4);
+		(void)memcpy(&tuple->dst_ip.v4, &entry->phys_entry->u.v4.dip, 4);
 		tuple->src_ip.is_ipv4 = TRUE;
 		tuple->dst_ip.is_ipv4 = TRUE;
 	}
-	else if (IPV6 == entry->phys_entry->flag_ipv6)
+	else if ((uint8_t)IPV6 == entry->phys_entry->flag_ipv6)
 	{
 		/*	SRC + DST IP */
-		memcpy(&tuple->src_ip.v6, &entry->phys_entry->u.v6.sip[0], 16);
-		memcpy(&tuple->dst_ip.v6, &entry->phys_entry->u.v6.dip[0], 16);
+		(void)memcpy(&tuple->src_ip.v6, &entry->phys_entry->u.v6.sip[0], 16);
+		(void)memcpy(&tuple->dst_ip.v6, &entry->phys_entry->u.v6.dip[0], 16);
 		tuple->src_ip.is_ipv4 = FALSE;
 		tuple->dst_ip.is_ipv4 = FALSE;
 	}
@@ -2373,7 +2444,7 @@ errno_t pfe_rtable_entry_to_5t(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple)
  * @param[out]	tuple Pointer where the 5-tuple will be written
  * @return		EOK if success, error code otherwise
  */
-errno_t pfe_rtable_entry_to_5t_out(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple)
+errno_t pfe_rtable_entry_to_5t_out(const pfe_rtable_entry_t *entry, pfe_5_tuple_t *tuple)
 {
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == entry) || (NULL == tuple)))
@@ -2384,21 +2455,21 @@ errno_t pfe_rtable_entry_to_5t_out(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tup
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/*	Clean the destination */
-	memset(tuple, 0, sizeof(pfe_5_tuple_t));
+	(void)memset(tuple, 0, sizeof(pfe_5_tuple_t));
 
-	if (IPV6 == entry->phys_entry->flag_ipv6)
+	if ((uint8_t)IPV6 == entry->phys_entry->flag_ipv6)
 	{
 		/*	SRC + DST IP */
-		memcpy(&tuple->src_ip.v6, &entry->phys_entry->args.ipv.v6.sip[0], 16);
-		memcpy(&tuple->dst_ip.v6, &entry->phys_entry->args.ipv.v6.dip[0], 16);
+		(void)memcpy(&tuple->src_ip.v6, &entry->phys_entry->args.ipv.v6.sip[0], 16);
+		(void)memcpy(&tuple->dst_ip.v6, &entry->phys_entry->args.ipv.v6.dip[0], 16);
 		tuple->src_ip.is_ipv4 = FALSE;
 		tuple->dst_ip.is_ipv4 = FALSE;
 	}
 	else
 	{
 		/*	SRC + DST IP */
-		memcpy(&tuple->src_ip.v4, &entry->phys_entry->args.ipv.v4.sip, 4);
-		memcpy(&tuple->dst_ip.v4, &entry->phys_entry->args.ipv.v4.dip, 4);
+		(void)memcpy(&tuple->src_ip.v4, &entry->phys_entry->args.ipv.v4.sip, 4);
+		(void)memcpy(&tuple->dst_ip.v4, &entry->phys_entry->args.ipv.v4.dip, 4);
 		tuple->src_ip.is_ipv4 = TRUE;
 		tuple->dst_ip.is_ipv4 = TRUE;
 	}
@@ -2418,7 +2489,7 @@ errno_t pfe_rtable_entry_to_5t_out(pfe_rtable_entry_t *entry, pfe_5_tuple_t *tup
  * @retval		TRUE Entry matches the criterion
  * @retval		FALSE Entry does not match the criterion
  */
-static bool_t pfe_rtable_match_criterion(pfe_rtable_get_criterion_t crit, pfe_rtable_criterion_arg_t *arg, pfe_rtable_entry_t *entry)
+static bool_t pfe_rtable_match_criterion(pfe_rtable_get_criterion_t crit, const pfe_rtable_criterion_arg_t *arg, pfe_rtable_entry_t *entry)
 {
 	bool_t match = FALSE;
 	pfe_5_tuple_t five_tuple;
@@ -2434,43 +2505,30 @@ static bool_t pfe_rtable_match_criterion(pfe_rtable_get_criterion_t crit, pfe_rt
 	switch (crit)
 	{
 		case RTABLE_CRIT_ALL:
-		{
 			match = TRUE;
 			break;
-		}
 
 		case RTABLE_CRIT_ALL_IPV4:
-		{
-			match = (IPV4 == entry->phys_entry->flag_ipv6);
+			match = ((uint8_t)IPV4 == entry->phys_entry->flag_ipv6);
 			break;
-		}
 
 		case RTABLE_CRIT_ALL_IPV6:
-		{
-			match = (IPV6 == entry->phys_entry->flag_ipv6);
+			match = ((uint8_t)IPV6 == entry->phys_entry->flag_ipv6);
 			break;
-		}
 
 		case RTABLE_CRIT_BY_DST_IF:
-		{
 			match = (pfe_phy_if_get_id(arg->iface) == (pfe_ct_phy_if_id_t)entry->phys_entry->e_phy_if);
 			break;
-		}
 
 		case RTABLE_CRIT_BY_ROUTE_ID:
-		{
 			match = (TRUE == entry->route_id_valid) && (arg->route_id == entry->route_id);
 			break;
-		}
 
 		case RTABLE_CRIT_BY_ID5T:
-		{
 			match = (arg->id5t == entry->phys_entry->id5t);
 			break;
-		}
 
 		case RTABLE_CRIT_BY_5_TUPLE:
-		{
 			if (EOK != pfe_rtable_entry_to_5t(entry, &five_tuple))
 			{
 				NXP_LOG_ERROR("Entry conversion failed\n");
@@ -2480,15 +2538,12 @@ static bool_t pfe_rtable_match_criterion(pfe_rtable_get_criterion_t crit, pfe_rt
 			{
 				match = (0 == memcmp(&five_tuple, &arg->five_tuple, sizeof(pfe_5_tuple_t)));
 			}
-
-			break;
-		}        
+			break;       
 
 		default:
-		{
 			NXP_LOG_ERROR("Unknown criterion\n");
 			match = FALSE;
-		}
+            break;
 	}
 
 	return match;
@@ -2507,8 +2562,9 @@ static bool_t pfe_rtable_match_criterion(pfe_rtable_get_criterion_t crit, pfe_rt
 pfe_rtable_entry_t *pfe_rtable_get_first(pfe_rtable_t *rtable, pfe_rtable_get_criterion_t crit, void *arg)
 {
 	LLIST_t *item;
-	pfe_rtable_entry_t *entry;
+	pfe_rtable_entry_t *entry = NULL;
 	bool_t match = FALSE;
+    bool_t known_crit = TRUE;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL == rtable) || (NULL == arg)))
@@ -2525,46 +2581,40 @@ pfe_rtable_entry_t *pfe_rtable_get_first(pfe_rtable_t *rtable, pfe_rtable_get_cr
 		case RTABLE_CRIT_ALL:
 		case RTABLE_CRIT_ALL_IPV4:
 		case RTABLE_CRIT_ALL_IPV6:
-		{
 			break;
-		}
 
 		case RTABLE_CRIT_BY_DST_IF:
-		{
 			rtable->cur_crit_arg.iface = (pfe_phy_if_t *)arg;
 			break;
-		}
 
 		case RTABLE_CRIT_BY_ROUTE_ID:
-		{
-			memcpy(&rtable->cur_crit_arg.route_id, arg, sizeof(uint32_t));
+			(void)memcpy(&rtable->cur_crit_arg.route_id, arg, sizeof(uint32_t));
 			break;
-		}
 
 		case RTABLE_CRIT_BY_ID5T:
-		{
-			memcpy(&rtable->cur_crit_arg.id5t, arg, sizeof(uint32_t));
+			(void)memcpy(&rtable->cur_crit_arg.id5t, arg, sizeof(uint32_t));
 			break;
-		}
 
 		case RTABLE_CRIT_BY_5_TUPLE:
-		{
-			memcpy(&rtable->cur_crit_arg.five_tuple, arg, sizeof(pfe_5_tuple_t));
+			(void)memcpy(&rtable->cur_crit_arg.five_tuple, arg, sizeof(pfe_5_tuple_t));
 			break;
-		}
 
 		default:
 		{
 			NXP_LOG_ERROR("Unknown criterion\n");
-			return NULL;
+            known_crit = FALSE;
+            break;
 		}
 	}
 
 	/*	Search for first matching entry */
-	if (FALSE == LLIST_IsEmpty(&rtable->active_entries))
+	if ((FALSE == LLIST_IsEmpty(&rtable->active_entries)) && (TRUE == known_crit))
 	{
 		/*	Protect table accesses */
-		oal_mutex_lock(rtable->lock);
+		if (unlikely(EOK != oal_mutex_lock(rtable->lock)))
+        {
+            NXP_LOG_DEBUG("Mutex lock failed\n");
+        };
 
 		/*	Get first matching entry */
 		LLIST_ForEach(item, &rtable->active_entries)
@@ -2583,8 +2633,11 @@ pfe_rtable_entry_t *pfe_rtable_get_first(pfe_rtable_t *rtable, pfe_rtable_get_cr
 				}
 			}
 		}
-
-		oal_mutex_unlock(rtable->lock);
+        
+        if (unlikely(EOK != oal_mutex_unlock(rtable->lock)))
+        {
+            NXP_LOG_DEBUG("Mutex unlock failed\n");
+        }
 	}
 
 	if (TRUE == match)
@@ -2626,7 +2679,10 @@ pfe_rtable_entry_t *pfe_rtable_get_next(pfe_rtable_t *rtable)
 	else
 	{
 		/*	Protect table accesses */
-		oal_mutex_lock(rtable->lock);
+        if (unlikely(EOK != oal_mutex_lock(rtable->lock)))
+        {
+            NXP_LOG_DEBUG("Mutex lock failed\n");
+        }
 
 		while (rtable->cur_item != &rtable->active_entries)
 		{
@@ -2645,8 +2701,11 @@ pfe_rtable_entry_t *pfe_rtable_get_next(pfe_rtable_t *rtable)
 				}
 			}
 		}
-
-		oal_mutex_unlock(rtable->lock);
+        
+        if (unlikely(EOK != oal_mutex_unlock(rtable->lock)))
+        {
+            NXP_LOG_DEBUG("Mutex unlock failed\n");
+        }
 	}
 
 	if (TRUE == match)
diff --git a/sw/pfe_platform/src/pfe_spd.c b/sw/pfe_platform/src/pfe_spd.c
index c13f7c5..660a185 100644
--- a/sw/pfe_platform/src/pfe_spd.c
+++ b/sw/pfe_platform/src/pfe_spd.c
@@ -12,6 +12,10 @@
 #include "pfe_ct.h"
 #include "pfe_class.h"
 #include "pfe_phy_if.h"
+#include "pfe_if_db.h"
+
+#ifdef PFE_CFG_FCI_ENABLE
+
 static pfe_ct_ipsec_spd_t *pfe_spds[PFE_PHY_IF_ID_MAX] = {NULL};
 static pfe_class_t *class_ptr = NULL;
 
@@ -62,21 +66,115 @@ static errno_t pfe_spd_update_phyif(pfe_phy_if_t *phy_if, pfe_ct_ipsec_spd_t *sp
     return ret;
 }
 
+/*
+* @brief Destroys all SPD information stored in PHY
+* @param[in] phy_if Physical interface with SPD to be destroyed
+*/
+static void pfe_spd_destroy_phyif(pfe_phy_if_t *phy_if)
+{
+	uint32_t baddr = 0;
+
+#if defined(PFE_CFG_NULL_ARG_CHECK)
+	if(unlikely(NULL == phy_if))
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+		return;
+	}
+#endif
+
+	baddr = pfe_phy_if_get_spd(phy_if);
+	pfe_class_dmem_heap_free(class_ptr, baddr);
+	if (EOK != pfe_phy_if_set_spd(phy_if, 0))
+	{
+		NXP_LOG_ERROR("PHY SPD memory could't be cleared\n");
+	}
+}
+
 /**
 * @brief Function initializes the module
 * @param[in] class Reference to the class to be used
 */
 void pfe_spd_init(pfe_class_t *class)
 {
+	uint32_t idx = 0;
+
 #if defined(PFE_CFG_NULL_ARG_CHECK)
-    if(unlikely(NULL == class))
-    {
-        NXP_LOG_ERROR("NULL argument received\n");
-        return;
-    }
+	if(unlikely(NULL == class))
+	{
+		NXP_LOG_ERROR("NULL argument received\n");
+		return;
+	}
 #endif
-    /* Initialize the internal context */
-    class_ptr = class;
+	/* Initialize the internal context */
+	class_ptr = class;
+
+	for(idx = 0; idx < sizeof(pfe_spds)/sizeof(pfe_spds[0]); idx++)
+	{
+		pfe_spds[idx] = NULL;
+	}
+}
+
+/**
+* @brief Function destroys the module
+* @param[in] phy_if_db Database of physical interfaces
+*/
+void pfe_spd_destroy(pfe_if_db_t *phy_if_db)
+{
+	uint32_t idx = 0;
+	uint32_t session_id = 0;
+	errno_t ret = EOK;
+	pfe_phy_if_t *phy_if = NULL;
+	pfe_if_db_entry_t *if_db_entry = NULL;
+
+	/* Clean the DB */
+	for(idx = 0; idx < sizeof(pfe_spds)/sizeof(pfe_spds[0]); idx++)
+	{
+		if(NULL == pfe_spds[idx])
+		{
+			continue;
+		}
+
+		phy_if = NULL;
+		if_db_entry = NULL;
+
+		if(EOK != pfe_if_db_lock(&session_id))
+		{
+			NXP_LOG_DEBUG("DB lock failed\n");
+		}
+
+		/* Get PHY from DB*/
+		ret = pfe_if_db_get_first(phy_if_db, session_id, IF_DB_CRIT_BY_ID, (void *)(addr_t)idx, &if_db_entry);
+		if (ret == EOK)
+		{
+			phy_if = pfe_if_db_entry_get_phy_if(if_db_entry);
+
+			if (NULL != phy_if)
+			{
+				/* Clean all SPD info from the PHY */
+				pfe_spd_destroy_phyif(phy_if);
+			}
+			else
+			{
+				NXP_LOG_ERROR("Invalid PHY instance\n");
+			}
+		}
+		else
+		{
+			NXP_LOG_ERROR("Couldn't get PHY instance\n");
+		}
+
+		oal_mm_free(pfe_spds[idx]);
+		pfe_spds[idx] = NULL;
+
+		if(EOK != pfe_if_db_unlock(session_id))
+		{
+			NXP_LOG_DEBUG("DB unlock failed\n");
+		}
+
+	}
+
+	/* Forget class */
+	class_ptr = NULL;
 }
 
 /**
@@ -123,7 +221,7 @@ errno_t pfe_spd_add_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd_ent
         {
             /* Initialize the database content */
             spd->entry_count = oal_htonl(new_count);
-            spd->no_ip_action = SPD_ACT_BYPASS; /* As required by the spec. */ //todo - make it configurable AAVB-2450           
+            spd->no_ip_action = SPD_ACT_BYPASS; /* As required by the spec. */ /* todo - make it configurable AAVB-2450 */          
             /* Set the new entry */
             memcpy(&entries[0U], entry, sizeof(pfe_ct_spd_entry_t));
             /* Store the new database */
@@ -345,3 +443,5 @@ errno_t pfe_spd_get_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd_ent
     }
     return ret;
 }
+
+#endif /* PFE_CFG_FCI_ENABLE */
diff --git a/sw/pfe_platform/src/pfe_spd_acc.c b/sw/pfe_platform/src/pfe_spd_acc.c
index 84dbad5..0da0758 100644
--- a/sw/pfe_platform/src/pfe_spd_acc.c
+++ b/sw/pfe_platform/src/pfe_spd_acc.c
@@ -14,8 +14,12 @@
 #include "blalloc.h"
 #include "pfe_class.h"
 #include "pfe_rtable.h"
+#include "pfe_if_db.h"
 
 #include "pfe_spd.h"
+
+#ifdef PFE_CFG_FCI_ENABLE
+
 /* HW acceleration of the SPD entry search must be supported by a proper configuration
    which we do here */
 
@@ -33,12 +37,12 @@ pfe_rtable_t *rtable_ptr = NULL;
 errno_t pfe_spd_acc_init(pfe_class_t *class, pfe_rtable_t *rtable)
 {
     errno_t ret = EOK;
-#if 0 //todo AAVB-2539
+#if 0 /* todo AAVB-2539 */
     addr_t id;
 #endif
     /* Initialize submodules */
     pfe_spd_init(class);
-#if 0 //todo AAVB-2539
+#if 0 /* todo AAVB-2539 */
 #if defined(PFE_CFG_RTABLE_ENABLE)
     rtable_ptr = rtable;
     /* Create a pool of unique IDs */
@@ -58,6 +62,8 @@ errno_t pfe_spd_acc_init(pfe_class_t *class, pfe_rtable_t *rtable)
         ret = ENOMEM;
     }
 #endif
+#else
+    (void)rtable;
 #endif
     return ret;
 
@@ -67,9 +73,9 @@ errno_t pfe_spd_acc_init(pfe_class_t *class, pfe_rtable_t *rtable)
 * @brief Destroys the module
 * @note No other function is allowed to be called after pfe_spd_acc_destroy() call except pfe_spd_acc_init()
 */
-void pfe_spd_acc_destroy(void)
+void pfe_spd_acc_destroy(pfe_if_db_t *phy_if_db)
 {
-#if 0 //todo AAVB-2539
+#if 0 /* todo AAVB-2539 */
 #if defined(PFE_CFG_RTABLE_ENABLE)
     if(NULL != pfe_spd_acc_id_pool)
     {
@@ -80,8 +86,15 @@ void pfe_spd_acc_destroy(void)
     rtable_ptr = NULL;
 #endif
 #endif
+
+    pfe_spd_destroy(phy_if_db);
+
+    /* Forget platform instances */
+    pfe_spd_acc_id_pool = NULL;
+    rtable_ptr = NULL;
 }
 
+#if 0 /* todo AAVB-2539 */
 /**
 * @brief Converts the type pfe_ct_spd_entry_t into pfe_rtable_entry_t
 * @details The conversion of pfe_ct_spd_entry_t into pfe_rtable_entry_t is needed in a specific
@@ -140,7 +153,7 @@ static inline errno_t pfe_spd_acc_convert_to_rt_entry(pfe_ct_spd_entry_t *entry,
     pfe_rtable_entry_set_dstif_id(rt_entry, PFE_PHY_IF_ID_UTIL);
     return ret;
 }
-
+#endif
 
 /**
 * @brief Adds a rule to the SPD at given position
@@ -158,7 +171,7 @@ static inline errno_t pfe_spd_acc_convert_to_rt_entry(pfe_ct_spd_entry_t *entry,
 errno_t pfe_spd_acc_add_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd_entry_t *entry)
 {
     errno_t ret;
-#if 0 //todo AAVB-2539
+#if 0 /* todo AAVB-2539 */
     addr_t id;
     pfe_rtable_entry_t *rt_entry;
 #endif
@@ -169,7 +182,7 @@ errno_t pfe_spd_acc_add_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd
         return EINVAL;
     }
 #endif
-#if 0 //todo AAVB-2539
+#if 0 /* todo AAVB-2539 */
 #if defined(PFE_CFG_RTABLE_ENABLE)
 #if defined(PFE_CFG_NULL_ARG_CHECK)
     if(unlikely((NULL == rtable_ptr) || (NULL == pfe_spd_acc_id_pool)))
@@ -269,7 +282,7 @@ errno_t pfe_spd_acc_add_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd
 errno_t pfe_spd_acc_remove_rule(pfe_phy_if_t * phy_if, uint16_t position)
 {
     errno_t ret;
-#if 0 //todo AAVB-2539
+#if 0 /* todo AAVB-2539 */
     pfe_ct_spd_entry_t entry;
     pfe_rtable_entry_t *rt_entry;
 #endif
@@ -280,7 +293,7 @@ errno_t pfe_spd_acc_remove_rule(pfe_phy_if_t * phy_if, uint16_t position)
         return EINVAL;
     }
 #endif
-#if 0 //todo AAVB-2539
+#if 0 /* todo AAVB-2539 */
 #if defined(PFE_CFG_RTABLE_ENABLE)
 #if defined(PFE_CFG_NULL_ARG_CHECK)
     if(unlikely((NULL == rtable_ptr) || (NULL == pfe_spd_acc_id_pool)))
@@ -332,3 +345,5 @@ errno_t pfe_spd_acc_get_rule(pfe_phy_if_t *phy_if, uint16_t position, pfe_ct_spd
 {
     return pfe_spd_get_rule(phy_if, position, entry);
 }
+
+#endif /* PFE_CFG_FCI_ENABLE */
diff --git a/sw/pfe_platform/src/pfe_tmu.c b/sw/pfe_platform/src/pfe_tmu.c
index 7a35a3e..567c85a 100644
--- a/sw/pfe_platform/src/pfe_tmu.c
+++ b/sw/pfe_platform/src/pfe_tmu.c
@@ -37,7 +37,7 @@ static void pfe_tmu_init(const pfe_tmu_t *tmu, const pfe_tmu_cfg_t *cfg)
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	pfe_tmu_disable(tmu);
-	oal_time_mdelay(10);
+	oal_time_msleep(10);
 
 	if (EOK != pfe_tmu_cfg_init(tmu->cbus_base_va, cfg))
 	{
diff --git a/sw/pfe_platform/src/pfe_util.c b/sw/pfe_platform/src/pfe_util.c
index 4942682..f55e1ad 100644
--- a/sw/pfe_platform/src/pfe_util.c
+++ b/sw/pfe_platform/src/pfe_util.c
@@ -47,6 +47,36 @@ static void pfe_util_set_config(const pfe_util_t *util, const pfe_util_cfg_t *cf
 	hal_write32(cfg->pe_sys_clk_ratio, util->cbus_base_va + UTIL_PE_SYS_CLK_RATIO);
 }
 
+/*
+ * @brief		Create PEs
+ * 
+ */
+static errno_t pfe_util_create_pe(uint32_t pe_num, addr_t cbus_base_va, pfe_util_t *util)
+{
+	pfe_pe_t *pe;
+	uint32_t ii;
+	/*	Create PEs */
+	for (ii=0U; ii<pe_num; ii++)
+	{
+		pe = pfe_pe_create(cbus_base_va, PE_TYPE_UTIL, (uint8_t)ii);
+
+		if (NULL == pe)
+		{
+			return ECANCELED;
+		}
+		else
+		{
+			pfe_pe_set_iaccess(pe, UTIL_MEM_ACCESS_WDATA, UTIL_MEM_ACCESS_RDATA, UTIL_MEM_ACCESS_ADDR);
+			pfe_pe_set_dmem(pe, PFE_CFG_UTIL_ELF_DMEM_BASE, PFE_CFG_UTIL_DMEM_SIZE);
+			pfe_pe_set_imem(pe, PFE_CFG_UTIL_ELF_IMEM_BASE, PFE_CFG_UTIL_IMEM_SIZE);
+
+			util->pe[ii] = pe;
+			util->pe_num++;
+		}
+	}
+	return EOK;
+}
+
 /**
  * @brief		Create new UTIL instance
  * @details		Creates and initializes UTIL instance. After successful
@@ -59,8 +89,7 @@ static void pfe_util_set_config(const pfe_util_t *util, const pfe_util_cfg_t *cf
 pfe_util_t *pfe_util_create(addr_t cbus_base_va, uint32_t pe_num, const pfe_util_cfg_t *cfg)
 {
 	pfe_util_t *util;
-	pfe_pe_t *pe;
-	uint32_t ii;
+	errno_t ret = EOK;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely((NULL_ADDR == cbus_base_va) || (NULL == cfg)))
@@ -93,25 +122,11 @@ pfe_util_t *pfe_util_create(addr_t cbus_base_va, uint32_t pe_num, const pfe_util
 		}
 
 		/*	Create PEs */
-		for (ii=0U; ii<pe_num; ii++)
+		ret = pfe_util_create_pe(pe_num, cbus_base_va, util);
+		if(EOK != ret)
 		{
-			pe = pfe_pe_create(cbus_base_va, PE_TYPE_UTIL, (uint8_t)ii);
-
-			if (NULL == pe)
-			{
-				goto free_and_fail;
-			}
-			else
-			{
-				pfe_pe_set_iaccess(pe, UTIL_MEM_ACCESS_WDATA, UTIL_MEM_ACCESS_RDATA, UTIL_MEM_ACCESS_ADDR);
-				pfe_pe_set_dmem(pe, PFE_CFG_UTIL_ELF_DMEM_BASE, PFE_CFG_UTIL_DMEM_SIZE);
-				pfe_pe_set_imem(pe, PFE_CFG_UTIL_ELF_IMEM_BASE, PFE_CFG_UTIL_IMEM_SIZE);
-
-				util->pe[ii] = pe;
-				util->pe_num++;
-			}
+			goto free_and_fail;
 		}
-
 		/*	Issue block reset */
 		pfe_util_reset(util);
 
@@ -267,9 +282,24 @@ errno_t pfe_util_isr(const pfe_util_t *util)
 	/* Read the error record from each PE */
 	for (i = 0U; i < util->pe_num; i++)
 	{
-		(void)pfe_pe_get_fw_errors(util->pe[i]);
+		/*	Allow safe use of _nolock() functions. We don't call the _mem_lock()
+			here as we don't need to have coherent accesses. */
+		if (EOK != pfe_pe_lock(util->pe[i]))
+		{
+			NXP_LOG_DEBUG("pfe_pe_lock() failed\n");
+		}
+		
+		(void)pfe_pe_get_fw_errors_nolock(util->pe[i]);
+		
+		if (EOK != pfe_pe_unlock(util->pe[i]))
+		{
+			NXP_LOG_DEBUG("pfe_pe_unlock() failed\n");
+		}
 	}
 
+	/* Acknowledge interrupt */
+	(void) pfe_util_cfg_isr(util->cbus_base_va);
+
 	return EOK;
 }
 /**
@@ -317,6 +347,7 @@ uint32_t pfe_util_get_text_statistics(const pfe_util_t *util, char_t *buf, uint3
 {
 	uint32_t len = 0U, ii;
 	pfe_ct_version_t fw_ver;
+	pfe_ct_pe_mmap_t mmap;
 
 #if defined(PFE_CFG_NULL_ARG_CHECK)
 	if (unlikely(NULL == util))
@@ -342,7 +373,32 @@ uint32_t pfe_util_get_text_statistics(const pfe_util_t *util, char_t *buf, uint3
 	/*	Get PE info per PE */
 	for (ii=0U; ii<util->pe_num; ii++)
 	{
+		ipsec_state_t state = { 0 };
 		len += pfe_pe_get_text_statistics(util->pe[ii], buf + len, buf_len - len, verb_level);
+
+		if (EOK == pfe_pe_get_mmap(util->pe[ii], &mmap))
+		{
+			/* IPsec statistics */
+			pfe_pe_memcpy_from_dmem_to_host_32(util->pe[ii], &state, oal_ntohl(mmap.util_pe.ipsec_state), sizeof(state));
+			len += oal_util_snprintf(buf + len, buf_len - len, "\nIPsec\n", state.hse_mu);
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE MU            0x%x\n", oal_ntohl(state.hse_mu));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE MU Channel    0x%x\n", oal_ntohl(state.hse_mu_chn));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_OK                        0x%x\n", oal_ntohl(state.response_ok));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_VERIFY_FAILED             0x%x\n", oal_ntohl(state.verify_failed));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_IPSEC_INVALID_DATA        0x%x\n", oal_ntohl(state.ipsec_invalid_data));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_IPSEC_REPLAY_DETECTED     0x%x\n", oal_ntohl(state.ipsec_replay_detected));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_IPSEC_REPLAY_LATE         0x%x\n", oal_ntohl(state.ipsec_replay_late));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_IPSEC_SEQNUM_OVERFLOW     0x%x\n", oal_ntohl(state.ipsec_seqnum_overflow));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_IPSEC_CE_DROP             0x%x\n", oal_ntohl(state.ipsec_ce_drop));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_IPSEC_TTL_EXCEEDED        0x%x\n", oal_ntohl(state.ipsec_ttl_exceeded));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_IPSEC_VALID_DUMMY_PAYLOAD 0x%x\n", oal_ntohl(state.ipsec_valid_dummy_payload));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_IPSEC_HEADER_LEN_OVERFLOW 0x%x\n", oal_ntohl(state.ipsec_header_overflow));
+			len += oal_util_snprintf(buf + len, buf_len - len, "HSE_SRV_RSP_IPSEC_PADDING_CHECK_FAIL  0x%x\n", oal_ntohl(state.ipsec_padding_check_fail));
+			len += oal_util_snprintf(buf + len, buf_len - len, "Code of handled error    0x%x\n", oal_ntohl(state.handled_error_code));
+			len += oal_util_snprintf(buf + len, buf_len - len, "SAId of handled error    0x%x\n", oal_ntohl(state.handled_error_said));
+			len += oal_util_snprintf(buf + len, buf_len - len, "Code of unhandled error  0x%x\n", oal_ntohl(state.unhandled_error_code));
+			len += oal_util_snprintf(buf + len, buf_len - len, "SAId of unhandled error  0x%x\n", oal_ntohl(state.unhandled_error_said));
+		}
 	}
 
 	return len;
diff --git a/sw/xfci/libfci/Makefile b/sw/xfci/libfci/Makefile
index cd3ed27..91298f2 100644
--- a/sw/xfci/libfci/Makefile
+++ b/sw/xfci/libfci/Makefile
@@ -5,37 +5,41 @@
 #
 # =========================================================================
 
-TARGET_OS ?= QNX
+include ../../build_env.mak
+
+ARTIFACT = libfci.a
+TARGET = $(OUTPUT_DIR)/$(ARTIFACT)
 
-#Build profile, possible values: release, debug, profile, coverage
+#Build profile. Possible values: release, debug, profile, coverage
 BUILD_PROFILE ?= release
 
-#Compiler definitions
-include ../../build_env.mak
+#Build string for architecture/variant.
+CONFIG_NAME ?= $(PLATFORM)-$(BUILD_PROFILE)
+OUTPUT_DIR = build/$(CONFIG_NAME)
 
+TARGET_OS ?= QNX
+
+#Specific configuration per TARGET_OS.
 ifeq ($(TARGET_OS),LINUX)
-  OUTPUT_DIR = build/$(BUILD_PROFILE)
-  CC ?= $(PLATFORM)-gcc
-  CXX ?= $(PLATFORM)-g++
-  INC_PREFIX = 
+	CC ?= $(PLATFORM)-gcc
+	CXX ?= $(PLATFORM)-g++
+	INC_PREFIX = 
+	
+	#Expand GLOBAL_CCFLAGS to get rid of single quotes around string parameters of GLOBAL_CCFLAGS.
+	#Those single quotes are utilized in build process of the Linux PFE driver, but they cause warnings in this makefile.
+	GLOBAL_CCFLAGS := $(shell echo $(GLOBAL_CCFLAGS))
 else
-  #Build architecture/variant string, possible values: x86, armv7le, etc...
-  PLATFORM ?= aarch64le
-  CONFIG_NAME ?= $(PLATFORM)-$(BUILD_PROFILE)
-  PFE_CFG_TARGET_ARCH_DEF = PFE_CFG_TARGET_ARCH_$(PLATFORM)
-  PFE_CFG_TARGET_OS_DEF = PFE_CFG_TARGET_OS_$(TARGET_OS)
-  PFE_CFG_BUILD_PROFILE_DEF := PFE_CFG_BUILD_PROFILE_$(shell echo $(BUILD_PROFILE) | tr [a-z] [A-Z])
-
-  OUTPUT_DIR = build/$(CONFIG_NAME)
-  CC = qcc -Vgcc_nto$(PLATFORM)
-  CXX = qcc -lang-c++ -Vgcc_nto$(PLATFORM)
-  LD = $(CC) -static -a
-  INC_PREFIX =
+	PLATFORM ?= aarch64le
+	PFE_CFG_TARGET_ARCH_DEF = PFE_CFG_TARGET_ARCH_$(PLATFORM)
+	PFE_CFG_TARGET_OS_DEF = PFE_CFG_TARGET_OS_$(TARGET_OS)
+	PFE_CFG_BUILD_PROFILE_DEF := PFE_CFG_BUILD_PROFILE_$(shell echo $(BUILD_PROFILE) | tr [a-z] [A-Z])
+
+	CC = qcc -Vgcc_nto$(PLATFORM)
+	CXX = qcc -lang-c++ -Vgcc_nto$(PLATFORM)
+	LD = $(CC) -static -a
+	INC_PREFIX =
 endif
 
-ARTIFACT = libfci.a
-TARGET = $(OUTPUT_DIR)/$(ARTIFACT)
-
 #User defined include/preprocessor flags and libraries
 INCLUDES += -I$(INC_PREFIX)src \
 			-I$(INC_PREFIX)public \
@@ -44,8 +48,6 @@ INCLUDES += -I$(INC_PREFIX)src \
 			-I$(INC_PREFIX)../../fci/public \
 			-I$(INC_PREFIX)../../pfe_platform/public
 
-#LIBS += -L/path/to/my/lib/$(PLATFORM)/usr/lib -lmylib
-		
 #Dependencies
 DEPENDENCIES = $(subst -L,,$(subst $(EMPTY) $(EMPTY)-l:,/,$(LIBS)))
 
@@ -79,10 +81,10 @@ rwildcard = $(wildcard $(addprefix $1/*.,$2)) $(foreach d,$(wildcard $1/*),$(cal
 
 #Source list
 ifeq ($(TARGET_OS),LINUX)
-  SRCS = src/libfci_linux.c
+	SRCS = src/libfci_linux.c
 endif
 ifeq ($(TARGET_OS),QNX)
-  SRCS = src/libfci_qnx.c
+	SRCS = src/libfci_qnx.c
 endif
 
 
diff --git a/sw/xfci/libfci/public/fpp.h b/sw/xfci/libfci/public/fpp.h
index 791d61c..ba1a5d0 100644
--- a/sw/xfci/libfci/public/fpp.h
+++ b/sw/xfci/libfci/public/fpp.h
@@ -20,6 +20,10 @@
 #define CAL_PACKED_ALIGNED(n)	__attribute__((packed, aligned(n)))
 #endif /* CAL_PACKED_ALIGNED */
 
+#ifndef CAL_ALIGNED
+#define CAL_ALIGNED(n)	__attribute__((aligned(n)))
+#endif /* CAL_ALIGNED */
+
 /**
  * @file	fpp.h
  * @brief	The legacy FCI API
@@ -506,7 +510,7 @@ typedef enum {
  *              - for command buffer in functions @ref fci_write, @ref fci_query or
  *                @ref fci_cmd, with @ref FPP_CMD_IPV4_CONNTRACK command.
  */
-typedef struct CAL_PACKED {
+typedef struct CAL_PACKED_ALIGNED(4) {
 	uint16_t action;			/**< Action to perform */
 	uint16_t rsvd0;
 	uint32_t saddr;				/**< Source IP address */
@@ -561,7 +565,7 @@ typedef struct CAL_PACKED {
  *              - for command buffer in functions @ref fci_write, @ref fci_query or
  *                @ref fci_cmd, with @ref FPP_CMD_IPV6_CONNTRACK command.
  */
-typedef struct CAL_PACKED {
+typedef struct CAL_PACKED_ALIGNED(4) {
 	uint16_t action;			/**< Action to perform */
 	uint16_t rsvd1;
 	uint32_t saddr[4];			/**< Source IP address */
@@ -633,6 +637,8 @@ typedef struct CAL_PACKED {
  *   fpp_rt_cmd_t cmd_data =
  *   {
  *     .action = FPP_ACTION_REGISTER, // Register new route
+ *     .src_mac = ...,                // Source MAC address (network endian). 
+ *                                    // If left unset (all-zero), then MAC of the egress interface is used.
  *     .dst_mac = ...,                // Destination MAC address (network endian)
  *     .output_device = ...,          // Name of egress interface (name of physical interface)
  *     .id = ...                      // Chosen number will be used as unique route identifier (network endian)
@@ -663,6 +669,7 @@ typedef struct CAL_PACKED {
  *
  * Response data provided (@ref fpp_rt_cmd_t):
  * @code{.c}
+ *     rsp_data.src_mac;        // Source MAC address
  *     rsp_data.dst_mac;        // Destination MAC address
  *     rsp_data.output_device;  // Output device name
  *     rsp_data.id;             // Route ID (network endian)
@@ -705,9 +712,10 @@ typedef struct CAL_PACKED {
  *              - as reply buffer in functions @ref fci_query or @ref fci_cmd,
  *                with @ref FPP_CMD_IP_ROUTE command.
  */
-typedef struct CAL_PACKED {
+typedef struct CAL_PACKED_ALIGNED(4) {
 	uint16_t action;					/**< Action to perform */
 	uint16_t mtu;
+	uint8_t src_mac[6];					/**< Source MAC address (network endian) */
 	uint8_t dst_mac[6];					/**< Destination MAC address (network endian) */
 	uint16_t pad;						
 	char	  output_device[IFNAMSIZ];	/**< Name of egress physical interface */
@@ -1991,7 +1999,7 @@ typedef struct {
  *              - for command buffer in functions @ref fci_write, @ref fci_query or
  *                @ref fci_cmd, with @ref FPP_CMD_IPV4_SET_TIMEOUT command.
  */
-typedef struct CAL_PACKED {
+typedef struct CAL_PACKED_ALIGNED(4) {
 	uint16_t	protocol;
 	uint16_t	sam_4o6_timeout;
 	uint32_t	timeout_value1;
diff --git a/sw/xfci/libfci/public/fpp_ext.h b/sw/xfci/libfci/public/fpp_ext.h
index a5b5692..753633b 100644
--- a/sw/xfci/libfci/public/fpp_ext.h
+++ b/sw/xfci/libfci/public/fpp_ext.h
@@ -257,6 +257,7 @@ typedef enum CAL_PACKED
 	FPP_IF_PTP_PROMISC = (1 << 9),		/*!< Enable/Disable PTP promiscuous mode */
 	FPP_IF_LOOPBACK = (1 << 10),		/*!< If set, loopback mode is enabled */
 	FPP_IF_ALLOW_Q_IN_Q = (1 << 11),	/*!< If set, QinQ traffic is accepted */
+	FPP_IF_DISCARD_TTL = (1 << 12),		/*!< Discard packet with TTL<2 instead of passing to default logical interface */
 	FPP_IF_MAX = (int)(1U << 31U)
 } fpp_if_flags_t;
 
@@ -266,14 +267,13 @@ typedef enum CAL_PACKED
  */
 typedef enum CAL_PACKED
 {
-	FPP_IF_OP_DISABLED = 0,			/*!< Disabled */
-	FPP_IF_OP_DEFAULT = 1,			/*!< Default operational mode */
-	FPP_IF_OP_BRIDGE = 2,			/*!< L2 bridge */
-	FPP_IF_OP_ROUTER = 3,			/*!< L3 router */
-	FPP_IF_OP_VLAN_BRIDGE = 4,		/*!< L2 bridge with VLAN */
-	FPP_IF_OP_FLEXIBLE_ROUTER = 5,	/*!< Flexible router */
-	FPP_IF_OP_L2L3_BRIDGE = 6,		/*!< L2 bridge and L3 router combination*/
-	FPP_IF_OP_L2L3_VLAN_BRIDGE = 7,	/*!< L2 Vlan bridge and L3 router combination*/
+	FPP_IF_OP_DEFAULT = 0,			/*!< Default operational mode */
+	FPP_IF_OP_BRIDGE = 1,			/*!< L2 bridge */
+	FPP_IF_OP_ROUTER = 2,			/*!< L3 router */
+	FPP_IF_OP_VLAN_BRIDGE = 3,		/*!< L2 bridge with VLAN */
+	FPP_IF_OP_FLEXIBLE_ROUTER = 4,	/*!< Flexible router */
+	FPP_IF_OP_L2L3_BRIDGE = 5,		/*!< L2 bridge and L3 router combination*/
+	FPP_IF_OP_L2L3_VLAN_BRIDGE = 6,	/*!< L2 Vlan bridge and L3 router combination*/
 } fpp_phy_if_op_mode_t;
 
 /**
@@ -617,7 +617,7 @@ typedef enum CAL_PACKED
  *          - for command buffer in functions @ref fci_write or @ref fci_cmd,
  *            with commands: @ref FPP_CMD_L2_BD.
  */
-typedef struct CAL_PACKED
+typedef struct CAL_PACKED_ALIGNED(2)
 {
 	/**	Action to be executed (register, unregister, query, ...) */
 	uint16_t action;
@@ -788,7 +788,7 @@ typedef struct CAL_PACKED
 #define FPP_ERR_L2_STATIC_ENT_ALREADY_REGISTERED	0xf341
 #define FPP_ERR_L2_STATIC_EN_NOT_FOUND				0xf342
 
-typedef struct CAL_PACKED
+typedef struct CAL_PACKED_ALIGNED(4)
 {
 	/**	Action to be executed (register, unregister, query, ...) */
 	uint16_t action;
@@ -1142,7 +1142,7 @@ typedef struct CAL_PACKED
 /**
  * @brief Arguments for the FPP_CMD_FP_RULE command
  */
-typedef struct CAL_PACKED
+typedef struct CAL_PACKED_ALIGNED(2)
 {
     uint16_t action;        /**< Action to be done */
     fpp_fp_rule_props_t r;  /**< Parameters of the rule */
@@ -1151,7 +1151,7 @@ typedef struct CAL_PACKED
 /**
  * @brief Arguments for the FPP_CMD_FP_TABLE command
  */
-typedef struct CAL_PACKED
+typedef struct CAL_PACKED_ALIGNED(2)
 {
     uint16_t action;                  /**< Action to be done */
     union
@@ -1393,7 +1393,7 @@ typedef enum CAL_PACKED
 /**
  * @brief Argument structure for the FPP_CMD_SPD command
  */
-typedef struct CAL_PACKED
+typedef struct CAL_PACKED_ALIGNED(4)
 {
 	uint16_t action;			/**< Action */
 	char name[IFNAMSIZ];		/**< Interface name */
@@ -1457,7 +1457,7 @@ typedef struct CAL_PACKED
 /**
  * @brief Argument of the @ref FPP_CMD_QOS_QUEUE command.
  */
-typedef struct CAL_PACKED
+typedef struct CAL_PACKED_ALIGNED(4)
 {
 	/**	Action */
 	uint16_t action;
@@ -1544,7 +1544,7 @@ typedef struct CAL_PACKED
 /**
  * @brief Argument of the @ref FPP_CMD_QOS_SCHEDULER command.
  */
-typedef struct CAL_PACKED
+typedef struct CAL_PACKED_ALIGNED(4)
 {
 	/**	Action */
 	uint16_t action;
@@ -1627,7 +1627,7 @@ typedef struct CAL_PACKED
 /**
  * @brief Argument of the @ref FPP_CMD_QOS_SHAPER command.
  */
-typedef struct CAL_PACKED
+typedef struct CAL_PACKED_ALIGNED(4)
 {
 	/**	Action */
 	uint16_t action;
@@ -1638,6 +1638,12 @@ typedef struct CAL_PACKED
 	uint8_t id;
 	/**	Position of the shaper */
 	uint8_t position;
+	/**	Idle slope in units per second (network endian) */
+	uint32_t isl;
+	/**	Max credit (network endian) */
+	int32_t max_credit;
+	/**	Min credit (network endian) */
+	int32_t min_credit;
 	/**	Shaper mode:
 		- 0 - Shaper disabled
 		- 1 - Data rate. The `isl` is in units of bits-per-second and
@@ -1645,12 +1651,6 @@ typedef struct CAL_PACKED
 		- 2 - Packet rate. The `isl` is in units of packets-per-second
 			  and `max_credit` with `min_credit` are number of packets.*/
 	uint8_t mode;
-	/**	Idle slope in units per second (network endian) */
-	uint32_t isl;
-	/**	Max credit (network endian) */
-	int32_t max_credit;
-	/**	Min credit (network endian) */
-	int32_t min_credit;
 } fpp_qos_shaper_cmd_t;
 
 
@@ -1687,13 +1687,13 @@ typedef struct CAL_PACKED
  * @hideinitializer
  */
 #define FPP_CMD_FW_FEATURE 0xf227
-#define FPP_FEATURE_NAME_SIZE 16
+#define FPP_FEATURE_NAME_SIZE 32
 #define FPP_FEATURE_DESC_SIZE 128
 
 /**
  * @brief Argument of the @ref FPP_CMD_FW_FEATURE command.
  */
-typedef struct CAL_PACKED
+typedef struct CAL_PACKED_ALIGNED(2)
 {
     uint16_t action;                       /**< Action to be done */
     char name[FPP_FEATURE_NAME_SIZE + 1];  /**< Feature name (only queries, cannot be modified) */
diff --git a/sw/xfci/libfci/public/libfci.h b/sw/xfci/libfci/public/libfci.h
index 8537561..69cacbc 100644
--- a/sw/xfci/libfci/public/libfci.h
+++ b/sw/xfci/libfci/public/libfci.h
@@ -313,11 +313,16 @@
  *                table entry then a new entry, containing the Physical Interface which the packet has
  *                been received on, is added - learned. Destination MAC address of an ingress packet
  *                is then used to search the table to determine the target interface.
+ *              - <b>Static entries:</b>
+ *                Bridge table can also contain static entry that are not aged. This entry is otherwise
+ *                the same as standard entry. The main usage of static entry is to configure
+ *                bridge in forward only mode and configure all entries manually. In this case only
+ *                predetermined traffic matching to the static entries will be forwarded.
  *              - <b>Aging:</b>
  *                Each MAC table entry gets default timeout value once learned. In time this timeout is
  *                being decreased until zero is reached. Entries with zero timeout value are automatically
  *                removed from the table. The timeout value is re-set each time the corresponding table
- *                entry is used to process a packet.
+ *                entry is used to process a packet. The static entries are not affected by aging.
  *              - <b>Port migration:</b>
  *                When a MAC address is seen on one interface of the switch and an entry has been created,
  *                it is automatically updated when the MAC address is seen on another interface.
@@ -354,19 +359,19 @@
  *                Standard domain. Specifies what to do when packet with VLAN ID matching the Standard
  *                BD is received.
  *
- *              Configuration
- *              -------------
+ *              Configuration (Bridge Domain)
+ *              ----------------------------
  *              Here are steps needed to configure VLAN-aware switch:
  *              -# Optionally get list of available physical interfaces and their IDs. See the
  *                 @ref if_mgmt.
-  *             -# Create a bridge domain (VLAN domain) (@ref FPP_CMD_L2_BD +
+ *              -# Create a bridge domain (VLAN domain) (@ref FPP_CMD_L2_BD +
  *                 @ref FPP_ACTION_REGISTER).
-  *             -# Configure domain hit/miss actions (@ref FPP_CMD_L2_BD + @ref FPP_ACTION_UPDATE)
+ *              -# Configure domain hit/miss actions (@ref FPP_CMD_L2_BD + @ref FPP_ACTION_UPDATE)
  *                 to let the bridge know how to process matching traffic.
  *              -# Add physical interfaces as members of that domain (@ref FPP_CMD_L2_BD +
  *                 @ref FPP_ACTION_UPDATE). Adding interface to a bridge domain causes switch of its
  *                 operation mode to @ref FPP_IF_OP_VLAN_BRIDGE and enabling promiscuous mode on MAC
- *                 level.
+ *                 level. There is also a preconfigured default domain that identifies with VLAN 1.
  *              -# Set physical interface(s) to VLAN bridge mode @ref FPP_IF_OP_VLAN_BRIDGE using
  *                 @ref FPP_CMD_PHY_IF + @ref FPP_ACTION_UPDATE.
  *              -# Set promiscuous mode and enable physical interface(s) by setting the
@@ -376,7 +381,7 @@
  *              For simple, non-VLAN aware switch do:
  *              -# Optionally get list of available physical interfaces and their IDs. See the
  *                 @ref if_mgmt.
-  *             -# Add physical interfaces as members of fall-back BD (@ref FPP_CMD_L2_BD +
+ *              -# Add physical interfaces as members of fall-back BD (@ref FPP_CMD_L2_BD +
  *                 @ref FPP_ACTION_UPDATE). The fall-back BD is identified by VLAN 0 and exists
  *                 automatically.
  *              -# Configure domain hit/miss actions (@ref FPP_CMD_L2_BD + @ref FPP_ACTION_UPDATE)
@@ -399,6 +404,12 @@
  *              List of available bridge domains with their properties can be retrieved using
  *              @ref FPP_CMD_L2_BD + @ref FPP_ACTION_QUERY + @ref FPP_ACTION_QUERY_CONT.
  *
+ *              Static mac entries can be added once the bridge domain is configured. To add or update use
+ *              @ref FPP_CMD_L2_STATIC_ENT + @ref FPP_ACTION_REGISTER + @ref FPP_ACTION_UPDATE.
+ *              A static entry can be deleted using @ref FPP_CMD_L2_STATIC_ENT + @ref FPP_ACTION_DEREGISTER
+ *              or all entries using @ref FPP_CMD_L2_FLUSH_STATIC.
+ *
+ *
  * @subsection l2l3_bridge L2L3 Bridge
  *             Introduction
  *             ------------
@@ -675,8 +686,8 @@
  * @details     This file contains generic API and API description
  */
 
-#ifndef _LIBFCI_H
-#define _LIBFCI_H
+#ifndef LIBFCI_H
+#define LIBFCI_H
 
 #ifndef TRUE
 #define TRUE 1
@@ -949,199 +960,4 @@ int fci_register_cb(FCI_CLIENT *client, fci_cb_retval_t (*event_cb)(unsigned sho
  */
 int fci_fd(FCI_CLIENT *this_client);
 
-/** @} */
-#endif /* _LIBFCI_H */
-
-/*
- * @def FPP_CMD_L2BRIDGE_MODE
- * @brief Specifies FCI command that enables or disables automatic L2 bridge learning
- * @details In both modes, the physical addresses can be associated with ports with @ref FPP_CMD_L2BRIDGE_ADD_ENTRY
- *          command. That creates static entry which is valid until it is removed with
- *          @ref FPP_CMD_L2BRIDGE_REMOVE_ENTRY command. In learning mode the physical addresses are also associated
- *          to ports automatically (learned). This way dynamic entries are created. Their lifetime can be specified
- *          by @ref FPP_CMD_L2BRIDGE_LRN_TIMEOUT command. All dynamic entries can be deleted at once with
- *          @ref FPP_CMD_L2BRIDGE_LRN_RESET command.
- *
- *          The disable command causes that no new entries are learned after this command
- *          and that the learned entries do not expire (the aging timer stops ticking).
- *          The enable command resumes the learning and aging again. The L2 bridge is
- *          configured to start with learning and aging process enabled.
- *
- *          This command may be used to learn entries during certain period and to prevent
- *          further learning for security reasons.
- *
- * Command Argument Type: @ref fpp_l2_bridge_control_cmd_t
- *
- * Items to be set in command argument structure:
- * @code{.c}
- *   fpp_l2_bridge_control_cmd_t cmd_data =
- *   {
- *     // Timeout: Either FPP_L2_BRIDGE_MODE_LEARNING or FPP_L2_BRIDGE_MODE_NO_LEARNING
- *     .mode_timeout = ...
- *   };
- * @endcode
- *
- * @hideinitializer
- */
-
-/*
- * @struct  fpp_l2_bridge_control_cmd_t
- * @brief   Data structure to be used for command buffer for L2 bridge control commands
- * @details It can be used:
- *          - for command buffer in functions @ref fci_write or @ref fci_cmd,
- *            with commands: @ref FPP_CMD_L2BRIDGE_MODE and @ref FPP_CMD_L2BRIDGE_LRN_TIMEOUT.
- */
-
-/*
- * @def FPP_CMD_L2BRIDGE_ENABLE_PORT
- * @brief Specifies FCI command that adds or removes a port to or from the L2 Bridge
- * @details The enable action is selected by setting @c enable_flag to 1 and it causes that
- *          the specified interface becomes part of the bridge. The physical interface acts as
- *          bridge external port and all frames arriving at this interface are subject to the
- *          fast forwarding according to the L2 Bridge rules. Frames sent out by the original
- *          interface are also subject to the L2 Bridge fast forwarding. The interface becomes
- *          L2 Bridge internal port and the physical interface becomes external port and frames
- *          are fast forwarded between them or any other L2 Bridge port.
- *
- *          The disable action, selected by setting @c enable_flag to 0, causes the interface
- *          to return to the normal operation.
- *
- *          The interface is selected by setting the @c input_name to the name of the interface.
- *
- * Command Argument Type: @ref fpp_l2_bridge_enable_cmd_t
- *
- * Items to be set in command argument structure:
- * @code{.c}
- *   fpp_l2_bridge_enable_cmd_t cmd_data =
- *   {
- *       .input_name = ...,   // Interface to add/remove
- *       .enable_flag = ...   // Enable flag, either 1 or 0
- *   };
- * @endcode
- *
- * @hideinitializer
- */
-
-/*
- * @struct  fpp_l2_bridge_enable_cmd_t
- * @brief   Data structure to be used for command buffer for L2 bridge port disabling/enabling commands
- * @details It can be used:
- *          - for command buffer in functions @ref fci_write or @ref fci_cmd,
- *            with @ref FPP_CMD_L2BRIDGE_ENABLE_PORT command.
- */
-
-/*
- * @def FPP_CMD_L2BRIDGE_ADD_ENTRY
- * @brief Specifies FCI command that adds a static entry into the L2 bridge
- * @details Allows adding a fast forwarding rule into L2 bridge without involving Learning process.
- *          Such rule is also not affected by aging. The matching destination address @c destaddr
- *          and the outbound interface name @c output_name must be provided in the command data.
- *
- *          The command data carry the MAC address to be matched and name of the interface which physical
- *          interface shall be used to send out the frames. It is not possible to send frames to internal port.
- *
- * Command Argument Type: @ref fpp_l2_bridge_add_entry_cmd_t
- *
- * Items to be set in command argument structure:
- * @code{.c}
- *   fpp_l2_bridge_add_entry_cmd_t cmd_data =
- *   {
- *     // Destination MAC address to match
- *     .destaddr = {..., ..., ..., ..., ..., ...},
- *     // Interface (external port) to send out matching frames
- *     .output_name = ...
- *   };
- * @endcode
- *
- * @hideinitializer
- */
-
-/*
- * @struct  fpp_l2_bridge_add_entry_cmd_t
- * @brief   Data structure to be used for command buffer for L2 bridge control commands
- * @details It can be used:
- *          - for command buffer in functions @ref fci_write or @ref fci_cmd,
- *            with @ref FPP_CMD_L2BRIDGE_ADD_ENTRY command.
- */
-
-/*
- * @def FPP_CMD_L2BRIDGE_REMOVE_ENTRY
- * @brief Specifies FCI command that removes static entry from the L2 bridge
- * @details This is a reverse operation to the FPP_CMD_L2BRIDGE_ADD_ENTRY which removes the previously
- *          added static entry. Just the MAC address is needed to identify the entry.
- *
- * Command Argument Type: @ref fpp_l2_bridge_remove_entry_cmd_t
- *
- * Items to be set in command argument structure:
- * @code{.c}
- *   fpp_l2_bridge_remove_entry_cmd_t cmd_data =
- *   {
- *     // Destination MAC address to match - identifies the entry
- *     .destaddr = {..., ..., ..., ..., ..., ...},
- *   };
- * @endcode
- *
- * @hideinitializer
- */
-
-/*
- * @struct  fpp_l2_bridge_remove_entry_cmd_t
- * @brief   Data structure to be used for command buffer for L2 bridge control commands
- * @details It can be used:
- *          - for command buffer in functions @ref fci_write or @ref fci_cmd,
- *            with @ref FPP_CMD_L2BRIDGE_REMOVE_ENTRY command.
- */
-
-/*
- * @def FPP_CMD_L2BRIDGE_LRN_TIMEOUT
- * @brief Specifies FCI command that sets the life time for the learned L2 Bridge entries
- * @details Each learned entry starts with a configured life time which is decremented
- *          each second unless the entry is used to fast forward frame. The entry is deleted
- *          when the life time reaches value 0. The initial value of the life time is configured
- *          by this command. The value is expressed in seconds and the allowed range is 1 to 65535.
- *          The default value is 300 seconds (5 minutes).
- * @note The entries learned before the timeout change are not updated unless they are used for
- *       fast forward - in each seconds the following two options can happen to the existing entry
- *       - entry life time is decremented
- *       - entry life time is set to the configured value (the latest value applies)
- *
- * Command Argument Type: @ref fpp_l2_bridge_control_cmd_t
- *
- * Items to be set in command argument structure:
- * @code{.c}
- *   fpp_l2_bridge_control_cmd_t cmd_data =
- *   {
- *     .mode_timeout = ...,   // Timeout in seconds
- *   };
- * @endcode
- *
- * @hideinitializer
- */
-
-/*
- * @def FPP_CMD_L2BRIDGE_LRN_RESET
- * @brief Specifies an FCI command that removes all learned entries from the L2 bridge
- * @details All learned entries are removed from the bridge immediately. Static entries added by the
- *          FPP_CMD_L2BRIDGE_ADD_ENTRY are not affected and their removal is possible only by command
- *          FPP_CMD_L2BRIDGE_REMOVE_ENTRY. The command does not use any data.
- *
- * Command Argument Type: none (cmd_buf = NULL; cmd_len = 0;)
- *
- * @hideinitializer
- */
-
-/*
- * @def FPP_CMD_L2BRIDGE_QUERY_ENTRY
- * To Be Documented, not implemented yet
- *
- * @hideinitializer
- */
-
-/*
- * @def FPP_CMD_L2BRIDGE_QUERY_STATUS
- * To Be Documented, not implemented yet
- *
- * @hideinitializer
- */
-
-/** @}*/
+#endif /* LIBFCI_H */
diff --git a/sw/xfci/libfci/src/libfci_linux.c b/sw/xfci/libfci/src/libfci_linux.c
index 6a9a9a0..4e41dfd 100644
--- a/sw/xfci/libfci/src/libfci_linux.c
+++ b/sw/xfci/libfci/src/libfci_linux.c
@@ -1,6 +1,6 @@
 /* =========================================================================
  *  Copyright (C) 2007 Mindspeed Technologies, Inc.
- *  Copyright 2017-2020 NXP
+ *  Copyright 2017-2021 NXP
  *
  *  SPDX-License-Identifier: GPL-2.0
  *
@@ -211,7 +211,7 @@ int fci_register_cb(FCI_CLIENT *client, fci_cb_retval_t (*event_cb)(unsigned sho
 					goto close_and_exit;
 				}
 
-				if (0 != NLMSG_LENGTH(nlh))
+				if (0U != (nlh->nlmsg_len - NLMSG_LENGTH(0)))
 				{
 					reply_msg = NLMSG_DATA(nlh);
 					if (0 != reply_msg->msg_cmd.length)
@@ -297,7 +297,7 @@ int fci_register_cb(FCI_CLIENT *client, fci_cb_retval_t (*event_cb)(unsigned sho
 					goto close_and_exit;
 				}
 
-				if (0 != NLMSG_LENGTH(nlh))
+				if (0U != (nlh->nlmsg_len - NLMSG_LENGTH(0)))
 				{
 					reply_msg = NLMSG_DATA(nlh);
 					if (0 != reply_msg->msg_cmd.length)
@@ -577,15 +577,15 @@ static int __fci_cmd(FCI_CLIENT *client, unsigned short fcode, unsigned short *c
 		{
 			/*	Success, pass reply data (if any) and its length to user */
 			if ((NULL != rep_buf) && (NULL != rep_len) &&
-				(2U <= reply_msg->msg_cmd.length) &&
-				(0U != NLMSG_LENGTH(nlh)))
+				(4U <= reply_msg->msg_cmd.length) &&
+				(0U != (nlh->nlmsg_len - NLMSG_LENGTH(0))))
 			{
 #if (TRUE == FCI_CFG_FORCE_LEGACY_API)
 				memcpy(rep_buf, reply_msg->msg_cmd.payload, reply_msg->msg_cmd.length);
 				*rep_len = reply_msg->msg_cmd.length;
 #else
-				memcpy(rep_buf, ((void *)reply_msg->msg_cmd.payload + 2U), reply_msg->msg_cmd.length - 2U);
-				*rep_len = reply_msg->msg_cmd.length - 2U;
+				memcpy(rep_buf, ((void *)reply_msg->msg_cmd.payload + 4U), reply_msg->msg_cmd.length - 4U);
+				*rep_len = reply_msg->msg_cmd.length - 4U;
 #endif /* FCI_CFG_FORCE_LEGACY_API */
 			}
 			memcpy(&cmd_ret, reply_msg->msg_cmd.payload, sizeof(unsigned short));
-- 
2.17.1

