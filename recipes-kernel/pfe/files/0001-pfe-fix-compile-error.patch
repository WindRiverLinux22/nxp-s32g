From 45b2eed9980ccbded96a79800f83c81f78f6ecec Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Thu, 10 Mar 2022 19:31:51 +0800
Subject: [PATCH] pfe: fix compile error

This patch is to fix the pfe build errors based on v5.15 kernel.
The updates info as following:
  1. drop the unneeded codes in sw/elf/public/elf.h,
     which are already defined in linux/module.h
  2. add "fallthrough" keywords to make compiler happy
  3. other updates found in compile

Upstream-Status: Pending

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 sw/elf/public/elf.h            | 131 +--------------------------------
 sw/elf/src/elf.c               |  14 ----
 sw/fci/src/fci_connections.c   |   1 +
 sw/fci/src/fci_interfaces.c    |   2 +
 sw/fci/src/fci_l2br_domains.c  |   3 +
 sw/fci/src/fci_mirror.c        |   2 +
 sw/fci/src/fci_routes.c        |   1 +
 sw/fci/src/fci_spd.c           |   1 +
 sw/linux-pfeng/pfeng-dt.c      |   4 +-
 sw/linux-pfeng/pfeng-ethtool.c |   6 +-
 sw/linux-pfeng/pfeng.h         |   2 +-
 11 files changed, 17 insertions(+), 150 deletions(-)

diff --git a/sw/elf/public/elf.h b/sw/elf/public/elf.h
index b70bfa3..794b618 100644
--- a/sw/elf/public/elf.h
+++ b/sw/elf/public/elf.h
@@ -45,6 +45,7 @@
  3) internal and external interfaces from this unit
 ==================================================================================================*/  
 #include "oal.h"
+#include <linux/elf.h>
 
 /*==================================================================================================
                                SOURCE FILE VERSION INFORMATION
@@ -74,52 +75,6 @@
                           | (((VAL)&0x0000FF0000000000U)>>24U) | (((VAL)&0x0000000000FF0000U)<<24U) \
                           | (((VAL)&0x000000FF00000000U)>>8U ) | (((VAL)&0x00000000FF000000U)<<8U ) \
                           )
-/*==================================================================================================
-                                             ENUMS
-==================================================================================================*/
-enum
-{
-    EI_MAG0         = 0, /* 0x7F */
-    EI_MAG1         = 1, /* 'E' */
-    EI_MAG2         = 2, /* 'L' */
-    EI_MAG3         = 3, /* 'F' */
-    EI_CLASS        = 4, /* Architecture 32-bit Architecture or 64-bit Architecture */
-    EI_DATA         = 5, /* Byte Order */
-    EI_VERSION      = 6, /* ELF Version */
-    EI_OSABI        = 7, /* OS Specific */
-    EI_ABIVERSION   = 8, /* OS Specific */
-    EI_PAD          = 9  /* Padding */
-};
-
-/* any section that is of type SHT_NOBITS and has the attribute SHF_ALLOC should be allocated */
-enum
-{
-    SHT_NULL      = 0U,   /* Null section */
-    SHT_PROGBITS  = 1U,   /* Program information */
-    SHT_SYMTAB    = 2U,   /* Symbol table */
-    SHT_STRTAB    = 3U,   /* String table */
-    SHT_RELA      = 4U,   /* Relocation with addend*/
-    SHT_NOBITS    = 8U,   /* Not present in file */
-    SHT_REL       = 9U,   /* Relocation (no addend) */
-};
-
-enum
-{
-    SHF_WRITE = 0x1, /* Writable */
-    SHF_ALLOC = 0x2, /* Occupies memory during execution */
-    SHF_EXECINSTR = 0x4, /* Executable */
-    SHF_MERGE = 0x10, /* Might be merged */
-    SHF_STRINGS = 0x20, /* Contains nul-terminated strings */
-    SHF_INFO_LINK = 0x40, /* 'sh info' contains SHT index */
-    SHF_LINK_ORDER = 0x80, /* Preserve order after combining */
-    SHF_OS_NONCONFORMING = 0x100, /* Non-standard OS specific handling required */
-    SHF_GROUP = 0x200, /* Section is member of a group */
-    SHF_TLS = 0x400, /* Section hold thread-local data */
-    SHF_MASKOS = 0x0ff00000, /* OS-specific */
-    SHF_MASKPROC = (int32_t)0xf000000, /* Processor-specific *//* Cast to avoid warning on some compilers */
-    SHF_ORDERED = 0x4000000, /* Special ordering requirement (Solaris) */
-    SHF_EXCLUDE = 0x8000000, /* Section is excluded unless referenced or allocated (Solaris) */
-};
 
 /*==================================================================================================
                                  STRUCTURES AND OTHER TYPEDEFS
@@ -144,90 +99,6 @@ typedef uint32_t Elf32_Addr;    /* Unsigned address */
 typedef uint64_t Elf64_Off;     /* Unsigned offset */
 typedef uint64_t Elf64_Addr;    /* Unsigned address */
 
-typedef struct __attribute__((packed))
-{
-    uint8_t     e_ident[ELF_NIDENT];
-    uint16_t    e_type;
-    uint16_t    e_machine;
-    uint32_t    e_version;
-    Elf32_Addr  e_entry;
-    Elf32_Off   e_phoff;
-    Elf32_Off   e_shoff;
-    uint32_t    e_flags;
-    uint16_t    e_ehsize;
-    uint16_t    e_phentsize;
-    uint16_t    e_phnum;
-    uint16_t    e_shentsize;
-    uint16_t    e_shnum;
-    uint16_t    e_shstrndx;
-} Elf32_Ehdr;
-typedef struct __attribute__((packed))
-{
-    uint8_t     e_ident[ELF_NIDENT];
-    uint16_t    e_type;
-    uint16_t    e_machine;
-    uint32_t    e_version;
-    Elf64_Addr  e_entry;
-    Elf64_Off   e_phoff;
-    Elf64_Off   e_shoff;
-    uint32_t    e_flags;
-    uint16_t    e_ehsize;
-    uint16_t    e_phentsize;
-    uint16_t    e_phnum;
-    uint16_t    e_shentsize;
-    uint16_t    e_shnum;
-    uint16_t    e_shstrndx;
-} Elf64_Ehdr;
-
-typedef struct __attribute__((packed))
-{
-    uint32_t   p_type;
-    Elf32_Off  p_offset;
-    Elf32_Addr p_vaddr;
-    Elf32_Addr p_paddr;
-    uint32_t   p_filesz;
-    uint32_t   p_memsz;
-    uint32_t   p_flags;
-    uint32_t   p_align;
-} Elf32_Phdr;
-typedef struct __attribute__((packed))
-{
-    uint32_t   p_type;
-    uint32_t   p_flags;
-    Elf64_Off  p_offset;
-    Elf64_Addr p_vaddr;
-    Elf64_Addr p_paddr;
-    uint64_t   p_filesz;
-    uint64_t   p_memsz;
-    uint64_t   p_align;
-} Elf64_Phdr;
-
-typedef struct __attribute__((packed))
-{
-    uint32_t   sh_name;
-    uint32_t   sh_type;
-    uint32_t   sh_flags;
-    Elf32_Addr sh_addr;
-    Elf32_Off  sh_offset;
-    uint32_t   sh_size;
-    uint32_t   sh_link;
-    uint32_t   sh_info;
-    uint32_t   sh_addralign;
-    uint32_t   sh_entsize;
-} Elf32_Shdr;
-typedef struct __attribute__((packed))
-{
-    uint32_t   sh_name;
-    uint32_t   sh_type;
-    uint64_t   sh_flags;
-    Elf64_Addr sh_addr;
-    Elf64_Off  sh_offset;
-    uint64_t   sh_size;
-    uint32_t   sh_link;
-    uint32_t   sh_info;
-    uint64_t   sh_addralign;
-    uint64_t   sh_entsize;
-} Elf64_Shdr;
 
 typedef struct __attribute__((packed))
 {
diff --git a/sw/elf/src/elf.c b/sw/elf/src/elf.c
index 3b5d358..9a41b63 100644
--- a/sw/elf/src/elf.c
+++ b/sw/elf/src/elf.c
@@ -58,7 +58,6 @@
 ==================================================================================================*/
 #define ELF64_HEADER_SIZE 64U
 #define ELF32_HEADER_SIZE 52U
-#define SHN_UNDEF       0U    /* Undefined/Not present */
 
 /*==================================================================================================
                           LOCAL TYPEDEFS (STRUCTURES, UNIONS, ENUMS)
@@ -71,19 +70,6 @@ enum
     ELF_Type_Core = 4U,
 };
 
-enum
-{
-    PT_NULL      = 0U,
-    PT_LOAD      = 1U, /* Loadable segment */
-    PT_DYNAMIC   = 2U,
-    PT_INTERP    = 3U,
-    PT_NOTE      = 4U,
-    PT_SHLIB     = 5U,
-    PT_PHDR      = 6U,
-    PT_LOPROC    = 7U,
-    PT_HIPROC    = 8U,
-    PT_GNU_STACK = 9U,
-};
 
 /*==================================================================================================
                                        LOCAL CONSTANTS
diff --git a/sw/fci/src/fci_connections.c b/sw/fci/src/fci_connections.c
index dfe8e5d..479ce65 100644
--- a/sw/fci/src/fci_connections.c
+++ b/sw/fci/src/fci_connections.c
@@ -1192,6 +1192,7 @@ static errno_t fci_connections_ipvx_ct_cmd(bool_t ipv6, const fci_msg_t *msg, ui
 						*fci_ret = FPP_ERR_CT_ENTRY_NOT_FOUND;
 						break;
 					}
+					fallthrough;
 				}
 				/* FALLTHRU */
 
diff --git a/sw/fci/src/fci_interfaces.c b/sw/fci/src/fci_interfaces.c
index 0fbb06f..936ce41 100644
--- a/sw/fci/src/fci_interfaces.c
+++ b/sw/fci/src/fci_interfaces.c
@@ -745,6 +745,7 @@ errno_t fci_interfaces_log_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_log_if_cmd
 						ret = EOK;
 						break;
 					}
+					fallthrough;
 				}
 				/* FALLTHRU */
 				case FPP_ACTION_QUERY_CONT:
@@ -1281,6 +1282,7 @@ errno_t fci_interfaces_phy_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_phy_if_cmd
 						*fci_ret = FPP_ERR_IF_ENTRY_NOT_FOUND;
 						break;
 					}
+					fallthrough;
 				} /* FALLTHRU */
 
 				case FPP_ACTION_QUERY_CONT:
diff --git a/sw/fci/src/fci_l2br_domains.c b/sw/fci/src/fci_l2br_domains.c
index 3d2cfd5..12ec825 100644
--- a/sw/fci/src/fci_l2br_domains.c
+++ b/sw/fci/src/fci_l2br_domains.c
@@ -135,6 +135,7 @@ errno_t fci_l2br_domain_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_l2_bd_cmd_t *
 						{
 							NXP_LOG_DEBUG("Bridge domain %d created\n", oal_ntohs(bd_cmd->vlan));
 						}
+						fallthrough;
 					}
 					/* FALLTHRU */
 
@@ -334,6 +335,7 @@ errno_t fci_l2br_domain_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_l2_bd_cmd_t *
 							*fci_ret = FPP_ERR_L2_BD_NOT_FOUND;
 							break;
 						}
+						fallthrough;
 					}
 					/* FALLTHRU */
 
@@ -566,6 +568,7 @@ errno_t fci_l2br_static_entry_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_l2_stat
 						*fci_ret = FPP_ERR_L2_STATIC_EN_NOT_FOUND;
 						break;
 					}
+					fallthrough;
 				}
 				/* FALLTHRU */
 				case FPP_ACTION_QUERY_CONT:
diff --git a/sw/fci/src/fci_mirror.c b/sw/fci/src/fci_mirror.c
index f7d3091..3a2bb75 100644
--- a/sw/fci/src/fci_mirror.c
+++ b/sw/fci/src/fci_mirror.c
@@ -101,6 +101,7 @@ errno_t fci_mirror_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_mirror_cmd_t *repl
 						ret = EPERM;
 						break;
 					}
+					fallthrough;
 				}
 				/* FALLTHRU */
 
@@ -348,6 +349,7 @@ errno_t fci_mirror_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_mirror_cmd_t *repl
 						ret = EOK;
 						break;
 					}
+					fallthrough;
 				}
 				/* FALLTHRU */
 
diff --git a/sw/fci/src/fci_routes.c b/sw/fci/src/fci_routes.c
index 7f14da6..03d2c68 100644
--- a/sw/fci/src/fci_routes.c
+++ b/sw/fci/src/fci_routes.c
@@ -259,6 +259,7 @@ errno_t fci_routes_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_rt_cmd_t *reply_bu
 						*fci_ret = FPP_ERR_RT_ENTRY_NOT_FOUND;
 						break;
 					}
+					fallthrough;
 				}
 				/* FALLTHRU */
 
diff --git a/sw/fci/src/fci_spd.c b/sw/fci/src/fci_spd.c
index 78b29c7..2ff98ef 100644
--- a/sw/fci/src/fci_spd.c
+++ b/sw/fci/src/fci_spd.c
@@ -163,6 +163,7 @@ errno_t fci_spd_cmd(fci_msg_t *msg, uint16_t *fci_ret, fpp_spd_cmd_t *reply_buf,
 
                                     case FPP_ACTION_QUERY:
                                         search_position = 0U;
+					fallthrough;
                                         /* FALLTHRU */
 
                                     case FPP_ACTION_QUERY_CONT:
diff --git a/sw/linux-pfeng/pfeng-dt.c b/sw/linux-pfeng/pfeng-dt.c
index e10c0c9..9794011 100644
--- a/sw/linux-pfeng/pfeng-dt.c
+++ b/sw/linux-pfeng/pfeng-dt.c
@@ -274,8 +274,8 @@ int pfeng_dt_create_config(struct pfeng_priv *priv)
 		dev_info(dev, "netif name: %s", netif_cfg->name);
 
 		/* MAC eth address */
-		netif_cfg->macaddr = (u8 *)of_get_mac_address(child);
-		if (netif_cfg->macaddr)
+                ret = of_get_mac_address(child, netif_cfg->macaddr);
+                if (ret)
 			dev_info(dev, "DT mac addr: %pM", netif_cfg->macaddr);
 
 		if (of_find_property(child, "nxp,pfeng-netif-mode-aux", NULL))
diff --git a/sw/linux-pfeng/pfeng-ethtool.c b/sw/linux-pfeng/pfeng-ethtool.c
index c5ae4ac..771ca26 100644
--- a/sw/linux-pfeng/pfeng-ethtool.c
+++ b/sw/linux-pfeng/pfeng-ethtool.c
@@ -109,7 +109,7 @@ static int pfeng_ethtool_get_ts_info(struct net_device *netdev, struct ethtool_t
 	return 0;
 }
 
-static int pfeng_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec)
+static int pfeng_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec, struct kernel_ethtool_coalesce *, struct netlink_ext_ack *ack)
 {
 	struct pfeng_netif *netif = netdev_priv(netdev);
 	struct pfeng_hif_chnl *chnl;
@@ -129,7 +129,7 @@ static int pfeng_get_coalesce(struct net_device *netdev, struct ethtool_coalesce
 	return 0;
 }
 
-static int pfeng_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec)
+static int pfeng_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec, struct kernel_ethtool_coalesce *, struct netlink_ext_ack *ack)
 {
 	struct pfeng_netif *netif = netdev_priv(netdev);
 	struct pfeng_hif_chnl *chnl;
@@ -224,7 +224,7 @@ int pfeng_ethtool_params_restore(struct pfeng_netif *netif) {
 	ec.rx_max_coalesced_frames = chnl->cfg_rx_max_coalesced_frames;
 	ec.rx_coalesce_usecs = chnl->cfg_rx_coalesce_usecs;
 
-	ret = pfeng_set_coalesce(netdev, &ec);
+	ret = pfeng_set_coalesce(netdev, &ec, NULL, NULL);
 	if (ret)
 		netdev_warn(netdev, "Coalescing not restored\n");
 
diff --git a/sw/linux-pfeng/pfeng.h b/sw/linux-pfeng/pfeng.h
index ba1ef84..53938b2 100644
--- a/sw/linux-pfeng/pfeng.h
+++ b/sw/linux-pfeng/pfeng.h
@@ -119,7 +119,7 @@ struct pfeng_netif_cfg {
 	struct list_head		lnode;
 	const char			*name;
 	struct device_node		*dn;
-	u8				*macaddr;
+        u8                              macaddr[6];
 	u8				emac_id;
 	u8				hifs;
 	u32				hifmap;
-- 
2.25.1

