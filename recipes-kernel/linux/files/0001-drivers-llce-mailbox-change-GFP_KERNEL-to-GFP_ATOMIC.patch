From 54936b6a8d22eee0baa96bc17c67431364a4af09 Mon Sep 17 00:00:00 2001
From: Zhantao Tang <zhantao.tang@windriver.com>
Date: Fri, 17 Sep 2021 16:29:48 +0800
Subject: [PATCH] drivers: llce-mailbox: change GFP_KERNEL to GFP_ATOMIC to fix
 debug calltrace

In origin, the kmalloc() in llce_logger_startup() uses GFP_KERNEL to request
memory, while this kmalloc operation is in atomic context, if debug configs
enabled, the following calltrace will show:

 BUG: sleeping function called from invalid context at mm/slab.h:513
 in_atomic(): 1, irqs_disabled(): 128, non_block: 0, pid: 342, name: dhcpcd

 ...

 Hardware name: Freescale S32G274 (DT)
 Call trace:
  dump_backtrace+0x0/0x1d4
  show_stack+0x24/0x30
  dump_stack+0xf0/0x13c
  ___might_sleep+0x19c/0x244
  __might_sleep+0x60/0x9c
  kmem_cache_alloc_trace+0x310/0x450
  llce_logger_startup+0x5c/0xa0 [llce_mailbox]
  llce_mb_startup+0x3c/0x50 [llce_mailbox]
  mbox_request_channel+0x218/0x2b0
  llce_logger_open+0x7c/0xf4 [llce_logger]
  __dev_open+0x12c/0x1f0
  __dev_change_flags+0x1d8/0x260
  dev_change_flags+0x30/0x70
  devinet_ioctl+0x5b0/0x6d4
  inet_ioctl+0x1e0/0x254
  sock_do_ioctl+0x50/0x22c
  sock_ioctl+0x1f4/0x480
  __arm64_sys_ioctl+0xb4/0x100
  el0_svc_common.constprop.0+0xa0/0x220
  do_el0_svc+0x7c/0xa0
  el0_svc+0x20/0x30
  el0_sync_handler+0xa4/0x130
  el0_sync+0x180/0x1c0

So use GFP_ATOMIC for kmalloc() to fix the above issue.

Upstream-Status: Pending

Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/mailbox/llce-mailbox.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/mailbox/llce-mailbox.c b/drivers/mailbox/llce-mailbox.c
index 3c6299df8c3e..2e2b9c9fac56 100644
--- a/drivers/mailbox/llce-mailbox.c
+++ b/drivers/mailbox/llce-mailbox.c
@@ -869,7 +869,7 @@ static int llce_logger_startup(struct mbox_chan *chan)
 	priv->state = LLCE_REGISTERED_CHAN;
 
 	/* Make room for POP leftovers */
-	priv->data = kmalloc(sizeof(struct llce_logger_data), GFP_KERNEL);
+	priv->data = kmalloc(sizeof(struct llce_logger_data), GFP_ATOMIC);
 	if (!priv->data)
 		ret = -ENOMEM;
 
-- 
2.25.1

