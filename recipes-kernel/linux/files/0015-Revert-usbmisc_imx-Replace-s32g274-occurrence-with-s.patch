From 9b0286cec97aeac41fc88519fc86ca3c782bfd15 Mon Sep 17 00:00:00 2001
From: Zhantao Tang <zhantao.tang@windriver.com>
Date: Thu, 1 Jul 2021 17:01:48 +0800
Subject: [PATCH] Revert "usbmisc_imx: Replace s32g274 occurrence with s32g"

This reverts commit 1a344146410442b877a3938bb4e9f85fccc30503.

Upstream-Status: Pending

Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/usb/chipidea/ci_hdrc_imx.c |  6 ++--
 drivers/usb/chipidea/usbmisc_imx.c | 44 +++++++++++++++---------------
 2 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/drivers/usb/chipidea/ci_hdrc_imx.c b/drivers/usb/chipidea/ci_hdrc_imx.c
index 4b27875d22c1..0db1a17dab35 100644
--- a/drivers/usb/chipidea/ci_hdrc_imx.c
+++ b/drivers/usb/chipidea/ci_hdrc_imx.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
  * Copyright 2012 Freescale Semiconductor, Inc.
- * Copyright 2020-2021 NXP
+ * Copyright 2020 NXP
  * Copyright (C) 2012 Marek Vasut <marex@denx.de>
  * on behalf of DENX Software Engineering GmbH
  */
@@ -71,7 +71,7 @@ static const struct ci_hdrc_imx_platform_flag imx7ulp_usb_data = {
 		CI_HDRC_PMQOS,
 };
 
-static const struct ci_hdrc_imx_platform_flag s32g_usb_data = {
+static const struct ci_hdrc_imx_platform_flag s32g274a_usb_data = {
 	.flags = CI_HDRC_DISABLE_HOST_STREAMING,
 };
 
@@ -85,7 +85,7 @@ static const struct of_device_id ci_hdrc_imx_dt_ids[] = {
 	{ .compatible = "fsl,imx6ul-usb", .data = &imx6ul_usb_data},
 	{ .compatible = "fsl,imx7d-usb", .data = &imx7d_usb_data},
 	{ .compatible = "fsl,imx7ulp-usb", .data = &imx7ulp_usb_data},
-	{ .compatible = "fsl,s32g-usb", .data = &s32g_usb_data},
+	{ .compatible = "fsl,s32g274a-usb", .data = &s32g274a_usb_data},
 	{ /* sentinel */ }
 };
 MODULE_DEVICE_TABLE(of, ci_hdrc_imx_dt_ids);
diff --git a/drivers/usb/chipidea/usbmisc_imx.c b/drivers/usb/chipidea/usbmisc_imx.c
index a60d3e98f8fc..eb5c19ed5502 100644
--- a/drivers/usb/chipidea/usbmisc_imx.c
+++ b/drivers/usb/chipidea/usbmisc_imx.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
  * Copyright 2012 Freescale Semiconductor, Inc.
- * Copyright 2020-2021 NXP
+ * Copyright 2020 NXP
  */
 
 #include <linux/module.h>
@@ -138,16 +138,16 @@
 #define MX6_USB_OTG_WAKEUP_BITS (MX6_BM_WAKEUP_ENABLE | MX6_BM_VBUS_WAKEUP | \
 				 MX6_BM_ID_WAKEUP)
 
-#define S32G_WAKEUP_IE	BIT(0)
-#define S32G_CORE_IE	BIT(1)
-#define S32G_PWRFLT		BIT(2)
-#define S32G_WAKEUPIC	BIT(5)
-#define S32G_PWRFLTEN	BIT(7)
-#define S32G_PWRFLTDF	BIT(8)
-#define S32G_WAKEUPIS	BIT(9)
-#define S32G_WAKEUPCTRL	BIT(10)
-#define S32G_WAKEUPEN	BIT(11)
-#define S32G_UCMALLBE	BIT(15)
+#define S32G274A_WAKEUP_IE	BIT(0)
+#define S32G274A_CORE_IE	BIT(1)
+#define S32G274A_PWRFLT		BIT(2)
+#define S32G274A_WAKEUPIC	BIT(5)
+#define S32G274A_PWRFLTEN	BIT(7)
+#define S32G274A_PWRFLTDF	BIT(8)
+#define S32G274A_WAKEUPIS	BIT(9)
+#define S32G274A_WAKEUPCTRL	BIT(10)
+#define S32G274A_WAKEUPEN	BIT(11)
+#define S32G274A_UCMALLBE	BIT(15)
 
 struct usbmisc_ops {
 	/* It's called once when probe a usb device */
@@ -604,14 +604,14 @@ static int usbmisc_vf610_init(struct imx_usbmisc_data *data)
 	return 0;
 }
 
-static int usbmisc_s32g_set_wakeup
+static int usbmisc_s32g274a_set_wakeup
 	(struct imx_usbmisc_data *data, bool enabled)
 {
 	struct imx_usbmisc *usbmisc = dev_get_drvdata(data->dev);
 	unsigned long flags;
 	u32 reg;
-	u32 wake_settings = S32G_WAKEUP_IE | S32G_CORE_IE |
-			S32G_WAKEUPEN | S32G_WAKEUPCTRL;
+	u32 wake_settings = S32G274A_WAKEUP_IE | S32G274A_CORE_IE |
+			S32G274A_WAKEUPEN | S32G274A_WAKEUPCTRL;
 
 	spin_lock_irqsave(&usbmisc->lock, flags);
 
@@ -627,7 +627,7 @@ static int usbmisc_s32g_set_wakeup
 	return 0;
 }
 
-static int usbmisc_s32g_init(struct imx_usbmisc_data *data)
+static int usbmisc_s32g274a_init(struct imx_usbmisc_data *data)
 {
 	struct imx_usbmisc *usbmisc = dev_get_drvdata(data->dev);
 	unsigned long flags;
@@ -636,10 +636,10 @@ static int usbmisc_s32g_init(struct imx_usbmisc_data *data)
 	spin_lock_irqsave(&usbmisc->lock, flags);
 
 	reg = readl(usbmisc->base);
-	writel(reg | S32G_PWRFLTEN | S32G_UCMALLBE, usbmisc->base);
+	writel(reg | S32G274A_PWRFLTEN | S32G274A_UCMALLBE, usbmisc->base);
 
 	spin_unlock_irqrestore(&usbmisc->lock, flags);
-	usbmisc_s32g_set_wakeup(data, false);
+	usbmisc_s32g274a_set_wakeup(data, false);
 
 	return 0;
 }
@@ -1037,9 +1037,9 @@ static const struct usbmisc_ops imx7ulp_usbmisc_ops = {
 	.hsic_set_clk = usbmisc_imx6_hsic_set_clk,
 };
 
-static const struct usbmisc_ops s32g_usbmisc_ops = {
-	.init = usbmisc_s32g_init,
-	.set_wakeup = usbmisc_s32g_set_wakeup,
+static const struct usbmisc_ops s32g274a_usbmisc_ops = {
+	.init = usbmisc_s32g274a_init,
+	.set_wakeup = usbmisc_s32g274a_set_wakeup,
 };
 
 static inline bool is_imx53_usbmisc(struct imx_usbmisc_data *data)
@@ -1197,8 +1197,8 @@ static const struct of_device_id usbmisc_imx_dt_ids[] = {
 		.data = &imx7ulp_usbmisc_ops,
 	},
 	{
-		.compatible = "fsl,s32g-usbmisc",
-		.data = &s32g_usbmisc_ops,
+		.compatible = "fsl,s32g274a-usbmisc",
+		.data = &s32g274a_usbmisc_ops,
 	},
 
 	{ /* sentinel */ }
-- 
2.25.1

