From 8e529d90e163dcfce59301c51e0ac7aa32113298 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Tue, 6 Dec 2022 11:01:44 +0200
Subject: [PATCH 47/63] firmware: scmi: Add suspend and resume callbacks to
 SCMI protocols

PM callbacks are needed for some vendor specific protocols.

Issue: ALB-9425
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/firmware/arm_scmi/bus.c | 24 ++++++++++++++++++++++++
 include/linux/scmi_protocol.h   |  2 ++
 2 files changed, 26 insertions(+)

diff --git a/drivers/firmware/arm_scmi/bus.c b/drivers/firmware/arm_scmi/bus.c
index 7c1c0951e562..2090ddd317bc 100644
--- a/drivers/firmware/arm_scmi/bus.c
+++ b/drivers/firmware/arm_scmi/bus.c
@@ -120,11 +120,35 @@ static void scmi_dev_remove(struct device *dev)
 		scmi_drv->remove(scmi_dev);
 }
 
+static int scmi_dev_suspend(struct device *dev, pm_message_t state)
+{
+	struct scmi_driver *scmi_drv = to_scmi_driver(dev->driver);
+	struct scmi_device *scmi_dev = to_scmi_dev(dev);
+
+	if (scmi_drv->suspend)
+		return scmi_drv->suspend(scmi_dev, state);
+
+	return 0;
+}
+
+static int scmi_dev_resume(struct device *dev)
+{
+	struct scmi_driver *scmi_drv = to_scmi_driver(dev->driver);
+	struct scmi_device *scmi_dev = to_scmi_dev(dev);
+
+	if (scmi_drv->resume)
+		return scmi_drv->resume(scmi_dev);
+
+	return 0;
+}
+
 static struct bus_type scmi_bus_type = {
 	.name =	"scmi_protocol",
 	.match = scmi_dev_match,
 	.probe = scmi_dev_probe,
 	.remove = scmi_dev_remove,
+	.suspend = scmi_dev_suspend,
+	.resume = scmi_dev_resume,
 };
 
 int scmi_driver_register(struct scmi_driver *driver, struct module *owner,
diff --git a/include/linux/scmi_protocol.h b/include/linux/scmi_protocol.h
index 4dc25cf89844..10f835162fb2 100644
--- a/include/linux/scmi_protocol.h
+++ b/include/linux/scmi_protocol.h
@@ -678,6 +678,8 @@ struct scmi_driver {
 	const char *name;
 	int (*probe)(struct scmi_device *sdev);
 	void (*remove)(struct scmi_device *sdev);
+	int (*suspend)(struct scmi_device *sdev, pm_message_t state);
+	int (*resume)(struct scmi_device *sdev);
 	const struct scmi_device_id *id_table;
 
 	struct device_driver driver;
-- 
2.25.1

