From a0de40d3664cb9ee627c996b57e32ad748d3f12b Mon Sep 17 00:00:00 2001
From: Zhantao Tang <zhantao.tang@windriver.com>
Date: Mon, 6 Mar 2023 17:33:28 +0800
Subject: [PATCH 1/3] s32cc: update to align with bsp36 v5.15 kernel

This patch is to compatible wrlinux s32g kernel with s32g SDK v5.15 kernel.

In detail, this patch updates the following contents:
  1. update all s32g related dts files, mainly for the clock names and
     other related dts nodes
  2. update include/dt-bindings files to compatible with dts changes
  3. update usb compatible strings
  4. other updates

Upstream-Status: Pending

Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>

---
 .../freescale/s32cc-nxp-flash-macronix.dtsi   |   3 +
 arch/arm64/boot/dts/freescale/s32cc.dtsi      | 474 ++++++------
 .../boot/dts/freescale/s32g-pfe-slave.dtsi    |  12 +-
 arch/arm64/boot/dts/freescale/s32g-pfe.dtsi   |  18 +-
 arch/arm64/boot/dts/freescale/s32g.dtsi       |  64 +-
 arch/arm64/boot/dts/freescale/s32g2.dtsi      |   6 +-
 .../boot/dts/freescale/s32g274a-bluebox3.dts  |  49 +-
 .../arm64/boot/dts/freescale/s32g274a-emu.dts |   2 +
 .../boot/dts/freescale/s32g274a-rdb2.dtsi     |  20 +-
 .../boot/dts/freescale/s32g2xxa-evb.dtsi      |   6 +
 arch/arm64/boot/dts/freescale/s32g3.dtsi      |  42 +-
 .../boot/dts/freescale/s32g399a-rdb3.dts      |   1 -
 .../boot/dts/freescale/s32g399a-rdb3.dtsi     |   2 +-
 .../boot/dts/freescale/s32g3xxa-evb.dtsi      |   1 +
 .../boot/dts/freescale/s32g3xxa-evb3.dtsi     |   1 +
 .../boot/dts/freescale/s32gxxxa-evb.dtsi      | 559 ++++++++------
 .../boot/dts/freescale/s32gxxxa-rdb.dtsi      | 690 +++++++++++-------
 arch/arm64/boot/dts/freescale/s32r45-emu.dts  |   4 -
 arch/arm64/boot/dts/freescale/s32r45-evb.dts  | 282 ++++---
 arch/arm64/boot/dts/freescale/s32r45.dtsi     |  73 +-
 drivers/usb/chipidea/ci_hdrc_imx.c            |   2 +-
 drivers/usb/chipidea/usbmisc_imx.c            |   4 +-
 include/dt-bindings/clock/s32cc-scmi-clock.h  |  85 +++
 include/dt-bindings/clock/s32g-scmi-clock.h   |  66 +-
 include/dt-bindings/memory/s32cc-siul2.h      |  25 +
 include/dt-bindings/misc/s32cc-fccu.h         |  14 +
 include/dt-bindings/nvmem/s32cc-siul2-nvmem.h |  13 +
 include/dt-bindings/perf/s32cc-scmi-perf.h    |  15 +
 include/dt-bindings/phy/phy-s32cc-serdes.h    |  14 +
 include/dt-bindings/reset/s32cc-scmi-reset.h  |  33 +
 include/dt-bindings/rtc/s32cc-rtc.h           |  13 +
 31 files changed, 1606 insertions(+), 987 deletions(-)
 create mode 100644 include/dt-bindings/clock/s32cc-scmi-clock.h
 create mode 100644 include/dt-bindings/memory/s32cc-siul2.h
 create mode 100644 include/dt-bindings/misc/s32cc-fccu.h
 create mode 100644 include/dt-bindings/nvmem/s32cc-siul2-nvmem.h
 create mode 100644 include/dt-bindings/perf/s32cc-scmi-perf.h
 create mode 100644 include/dt-bindings/phy/phy-s32cc-serdes.h
 create mode 100644 include/dt-bindings/reset/s32cc-scmi-reset.h
 create mode 100644 include/dt-bindings/rtc/s32cc-rtc.h

diff --git a/arch/arm64/boot/dts/freescale/s32cc-nxp-flash-macronix.dtsi b/arch/arm64/boot/dts/freescale/s32cc-nxp-flash-macronix.dtsi
index 1135d5444fc0..096a8f62079a 100644
--- a/arch/arm64/boot/dts/freescale/s32cc-nxp-flash-macronix.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32cc-nxp-flash-macronix.dtsi
@@ -10,6 +10,9 @@ macronix_memory: mx25uw51245g@0 {
 		spi-tx-bus-width = <8>;
 		spi-rx-bus-width = <8>;
 		reg = <0>;
+		force-soft-reset;
+		inverted-cmd-ext;
+		memory-default-octal-dtr;
 
 		partitions {
 			compatible = "fixed-partitions";
diff --git a/arch/arm64/boot/dts/freescale/s32cc.dtsi b/arch/arm64/boot/dts/freescale/s32cc.dtsi
index 10e2fa4137bb..7a1d4335ada4 100644
--- a/arch/arm64/boot/dts/freescale/s32cc.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32cc.dtsi
@@ -1,26 +1,22 @@
+// SPDX-License-Identifier: GPL-1.0-or-later OR MIT
 /*
- * Copyright 2017-2022 NXP
+ * NXP S32CC SoC family
  *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
+ * Copyright (c) 2021 SUSE LLC
+ * Copyright 2017-2022 NXP
  */
 
 #include <dt-bindings/interrupt-controller/arm-gic.h>
-#include <dt-bindings/clock/s32gen1-clock.h>
-#include <dt-bindings/clock/s32gen1-scmi-clock.h>
-#include <dt-bindings/misc/s32-fccu.h>
-#include <dt-bindings/nvmem/s32-siul2-nvmem.h>
-#include <dt-bindings/perf/s32gen1-scmi-perf.h>
-#include <dt-bindings/phy/phy-s32gen1-serdes.h>
+#include <dt-bindings/clock/s32cc-scmi-clock.h>
+#include <dt-bindings/misc/s32cc-fccu.h>
+#include <dt-bindings/nvmem/s32cc-siul2-nvmem.h>
+#include <dt-bindings/perf/s32cc-scmi-perf.h>
 #include <dt-bindings/phy/phy.h>
-#include <dt-bindings/reset/s32gen1-scmi-reset.h>
-#include <dt-bindings/memory/s32-siul2.h>
+#include <dt-bindings/phy/phy-s32cc-serdes.h>
+#include <dt-bindings/memory/s32cc-siul2.h>
 #include <dt-bindings/pinctrl/s32cc-pinfunc.h>
-
-#define RTC_FIRC_CLKSEL	2
-#define RTC_SIRC_CLKSEL	0
+#include <dt-bindings/reset/s32cc-scmi-reset.h>
+#include <dt-bindings/rtc/s32cc-rtc.h>
 
 / {
 	interrupt-parent = <&gic>;
@@ -57,69 +53,6 @@ aliases {
 		spi6 = &qspi;
 	};
 
-	reserved-memory  {
-		#address-cells = <2>;
-		#size-cells = <2>;
-		ranges;
-
-		/* 4Mb shared memory for PCIe shared mem transfers, EP mode */
-		pci_shared_memory0: shm@c0000000 {
-			compatible = "nxp,s32cc-shm";
-			reg = <0x0 0xc0000000 0x0 0x400000>;    /* 4 MB */
-			no-map;
-		};
-
-		pci_shared_memory1: shm@c0400000 {
-			compatible = "nxp,s32cc-shm";
-			reg = <0x0 0xc0400000 0x0 0x400000>;    /* 4 MB */
-			no-map;
-		};
-
-		scmi_shbuf: shm@d0000000 {
-			compatible = "arm,scmi-shmem";
-			reg = <0x0 0xd0000000 0x0 0x400000>;    /* 4 MB */
-			no-map;
-		};
-
-		hse_reserved: shm@84000000 {
-			compatible = "nxp,s32cc-hse-rmem";
-			reg = <0x0 0x84000000 0x0 0x400000>;	/* 4 MB */
-			no-map;
-		};
-	};
-
-	firmware {
-		scmi: scmi {
-			compatible = "arm,scmi-smc";
-			mbox-names = "tx";
-			shmem = <&scmi_shbuf>;
-			arm,smc-id = <0xc20000fe>;
-			#address-cells = <1>;
-			#size-cells = <0>;
-			status = "okay";
-
-			dfs: protocol@13 {
-				reg = <0x13>;
-				#clock-cells = <1>;
-			};
-
-			clks: protocol@14 {
-				reg = <0x14>;
-				#clock-cells = <1>;
-			};
-
-			reset: protocol@16 {
-				reg = <0x16>;
-				#reset-cells = <1>;
-			};
-		};
-
-		psci {
-			compatible = "arm,psci-1.0";
-			method = "smc";
-		};
-	};
-
 	cpus {
 		#address-cells = <1>;
 		#size-cells = <0>;
@@ -151,7 +84,7 @@ cpu0: cpu@0 {
 			compatible = "arm,cortex-a53";
 			reg = <0x0>;
 			enable-method = "psci";
-			clocks = <&dfs S32GEN1_SCMI_PERF_A53>;
+			clocks = <&dfs S32CC_SCMI_PERF_A53>;
 			next-level-cache = <&cluster0_l2_cache>;
 		};
 
@@ -160,7 +93,7 @@ cpu1: cpu@1 {
 			compatible = "arm,cortex-a53";
 			reg = <0x1>;
 			enable-method = "psci";
-			clocks = <&dfs S32GEN1_SCMI_PERF_A53>;
+			clocks = <&dfs S32CC_SCMI_PERF_A53>;
 			next-level-cache = <&cluster0_l2_cache>;
 		};
 
@@ -169,7 +102,7 @@ cpu2: cpu@100 {
 			compatible = "arm,cortex-a53";
 			reg = <0x100>;
 			enable-method = "psci";
-			clocks = <&dfs S32GEN1_SCMI_PERF_A53>;
+			clocks = <&dfs S32CC_SCMI_PERF_A53>;
 			next-level-cache = <&cluster1_l2_cache>;
 		};
 
@@ -178,7 +111,7 @@ cpu3: cpu@101 {
 			compatible = "arm,cortex-a53";
 			reg = <0x101>;
 			enable-method = "psci";
-			clocks = <&dfs S32GEN1_SCMI_PERF_A53>;
+			clocks = <&dfs S32CC_SCMI_PERF_A53>;
 			next-level-cache = <&cluster1_l2_cache>;
 		};
 
@@ -200,10 +133,43 @@ pmu {
 
 	generic_timer: timer {
 		compatible = "arm,armv8-timer";
-		interrupts = <GIC_PPI 13 IRQ_TYPE_LEVEL_LOW>,
-			     <GIC_PPI 14 IRQ_TYPE_LEVEL_LOW>,
+		interrupts = <GIC_PPI 10 IRQ_TYPE_LEVEL_LOW>,
 			     <GIC_PPI 11 IRQ_TYPE_LEVEL_LOW>,
-			     <GIC_PPI 10 IRQ_TYPE_LEVEL_LOW>;
+			     <GIC_PPI 12 IRQ_TYPE_LEVEL_LOW>,
+			     <GIC_PPI 13 IRQ_TYPE_LEVEL_LOW>,
+			     <GIC_PPI 14 IRQ_TYPE_LEVEL_LOW>;
+		interrupt-names = "hyp-phys", "virt", "hyp-virt", "sec-phys", "phys";
+	};
+
+	reserved-memory  {
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+
+		/* 4Mb shared memory for PCIe shared mem transfers, EP mode */
+		pci_shared_memory0: shm@c0000000 {
+			compatible = "nxp,s32cc-shm";
+			reg = <0x0 0xc0000000 0x0 0x400000>;    /* 4 MB */
+			no-map;
+		};
+
+		pci_shared_memory1: shm@c0400000 {
+			compatible = "nxp,s32cc-shm";
+			reg = <0x0 0xc0400000 0x0 0x400000>;    /* 4 MB */
+			no-map;
+		};
+
+		scmi_shbuf: shm@d0000000 {
+			compatible = "arm,scmi-shmem";
+			reg = <0x0 0xd0000000 0x0 0x400000>;	/* 4 MB */
+			no-map;
+		};
+
+		hse_reserved: shm@84000000 {
+			compatible = "nxp,s32cc-hse-rmem";
+			reg = <0x0 0x84000000 0x0 0x400000>;	/* 4 MB */
+			no-map;
+		};
 	};
 
 	clocks {
@@ -220,6 +186,38 @@ serdes_125_ext: serdes_125_ext {
 		};
 	};
 
+	firmware {
+		scmi: scmi {
+			compatible = "arm,scmi-smc";
+			mbox-names = "tx";
+			shmem = <&scmi_shbuf>;
+			arm,smc-id = <0xc20000fe>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			dfs: protocol@13 {
+				reg = <0x13>;
+				#clock-cells = <1>;
+			};
+
+			clks: protocol@14 {
+				reg = <0x14>;
+				#clock-cells = <1>;
+			};
+
+			reset: protocol@16 {
+				reg = <0x16>;
+				#reset-cells = <1>;
+			};
+		};
+
+		psci {
+			compatible = "arm,psci-1.0";
+			method = "smc";
+		};
+	};
+
 	soc {
 		compatible = "simple-bus";
 		#address-cells = <2>;
@@ -235,14 +233,14 @@ rtc0: rtc@40060000 {
 			#interrupt-cells = <3>;
 			reg = <0x0 0x40060000 0x0 0x1000>;
 			interrupts = <GIC_SPI 121 IRQ_TYPE_LEVEL_HIGH>;	// RTC irq - GIC 153
-			clocks = <&clks S32GEN1_SCMI_CLK_RTC_REG>,
-				 <&clks S32GEN1_SCMI_CLK_RTC_SIRC>,
-				 <&clks S32GEN1_SCMI_CLK_RTC_FIRC>;
+			clocks = <&clks S32CC_SCMI_CLK_RTC_REG>,
+				 <&clks S32CC_SCMI_CLK_RTC_SIRC>,
+				 <&clks S32CC_SCMI_CLK_RTC_FIRC>;
 			clock-names = "ipg", "sirc", "firc";
-			/* Input clock selection: use the 48MHz FIRC with DIV512,
+			/* Input clock selection: use the 51MHz FIRC with DIV512,
 			 * for a roll-over time of just under 13 hours.
 			 */
-			nxp,clksel = <RTC_FIRC_CLKSEL>; // 2: FIRC; 0: SIRC
+			nxp,clksel = <S32CC_RTC_SOURCE_FIRC>;
 			nxp,dividers = <1 0>; // div512 enabled; div32 disabled
 		};
 
@@ -257,7 +255,7 @@ siul2@4009c000 {
 			#size-cells = <2>;
 			status = "okay";
 
-				  /* MIDR */
+			/* MIDR */
 			ranges = <MIDR_SIUL2_0 0x0 0x0 0x4009c000 0x0 0x10>;
 
 			nvram: nvram@4009c000 {
@@ -282,10 +280,10 @@ tmu: tmu@400a8000 {
 			status = "okay";
 		};
 
-		swt3: swt@4010c000 {
+		swt3: watchdog@4010c000 {
 			compatible = "nxp,s32cc-wdt";
 			reg = <0x0 0x4010c000 0x0 0x1000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SWT_COUNTER>;
+			clocks = <&clks S32CC_SCMI_CLK_SWT_COUNTER>;
 			clock-names = "swt";
 			status = "disabled";
 		};
@@ -294,7 +292,7 @@ stm0: stm@4011c000 {
 			compatible = "nxp,s32cc-stm";
 			reg = <0x0 0x4011c000 0x0 0x3000>;
 			interrupts = <GIC_SPI 24 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			cpu = <2>;
 			status = "disabled";
@@ -304,7 +302,7 @@ stm1: stm@40120000 {
 			compatible = "nxp,s32cc-stm";
 			reg = <0x0 0x40120000 0x0 0x3000>;
 			interrupts = <GIC_SPI 25 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			cpu = <3>;
 			status = "disabled";
@@ -313,7 +311,7 @@ stm1: stm@40120000 {
 		stm2: stm@40124000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x40124000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -321,7 +319,7 @@ stm2: stm@40124000 {
 		stm3: stm@40128000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x40128000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -335,8 +333,8 @@ qspi: spi@40134000 {
 			reg-names = "QuadSPI-memory", "QuadSPI";
 			interrupts = <GIC_SPI 32 IRQ_TYPE_LEVEL_HIGH>;
 			clock-names = "qspi_en", "qspi";
-			clocks = <&clks S32GEN1_SCMI_CLK_QSPI_FLASH1X>,
-				 <&clks S32GEN1_SCMI_CLK_QSPI_FLASH1X>;
+			clocks = <&clks S32CC_SCMI_CLK_QSPI_FLASH1X>,
+				 <&clks S32CC_SCMI_CLK_QSPI_FLASH1X>;
 			spi-max-frequency = <200000000>;
 			spi-num-chipselects = <2>;
 			status = "disabled";
@@ -356,8 +354,8 @@ edma0: dma-controller@40144000 {
 					  "edma-tx_16-31",
 					  "edma-err";
 			clock-names = "dmamux0", "dmamux1";
-			clocks = <&clks S32GEN1_SCMI_CLK_EDMA_MODULE>,
-				 <&clks S32GEN1_SCMI_CLK_EDMA_AHB>;
+			clocks = <&clks S32CC_SCMI_CLK_EDMA_MODULE>,
+				 <&clks S32CC_SCMI_CLK_EDMA_AHB>;
 			status = "disabled";
 		};
 
@@ -365,7 +363,7 @@ pit0: pit@40188000 {
 			compatible = "nxp,s32cc-pit";
 			reg = <0x0 0x40188000 0x0 0x3000>;
 			interrupts = <GIC_SPI 53 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_PIT_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_PIT_MODULE>;
 			clock-names = "pit";
 			cpu = <0>;
 			status = "disabled";
@@ -373,9 +371,7 @@ pit0: pit@40188000 {
 
 		mscm0: mscm@40198000 {
 			compatible = "nxp,s32cc-mscm";
-
 			reg = <0x0 0x40198000 0x0 0x1000>;
-
 			/* CPU2CPU interrupts */
 			interrupts = <GIC_SPI 1 IRQ_TYPE_LEVEL_HIGH>, // CPU to M7/A53 interrupt#0
 				     <GIC_SPI 2 IRQ_TYPE_LEVEL_HIGH>, // CPU to M7/A53 interrupt#1
@@ -390,9 +386,9 @@ can0: flexcan@401b4000 {
 				     <GIC_SPI 39 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 40 IRQ_TYPE_LEVEL_HIGH>;
 			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
-			clocks = <&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
-				 <&clks S32GEN1_SCMI_CLK_FLEXCAN_REG>;
-			clock-names = "per", "ipg";
+			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
+				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
+			clock-names = "ipg", "per";
 			status = "disabled";
 		};
 
@@ -404,18 +400,19 @@ can1: flexcan@401be000 {
 				     <GIC_SPI 43 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 44 IRQ_TYPE_LEVEL_HIGH>;
 			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
-			clocks = <&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
-				 <&clks S32GEN1_SCMI_CLK_FLEXCAN_REG>;
-			clock-names = "per", "ipg";
+			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
+				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
+			clock-names = "ipg", "per";
 			status = "disabled";
 		};
 
 		uart0: serial@401c8000 {
-			compatible = "nxp,s32cc-linflexuart";
+			compatible = "nxp,s32cc-linflexuart",
+				     "fsl,s32v234-linflexuart";
 			reg = <0x0 0x401c8000 0x0 0x3000>;
 			interrupts = <GIC_SPI 82 IRQ_TYPE_EDGE_RISING>;
-			clocks = <&clks S32GEN1_SCMI_CLK_LINFLEX_LIN>,
-				 <&clks S32GEN1_SCMI_CLK_LINFLEX_XBAR>;
+			clocks = <&clks S32CC_SCMI_CLK_LINFLEX_LIN>,
+				 <&clks S32CC_SCMI_CLK_LINFLEX_XBAR>;
 			clock-names = "lin", "ipg";
 			dmas = <&edma0 0 4>,
 			       <&edma0 0 3>;
@@ -423,11 +420,12 @@ uart0: serial@401c8000 {
 		};
 
 		uart1: serial@401cc000 {
-			compatible = "nxp,s32cc-linflexuart";
+			compatible = "nxp,s32cc-linflexuart",
+				     "fsl,s32v234-linflexuart";
 			reg = <0x0 0x401cc000 0x0 0x3000>;
 			interrupts = <GIC_SPI 83 IRQ_TYPE_EDGE_RISING>;
-			clocks = <&clks S32GEN1_SCMI_CLK_LINFLEX_LIN>,
-				 <&clks S32GEN1_SCMI_CLK_LINFLEX_XBAR>;
+			clocks = <&clks S32CC_SCMI_CLK_LINFLEX_LIN>,
+				 <&clks S32CC_SCMI_CLK_LINFLEX_XBAR>;
 			clock-names = "lin", "ipg";
 			dmas = <&edma0 0 6>,
 			       <&edma0 0 5>;
@@ -438,7 +436,7 @@ spi0: spi@401d4000 {
 			compatible = "nxp,s32cc-dspi";
 			reg = <0x0 0x401d4000 0x0 0x1000>;
 			interrupts = <GIC_SPI 85 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SPI_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_SPI_MODULE>;
 			clock-names = "dspi";
 			spi-num-chipselects = <8>;
 			bus-num = <0>;
@@ -454,7 +452,7 @@ spi1: spi@401d8000 {
 			compatible = "nxp,s32cc-dspi";
 			reg = <0x0 0x401d8000 0x0 0x1000>;
 			interrupts = <GIC_SPI 86 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SPI_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_SPI_MODULE>;
 			clock-names = "dspi";
 			spi-num-chipselects = <5>;
 			bus-num = <1>;
@@ -470,7 +468,7 @@ spi2: spi@401dc000 {
 			compatible = "nxp,s32cc-dspi";
 			reg = <0x0 0x401dc000 0x0 0x1000>;
 			interrupts = <GIC_SPI 87 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SPI_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_SPI_MODULE>;
 			clock-names = "dspi";
 			spi-num-chipselects = <5>;
 			bus-num = <2>;
@@ -486,7 +484,7 @@ i2c0: i2c@401e4000 {
 			compatible = "nxp,s32cc-i2c";
 			reg = <0x0 0x401e4000 0x0 0x1000>;
 			interrupts = <GIC_SPI 92 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_I2C_REG>;
+			clocks = <&clks S32CC_SCMI_CLK_I2C_REG>;
 			clock-names = "ipg";
 			dmas = <&edma0 0 16>,
 			       <&edma0 0 17>;
@@ -500,7 +498,7 @@ i2c1: i2c@401e8000 {
 			compatible = "nxp,s32cc-i2c";
 			reg = <0x0 0x401e8000 0x0 0x1000>;
 			interrupts = <GIC_SPI 93 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_I2C_REG>;
+			clocks = <&clks S32CC_SCMI_CLK_I2C_REG>;
 			clock-names = "ipg";
 			dmas = <&edma0 0 18>,
 			       <&edma0 0 19>;
@@ -514,7 +512,7 @@ i2c2: i2c@401ec000 {
 			compatible = "nxp,s32cc-i2c";
 			reg = <0x0 0x401ec000 0x0 0x1000>;
 			interrupts = <GIC_SPI 94 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_I2C_REG>;
+			clocks = <&clks S32CC_SCMI_CLK_I2C_REG>;
 			clock-names = "ipg";
 			dmas = <&edma1 1 16>,
 			       <&edma1 1 17>;
@@ -529,11 +527,11 @@ pwm0: pwm@401f4000 {
 			#pwm-cells = <3>;
 			reg = <0x0 0x401f4000 0x0 0x1000>;
 			clock-names = "ftm_sys", "ftm_ext",
-				      "ftm_fix", "ftm_cnt_clk_en";
-			clocks = <&clks S32GEN1_SCMI_CLK_FTM0_SYS>,
-				 <&clks S32GEN1_SCMI_CLK_FTM0_EXT>,
-				 <&clks S32GEN1_SCMI_CLK_FTM0_SYS>,
-				 <&clks S32GEN1_SCMI_CLK_FTM0_SYS>;
+					  "ftm_fix", "ftm_cnt_clk_en";
+			clocks = <&clks S32CC_SCMI_CLK_FTM0_SYS>,
+				 <&clks S32CC_SCMI_CLK_FTM0_EXT>,
+				 <&clks S32CC_SCMI_CLK_FTM0_SYS>,
+				 <&clks S32CC_SCMI_CLK_FTM0_SYS>;
 			status = "disabled";
 		};
 
@@ -541,32 +539,32 @@ adc0: adc@401f8000 {
 			compatible = "nxp,s32cc-adc";
 			reg = <0x0 0x401f8000 0x0 0x1000>;
 			interrupts = <GIC_SPI 70 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SAR_ADC_BUS>;
+			clocks = <&clks S32CC_SCMI_CLK_SAR_ADC_BUS>;
 			clock-names = "adc";
 			vref = <1800>;
 			status = "okay";
 		};
 
-		swt4: swt@40200000 {
+		swt4: watchdog@40200000 {
 			compatible = "nxp,s32cc-wdt";
 			reg = <0x0 0x40200000 0x0 0x1000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SWT_COUNTER>;
+			clocks = <&clks S32CC_SCMI_CLK_SWT_COUNTER>;
 			clock-names = "swt";
 			status = "disabled";
 		};
 
-		swt5: swt@40204000 {
+		swt5: watchdog@40204000 {
 			compatible = "nxp,s32cc-wdt";
 			reg = <0x0 0x40204000 0x0 0x1000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SWT_COUNTER>;
+			clocks = <&clks S32CC_SCMI_CLK_SWT_COUNTER>;
 			clock-names = "swt";
 			status = "disabled";
 		};
 
-		swt6: swt@40208000 {
+		swt6: watchdog@40208000 {
 			compatible = "nxp,s32cc-wdt";
 			reg = <0x0 0x40208000 0x0 0x1000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SWT_COUNTER>;
+			clocks = <&clks S32CC_SCMI_CLK_SWT_COUNTER>;
 			clock-names = "swt";
 			status = "disabled";
 		};
@@ -639,7 +637,7 @@ mu3b@40213000 {
 		stm4: stm@4021c000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x4021c000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -647,7 +645,7 @@ stm4: stm@4021c000 {
 		stm5: stm@40220000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x40220000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -655,7 +653,7 @@ stm5: stm@40220000 {
 		stm6: stm@40224000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x40224000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -663,7 +661,7 @@ stm6: stm@40224000 {
 		stm7: stm@40228000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x40228000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -682,8 +680,8 @@ edma1: dma-controller@40244000 {
 					  "edma-tx_16-31",
 					  "edma-err";
 			clock-names = "dmamux0", "dmamux1";
-			clocks = <&clks S32GEN1_SCMI_CLK_EDMA_MODULE>,
-				 <&clks S32GEN1_SCMI_CLK_EDMA_AHB>;
+			clocks = <&clks S32CC_SCMI_CLK_EDMA_MODULE>,
+				 <&clks S32CC_SCMI_CLK_EDMA_AHB>;
 			status = "disabled";
 		};
 
@@ -691,9 +689,9 @@ pit1: pit@40288000 {
 			compatible = "nxp,s32cc-pit";
 			reg = <0x0 0x40288000 0x0 0x3000>;
 			interrupts = <GIC_SPI 54 IRQ_TYPE_LEVEL_HIGH>;
-			cpu = <1>;
-			clocks = <&clks S32GEN1_SCMI_CLK_PIT_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_PIT_MODULE>;
 			clock-names = "pit";
+			cpu = <1>;
 			status = "disabled";
 		};
 
@@ -705,9 +703,9 @@ can2: flexcan@402a8000 {
 				     <GIC_SPI 47 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 48 IRQ_TYPE_LEVEL_HIGH>;
 			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
-			clocks = <&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
-				 <&clks S32GEN1_SCMI_CLK_FLEXCAN_REG>;
-			clock-names = "per", "ipg";
+			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
+				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
+			clock-names = "ipg", "per";
 			status = "disabled";
 		};
 
@@ -719,18 +717,19 @@ can3: flexcan@402b2000 {
 				     <GIC_SPI 51 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 52 IRQ_TYPE_LEVEL_HIGH>;
 			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
-			clocks = <&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
-				 <&clks S32GEN1_SCMI_CLK_FLEXCAN_REG>;
-			clock-names = "per", "ipg";
+			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
+				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
+			clock-names = "ipg", "per";
 			status = "disabled";
 		};
 
 		uart2: serial@402bc000 {
-			compatible = "nxp,s32cc-linflexuart";
+			compatible = "nxp,s32cc-linflexuart",
+				     "fsl,s32v234-linflexuart";
 			reg = <0x0 0x402bc000 0x0 0x3000>;
 			interrupts = <GIC_SPI 84 IRQ_TYPE_EDGE_RISING>;
-			clocks = <&clks S32GEN1_SCMI_CLK_LINFLEX_LIN>,
-				 <&clks S32GEN1_SCMI_CLK_LINFLEX_XBAR>;
+			clocks = <&clks S32CC_SCMI_CLK_LINFLEX_LIN>,
+				 <&clks S32CC_SCMI_CLK_LINFLEX_XBAR>;
 			clock-names = "lin", "ipg";
 			dmas = <&edma1 1 4>,
 			       <&edma1 1 3>;
@@ -741,7 +740,7 @@ spi3: spi@402c8000 {
 			compatible = "nxp,s32cc-dspi";
 			reg = <0x0 0x402c8000 0x0 0x1000>;
 			interrupts = <GIC_SPI 88 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SPI_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_SPI_MODULE>;
 			clock-names = "dspi";
 			spi-num-chipselects = <5>;
 			bus-num = <3>;
@@ -757,7 +756,7 @@ spi4: spi@402cc000 {
 			compatible = "nxp,s32cc-dspi";
 			reg = <0x0 0x402cc000 0x0 0x1000>;
 			interrupts = <GIC_SPI 89 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SPI_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_SPI_MODULE>;
 			clock-names = "dspi";
 			spi-num-chipselects = <5>;
 			bus-num = <4>;
@@ -773,7 +772,7 @@ spi5: spi@402d0000 {
 			compatible = "nxp,s32cc-dspi";
 			reg = <0x0 0x402d0000 0x0 0x1000>;
 			interrupts = <GIC_SPI 90 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SPI_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_SPI_MODULE>;
 			clock-names = "dspi";
 			spi-num-chipselects = <5>;
 			bus-num = <5>;
@@ -789,7 +788,7 @@ i2c3: i2c@402d8000 {
 			compatible = "nxp,s32cc-i2c";
 			reg = <0x0 0x402d8000 0x0 0x1000>;
 			interrupts = <GIC_SPI 95 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_I2C_REG>;
+			clocks = <&clks S32CC_SCMI_CLK_I2C_REG>;
 			clock-names = "ipg";
 			dmas = <&edma1 1 18>,
 			       <&edma1 1 19>;
@@ -803,7 +802,7 @@ i2c4: i2c@402dc000 {
 			compatible = "nxp,s32cc-i2c";
 			reg = <0x0 0x402dc000 0x0 0x1000>;
 			interrupts = <GIC_SPI 96 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_I2C_REG>;
+			clocks = <&clks S32CC_SCMI_CLK_I2C_REG>;
 			clock-names = "ipg";
 			dmas = <&edma1 1 20>,
 			       <&edma1 1 21>;
@@ -819,10 +818,10 @@ pwm1: pwm@402e4000 {
 			reg = <0x0 0x402e4000 0x0 0x1000>;
 			clock-names = "ftm_sys", "ftm_ext",
 				      "ftm_fix", "ftm_cnt_clk_en";
-			clocks = <&clks S32GEN1_SCMI_CLK_FTM1_SYS>,
-				 <&clks S32GEN1_SCMI_CLK_FTM1_EXT>,
-				 <&clks S32GEN1_SCMI_CLK_FTM1_SYS>,
-				 <&clks S32GEN1_SCMI_CLK_FTM1_SYS>;
+			clocks = <&clks S32CC_SCMI_CLK_FTM1_SYS>,
+				 <&clks S32CC_SCMI_CLK_FTM1_EXT>,
+				 <&clks S32CC_SCMI_CLK_FTM1_SYS>,
+				 <&clks S32CC_SCMI_CLK_FTM1_SYS>;
 			status = "disabled";
 		};
 
@@ -830,19 +829,19 @@ adc1: adc@402e8000 {
 			compatible = "nxp,s32cc-adc";
 			reg = <0x0 0x402e8000 0x0 0x1000>;
 			interrupts = <GIC_SPI 71 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SAR_ADC_BUS>;
+			clocks = <&clks S32CC_SCMI_CLK_SAR_ADC_BUS>;
 			clock-names = "adc";
 			vref = <1800>;
 			status = "okay";
 		};
 
-		usdhc0: usdhc@402f0000 {
+		usdhc0: mmc@402f0000 {
 			compatible = "nxp,s32cc-usdhc";
 			reg = <0x0 0x402f0000 0x0 0x1000>;
 			interrupts = <GIC_SPI 36 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clks S32GEN1_SCMI_CLK_USDHC_MODULE>,
-				 <&clks S32GEN1_SCMI_CLK_USDHC_AHB>,
-				 <&clks S32GEN1_SCMI_CLK_USDHC_CORE>;
+			clocks = <&clks S32CC_SCMI_CLK_USDHC_MODULE>,
+				 <&clks S32CC_SCMI_CLK_USDHC_AHB>,
+				 <&clks S32CC_SCMI_CLK_USDHC_CORE>;
 			clock-names = "ipg", "ahb", "per";
 			bus-width = <8>;
 			status = "disabled";
@@ -855,20 +854,21 @@ fccu: fccu@4030c000 {
 				     <GIC_SPI 101 IRQ_TYPE_LEVEL_HIGH>;
 			interrupt-names = "fccu_alarm",
 					  "fccu_misc";
-			clocks = <&clks S32GEN1_SCMI_CLK_FCCU_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_FCCU_MODULE>;
 			clock-names = "fccu";
 			/* A53 NCF fault list */
 			nxp,ncf_fault_list = <0 10 35 36 37 38>;
-			nxp,ncf_actions = <S32_FCCU_REACTION_ALARM
-			    S32_FCCU_REACTION_ALARM
-			    S32_FCCU_REACTION_NONE
-			    S32_FCCU_REACTION_NONE
-			    S32_FCCU_REACTION_NONE
-			    S32_FCCU_REACTION_NONE>;
+			nxp,ncf_actions = <S32CC_FCCU_REACTION_ALARM
+			    S32CC_FCCU_REACTION_ALARM
+			    S32CC_FCCU_REACTION_NONE
+			    S32CC_FCCU_REACTION_NONE
+			    S32CC_FCCU_REACTION_NONE
+			    S32CC_FCCU_REACTION_NONE>;
 			status = "disabled";
 		};
 
 		gmac0: ethernet@4033c000 {
+			status = "disabled";
 			compatible = "nxp,s32cc-dwmac";
 			reg = <0x0 0x4033c000 0x0 0x2000>, /* gmac IP */
 			      <0x0 0x4007c004 0x0 0x4>;    /* S32 CTRL_STS reg */
@@ -880,23 +880,68 @@ gmac0: ethernet@4033c000 {
 			phy-names = "gmac_xpcs";
 			phys = <&serdes0 PHY_TYPE_XPCS 0 0>;
 			dma-coherent;
-			clocks = <&clks S32GEN1_SCMI_CLK_GMAC0_AXI>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_AXI>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_SGMII>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_RGMII>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_RMII>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_MII>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_RX_SGMII>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_RX_RGMII>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_RX_RMII>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_RX_MII>,
-				 <&clks S32GEN1_SCMI_CLK_GMAC0_TS>;
+			snps,mtl-rx-config = <&mtl_rx_setup_gmac0>;
+			snps,mtl-tx-config = <&mtl_tx_setup_gmac0>;
+			clocks = <&clks S32CC_SCMI_CLK_GMAC0_AXI>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_AXI>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_TX_SGMII>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_TX_RGMII>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_TX_RMII>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_TX_MII>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_RX_SGMII>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_RX_RGMII>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_RX_RMII>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_RX_MII>,
+				 <&clks S32CC_SCMI_CLK_GMAC0_TS>;
 			clock-names = "stmmaceth", "pclk",
 				      "tx_sgmii", "tx_rgmii",
 				      "tx_rmii", "tx_mii",
 				      "rx_sgmii", "rx_rgmii",
 				      "rx_rmii", "rx_mii",
 				      "ptp_ref";
+
+			mtl_rx_setup_gmac0: rx-queues-config {
+				snps,rx-queues-to-use = <5>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				queue@0 {
+				};
+
+				queue@1 {
+				};
+
+				queue@2 {
+				};
+
+				queue@3 {
+				};
+
+				queue@4 {
+				};
+			};
+
+			mtl_tx_setup_gmac0: tx-queues-config {
+				snps,tx-queues-to-use = <5>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				queue@0 {
+				};
+
+				queue@1 {
+				};
+
+				queue@2 {
+				};
+
+				queue@3 {
+				};
+
+				queue@4 {
+				};
+			};
+
 			gmac0_mdio: mdio0 {
 				compatible = "snps,dwmac-mdio";
 				#address-cells = <1>;
@@ -921,16 +966,16 @@ perf: ddr-perf@403e0000 {
 		pcie0: pcie@40400000 {
 			compatible = "nxp,s32cc-pcie";
 			dma-coherent;
-			reg = <0x00 0x40400000 0x0 0x00001000   /* dbi registers */
-			       0x00 0x40420000 0x0 0x00001000   /* dbi2 registers */
-			       0x00 0x40460000 0x0 0x00001000   /* atu registers */
-			       0x00 0x40470000 0x0 0x00001000   /* dma registers */
-			       0x00 0x40481000 0x0 0x000000f8   /* ctrl registers */
+			reg = <0x00 0x40400000 0x0 0x00001000>,   /* dbi registers */
+			       <0x00 0x40420000 0x0 0x00001000>,   /* dbi2 registers */
+			       <0x00 0x40460000 0x0 0x00001000>,   /* atu registers */
+			       <0x00 0x40470000 0x0 0x00001000>,   /* dma registers */
+			       <0x00 0x40481000 0x0 0x000000f8>,   /* ctrl registers */
 			       /* RC configuration space, 4KB each for cfg0 and cfg1
 				* at the end of the outbound memory map
 				*/
-			       0x5f 0xffffe000 0x0 0x00002000
-			       0x58 0x00000000 0x0 0x40000000>; /* 1GB EP addr space */
+			       <0x5f 0xffffe000 0x0 0x00002000>,
+			       <0x58 0x00000000 0x0 0x40000000>; /* 1GB EP addr space */
 			reg-names = "dbi", "dbi2", "atu", "dma", "ctrl",
 				    "config", "addr_space";
 			#address-cells = <3>;
@@ -941,11 +986,11 @@ pcie0: pcie@40400000 {
 				/* downstream I/O, 64KB and aligned naturally just
 				 * before the config space to minimize fragmentation
 				 */
-				<0x81000000 0x0 0x00000000 0x5f 0xfffe0000 0x0 0x00010000
+				<0x81000000 0x0 0x00000000 0x5f 0xfffe0000 0x0 0x00010000>,
 				/* non-prefetchable memory, with best case size and
 				 * alignment
 				 */
-				 0x82000000 0x0 0x00000000 0x58 0x00000000 0x7 0xfffe0000>;
+				<0x82000000 0x0 0x00000000 0x58 0x00000000 0x7 0xfffe0000>;
 
 			nxp,phy-mode = "crns";
 			num-lanes = <2>;
@@ -985,13 +1030,13 @@ pcie0: pcie@40400000 {
 		serdes0: serdes@40480000 {
 			#phy-cells = <3>;
 			compatible = "nxp,s32cc-serdes";
-			clocks = <&clks S32GEN1_SCMI_CLK_SERDES_AXI>,
-				 <&clks S32GEN1_SCMI_CLK_SERDES_AUX>,
-				 <&clks S32GEN1_SCMI_CLK_SERDES_APB>,
-				 <&clks S32GEN1_SCMI_CLK_SERDES_REF>;
+			clocks = <&clks S32CC_SCMI_CLK_SERDES_AXI>,
+				 <&clks S32CC_SCMI_CLK_SERDES_AUX>,
+				 <&clks S32CC_SCMI_CLK_SERDES_APB>,
+				 <&clks S32CC_SCMI_CLK_SERDES_REF>;
 			clock-names = "axi", "aux", "apb", "ref";
-			resets = <&reset S32GEN1_SCMI_RST_SERDES0>,
-				 <&reset S32GEN1_SCMI_RST_PCIE0>;
+			resets = <&reset S32CC_SCMI_RST_SERDES0>,
+				 <&reset S32CC_SCMI_RST_PCIE0>;
 			reset-names = "serdes", "pcie";
 			nxp,sys-mode = <XPCSX2_MODE>;
 			reg = <0x0 0x40480000 0x0 0x108>,
@@ -999,21 +1044,22 @@ serdes0: serdes@40480000 {
 			      <0x0 0x40482000 0x0 0x800>,
 			      <0x0 0x40482800 0x0 0x800>;
 			reg-names = "ss_pcie", "pcie_phy", "xpcs0", "xpcs1";
+			status = "okay";
 		};
 
 		pcie1: pcie@44100000 {
 			compatible = "nxp,s32cc-pcie";
 			dma-coherent;
-			reg = <0x00 0x44100000 0x0 0x00001000   /* dbi registers */
-			       0x00 0x44120000 0x0 0x00001000   /* dbi2 registers */
-			       0x00 0x44160000 0x0 0x00001000   /* atu registers */
-			       0x00 0x44170000 0x0 0x00001000   /* dma registers */
-			       0x00 0x44181000 0x0 0x000000f8   /* ctrl registers */
+			reg = <0x00 0x44100000 0x0 0x00001000>,   /* dbi registers */
+			      <0x00 0x44120000 0x0 0x00001000>,   /* dbi2 registers */
+			      <0x00 0x44160000 0x0 0x00001000>,   /* atu registers */
+			      <0x00 0x44170000 0x0 0x00001000>,   /* dma registers */
+			      <0x00 0x44181000 0x0 0x000000f8>,   /* ctrl registers */
 			       /* RC configuration space, 4KB each for cfg0 and cfg1
 				* at the end of the outbound memory map
 				*/
-			       0x4f 0xffffe000 0x0 0x00002000
-			       0x48 0x00000000 0x0 0x40000000>; /* 1GB EP addr space */
+			      <0x4f 0xffffe000 0x0 0x00002000>,
+			      <0x48 0x00000000 0x0 0x40000000>; /* 1GB EP addr space */
 			reg-names = "dbi", "dbi2", "atu", "dma", "ctrl",
 				    "config", "addr_space";
 			#address-cells = <3>;
@@ -1024,11 +1070,11 @@ pcie1: pcie@44100000 {
 				/* downstream I/O, 64KB and aligned naturally just
 				 * before the config space to minimize fragmentation
 				 */
-				<0x81000000 0x0 0x00000000 0x4f 0xfffe0000 0x0 0x00010000
+				<0x81000000 0x0 0x00000000 0x4f 0xfffe0000 0x0 0x00010000>,
 				/* non-prefetchable memory, with best case size and
 				 * alignment
 				 */
-				 0x82000000 0x0 0x00000000 0x48 0x00000000 0x7 0xfffe0000>;
+				<0x82000000 0x0 0x00000000 0x48 0x00000000 0x7 0xfffe0000>;
 
 			nxp,phy-mode = "crns";
 			num-lanes = <1>;
@@ -1050,13 +1096,13 @@ pcie1: pcie@44100000 {
 		serdes1: serdes@44180000 {
 			#phy-cells = <3>;
 			compatible = "nxp,s32cc-serdes";
-			clocks = <&clks S32GEN1_SCMI_CLK_SERDES_AXI>,
-				 <&clks S32GEN1_SCMI_CLK_SERDES_AUX>,
-				 <&clks S32GEN1_SCMI_CLK_SERDES_APB>,
-				 <&clks S32GEN1_SCMI_CLK_SERDES_REF>;
+			clocks = <&clks S32CC_SCMI_CLK_SERDES_AXI>,
+				 <&clks S32CC_SCMI_CLK_SERDES_AUX>,
+				 <&clks S32CC_SCMI_CLK_SERDES_APB>,
+				 <&clks S32CC_SCMI_CLK_SERDES_REF>;
 			clock-names = "axi", "aux", "apb", "ref";
-			resets = <&reset S32GEN1_SCMI_RST_SERDES1>,
-				 <&reset S32GEN1_SCMI_RST_PCIE1>;
+			resets = <&reset S32CC_SCMI_RST_SERDES1>,
+				 <&reset S32CC_SCMI_RST_PCIE1>;
 			reset-names = "serdes", "pcie";
 			nxp,sys-mode = <PCIE_XPCS0_MODE>;
 			reg = <0x0 0x44180000 0x0 0x108>,
diff --git a/arch/arm64/boot/dts/freescale/s32g-pfe-slave.dtsi b/arch/arm64/boot/dts/freescale/s32g-pfe-slave.dtsi
index 54af3955105f..4b5e64466d60 100644
--- a/arch/arm64/boot/dts/freescale/s32g-pfe-slave.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g-pfe-slave.dtsi
@@ -36,48 +36,44 @@ pfe_slave: pfe_slave@46000020 {
 
 			/* Network interface 'pfe0sl' */
 			pfesl_netif0: ethernet@100 {
-				compatible = "nxp,s32g-pfe-netif", "fsl,pfeng-logif";
+				compatible = "nxp,s32g-pfe-netif";
 				status = "okay";
 				reg = <100>;
 				local-mac-address = [ 00 04 9F BE FF 00 ];
 				nxp,pfeng-if-name = "pfe0sl";
-				fsl,pfeng-if-name = "pfe0sl";
 				nxp,pfeng-hif-channels = <PFE_HIF_CHANNEL_3>;
 				nxp,pfeng-emac-id = <PFE_EMAC_0>;
 			};
 
 			/* Network interface 'pfe1sl' */
 			pfesl_netif1: ethernet@101 {
-				compatible = "nxp,s32g-pfe-netif", "fsl,pfeng-logif";
+				compatible = "nxp,s32g-pfe-netif";
 				status = "okay";
 				reg = <101>;
 				local-mac-address = [ 00 04 9F BE FF 01 ];
 				nxp,pfeng-if-name = "pfe1sl";
-				fsl,pfeng-if-name = "pfe1sl";
 				nxp,pfeng-hif-channels = <PFE_HIF_CHANNEL_3>;
 				nxp,pfeng-emac-id = <PFE_EMAC_1>;
 			};
 
 			/* Network interface 'pfe2sl' */
 			pfesl_netif2: ethernet@102 {
-				compatible = "nxp,s32g-pfe-netif", "fsl,pfeng-logif";
+				compatible = "nxp,s32g-pfe-netif";
 				status = "okay";
 				reg = <102>;
 				local-mac-address = [ 00 04 9F BE FF 02 ];
 				nxp,pfeng-if-name = "pfe2sl";
-				fsl,pfeng-if-name = "pfe2sl";
 				nxp,pfeng-hif-channels = <PFE_HIF_CHANNEL_3>;
 				nxp,pfeng-emac-id = <PFE_EMAC_2>;
 			};
 
 			/* Network interface 'aux0sl' */
 			pfesl_aux0: ethernet@103 {
-				compatible = "nxp,s32g-pfe-netif", "fsl,pfeng-logif";
+				compatible = "nxp,s32g-pfe-netif";
 				status = "disabled";
 				reg = <103>;
 				local-mac-address = [ 00 04 9F BE FF 80 ];
 				nxp,pfeng-if-name = "aux0sl";
-				fsl,pfeng-if-name = "aux0sl";
 				nxp,pfeng-hif-channels = <PFE_HIF_CHANNEL_3>;
 				nxp,pfeng-netif-mode-aux;
 			};
diff --git a/arch/arm64/boot/dts/freescale/s32g-pfe.dtsi b/arch/arm64/boot/dts/freescale/s32g-pfe.dtsi
index b6ce519e7fe0..7583c657c938 100644
--- a/arch/arm64/boot/dts/freescale/s32g-pfe.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g-pfe.dtsi
@@ -7,7 +7,7 @@
 #include <dt-bindings/clock/s32g-scmi-clock.h>
 #include <dt-bindings/reset/s32g-scmi-reset.h>
 #include <dt-bindings/net/s32g-pfe.h>
-#include <dt-bindings/nvmem/s32-siul2-nvmem.h>
+#include <dt-bindings/nvmem/s32cc-siul2-nvmem.h>
 
 / {
 	aliases {
@@ -18,7 +18,7 @@ aliases {
 
 	soc {
 		pfe: pfe@46000000 {
-			compatible = "nxp,s32g-pfe", "fsl,s32g274a-pfeng";
+			compatible = "nxp,s32g-pfe";
 			reg = <0x0 0x46000000 0x0 0x1000000>,
 			      <0x0 0x4007ca00 0x0 0x100>;
 			reg-names = "pfe-cbus", "s32g-main-gpr";
@@ -34,7 +34,7 @@ pfe: pfe@46000000 {
 				     <GIC_SPI 197 IRQ_TYPE_EDGE_RISING>;
 			interrupt-names = "hif0", "hif1", "hif2", "hif3",
 					  "bmu", "upegpt", "safety";
-			resets = <&reset S32GEN1_SCMI_RST_PART2>;
+			resets = <&reset S32CC_SCMI_RST_PART2>;
 			reset-names = "pfe_part";
 			clocks = <&clks S32G_SCMI_CLK_PFE_AXI>,
 				 <&clks S32G_SCMI_CLK_PFE_PE>,
@@ -85,12 +85,11 @@ pfe_mdio2: mdio@2 {
 
 			/* Network interface 'pfe0' */
 			pfe_netif0: ethernet@10 {
-				compatible = "nxp,s32g-pfe-netif", "fsl,pfeng-logif";
+				compatible = "nxp,s32g-pfe-netif";
 				status = "okay";
 				reg = <10>;
 				local-mac-address = [ 00 04 9F BE EF 00 ];
 				nxp,pfeng-if-name = "pfe0";
-				fsl,pfeng-if-name = "pfe0";
 				nxp,pfeng-hif-channels = <PFE_HIF_CHANNEL_0>;
 				nxp,pfeng-emac-id = <PFE_EMAC_0>;
 				clocks = <&clks S32G_SCMI_CLK_PFE0_TX_SGMII>,
@@ -109,12 +108,11 @@ pfe_netif0: ethernet@10 {
 
 			/* Network interface 'pfe1' */
 			pfe_netif1: ethernet@11 {
-				compatible = "nxp,s32g-pfe-netif", "fsl,pfeng-logif";
+				compatible = "nxp,s32g-pfe-netif";
 				status = "okay";
 				reg = <11>;
 				local-mac-address = [ 00 04 9F BE EF 01 ];
 				nxp,pfeng-if-name = "pfe1";
-				fsl,pfeng-if-name = "pfe1";
 				nxp,pfeng-hif-channels = <PFE_HIF_CHANNEL_1>;
 				nxp,pfeng-emac-id = <PFE_EMAC_1>;
 				clocks = <&clks S32G_SCMI_CLK_PFE1_TX_SGMII>,
@@ -133,12 +131,11 @@ pfe_netif1: ethernet@11 {
 
 			/* Network interface 'pfe2' */
 			pfe_netif2: ethernet@12 {
-				compatible = "nxp,s32g-pfe-netif", "fsl,pfeng-logif";
+				compatible = "nxp,s32g-pfe-netif";
 				status = "okay";
 				reg = <12>;
 				local-mac-address = [ 00 04 9F BE EF 02 ];
 				nxp,pfeng-if-name = "pfe2";
-				fsl,pfeng-if-name = "pfe2";
 				nxp,pfeng-hif-channels = <PFE_HIF_CHANNEL_2>;
 				nxp,pfeng-emac-id = <PFE_EMAC_2>;
 				clocks = <&clks S32G_SCMI_CLK_PFE2_TX_SGMII>,
@@ -157,12 +154,11 @@ pfe_netif2: ethernet@12 {
 
 			/* Network interface 'aux0' */
 			pfe_aux0: ethernet@13 {
-				compatible = "nxp,s32g-pfe-netif", "fsl,pfeng-logif";
+				compatible = "nxp,s32g-pfe-netif";
 				status = "disabled";
 				reg = <13>;
 				local-mac-address = [ 00 04 9F BE EF 80 ];
 				nxp,pfeng-if-name = "aux0";
-				fsl,pfeng-if-name = "aux0";
 				nxp,pfeng-hif-channels = <PFE_HIF_CHANNEL_0>,
 							 <PFE_HIF_CHANNEL_1>,
 							 <PFE_HIF_CHANNEL_2>;
diff --git a/arch/arm64/boot/dts/freescale/s32g.dtsi b/arch/arm64/boot/dts/freescale/s32g.dtsi
index 2f685fe654ae..de9caffb3ca1 100644
--- a/arch/arm64/boot/dts/freescale/s32g.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g.dtsi
@@ -11,12 +11,8 @@
 #include "s32cc.dtsi"
 #include "s32g-pfe.dtsi"
 #include <dt-bindings/mailbox/nxp-llce-mb.h>
-#include <dt-bindings/clock/s32g-scmi-clock.h>
-#include <dt-bindings/reset/s32g-scmi-reset.h>
-#include <dt-bindings/net/s32g-pfe.h>
 
 / {
-
 	reserved-memory {
 		pfe_reserved_bmu2: pfebufs@34000000 {
 			compatible = "nxp,s32g-pfe-bmu2-pool";
@@ -58,7 +54,7 @@ siul2@4009c000 {
 			#address-cells = <2>;
 			#size-cells = <2>;
 
-				 /* MIDR */
+			/* MIDR */
 			ranges = <MIDR_SIUL2_0 0x0 0x0 0x4009c000 0x0 0x10>,
 				 <MIDR_SIUL2_1 0x0 0x0 0x44010000 0x0 0x10>,
 
@@ -594,16 +590,16 @@ llce_can15: llce_can15 {
 
 		usbmisc: usbmisc@44064200 {
 			#index-cells = <1>;
-			compatible = "fsl,s32g2-usbmisc";
+			compatible = "nxp,s32g2-usbmisc";
 			reg = <0x0 0x44064200 0x0 0x200>;
 		};
 
 		usbotg: usb@44064000 {
-			compatible = "fsl,s32g-usb";
+			compatible = "nxp,s32g-usb";
 			reg = <0x0 0x44064000 0x0 0x200>;
 			interrupt-parent = <&gic>;
 			interrupts = <GIC_SPI 211 IRQ_TYPE_LEVEL_HIGH>, /* OTG Core */
-				     <GIC_SPI 212 IRQ_TYPE_LEVEL_HIGH>; /* OTG Wakeup */
+					 <GIC_SPI 212 IRQ_TYPE_LEVEL_HIGH>; /* OTG Wakeup */
 			clocks = <&clks S32G_SCMI_CLK_USB_MEM>,
 				 <&clks S32G_SCMI_CLK_USB_LOW>;
 			fsl,usbmisc = <&usbmisc 0>;
@@ -619,7 +615,7 @@ usbotg: usb@44064000 {
 };
 
 &pinctrl {
-	llce_can0_pins: llce_can0 {
+	llce_can0_pins: llce_can0_pins {
 		llce_can0_grp0 {
 			pinmux = <S32CC_PINMUX(43, FUNC0)>;
 			input-enable;
@@ -635,10 +631,9 @@ llce_can0_grp1 {
 		llce_can0_grp2 {
 			pinmux = <S32CC_PINMUX(745, FUNC2)>;
 		};
-
 	};
 
-	llce_can1_pins: llce_can1 {
+	llce_can1_pins: llce_can1_pins {
 		llce_can1_grp0 {
 			pinmux = <S32CC_PINMUX(145, FUNC1)>;
 			output-enable;
@@ -654,10 +649,9 @@ llce_can1_grp2 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can2_pins: llce_can2 {
+	llce_can2_pins: llce_can2_pins {
 		llce_can2_grp0 {
 			pinmux = <S32CC_PINMUX(747, FUNC2)>;
 		};
@@ -673,10 +667,9 @@ llce_can2_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can3_pins: llce_can3 {
+	llce_can3_pins: llce_can3_pins {
 		llce_can3_grp0 {
 			pinmux = <S32CC_PINMUX(748, FUNC2)>;
 		};
@@ -692,10 +685,9 @@ llce_can3_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can4_pins: llce_can4 {
+	llce_can4_pins: llce_can4_pins {
 		llce_can4_grp0 {
 			pinmux = <S32CC_PINMUX(749, FUNC2)>;
 		};
@@ -711,10 +703,9 @@ llce_can4_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can5_pins: llce_can5 {
+	llce_can5_pins: llce_can5_pins {
 		llce_can5_grp0 {
 			pinmux = <S32CC_PINMUX(750, FUNC2)>;
 		};
@@ -730,10 +721,9 @@ llce_can5_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can6_pins: llce_can6 {
+	llce_can6_pins: llce_can6_pins {
 		llce_can6_grp0 {
 			pinmux = <S32CC_PINMUX(751, FUNC2)>;
 		};
@@ -749,10 +739,9 @@ llce_can6_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can7_pins: llce_can7 {
+	llce_can7_pins: llce_can7_pins {
 		llce_can7_grp0 {
 			pinmux = <S32CC_PINMUX(752, FUNC2)>;
 		};
@@ -768,10 +757,9 @@ llce_can7_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can8_pins: llce_can8 {
+	llce_can8_pins: llce_can8_pins {
 		llce_can8_grp0 {
 			pinmux = <S32CC_PINMUX(753, FUNC2)>;
 		};
@@ -787,10 +775,9 @@ llce_can8_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can9_pins: llce_can9 {
+	llce_can9_pins: llce_can9_pins {
 		llce_can9_grp0 {
 			pinmux = <S32CC_PINMUX(754, FUNC2)>;
 		};
@@ -806,10 +793,9 @@ llce_can9_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can10_pins: llce_can10 {
+	llce_can10_pins: llce_can10_pins {
 		llce_can10_grp0 {
 			pinmux = <S32CC_PINMUX(755, FUNC2)>;
 		};
@@ -825,10 +811,9 @@ llce_can10_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can11_pins: llce_can11 {
+	llce_can11_pins: llce_can11_pins {
 		llce_can11_grp0 {
 			pinmux = <S32CC_PINMUX(756, FUNC2)>;
 		};
@@ -844,10 +829,9 @@ llce_can11_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can12_pins: llce_can12 {
+	llce_can12_pins: llce_can12_pins {
 		llce_can12_grp0 {
 			pinmux = <S32CC_PINMUX(757, FUNC2)>;
 		};
@@ -863,10 +847,9 @@ llce_can12_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can13_pins: llce_can13 {
+	llce_can13_pins: llce_can13_pins {
 		llce_can13_grp0 {
 			pinmux = <S32CC_PINMUX(758, FUNC2)>;
 		};
@@ -882,10 +865,9 @@ llce_can13_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can14_pins: llce_can14 {
+	llce_can14_pins: llce_can14_pins {
 		llce_can14_grp0 {
 			pinmux = <S32CC_PINMUX(759, FUNC2)>;
 		};
@@ -901,10 +883,9 @@ llce_can14_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	llce_can15_pins: llce_can15 {
+	llce_can15_pins: llce_can15_pins {
 		llce_can15_grp0 {
 			pinmux = <S32CC_PINMUX(760, FUNC2)>;
 		};
@@ -920,10 +901,9 @@ llce_can15_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	qspi_pins: qspi {
+	qspi_pins: qspi_pins {
 		qspi_grp0 {
 			pinmux = <S32CC_PINMUX(93, FUNC1)>,
 				 <S32CC_PINMUX(97, FUNC1)>,
@@ -968,7 +948,6 @@ qspi_grp3 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 };
 
@@ -994,6 +973,7 @@ &pcie1 {
 };
 
 &qspi {
+	compatible = "nxp,s32g-qspi";
 	pinctrl-names = "default";
 	pinctrl-0 = <&qspi_pins>;
 };
diff --git a/arch/arm64/boot/dts/freescale/s32g2.dtsi b/arch/arm64/boot/dts/freescale/s32g2.dtsi
index b0ea859d3bc5..df7f05e90996 100644
--- a/arch/arm64/boot/dts/freescale/s32g2.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g2.dtsi
@@ -1,12 +1,11 @@
 // SPDX-License-Identifier: GPL-2.0-or-later
 /*
- * Device Tree file for S32G274ARDB Board.
+ * Device Tree file for NXP S32G2 SoC family.
  *
  * Copyright 2021-2022 NXP
  *
  */
 
-#include <dt-bindings/ddr-errata/s32-ddr-errata.h>
 #include "s32g.dtsi"
 
 / {
@@ -14,8 +13,7 @@ / {
 
 	reserved-memory {
 		ddr_errata_reserved: ddr@85000000 {
-			reg = <0x0 DDR_ERRATA_REGION_BASE
-				   0x0 DDR_ERRATA_REGION_SIZE>; /* 4 KB */
+			reg = <0x0 0x85000000 0x0 0x1000>; /* 4 KB */
 			no-map;
 		};
 	};
diff --git a/arch/arm64/boot/dts/freescale/s32g274a-bluebox3.dts b/arch/arm64/boot/dts/freescale/s32g274a-bluebox3.dts
index 5533ab562838..0247b542f98b 100644
--- a/arch/arm64/boot/dts/freescale/s32g274a-bluebox3.dts
+++ b/arch/arm64/boot/dts/freescale/s32g274a-bluebox3.dts
@@ -4,8 +4,9 @@
  */
 
 /dts-v1/;
-#include "s32g2.dtsi"
 #include <dt-bindings/gpio/gpio.h>
+#include "s32g2.dtsi"
+
 / {
 	model = "NXP S32G274A BlueBox3";
 
@@ -30,10 +31,6 @@ &generic_timer {
 	clock-frequency = <5000000>;
 };
 
-&gmac0 {
-	status = "disabled";
-};
-
 &i2c0 {
 	pinctrl-names = "default", "gpio";
 	pinctrl-0 = <&i2c0_pins>;
@@ -214,9 +211,14 @@ phy30: phy@30 {
 	};
 };
 
+&usdhc0 {
+	status = "okay";
+};
+
 &pinctrl {
 	status = "okay";
-	dspi0_pins: dspi0 {
+
+	dspi0_pins: dspi0_pins {
 		dspi0_grp0 {
 			pinmux = <S32CC_PINMUX(13, FUNC1)>,
 				 <S32CC_PINMUX(15, FUNC1)>;
@@ -248,10 +250,9 @@ dspi0_grp4 {
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
-
 	};
 
-	dspi1_pins: dspi1 {
+	dspi1_pins: dspi1_pins {
 		dspi1_grp0 {
 			pinmux = <S32CC_PINMUX(6, FUNC2)>;
 			output-enable;
@@ -288,10 +289,9 @@ dspi1_grp4 {
 		dspi1_grp5 {
 			pinmux = <S32CC_PINMUX(987, FUNC2)>;
 		};
-
 	};
 
-	i2c0_pins: i2c0 {
+	i2c0_pins: i2c0_pins {
 		i2c0_grp0 {
 			pinmux = <S32CC_PINMUX(16, FUNC1)>,
 				 <S32CC_PINMUX(17, FUNC1)>;
@@ -305,10 +305,9 @@ i2c0_grp1 {
 			pinmux = <S32CC_PINMUX(565, FUNC2)>,
 				 <S32CC_PINMUX(566, FUNC2)>;
 		};
-
 	};
 
-	i2c0_gpio_pins: i2c0_gpio {
+	i2c0_gpio_pins: i2c0_gpio_pins {
 		i2c0_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(16, FUNC0)>,
 				 <S32CC_PINMUX(17, FUNC0)>;
@@ -321,10 +320,9 @@ i2c0_gpio_grp1 {
 			pinmux = <S32CC_PINMUX(565, FUNC0)>,
 				 <S32CC_PINMUX(566, FUNC0)>;
 		};
-
 	};
 
-	i2c1_pins: i2c1 {
+	i2c1_pins: i2c1_pins {
 		i2c1_grp0 {
 			pinmux = <S32CC_PINMUX(19, FUNC1)>,
 				 <S32CC_PINMUX(20, FUNC1)>;
@@ -338,10 +336,9 @@ i2c1_grp1 {
 			pinmux = <S32CC_PINMUX(717, FUNC2)>,
 				 <S32CC_PINMUX(718, FUNC2)>;
 		};
-
 	};
 
-	i2c1_gpio_pins: i2c1_gpio {
+	i2c1_gpio_pins: i2c1_gpio_pins {
 		i2c1_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(19, FUNC0)>,
 				 <S32CC_PINMUX(20, FUNC0)>;
@@ -354,10 +351,9 @@ i2c1_gpio_grp1 {
 			pinmux = <S32CC_PINMUX(717, FUNC0)>,
 				 <S32CC_PINMUX(718, FUNC0)>;
 		};
-
 	};
 
-	i2c2_pins: i2c2 {
+	i2c2_pins: i2c2_pins {
 		i2c2_grp0 {
 			pinmux = <S32CC_PINMUX(21, FUNC1)>,
 				 <S32CC_PINMUX(22, FUNC1)>;
@@ -371,10 +367,9 @@ i2c2_grp1 {
 			pinmux = <S32CC_PINMUX(719, FUNC2)>,
 				 <S32CC_PINMUX(720, FUNC2)>;
 		};
-
 	};
 
-	i2c2_gpio_pins: i2c2_gpio {
+	i2c2_gpio_pins: i2c2_gpio_pins {
 		i2c2_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(21, FUNC0)>,
 				 <S32CC_PINMUX(22, FUNC0)>;
@@ -387,10 +382,9 @@ i2c2_gpio_grp1 {
 			pinmux = <S32CC_PINMUX(719, FUNC0)>,
 				 <S32CC_PINMUX(720, FUNC0)>;
 		};
-
 	};
 
-	i2c4_pins: i2c4 {
+	i2c4_pins: i2c4_pins {
 		i2c4_grp0 {
 			pinmux = <S32CC_PINMUX(33, FUNC1)>;
 			drive-open-drain;
@@ -411,10 +405,9 @@ i2c4_grp2 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_83MHZ>;
 		};
-
 	};
 
-	i2c4_gpio_pins: i2c4_gpio {
+	i2c4_gpio_pins: i2c4_gpio_pins {
 		i2c4_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(33, FUNC0)>,
 				 <S32CC_PINMUX(34, FUNC0)>;
@@ -427,10 +420,9 @@ i2c4_gpio_grp1 {
 			pinmux = <S32CC_PINMUX(724, FUNC0)>,
 				 <S32CC_PINMUX(723, FUNC0)>;
 		};
-
 	};
 
-	pfe0mdio_pins: pfe0mdio {
+	pfe0mdio_pins: pfe0mdio_pins {
 		pfe0mdio_grp0 {
 			pinmux = <S32CC_PINMUX(82, FUNC1)>;
 			output-enable;
@@ -447,7 +439,6 @@ pfe0mdio_grp1 {
 		pfe0mdio_grp2 {
 			pinmux = <S32CC_PINMUX(837, FUNC2)>;
 		};
-
 	};
 };
 
@@ -526,7 +517,3 @@ &swt5 {
 &swt6 {
 	status = "okay";
 };
-
-&usdhc0 {
-	status = "okay";
-};
diff --git a/arch/arm64/boot/dts/freescale/s32g274a-emu.dts b/arch/arm64/boot/dts/freescale/s32g274a-emu.dts
index 93cc00789cb7..dd853f4d3634 100644
--- a/arch/arm64/boot/dts/freescale/s32g274a-emu.dts
+++ b/arch/arm64/boot/dts/freescale/s32g274a-emu.dts
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
 /*
  * Copyright 2017-2022 NXP
  *
@@ -59,6 +60,7 @@ &i2c3 {
 &i2c4 {
 	status = "okay";
 };
+
 &usdhc0 {
 	status = "okay";
 };
diff --git a/arch/arm64/boot/dts/freescale/s32g274a-rdb2.dtsi b/arch/arm64/boot/dts/freescale/s32g274a-rdb2.dtsi
index 3949abf039bb..044bf54b8bd3 100644
--- a/arch/arm64/boot/dts/freescale/s32g274a-rdb2.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g274a-rdb2.dtsi
@@ -1,8 +1,8 @@
 // SPDX-License-Identifier: GPL-2.0-or-later
 /*
- * Device Tree file for S32G274ARDB Board Rev C.
+ * Device Tree file for S32G274ARDB Board.
  *
- * Copyright 2020-2022 NXP
+ * Copyright 2019-2022 NXP
  *
  */
 
@@ -13,10 +13,6 @@ / {
 	model = "NXP S32G274A-RDB2";
 };
 
-&usdhc0 {
-	no-1-8-v;
-};
-
 &gmac0_mdio {
 	/* AQR107 */
 	gmac_mdio_a_phy3: ethernet-phy@3 {
@@ -35,3 +31,15 @@ &pfe_netif1 {
 	phy-mode = "sgmii";
 	phy-handle = <&gmac_mdio_a_phy3>;
 };
+
+&usdhc0 {
+	/* Remove no-1-8-v to enable higher speed modes for SD card.
+	 * However, this is not enough to enable HS400 or HS200 modes for eMMC.
+	 * In this case, the position of the resistor R797 must be changed
+	 * from A to B before removing the property.
+	 * If the property is removed without changing the resistor position,
+	 * HS*00 may be enabled, but the interface might be unstable because of
+	 * the wrong VCCQ voltage applied to the eMMC.
+	 */
+	no-1-8-v;
+};
diff --git a/arch/arm64/boot/dts/freescale/s32g2xxa-evb.dtsi b/arch/arm64/boot/dts/freescale/s32g2xxa-evb.dtsi
index 58c97bfc5e5a..9ca53f6ba38a 100644
--- a/arch/arm64/boot/dts/freescale/s32g2xxa-evb.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g2xxa-evb.dtsi
@@ -8,10 +8,16 @@
 /dts-v1/;
 #include "s32g2.dtsi"
 #include "s32gxxxa-evb.dtsi"
+
 / {
 	model = "NXP S32G2XXX-EVB";
 };
 
+&usdhc0 {
+	no-1-8-v;
+	status = "okay";
+};
+
 &pfe_mdio2 {
 	/* AQR107 on S32G-PROCEVB-S */
 	pfe_mdio_a_phy4: ethernet-phy@4 {
diff --git a/arch/arm64/boot/dts/freescale/s32g3.dtsi b/arch/arm64/boot/dts/freescale/s32g3.dtsi
index 68f762d91232..da097833961b 100644
--- a/arch/arm64/boot/dts/freescale/s32g3.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g3.dtsi
@@ -44,7 +44,7 @@ cpu4: cpu@2 {
 			compatible = "arm,cortex-a53";
 			reg = <0x2>;
 			enable-method = "psci";
-			clocks = <&dfs S32GEN1_SCMI_PERF_A53>;
+			clocks = <&dfs S32CC_SCMI_PERF_A53>;
 			next-level-cache = <&cluster0_l2_cache>;
 		};
 
@@ -53,7 +53,7 @@ cpu5: cpu@3 {
 			compatible = "arm,cortex-a53";
 			reg = <0x3>;
 			enable-method = "psci";
-			clocks = <&dfs S32GEN1_SCMI_PERF_A53>;
+			clocks = <&dfs S32CC_SCMI_PERF_A53>;
 			next-level-cache = <&cluster0_l2_cache>;
 		};
 
@@ -62,7 +62,7 @@ cpu6: cpu@102 {
 			compatible = "arm,cortex-a53";
 			reg = <0x102>;
 			enable-method = "psci";
-			clocks = <&dfs S32GEN1_SCMI_PERF_A53>;
+			clocks = <&dfs S32CC_SCMI_PERF_A53>;
 			next-level-cache = <&cluster1_l2_cache>;
 		};
 
@@ -71,40 +71,40 @@ cpu7: cpu@103 {
 			compatible = "arm,cortex-a53";
 			reg = <0x103>;
 			enable-method = "psci";
-			clocks = <&dfs S32GEN1_SCMI_PERF_A53>;
+			clocks = <&dfs S32CC_SCMI_PERF_A53>;
 			next-level-cache = <&cluster1_l2_cache>;
 		};
 	};
 
 	soc {
-		swt8: swt@40500000 {
+		swt8: watchdog@40500000 {
 			compatible = "nxp,s32cc-wdt";
 			reg = <0x0 0x40500000 0x0 0x1000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SWT_COUNTER>;
+			clocks = <&clks S32CC_SCMI_CLK_SWT_COUNTER>;
 			clock-names = "swt";
 			status = "disabled";
 		};
 
-		swt9: swt@40504000 {
+		swt9: watchdog@40504000 {
 			compatible = "nxp,s32cc-wdt";
 			reg = <0x0 0x40504000 0x0 0x1000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SWT_COUNTER>;
+			clocks = <&clks S32CC_SCMI_CLK_SWT_COUNTER>;
 			clock-names = "swt";
 			status = "disabled";
 		};
 
-		swt10: swt@40508000 {
+		swt10: watchdog@40508000 {
 			compatible = "nxp,s32cc-wdt";
 			reg = <0x0 0x40508000 0x0 0x1000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SWT_COUNTER>;
+			clocks = <&clks S32CC_SCMI_CLK_SWT_COUNTER>;
 			clock-names = "swt";
 			status = "disabled";
 		};
 
-		swt11: swt@4050c000 {
+		swt11: watchdog@4050c000 {
 			compatible = "nxp,s32cc-wdt";
 			reg = <0x0 0x4050c000 0x0 0x1000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_SWT_COUNTER>;
+			clocks = <&clks S32CC_SCMI_CLK_SWT_COUNTER>;
 			clock-names = "swt";
 			status = "disabled";
 		};
@@ -112,7 +112,7 @@ swt11: swt@4050c000 {
 		stm8: stm@40520000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x40520000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -120,7 +120,7 @@ stm8: stm@40520000 {
 		stm9: stm@40524000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x40524000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -128,7 +128,7 @@ stm9: stm@40524000 {
 		stm10: stm@40528000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x40528000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -136,7 +136,7 @@ stm10: stm@40528000 {
 		stm11: stm@4052c000 {
 			compatible = "nxp,s32cc-stm-global";
 			reg = <0x0 0x4052c000 0x0 0x3000>;
-			clocks = <&clks S32GEN1_SCMI_CLK_STM_MODULE>;
+			clocks = <&clks S32CC_SCMI_CLK_STM_MODULE>;
 			clock-names = "stm";
 			status = "disabled";
 		};
@@ -148,10 +148,10 @@ gic: interrupt-controller@50800000 {
 			#size-cells = <2>;
 			interrupt-controller;
 			reg = <0 0x50800000 0 0x10000>,
-			      <0 0x50900000 0 0x200000>,
-			      <0 0x50400000 0 0x2000>,
-			      <0 0x50410000 0 0x2000>,
-			      <0 0x50420000 0 0x2000>;
+				<0 0x50900000 0 0x200000>,
+				<0 0x50400000 0 0x2000>,
+				<0 0x50410000 0 0x2000>,
+				<0 0x50420000 0 0x2000>;
 			interrupts = <GIC_PPI 9 IRQ_TYPE_LEVEL_HIGH>;
 
 			msi-controller;
@@ -162,7 +162,7 @@ gic: interrupt-controller@50800000 {
 };
 
 &usbmisc {
-	compatible = "fsl,s32g3-usbmisc";
+	compatible = "nxp,s32g3-usbmisc";
 };
 
 &llce_dte_sram {
diff --git a/arch/arm64/boot/dts/freescale/s32g399a-rdb3.dts b/arch/arm64/boot/dts/freescale/s32g399a-rdb3.dts
index 4f9f3a67917b..af80bed4a200 100644
--- a/arch/arm64/boot/dts/freescale/s32g399a-rdb3.dts
+++ b/arch/arm64/boot/dts/freescale/s32g399a-rdb3.dts
@@ -3,7 +3,6 @@
  * Device Tree file for S32G399ARDB3 Board Rev E.
  *
  * Copyright 2022 NXP
- *
  */
 
 #include "s32g399a-rdb3.dtsi"
diff --git a/arch/arm64/boot/dts/freescale/s32g399a-rdb3.dtsi b/arch/arm64/boot/dts/freescale/s32g399a-rdb3.dtsi
index dd1cae182075..1743463c1276 100644
--- a/arch/arm64/boot/dts/freescale/s32g399a-rdb3.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g399a-rdb3.dtsi
@@ -3,12 +3,12 @@
  * Device Tree file for S32G399ARDB3 Board Rev E.
  *
  * Copyright 2022 NXP
- *
  */
 
 /dts-v1/;
 #include "s32g3.dtsi"
 #include "s32gxxxa-rdb.dtsi"
+
 / {
 	model = "NXP S32G399A-RDB3";
 };
diff --git a/arch/arm64/boot/dts/freescale/s32g3xxa-evb.dtsi b/arch/arm64/boot/dts/freescale/s32g3xxa-evb.dtsi
index 72349e84a1ae..17c613ccfee4 100644
--- a/arch/arm64/boot/dts/freescale/s32g3xxa-evb.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g3xxa-evb.dtsi
@@ -6,6 +6,7 @@
 /dts-v1/;
 #include "s32g3.dtsi"
 #include "s32gxxxa-evb.dtsi"
+
 / {
 	model = "NXP S32G3XXX-EVB";
 };
diff --git a/arch/arm64/boot/dts/freescale/s32g3xxa-evb3.dtsi b/arch/arm64/boot/dts/freescale/s32g3xxa-evb3.dtsi
index 5fc5cfb8aad4..4e0d22049667 100644
--- a/arch/arm64/boot/dts/freescale/s32g3xxa-evb3.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32g3xxa-evb3.dtsi
@@ -6,6 +6,7 @@
 /dts-v1/;
 #include "s32g3.dtsi"
 #include "s32gxxxa-evb.dtsi"
+
 / {
 	model = "NXP S32G3XXX-EVB3";
 };
diff --git a/arch/arm64/boot/dts/freescale/s32gxxxa-evb.dtsi b/arch/arm64/boot/dts/freescale/s32gxxxa-evb.dtsi
index 4bb9a5e0b35e..2aec6addc35b 100644
--- a/arch/arm64/boot/dts/freescale/s32gxxxa-evb.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32gxxxa-evb.dtsi
@@ -10,12 +10,8 @@ chosen {
 		stdout-path = "serial0:115200n8";
 	};
 
-	usbphyulpi: usbphyulpi {
-		compatible = "nxp,saf1508", "usb-phy-ulpi-generic";
-		/* ULPI_OTG_ID_PULLUP | ULPI_OTG_DRVVBUS_EXT | ULPI_OTG_EXTVBUSIND |
-		 * ULPI_IC_IND_PASSTHRU | ULPI_IC_EXTVBUS_INDINV
-		 */
-		usb-ulpi-flags = <0x60C1>;
+	usbphynop: usbphynop {
+		compatible = "usb-nop-xceiv";
 		#phy-cells = <0>;
 	};
 };
@@ -27,91 +23,10 @@ &usbmisc {
 &usbotg {
 	pinctrl-names = "default";
 	pinctrl-0 = <&usbotg_pins>;
-	fsl,usbphy = <&usbphyulpi>;
+	fsl,usbphy = <&usbphynop>;
 	status = "okay";
 };
 
-&qspi {
-	status = "okay";
-};
-
-&gmac0 {
-	status = "okay";
-	pinctrl-names = "default";
-	pinctrl-0 = <&gmac0rgmiic_pins>, <&gmac0mdioc_pins>;
-	phy-handle = <&gmac0_mdio_c_phy4>;
-	phy-mode = "rgmii-id";
-};
-
-&gmac0_mdio {
-	/* AQR107 on S32RGV-VNP-PLAT */
-	gmac_mdio_c_phy1: ethernet-phy@1 {
-		compatible = "ethernet-phy-ieee802.3-c45";
-		reg = <3>;
-	};
-	/* KSZ9031RNX on S32G-PROCEVB-S/S32G-PROCEVB3-S */
-	gmac0_mdio_c_phy4: ethernet-phy@4 {
-		reg = <4>;
-	};
-	/* KSZ9031RNX on S32RGV-VNP-PLAT */
-	gmac_mdio_c_phy5: ethernet-phy@5 {
-		status = "disabled"; /* blocked by USB by default */
-		reg = <5>;
-	};
-};
-
-&pfe {
-	status = "okay";
-	pinctrl-names = "default";
-	pinctrl-0 = <&pfe2mdioa_pins>, <&pfe2rgmiia_pins>;
-};
-
-&pfe_mdio0 {
-	/* used by USB ULPI */
-	status = "disabled";
-};
-
-&pfe_mdio1 {
-	/* unused */
-	status = "disabled";
-};
-
-&pfe_mdio2 {
-	/* KSZ9031RNX over SJA1105Q P3 */
-	pfe_mdio_a_phy2: ethernet-phy@2 {
-		reg = <2>;
-	};
-	/* KSZ9031RNX over SJA1105Q P4 */
-	pfe_mdio_a_phy3: ethernet-phy@3 {
-		reg = <3>;
-	};
-
-	/* TJA1102 over SJA1105Q P1 */
-	pfe_mdio_a_phy6: ethernet-phy@6 {
-		#address-cells = <1>;
-		#size-cells = <0>;
-		reg = <6>;
-
-		/* TJA1102 over SJA1105Q P2 */
-		pfe_mdio_a_phy7: ethernet-phy@7 {
-			reg = <7>;
-		};
-	};
-};
-
-&pfe_netif1 {
-	phy-mode = "sgmii";
-	phy-handle = <&gmac_mdio_c_phy1>;
-};
-
-&pfe_netif2 {
-	phy-mode = "rgmii";
-	fixed-link {
-		speed = <1000>;
-		full-duplex;
-	};
-};
-
 &generic_timer {
 	clock-frequency = <5000000>;
 };
@@ -154,6 +69,10 @@ &i2c4 {
 
 &usdhc0 {
 	no-1-8-v;
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&sd0_pins_default>;
+	pinctrl-1 = <&sd0_pins_100mhz>;
+	pinctrl-2 = <&sd0_pins_200mhz>;
 	status = "okay";
 };
 
@@ -205,7 +124,8 @@ &pit1 {
 
 &pinctrl {
 	status = "okay";
-	can0_pins: can0 {
+
+	can0_pins: can0_pins {
 		can0_grp0 {
 			pinmux = <S32CC_PINMUX(44, FUNC1)>;
 			output-enable;
@@ -221,10 +141,9 @@ can0_grp1 {
 		can0_grp2 {
 			pinmux = <S32CC_PINMUX(513, FUNC2)>;
 		};
-
 	};
 
-	can2_pins: can2 {
+	can2_pins: can2_pins {
 		can2_grp0 {
 			pinmux = <S32CC_PINMUX(27, FUNC2)>;
 			output-enable;
@@ -240,10 +159,9 @@ can2_grp1 {
 		can2_grp2 {
 			pinmux = <S32CC_PINMUX(632, FUNC2)>;
 		};
-
 	};
 
-	can3_pins: can3 {
+	can3_pins: can3_pins {
 		can3_grp0 {
 			pinmux = <S32CC_PINMUX(25, FUNC2)>;
 			output-enable;
@@ -259,10 +177,9 @@ can3_grp1 {
 		can3_grp2 {
 			pinmux = <S32CC_PINMUX(633, FUNC2)>;
 		};
-
 	};
 
-	dspi1_pins: dspi1 {
+	dspi1_pins: dspi1_pins {
 		dspi1_grp0 {
 			pinmux = <S32CC_PINMUX(7, FUNC2)>;
 			output-enable;
@@ -292,10 +209,9 @@ dspi1_grp3 {
 		dspi1_grp4 {
 			pinmux = <S32CC_PINMUX(987, FUNC2)>;
 		};
-
 	};
 
-	dspi1slave_pins: dspi1slave {
+	dspi1slave_pins: dspi1slave_pins {
 		dspi1slave_grp0 {
 			pinmux = <S32CC_PINMUX(6, FUNC2)>;
 			output-enable;
@@ -326,10 +242,9 @@ dspi1slave_grp4 {
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
-
 	};
 
-	dspi5_pins: dspi5 {
+	dspi5_pins: dspi5_pins {
 		dspi5_grp0 {
 			pinmux = <S32CC_PINMUX(9, FUNC3)>,
 				 <S32CC_PINMUX(11, FUNC3)>;
@@ -354,10 +269,9 @@ dspi5_grp3 {
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
-
 	};
 
-	i2c0_pins: i2c0 {
+	i2c0_pins: i2c0_pins {
 		i2c0_grp0 {
 			pinmux = <S32CC_PINMUX(16, FUNC1)>,
 				 <S32CC_PINMUX(17, FUNC1)>;
@@ -371,10 +285,9 @@ i2c0_grp1 {
 			pinmux = <S32CC_PINMUX(565, FUNC2)>,
 				 <S32CC_PINMUX(566, FUNC2)>;
 		};
-
 	};
 
-	i2c0_gpio_pins: i2c0_gpio {
+	i2c0_gpio_pins: i2c0_gpio_pins {
 		i2c0_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(16, FUNC0)>,
 				 <S32CC_PINMUX(17, FUNC0)>;
@@ -387,10 +300,9 @@ i2c0_gpio_grp1 {
 			pinmux = <S32CC_PINMUX(565, FUNC0)>,
 				 <S32CC_PINMUX(566, FUNC0)>;
 		};
-
 	};
 
-	i2c1_pins: i2c1 {
+	i2c1_pins: i2c1_pins {
 		i2c1_grp0 {
 			pinmux = <S32CC_PINMUX(19, FUNC1)>,
 				 <S32CC_PINMUX(20, FUNC1)>;
@@ -407,7 +319,7 @@ i2c1_grp1 {
 
 	};
 
-	i2c1_gpio_pins: i2c1_gpio {
+	i2c1_gpio_pins: i2c1_gpio_pins {
 		i2c1_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(19, FUNC0)>,
 				 <S32CC_PINMUX(20, FUNC0)>;
@@ -420,10 +332,9 @@ i2c1_gpio_grp1 {
 			pinmux = <S32CC_PINMUX(717, FUNC0)>,
 				 <S32CC_PINMUX(718, FUNC0)>;
 		};
-
 	};
 
-	i2c2_pins: i2c2 {
+	i2c2_pins: i2c2_pins {
 		i2c2_grp0 {
 			pinmux = <S32CC_PINMUX(21, FUNC1)>,
 				 <S32CC_PINMUX(22, FUNC1)>;
@@ -440,7 +351,7 @@ i2c2_grp1 {
 
 	};
 
-	i2c2_gpio_pins: i2c2_gpio {
+	i2c2_gpio_pins: i2c2_gpio_pins {
 		i2c2_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(719, FUNC0)>,
 				 <S32CC_PINMUX(720, FUNC0)>;
@@ -456,7 +367,7 @@ i2c2_gpio_grp1 {
 
 	};
 
-	i2c4_pins: i2c4 {
+	i2c4_pins: i2c4_pins {
 		i2c4_grp0 {
 			pinmux = <S32CC_PINMUX(33, FUNC1)>;
 			drive-open-drain;
@@ -477,10 +388,9 @@ i2c4_grp2 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_83MHZ>;
 		};
-
 	};
 
-	i2c4_gpio_pins: i2c4_gpio {
+	i2c4_gpio_pins: i2c4_gpio_pins {
 		i2c4_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(33, FUNC0)>,
 				 <S32CC_PINMUX(34, FUNC0)>;
@@ -493,10 +403,9 @@ i2c4_gpio_grp1 {
 			pinmux = <S32CC_PINMUX(724, FUNC0)>,
 				 <S32CC_PINMUX(723, FUNC0)>;
 		};
-
 	};
 
-	usbotg_pins: usbotg {
+	usbotg_pins: usbotg_pins {
 		usbotg_grp0 {
 			pinmux = <S32CC_PINMUX(896, FUNC2)>,
 				 <S32CC_PINMUX(897, FUNC2)>,
@@ -538,10 +447,9 @@ usbotg_grp3 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	pfe2mdioa_pins: pfe2mdioa {
+	pfe2mdioa_pins: pfe2mdioa_pins {
 		pfe2mdioa_grp0 {
 			pinmux = <S32CC_PINMUX(82, FUNC2)>;
 			output-enable;
@@ -558,10 +466,9 @@ pfe2mdioa_grp1 {
 		pfe2mdioa_grp2 {
 			pinmux = <S32CC_PINMUX(877, FUNC3)>;
 		};
-
 	};
 
-	pfe2rgmiia_pins: pfe2rgmiia {
+	pfe2rgmiia_pins: pfe2rgmiia_pins {
 		pfe2rgmiia_grp0 {
 			pinmux = <S32CC_PINMUX(144, FUNC2)>,
 				 <S32CC_PINMUX(113, FUNC2)>,
@@ -599,10 +506,9 @@ pfe2rgmiia_grp3 {
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
-
 	};
 
-	gmac0mdioc_pins: gmac0mdioc {
+	gmac0mdioc_pins: gmac0mdioc_pins {
 		gmac0mdioc_grp0 {
 			pinmux = <S32CC_PINMUX(60, FUNC1)>;
 			output-enable;
@@ -619,10 +525,9 @@ gmac0mdioc_grp1 {
 		gmac0mdioc_grp2 {
 			pinmux = <S32CC_PINMUX(527, FUNC2)>;
 		};
-
 	};
 
-	gmac0rgmiic_pins: gmac0rgmiic {
+	gmac0rgmiic_pins: gmac0rgmiic_pins {
 		gmac0rgmiic_grp0 {
 			pinmux = <S32CC_PINMUX(66, FUNC1)>;
 			output-enable;
@@ -660,10 +565,9 @@ gmac0rgmiic_grp3 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	pfe1mdioc_pins: pfe1mdioc {
+	pfe1mdioc_pins: pfe1mdioc_pins {
 		pfe1mdioc_grp0 {
 			pinmux = <S32CC_PINMUX(60, FUNC2)>;
 			output-enable;
@@ -680,10 +584,9 @@ pfe1mdioc_grp1 {
 		pfe1mdioc_grp2 {
 			pinmux = <S32CC_PINMUX(857, FUNC2)>;
 		};
-
 	};
 
-	pfe1rgmiic_pins: pfe1rgmiic {
+	pfe1rgmiic_pins: pfe1rgmiic_pins {
 		pfe1rgmiic_grp0 {
 			pinmux = <S32CC_PINMUX(66, FUNC2)>;
 			output-enable;
@@ -726,10 +629,9 @@ pfe1rgmiic_grp4 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	ftm0_pins: ftm0 {
+	ftm0_pins: ftm0_pins {
 		ftm0_grp0 {
 			pinmux = <S32CC_PINMUX(657, FUNC2)>;
 		};
@@ -761,10 +663,9 @@ ftm0_grp4 {
 		ftm0_grp5 {
 			pinmux = <S32CC_PINMUX(659, FUNC6)>;
 		};
-
 	};
 
-	ftm1_pins: ftm1 {
+	ftm1_pins: ftm1_pins {
 		ftm1_grp0 {
 			pinmux = <S32CC_PINMUX(29, FUNC3)>;
 			output-enable;
@@ -797,114 +698,163 @@ ftm1_grp4 {
 		ftm1_grp5 {
 			pinmux = <S32CC_PINMUX(669, FUNC2)>;
 		};
-
 	};
 
-	gmacrgmiia_pins: gmacrgmiia {
-		gmacrgmiia_grp0 {
-			pinmux = <S32CC_PINMUX(113, FUNC0)>,
-				 <S32CC_PINMUX(114, FUNC0)>,
-				 <S32CC_PINMUX(115, FUNC0)>,
-				 <S32CC_PINMUX(116, FUNC0)>,
-				 <S32CC_PINMUX(117, FUNC0)>,
-				 <S32CC_PINMUX(118, FUNC0)>,
-				 <S32CC_PINMUX(119, FUNC0)>,
-				 <S32CC_PINMUX(120, FUNC0)>,
-				 <S32CC_PINMUX(121, FUNC0)>,
-				 <S32CC_PINMUX(122, FUNC0)>,
-				 <S32CC_PINMUX(144, FUNC0)>;
-			slew-rate = <S32CC_SLEW_208MHZ>;
-		};
 
-	};
-};
+	sd0_pins_default: sd0 {
+		sd0_grp0 {
+			pinmux = <S32CC_PINMUX(46, FUNC1)>,
+				 <S32CC_PINMUX(56, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_83MHZ>;
+			bias-pull-down;
+		};
+
+		sd0_grp1 {
+			pinmux = <S32CC_PINMUX(47, FUNC1)>,
+				 <S32CC_PINMUX(48, FUNC1)>,
+				 <S32CC_PINMUX(49, FUNC1)>,
+				 <S32CC_PINMUX(50, FUNC1)>,
+				 <S32CC_PINMUX(51, FUNC1)>,
+				 <S32CC_PINMUX(52, FUNC1)>,
+				 <S32CC_PINMUX(53, FUNC1)>,
+				 <S32CC_PINMUX(54, FUNC1)>,
+				 <S32CC_PINMUX(55, FUNC1)>;
+			output-enable;
+			input-enable;
+			slew-rate = <S32CC_SLEW_83MHZ>;
+			bias-pull-up;
+		};
 
-&edma0 {
-	status = "okay";
-};
+		sd0_grp2 {
+			pinmux = <S32CC_PINMUX(57, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_83MHZ>;
+		};
 
-&edma1 {
-	status = "okay";
-};
+		sd0_grp3 {
+			pinmux = <S32CC_PINMUX(58, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_83MHZ>;
+		};
 
-&spi1 {
-	pinctrl-0 = <&dspi1_pins>;
-	pinctrl-1 = <&dspi1slave_pins>;
-	pinctrl-names = "default", "slave";
-	#address-cells = <1>;
-	#size-cells = <0>;
-	status = "okay";
+		sd0_grp4 {
+			pinmux = <S32CC_PINMUX(515, FUNC2)>,
+				 <S32CC_PINMUX(516, FUNC2)>,
+				 <S32CC_PINMUX(517, FUNC2)>,
+				 <S32CC_PINMUX(520, FUNC2)>,
+				 <S32CC_PINMUX(521, FUNC2)>,
+				 <S32CC_PINMUX(522, FUNC2)>,
+				 <S32CC_PINMUX(523, FUNC2)>,
+				 <S32CC_PINMUX(519, FUNC2)>,
+				 <S32CC_PINMUX(518, FUNC2)>,
+				 <S32CC_PINMUX(524, FUNC2)>;
+		};
 
-	spidev0: spidev@0 {
-		compatible = "rohm,dh2228fv";
-		spi-max-frequency = <4000000>;
-		reg = <0>;
-		fsl,spi-cs-sck-delay = <100>;
-		fsl,spi-sck-cs-delay = <100>;
 	};
-};
 
-&spi5 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&dspi5_pins>;
-	#address-cells = <1>;
-	#size-cells = <0>;
-	status = "okay";
-
-	ethernet-switch@0 {
-		compatible = "nxp,sja1105q";
-		spi-max-frequency = <0x3D0900>;
-		spi-cpha;
-		fsl,spi-cs-sck-delay = <100>;
-		fsl,spi-sck-cs-delay = <100>;
-		reg = <0>;
+	sd0_pins_100mhz: sd0 {
+		sd0_grp0 {
+			pinmux = <S32CC_PINMUX(46, FUNC1)>,
+				 <S32CC_PINMUX(56, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_133MHZ>;
+			bias-pull-down;
+		};
+
+		sd0_grp1 {
+			pinmux = <S32CC_PINMUX(47, FUNC1)>,
+				 <S32CC_PINMUX(48, FUNC1)>,
+				 <S32CC_PINMUX(49, FUNC1)>,
+				 <S32CC_PINMUX(50, FUNC1)>,
+				 <S32CC_PINMUX(51, FUNC1)>,
+				 <S32CC_PINMUX(52, FUNC1)>,
+				 <S32CC_PINMUX(53, FUNC1)>,
+				 <S32CC_PINMUX(54, FUNC1)>,
+				 <S32CC_PINMUX(55, FUNC1)>;
+			output-enable;
+			input-enable;
+			slew-rate = <S32CC_SLEW_133MHZ>;
+			bias-pull-up;
+		};
 
-		dsa,member = < 0 0 >;
+		sd0_grp2 {
+			pinmux = <S32CC_PINMUX(57, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_133MHZ>;
+		};
 
-		ports {
-			#address-cells = <1>;
-			#size-cells = <0>;
+		sd0_grp3 {
+			pinmux = <S32CC_PINMUX(58, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_133MHZ>;
+		};
 
-			port@0 {
-				label = "sw0-p0";
-				phy-mode = "rgmii-id";
-				ethernet = <&pfe_netif2>;
-				reg = <0>;
+		sd0_grp4 {
+			pinmux = <S32CC_PINMUX(515, FUNC2)>,
+				 <S32CC_PINMUX(516, FUNC2)>,
+				 <S32CC_PINMUX(517, FUNC2)>,
+				 <S32CC_PINMUX(520, FUNC2)>,
+				 <S32CC_PINMUX(521, FUNC2)>,
+				 <S32CC_PINMUX(522, FUNC2)>,
+				 <S32CC_PINMUX(523, FUNC2)>,
+				 <S32CC_PINMUX(519, FUNC2)>,
+				 <S32CC_PINMUX(518, FUNC2)>,
+				 <S32CC_PINMUX(524, FUNC2)>;
+		};
 
-				fixed-link {
-					speed = <1000>;
-					full-duplex;
-				};
-			};
+	};
 
-			enet_p1@1 {
-				label = "enet_p1";
-				phy-mode = "mii";
-				phy-handle = <&pfe_mdio_a_phy6>;
-				reg = <1>;
-			};
+	sd0_pins_200mhz: sd0 {
+		sd0_grp0 {
+			pinmux = <S32CC_PINMUX(46, FUNC1)>,
+				 <S32CC_PINMUX(56, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+			bias-pull-down;
+		};
+
+		sd0_grp1 {
+			pinmux = <S32CC_PINMUX(47, FUNC1)>,
+				 <S32CC_PINMUX(48, FUNC1)>,
+				 <S32CC_PINMUX(49, FUNC1)>,
+				 <S32CC_PINMUX(50, FUNC1)>,
+				 <S32CC_PINMUX(51, FUNC1)>,
+				 <S32CC_PINMUX(52, FUNC1)>,
+				 <S32CC_PINMUX(53, FUNC1)>,
+				 <S32CC_PINMUX(54, FUNC1)>,
+				 <S32CC_PINMUX(55, FUNC1)>;
+			output-enable;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+			bias-pull-up;
+		};
 
-			enet_p2@2 {
-				label = "enet_p2";
-				phy-mode = "mii";
-				phy-handle = <&pfe_mdio_a_phy7>;
-				reg = <2>;
-			};
+		sd0_grp2 {
+			pinmux = <S32CC_PINMUX(57, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
 
-			enet_p3@3 {
-				label = "enet_p3";
-				phy-mode = "rgmii-id";
-				phy-handle = <&pfe_mdio_a_phy2>;
-				reg = <3>;
-			};
+		sd0_grp3 {
+			pinmux = <S32CC_PINMUX(58, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
 
-			enet_p4@4 {
-				label = "enet_p4";
-				phy-mode = "rgmii-id";
-				phy-handle = <&pfe_mdio_a_phy3>;
-				reg = <4>;
-			};
+		sd0_grp4 {
+			pinmux = <S32CC_PINMUX(515, FUNC2)>,
+				 <S32CC_PINMUX(516, FUNC2)>,
+				 <S32CC_PINMUX(517, FUNC2)>,
+				 <S32CC_PINMUX(520, FUNC2)>,
+				 <S32CC_PINMUX(521, FUNC2)>,
+				 <S32CC_PINMUX(522, FUNC2)>,
+				 <S32CC_PINMUX(523, FUNC2)>,
+				 <S32CC_PINMUX(519, FUNC2)>,
+				 <S32CC_PINMUX(518, FUNC2)>,
+				 <S32CC_PINMUX(524, FUNC2)>;
 		};
+
 	};
 };
 
@@ -916,6 +866,10 @@ &pcie1 {
 	status = "okay";
 };
 
+&qspi {
+	status = "okay";
+};
+
 &llce_dte_sram {
 	status = "okay";
 };
@@ -1007,10 +961,174 @@ &llce_can15 {
 	 * To connect the LLCE CAN 15 interface to the transceiver
 	 * move the J167(CAN3_SEL) jumpers to positions 4-6 and 3-5.
 	 */
+	status = "disabled";
+};
+
+&gmac0 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&gmac0rgmiic_pins>, <&gmac0mdioc_pins>;
+	phy-handle = <&gmac0_mdio_c_phy4>;
+	phy-mode = "rgmii-id";
+};
 
+&gmac0_mdio {
+	/* AQR107 on S32RGV-VNP-PLAT */
+	gmac_mdio_c_phy1: ethernet-phy@1 {
+		compatible = "ethernet-phy-ieee802.3-c45";
+		reg = <1>;
+	};
+	/* KSZ9031RNX on S32G-PROCEVB-S/S32G-PROCEVB3-S */
+	gmac0_mdio_c_phy4: ethernet-phy@4 {
+		reg = <4>;
+	};
+	/* KSZ9031RNX on S32RGV-VNP-PLAT */
+	gmac_mdio_c_phy5: ethernet-phy@5 {
+		status = "disabled"; /* blocked by USB by default */
+		reg = <5>;
+	};
+};
+&pfe {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pfe2mdioa_pins>, <&pfe2rgmiia_pins>;
+};
+
+&pfe_mdio0 {
+	/* used by USB ULPI */
+	status = "disabled";
+};
+
+&pfe_mdio1 {
+	/* unused */
 	status = "disabled";
 };
 
+&pfe_mdio2 {
+	/* KSZ9031RNX over SJA1105Q P3 */
+	pfe_mdio_a_phy2: ethernet-phy@2 {
+		reg = <2>;
+	};
+	/* KSZ9031RNX over SJA1105Q P4 */
+	pfe_mdio_a_phy3: ethernet-phy@3 {
+		reg = <3>;
+	};
+
+	/* TJA1102 over SJA1105Q P1 */
+	pfe_mdio_a_phy6: ethernet-phy@6 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <6>;
+
+		/* TJA1102 over SJA1105Q P2 */
+		pfe_mdio_a_phy7: ethernet-phy@7 {
+			reg = <7>;
+		};
+	};
+};
+
+&pfe_netif1 {
+	phy-mode = "sgmii";
+	phy-handle = <&gmac_mdio_c_phy1>;
+};
+
+&pfe_netif2 {
+	phy-mode = "rgmii";
+	fixed-link {
+		speed = <1000>;
+		full-duplex;
+	};
+};
+
+&edma0 {
+	status = "okay";
+};
+
+&edma1 {
+	status = "okay";
+};
+
+&spi1 {
+	pinctrl-0 = <&dspi1_pins>;
+	pinctrl-1 = <&dspi1slave_pins>;
+	pinctrl-names = "default", "slave";
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	spidev0: spidev@0 {
+		compatible = "rohm,dh2228fv";
+		spi-max-frequency = <4000000>;
+		reg = <0>;
+		fsl,spi-cs-sck-delay = <100>;
+		fsl,spi-sck-cs-delay = <100>;
+	};
+};
+
+&spi5 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&dspi5_pins>;
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	ethernet-switch@0 {
+		compatible = "nxp,sja1105q";
+		spi-max-frequency = <0x3D0900>;
+		spi-cpha;
+		fsl,spi-cs-sck-delay = <100>;
+		fsl,spi-sck-cs-delay = <100>;
+		reg = <0>;
+
+		dsa,member = < 0 0 >;
+
+		ports {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			port@0 {
+				label = "sw0-p0";
+				phy-mode = "rgmii-id";
+				ethernet = <&pfe_netif2>;
+				reg = <0>;
+
+				fixed-link {
+					speed = <1000>;
+					full-duplex;
+				};
+			};
+
+			enet_p1@1 {
+				label = "enet_p1";
+				phy-mode = "mii";
+				phy-handle = <&pfe_mdio_a_phy6>;
+				reg = <1>;
+			};
+
+			enet_p2@2 {
+				label = "enet_p2";
+				phy-mode = "mii";
+				phy-handle = <&pfe_mdio_a_phy7>;
+				reg = <2>;
+			};
+
+			enet_p3@3 {
+				label = "enet_p3";
+				phy-mode = "rgmii-id";
+				phy-handle = <&pfe_mdio_a_phy2>;
+				reg = <3>;
+			};
+
+			enet_p4@4 {
+				label = "enet_p4";
+				phy-mode = "rgmii-id";
+				phy-handle = <&pfe_mdio_a_phy3>;
+				reg = <4>;
+			};
+		};
+	};
+};
+
 &pwm0 {
 	pinctrl-names = "default";
 	pinctrl-0 = <&ftm0_pins>;
@@ -1022,4 +1140,3 @@ &pwm1 {
 	pinctrl-0 = <&ftm1_pins>;
 	status = "okay";
 };
-
diff --git a/arch/arm64/boot/dts/freescale/s32gxxxa-rdb.dtsi b/arch/arm64/boot/dts/freescale/s32gxxxa-rdb.dtsi
index ddba22be1a0c..afe8a5cea3e1 100644
--- a/arch/arm64/boot/dts/freescale/s32gxxxa-rdb.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32gxxxa-rdb.dtsi
@@ -1,24 +1,19 @@
-// SPDX-License-Identifier: GPL-2.0-or-later
+// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
 /*
- * Device Tree file for S32G274ARDB Board.
- *
+ * Copyright (c) 2021 SUSE LLC
  * Copyright 2019-2022 NXP
- *
  */
 
 #include <dt-bindings/gpio/gpio.h>
 #include "s32g-nxp-flash-macronix.dtsi"
+
 / {
 	chosen {
 		stdout-path = "serial0:115200n8";
 	};
 
-	usbphyulpi: usbphyulpi {
-		compatible = "nxp,saf1508", "usb-phy-ulpi-generic";
-		/* ULPI_OTG_ID_PULLUP | ULPI_OTG_DRVVBUS_EXT | ULPI_OTG_EXTVBUSIND |
-		 * ULPI_IC_IND_PASSTHRU | ULPI_IC_EXTVBUS_INDINV
-		 */
-		usb-ulpi-flags = <0x60C1>;
+	usbphynop: usbphynop {
+		compatible = "usb-nop-xceiv";
 		#phy-cells = <0>;
 	};
 };
@@ -149,9 +144,96 @@ sja1110-rst-core-hog {
 	};
 };
 
+&llce_dte_sram {
+	status = "okay";
+};
+
+&llce_ppe_rx_sram {
+	status = "okay";
+};
+
+&llce_ppe_tx_sram {
+	status = "okay";
+};
+
+&llce_frpe_sram {
+	status = "okay";
+};
+
+&llce_shmem {
+	status = "okay";
+};
+
+&llce_boot_status {
+	status = "okay";
+};
+
+&llce_can0 {
+	status = "okay";
+};
+
+&llce_can1 {
+	status = "okay";
+};
+
+&llce_can2 {
+	status = "okay";
+};
+
+&llce_can3 {
+	status = "okay";
+};
+
+&llce_can4 {
+	status = "okay";
+};
+
+&llce_can5 {
+	status = "okay";
+};
+
+&llce_can6 {
+	status = "okay";
+};
+
+&llce_can7 {
+	status = "okay";
+};
+
+&llce_can8 {
+	status = "okay";
+};
+
+&llce_can9 {
+	status = "okay";
+};
+
+&llce_can10 {
+	status = "okay";
+};
+
+&llce_can11 {
+	status = "okay";
+};
+
+&llce_can13 {
+	status = "okay";
+};
+
+&llce_can14 {
+	status = "okay";
+};
+
+&llce_can15 {
+	status = "okay";
+};
+
 &usdhc0 {
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&sd0_pins_default>;
+	pinctrl-1 = <&sd0_pins_100mhz>;
+	pinctrl-2 = <&sd0_pins_200mhz>;
 	status = "okay";
-	no-1-8-v;
 };
 
 &can0 {
@@ -196,7 +278,140 @@ &pit1 {
 
 &pinctrl {
 	status = "okay";
-	ftm1_pins: ftm1 {
+
+	gmac0mdioa_pins: gmac0mdioa_pins {
+		gmac0mdioa_grp0 {
+			pinmux = <S32CC_PINMUX(60, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		gmac0mdioa_grp1 {
+			pinmux = <S32CC_PINMUX(61, FUNC1)>;
+			output-enable;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		gmac0mdioa_grp2 {
+			pinmux = <S32CC_PINMUX(527, FUNC2)>;
+		};
+	};
+
+	gmac0rgmiia_pins: gmac0rgmiia_pins {
+		gmac0rgmiia_grp0 {
+			pinmux = <S32CC_PINMUX(66, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+			bias-pull-up;
+		};
+
+		gmac0rgmiia_grp1 {
+			pinmux = <S32CC_PINMUX(538, FUNC2)>,
+				 <S32CC_PINMUX(529, FUNC2)>,
+				 <S32CC_PINMUX(530, FUNC2)>,
+				 <S32CC_PINMUX(531, FUNC2)>,
+				 <S32CC_PINMUX(532, FUNC2)>,
+				 <S32CC_PINMUX(533, FUNC2)>,
+				 <S32CC_PINMUX(534, FUNC2)>;
+		};
+
+		gmac0rgmiia_grp2 {
+			pinmux = <S32CC_PINMUX(67, FUNC1)>,
+				 <S32CC_PINMUX(68, FUNC1)>,
+				 <S32CC_PINMUX(69, FUNC1)>,
+				 <S32CC_PINMUX(70, FUNC1)>,
+				 <S32CC_PINMUX(71, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		gmac0rgmiia_grp3 {
+			pinmux = <S32CC_PINMUX(72, FUNC0)>,
+				 <S32CC_PINMUX(73, FUNC0)>,
+				 <S32CC_PINMUX(74, FUNC0)>,
+				 <S32CC_PINMUX(75, FUNC0)>,
+				 <S32CC_PINMUX(76, FUNC0)>,
+				 <S32CC_PINMUX(77, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+	};
+
+	pfe2mdiob_pins: pfe2mdiob_pins {
+		pfe2mdiob_grp0 {
+			pinmux = <S32CC_PINMUX(82, FUNC2)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		pfe2mdiob_grp1 {
+			pinmux = <S32CC_PINMUX(79, FUNC2)>;
+			output-enable;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		pfe2mdiob_grp2 {
+			pinmux = <S32CC_PINMUX(877, FUNC3)>;
+		};
+	};
+
+	pfe2rgmiib_pins: pfe2rgmiib_pins {
+		pfe2rgmiib_grp0 {
+			pinmux = <S32CC_PINMUX(78, FUNC2)>,
+				 <S32CC_PINMUX(144, FUNC2)>,
+				 <S32CC_PINMUX(113, FUNC2)>,
+				 <S32CC_PINMUX(114, FUNC2)>,
+				 <S32CC_PINMUX(115, FUNC2)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		pfe2rgmiib_grp1 {
+			pinmux = <S32CC_PINMUX(116, FUNC0)>,
+				 <S32CC_PINMUX(117, FUNC0)>,
+				 <S32CC_PINMUX(118, FUNC0)>,
+				 <S32CC_PINMUX(119, FUNC0)>,
+				 <S32CC_PINMUX(120, FUNC0)>,
+				 <S32CC_PINMUX(121, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		pfe2rgmiib_grp2 {
+			pinmux = <S32CC_PINMUX(879, FUNC3)>,
+				 <S32CC_PINMUX(885, FUNC3)>,
+				 <S32CC_PINMUX(881, FUNC3)>,
+				 <S32CC_PINMUX(882, FUNC3)>,
+				 <S32CC_PINMUX(883, FUNC3)>,
+				 <S32CC_PINMUX(884, FUNC3)>,
+				 <S32CC_PINMUX(886, FUNC3)>;
+		};
+
+		pfe2rgmiib_grp3 {
+			pinmux = <S32CC_PINMUX(122, FUNC2)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+			bias-pull-up;
+		};
+	};
+
+	ftm0_pins: ftm0_pins {
+		ftm0_grp0 {
+			pinmux = <S32CC_PINMUX(167, FUNC3)>;
+			output-enable;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		ftm0_grp1 {
+			pinmux = <S32CC_PINMUX(655, FUNC5)>;
+		};
+
+	};
+
+	ftm1_pins: ftm1_pins {
 		ftm1_grp0 {
 			pinmux = <S32CC_PINMUX(670, FUNC2)>;
 		};
@@ -207,10 +422,9 @@ ftm1_grp1 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	can0_pins: can0 {
+	can0_pins: can0_pins {
 		can0_grp0 {
 			pinmux = <S32CC_PINMUX(17, FUNC2)>;
 			output-enable;
@@ -226,10 +440,9 @@ can0_grp1 {
 		can0_grp2 {
 			pinmux = <S32CC_PINMUX(513, FUNC3)>;
 		};
-
 	};
 
-	can1_pins: can1 {
+	can1_pins: can1_pins {
 		can1_grp0 {
 			pinmux = <S32CC_PINMUX(19, FUNC2)>;
 			output-enable;
@@ -245,10 +458,9 @@ can1_grp1 {
 		can1_grp2 {
 			pinmux = <S32CC_PINMUX(631, FUNC2)>;
 		};
-
 	};
 
-	can2_pins: can2 {
+	can2_pins: can2_pins {
 		can2_grp0 {
 			pinmux = <S32CC_PINMUX(27, FUNC2)>;
 			output-enable;
@@ -264,10 +476,9 @@ can2_grp1 {
 		can2_grp2 {
 			pinmux = <S32CC_PINMUX(632, FUNC2)>;
 		};
-
 	};
 
-	can3_pins: can3 {
+	can3_pins: can3_pins {
 		can3_grp0 {
 			pinmux = <S32CC_PINMUX(25, FUNC2)>;
 			output-enable;
@@ -283,10 +494,9 @@ can3_grp1 {
 		can3_grp2 {
 			pinmux = <S32CC_PINMUX(633, FUNC2)>;
 		};
-
 	};
 
-	dspi1_pins: dspi1 {
+	dspi1_pins: dspi1_pins {
 		dspi1_grp0 {
 			pinmux = <S32CC_PINMUX(6, FUNC2)>;
 			output-enable;
@@ -316,10 +526,9 @@ dspi1_grp3 {
 		dspi1_grp4 {
 			pinmux = <S32CC_PINMUX(987, FUNC2)>;
 		};
-
 	};
 
-	dspi1_slave_pins: dspi1slave {
+	dspi1_slave_pins: dspi1_slave_pins {
 		dspi1slave_grp0 {
 			pinmux = <S32CC_PINMUX(6, FUNC2)>;
 			output-enable;
@@ -350,10 +559,9 @@ dspi1slave_grp4 {
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
-
 	};
 
-	dspi5_pins: dspi5 {
+	dspi5_pins: dspi5_pins {
 		dspi5_grp0 {
 			pinmux = <S32CC_PINMUX(9, FUNC3)>,
 				 <S32CC_PINMUX(11, FUNC3)>;
@@ -378,10 +586,9 @@ dspi5_grp3 {
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
-
 	};
 
-	i2c0_pins: i2c0 {
+	i2c0_pins: i2c0_pins {
 		i2c0_grp0 {
 			pinmux = <S32CC_PINMUX(31, FUNC2)>;
 			drive-open-drain;
@@ -402,10 +609,9 @@ i2c0_grp2 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	i2c0_gpio_pins: i2c0grp_gpio {
+	i2c0_gpio_pins: i2c0_gpio_pins {
 		i2c0_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(31, FUNC0)>,
 				 <S32CC_PINMUX(32, FUNC0)>;
@@ -418,10 +624,43 @@ i2c0_gpio_grp1 {
 			pinmux = <S32CC_PINMUX(565, FUNC0)>,
 				 <S32CC_PINMUX(566, FUNC0)>;
 		};
+	};
+
+	i2c1_pins: i2c1_pins {
+		i2c1_grp0 {
+			pinmux = <S32CC_PINMUX(163, FUNC3)>,
+				 <S32CC_PINMUX(165, FUNC3)>;
+			drive-open-drain;
+			output-enable;
+			input-enable;
+			slew-rate = <S32CC_SLEW_83MHZ>;
+		};
+
+		i2c1_grp1 {
+			pinmux = <S32CC_PINMUX(717, FUNC5)>;
+		};
+
+		i2c1_grp2 {
+			pinmux = <S32CC_PINMUX(718, FUNC4)>;
+		};
+	};
+
+	i2c1_gpio_pins: i2c1_gpio_pins {
+		i2c1_gpio_grp0 {
+			pinmux = <S32CC_PINMUX(163, FUNC0)>,
+				 <S32CC_PINMUX(165, FUNC0)>;
+			drive-open-drain;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
 
+		i2c1_gpio_grp1 {
+			pinmux = <S32CC_PINMUX(717, FUNC0)>,
+				 <S32CC_PINMUX(718, FUNC0)>;
+		};
 	};
 
-	i2c2_pins: i2c2 {
+	i2c2_pins: i2c2_pins {
 		i2c2_grp0 {
 			pinmux = <S32CC_PINMUX(21, FUNC1)>,
 				 <S32CC_PINMUX(22, FUNC1)>;
@@ -435,10 +674,9 @@ i2c2_grp1 {
 			pinmux = <S32CC_PINMUX(719, FUNC2)>,
 				 <S32CC_PINMUX(720, FUNC2)>;
 		};
-
 	};
 
-	i2c2_gpio_pins: i2c2grp_gpio {
+	i2c2_gpio_pins: i2c2_gpio_pins {
 		i2c2_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(719, FUNC0)>,
 				 <S32CC_PINMUX(720, FUNC0)>;
@@ -451,10 +689,9 @@ i2c2_gpio_grp1 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	i2c4_pins: i2c4 {
+	i2c4_pins: i2c4_pins {
 		i2c4_grp0 {
 			pinmux = <S32CC_PINMUX(33, FUNC1)>;
 			drive-open-drain;
@@ -475,10 +712,9 @@ i2c4_grp2 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_83MHZ>;
 		};
-
 	};
 
-	i2c4_gpio_pins: i2c4grp_gpio {
+	i2c4_gpio_pins: i2c4_gpio_pins {
 		i2c4_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(33, FUNC0)>,
 				 <S32CC_PINMUX(34, FUNC0)>;
@@ -491,224 +727,206 @@ i2c4_gpio_grp1 {
 			pinmux = <S32CC_PINMUX(724, FUNC0)>,
 				 <S32CC_PINMUX(723, FUNC0)>;
 		};
-
 	};
 
-	usbotg_pins: usbotg {
-		usbotg_grp0 {
-			pinmux = <S32CC_PINMUX(896, FUNC2)>,
-				 <S32CC_PINMUX(897, FUNC2)>,
-				 <S32CC_PINMUX(898, FUNC2)>,
-				 <S32CC_PINMUX(899, FUNC2)>,
-				 <S32CC_PINMUX(900, FUNC2)>,
-				 <S32CC_PINMUX(901, FUNC2)>,
-				 <S32CC_PINMUX(902, FUNC2)>,
-				 <S32CC_PINMUX(903, FUNC2)>,
-				 <S32CC_PINMUX(895, FUNC2)>,
-				 <S32CC_PINMUX(904, FUNC2)>,
-				 <S32CC_PINMUX(905, FUNC2)>;
-		};
-
-		usbotg_grp1 {
-			pinmux = <S32CC_PINMUX(62, FUNC1)>,
-				 <S32CC_PINMUX(63, FUNC1)>,
-				 <S32CC_PINMUX(64, FUNC1)>,
-				 <S32CC_PINMUX(65, FUNC1)>,
-				 <S32CC_PINMUX(188, FUNC1)>,
-				 <S32CC_PINMUX(189, FUNC1)>,
-				 <S32CC_PINMUX(190, FUNC1)>,
-				 <S32CC_PINMUX(112, FUNC1)>;
+	sd0_pins_default: sd0 {
+		sd0_grp0 {
+			pinmux = <S32CC_PINMUX(46, FUNC1)>,
+				 <S32CC_PINMUX(56, FUNC1)>;
 			output-enable;
-			input-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
-		};
-
-		usbotg_grp2 {
-			pinmux = <S32CC_PINMUX(184, FUNC0)>,
-				 <S32CC_PINMUX(185, FUNC0)>,
-				 <S32CC_PINMUX(187, FUNC0)>;
-			input-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			slew-rate = <S32CC_SLEW_83MHZ>;
+			bias-pull-down;
 		};
 
-		usbotg_grp3 {
-			pinmux = <S32CC_PINMUX(186, FUNC1)>;
+		sd0_grp1 {
+			pinmux = <S32CC_PINMUX(47, FUNC1)>,
+				 <S32CC_PINMUX(48, FUNC1)>,
+				 <S32CC_PINMUX(49, FUNC1)>,
+				 <S32CC_PINMUX(50, FUNC1)>,
+				 <S32CC_PINMUX(51, FUNC1)>,
+				 <S32CC_PINMUX(52, FUNC1)>,
+				 <S32CC_PINMUX(53, FUNC1)>,
+				 <S32CC_PINMUX(54, FUNC1)>,
+				 <S32CC_PINMUX(55, FUNC1)>;
 			output-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_83MHZ>;
+			bias-pull-up;
 		};
 
-	};
-
-	gmac0mdioa_pins: gmac0mdioa {
-		gmac0mdioa_grp0 {
-			pinmux = <S32CC_PINMUX(60, FUNC1)>;
+		sd0_grp2 {
+			pinmux = <S32CC_PINMUX(57, FUNC1)>;
 			output-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			slew-rate = <S32CC_SLEW_83MHZ>;
 		};
 
-		gmac0mdioa_grp1 {
-			pinmux = <S32CC_PINMUX(61, FUNC1)>;
-			output-enable;
+		sd0_grp3 {
+			pinmux = <S32CC_PINMUX(58, FUNC0)>;
 			input-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			slew-rate = <S32CC_SLEW_83MHZ>;
 		};
 
-		gmac0mdioa_grp2 {
-			pinmux = <S32CC_PINMUX(527, FUNC2)>;
+		sd0_grp4 {
+			pinmux = <S32CC_PINMUX(515, FUNC2)>,
+				 <S32CC_PINMUX(516, FUNC2)>,
+				 <S32CC_PINMUX(517, FUNC2)>,
+				 <S32CC_PINMUX(520, FUNC2)>,
+				 <S32CC_PINMUX(521, FUNC2)>,
+				 <S32CC_PINMUX(522, FUNC2)>,
+				 <S32CC_PINMUX(523, FUNC2)>,
+				 <S32CC_PINMUX(519, FUNC2)>,
+				 <S32CC_PINMUX(518, FUNC2)>,
+				 <S32CC_PINMUX(524, FUNC2)>;
 		};
 
 	};
 
-	gmac0rgmiia_pins: gmac0rgmiia {
-		gmac0rgmiia_grp0 {
-			pinmux = <S32CC_PINMUX(66, FUNC1)>;
+	sd0_pins_100mhz: sd0 {
+		sd0_grp0 {
+			pinmux = <S32CC_PINMUX(46, FUNC1)>,
+				 <S32CC_PINMUX(56, FUNC1)>;
 			output-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
-			bias-pull-up;
+			slew-rate = <S32CC_SLEW_133MHZ>;
+			bias-pull-down;
 		};
 
-		gmac0rgmiia_grp1 {
-			pinmux = <S32CC_PINMUX(538, FUNC2)>,
-				 <S32CC_PINMUX(529, FUNC2)>,
-				 <S32CC_PINMUX(530, FUNC2)>,
-				 <S32CC_PINMUX(531, FUNC2)>,
-				 <S32CC_PINMUX(532, FUNC2)>,
-				 <S32CC_PINMUX(533, FUNC2)>,
-				 <S32CC_PINMUX(534, FUNC2)>;
-		};
-
-		gmac0rgmiia_grp2 {
-			pinmux = <S32CC_PINMUX(67, FUNC1)>,
-				 <S32CC_PINMUX(68, FUNC1)>,
-				 <S32CC_PINMUX(69, FUNC1)>,
-				 <S32CC_PINMUX(70, FUNC1)>,
-				 <S32CC_PINMUX(71, FUNC1)>;
+		sd0_grp1 {
+			pinmux = <S32CC_PINMUX(47, FUNC1)>,
+				 <S32CC_PINMUX(48, FUNC1)>,
+				 <S32CC_PINMUX(49, FUNC1)>,
+				 <S32CC_PINMUX(50, FUNC1)>,
+				 <S32CC_PINMUX(51, FUNC1)>,
+				 <S32CC_PINMUX(52, FUNC1)>,
+				 <S32CC_PINMUX(53, FUNC1)>,
+				 <S32CC_PINMUX(54, FUNC1)>,
+				 <S32CC_PINMUX(55, FUNC1)>;
 			output-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
-		};
-
-		gmac0rgmiia_grp3 {
-			pinmux = <S32CC_PINMUX(72, FUNC0)>,
-				 <S32CC_PINMUX(73, FUNC0)>,
-				 <S32CC_PINMUX(74, FUNC0)>,
-				 <S32CC_PINMUX(75, FUNC0)>,
-				 <S32CC_PINMUX(76, FUNC0)>,
-				 <S32CC_PINMUX(77, FUNC0)>;
 			input-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			slew-rate = <S32CC_SLEW_133MHZ>;
+			bias-pull-up;
 		};
 
-	};
-
-	pfe2mdiob_pins: pfe2mdiob {
-		pfe2mdiob_grp0 {
-			pinmux = <S32CC_PINMUX(82, FUNC2)>;
+		sd0_grp2 {
+			pinmux = <S32CC_PINMUX(57, FUNC1)>;
 			output-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			slew-rate = <S32CC_SLEW_133MHZ>;
 		};
 
-		pfe2mdiob_grp1 {
-			pinmux = <S32CC_PINMUX(79, FUNC2)>;
-			output-enable;
+		sd0_grp3 {
+			pinmux = <S32CC_PINMUX(58, FUNC0)>;
 			input-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			slew-rate = <S32CC_SLEW_133MHZ>;
 		};
 
-		pfe2mdiob_grp2 {
-			pinmux = <S32CC_PINMUX(877, FUNC3)>;
+		sd0_grp4 {
+			pinmux = <S32CC_PINMUX(515, FUNC2)>,
+				 <S32CC_PINMUX(516, FUNC2)>,
+				 <S32CC_PINMUX(517, FUNC2)>,
+				 <S32CC_PINMUX(520, FUNC2)>,
+				 <S32CC_PINMUX(521, FUNC2)>,
+				 <S32CC_PINMUX(522, FUNC2)>,
+				 <S32CC_PINMUX(523, FUNC2)>,
+				 <S32CC_PINMUX(519, FUNC2)>,
+				 <S32CC_PINMUX(518, FUNC2)>,
+				 <S32CC_PINMUX(524, FUNC2)>;
 		};
 
 	};
 
-	pfe2rgmiib_pins: pfe2rgmiib {
-		pfe2rgmiib_grp0 {
-			pinmux = <S32CC_PINMUX(78, FUNC2)>,
-				 <S32CC_PINMUX(144, FUNC2)>,
-				 <S32CC_PINMUX(113, FUNC2)>,
-				 <S32CC_PINMUX(114, FUNC2)>,
-				 <S32CC_PINMUX(115, FUNC2)>;
+	sd0_pins_200mhz: sd0 {
+		sd0_grp0 {
+			pinmux = <S32CC_PINMUX(46, FUNC1)>,
+				 <S32CC_PINMUX(56, FUNC1)>;
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
+			bias-pull-down;
 		};
 
-		pfe2rgmiib_grp1 {
-			pinmux = <S32CC_PINMUX(116, FUNC0)>,
-				 <S32CC_PINMUX(117, FUNC0)>,
-				 <S32CC_PINMUX(118, FUNC0)>,
-				 <S32CC_PINMUX(119, FUNC0)>,
-				 <S32CC_PINMUX(120, FUNC0)>,
-				 <S32CC_PINMUX(121, FUNC0)>;
+		sd0_grp1 {
+			pinmux = <S32CC_PINMUX(47, FUNC1)>,
+				 <S32CC_PINMUX(48, FUNC1)>,
+				 <S32CC_PINMUX(49, FUNC1)>,
+				 <S32CC_PINMUX(50, FUNC1)>,
+				 <S32CC_PINMUX(51, FUNC1)>,
+				 <S32CC_PINMUX(52, FUNC1)>,
+				 <S32CC_PINMUX(53, FUNC1)>,
+				 <S32CC_PINMUX(54, FUNC1)>,
+				 <S32CC_PINMUX(55, FUNC1)>;
+			output-enable;
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
+			bias-pull-up;
 		};
 
-		pfe2rgmiib_grp2 {
-			pinmux = <S32CC_PINMUX(879, FUNC3)>,
-				 <S32CC_PINMUX(885, FUNC3)>,
-				 <S32CC_PINMUX(881, FUNC3)>,
-				 <S32CC_PINMUX(882, FUNC3)>,
-				 <S32CC_PINMUX(883, FUNC3)>,
-				 <S32CC_PINMUX(884, FUNC3)>,
-				 <S32CC_PINMUX(886, FUNC3)>;
-		};
-
-		pfe2rgmiib_grp3 {
-			pinmux = <S32CC_PINMUX(122, FUNC2)>;
+		sd0_grp2 {
+			pinmux = <S32CC_PINMUX(57, FUNC1)>;
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
-			bias-pull-up;
 		};
 
-	};
-
-	ftm0_pins: ftm0 {
-		ftm0_grp0 {
-			pinmux = <S32CC_PINMUX(167, FUNC3)>;
-			output-enable;
+		sd0_grp3 {
+			pinmux = <S32CC_PINMUX(58, FUNC0)>;
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
 
-		ftm0_grp1 {
-			pinmux = <S32CC_PINMUX(655, FUNC5)>;
+		sd0_grp4 {
+			pinmux = <S32CC_PINMUX(515, FUNC2)>,
+				 <S32CC_PINMUX(516, FUNC2)>,
+				 <S32CC_PINMUX(517, FUNC2)>,
+				 <S32CC_PINMUX(520, FUNC2)>,
+				 <S32CC_PINMUX(521, FUNC2)>,
+				 <S32CC_PINMUX(522, FUNC2)>,
+				 <S32CC_PINMUX(523, FUNC2)>,
+				 <S32CC_PINMUX(519, FUNC2)>,
+				 <S32CC_PINMUX(518, FUNC2)>,
+				 <S32CC_PINMUX(524, FUNC2)>;
 		};
 
 	};
 
-	i2c1_pins: i2c1 {
-		i2c1_grp0 {
-			pinmux = <S32CC_PINMUX(163, FUNC3)>,
-				 <S32CC_PINMUX(165, FUNC3)>;
-			drive-open-drain;
-			output-enable;
-			input-enable;
-			slew-rate = <S32CC_SLEW_83MHZ>;
+	usbotg_pins: usbotg_pins {
+		usbotg_grp0 {
+			pinmux = <S32CC_PINMUX(896, FUNC2)>,
+				 <S32CC_PINMUX(897, FUNC2)>,
+				 <S32CC_PINMUX(898, FUNC2)>,
+				 <S32CC_PINMUX(899, FUNC2)>,
+				 <S32CC_PINMUX(900, FUNC2)>,
+				 <S32CC_PINMUX(901, FUNC2)>,
+				 <S32CC_PINMUX(902, FUNC2)>,
+				 <S32CC_PINMUX(903, FUNC2)>,
+				 <S32CC_PINMUX(895, FUNC2)>,
+				 <S32CC_PINMUX(904, FUNC2)>,
+				 <S32CC_PINMUX(905, FUNC2)>;
 		};
 
-		i2c1_grp1 {
-			pinmux = <S32CC_PINMUX(717, FUNC5)>;
+		usbotg_grp1 {
+			pinmux = <S32CC_PINMUX(62, FUNC1)>,
+				 <S32CC_PINMUX(63, FUNC1)>,
+				 <S32CC_PINMUX(64, FUNC1)>,
+				 <S32CC_PINMUX(65, FUNC1)>,
+				 <S32CC_PINMUX(188, FUNC1)>,
+				 <S32CC_PINMUX(189, FUNC1)>,
+				 <S32CC_PINMUX(190, FUNC1)>,
+				 <S32CC_PINMUX(112, FUNC1)>;
+			output-enable;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
 
-		i2c1_grp2 {
-			pinmux = <S32CC_PINMUX(718, FUNC4)>;
+		usbotg_grp2 {
+			pinmux = <S32CC_PINMUX(184, FUNC0)>,
+				 <S32CC_PINMUX(185, FUNC0)>,
+				 <S32CC_PINMUX(187, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
 
-	};
-
-	i2c1_gpio_pins: i2c1grp_gpio {
-		i2c1_gpio_grp0 {
-			pinmux = <S32CC_PINMUX(163, FUNC0)>,
-				 <S32CC_PINMUX(165, FUNC0)>;
-			drive-open-drain;
+		usbotg_grp3 {
+			pinmux = <S32CC_PINMUX(186, FUNC1)>;
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
-		i2c1_gpio_grp1 {
-			pinmux = <S32CC_PINMUX(717, FUNC0)>,
-				 <S32CC_PINMUX(718, FUNC0)>;
-		};
-
 	};
 };
 
@@ -762,7 +980,7 @@ &usbmisc {
 &usbotg {
 	pinctrl-names = "default";
 	pinctrl-0 = <&usbotg_pins>;
-	fsl,usbphy = <&usbphyulpi>;
+	fsl,usbphy = <&usbphynop>;
 	status = "okay";
 };
 
@@ -789,91 +1007,3 @@ &pwm1 {
 	pinctrl-0 = <&ftm1_pins>;
 	status = "okay";
 };
-
-&gpio {
-	status = "okay";
-};
-
-&llce_dte_sram {
-	status = "okay";
-};
-
-&llce_ppe_rx_sram {
-	status = "okay";
-};
-
-&llce_ppe_tx_sram {
-	status = "okay";
-};
-
-&llce_frpe_sram {
-	status = "okay";
-};
-
-&llce_shmem {
-	status = "okay";
-};
-
-&llce_boot_status {
-	status = "okay";
-};
-
-&llce_can0 {
-	status = "okay";
-};
-
-&llce_can1 {
-	status = "okay";
-};
-
-&llce_can2 {
-	status = "okay";
-};
-
-&llce_can3 {
-	status = "okay";
-};
-
-&llce_can4 {
-	status = "okay";
-};
-
-&llce_can5 {
-	status = "okay";
-};
-
-&llce_can6 {
-	status = "okay";
-};
-
-&llce_can7 {
-	status = "okay";
-};
-
-&llce_can8 {
-	status = "okay";
-};
-
-&llce_can9 {
-	status = "okay";
-};
-
-&llce_can10 {
-	status = "okay";
-};
-
-&llce_can11 {
-	status = "okay";
-};
-
-&llce_can13 {
-	status = "okay";
-};
-
-&llce_can14 {
-	status = "okay";
-};
-
-&llce_can15 {
-	status = "okay";
-};
diff --git a/arch/arm64/boot/dts/freescale/s32r45-emu.dts b/arch/arm64/boot/dts/freescale/s32r45-emu.dts
index 81de27004037..86b5bfdba1d2 100644
--- a/arch/arm64/boot/dts/freescale/s32r45-emu.dts
+++ b/arch/arm64/boot/dts/freescale/s32r45-emu.dts
@@ -105,10 +105,6 @@ &pit1 {
 	status = "okay";
 };
 
-&pinctrl {
-	status = "okay";
-};
-
 &edma0 {
 	status = "okay";
 };
diff --git a/arch/arm64/boot/dts/freescale/s32r45-evb.dts b/arch/arm64/boot/dts/freescale/s32r45-evb.dts
index 6164443cb776..0b55677cfaba 100644
--- a/arch/arm64/boot/dts/freescale/s32r45-evb.dts
+++ b/arch/arm64/boot/dts/freescale/s32r45-evb.dts
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
 /*
  * Copyright 2019-2022 NXP
  *
@@ -8,9 +9,9 @@
  */
 
 /dts-v1/;
+#include <dt-bindings/gpio/gpio.h>
 #include "s32r45.dtsi"
 #include "s32cc-nxp-flash-macronix.dtsi"
-#include <dt-bindings/gpio/gpio.h>
 
 / {
 	model = "NXP S32R458-EVB";
@@ -123,7 +124,8 @@ &pit1 {
 
 &pinctrl {
 	status = "okay";
-	can0_pins: can0 {
+
+	can0_pins: can0_pins {
 		can0_grp0 {
 			pinmux = <S32CC_PINMUX(44, FUNC1)>;
 			output-enable;
@@ -139,10 +141,9 @@ can0_grp1 {
 		can0_grp2 {
 			pinmux = <S32CC_PINMUX(513, FUNC2)>;
 		};
-
 	};
 
-	can1_pins: can1 {
+	can1_pins: can1_pins {
 		can1_grp0 {
 			pinmux = <S32CC_PINMUX(62, FUNC3)>;
 			output-enable;
@@ -158,10 +159,9 @@ can1_grp1 {
 		can1_grp2 {
 			pinmux = <S32CC_PINMUX(658, FUNC3)>;
 		};
-
 	};
 
-	can2_pins: can2 {
+	can2_pins: can2_pins {
 		can2_grp0 {
 			pinmux = <S32CC_PINMUX(19, FUNC1)>;
 			output-enable;
@@ -177,10 +177,9 @@ can2_grp1 {
 		can2_grp2 {
 			pinmux = <S32CC_PINMUX(617, FUNC3)>;
 		};
-
 	};
 
-	can3_pins: can3 {
+	can3_pins: can3_pins {
 		can3_grp0 {
 			pinmux = <S32CC_PINMUX(119, FUNC0)>;
 			input-enable;
@@ -196,10 +195,27 @@ can3_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_150MHZ>;
 		};
+	};
 
+	can4_pins: can4_pins {
+		can4_grp0 {
+			pinmux = <S32CC_PINMUX(121, FUNC3)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_150MHZ>;
+		};
+
+		can4_grp1 {
+			pinmux = <S32CC_PINMUX(103, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		can4_grp2 {
+			pinmux = <S32CC_PINMUX(633, FUNC3)>;
+		};
 	};
 
-	can5_pins: can5 {
+	can5_pins: can5_pins {
 		can5_grp0 {
 			pinmux = <S32CC_PINMUX(112, FUNC0)>;
 			input-enable;
@@ -215,10 +231,45 @@ can5_grp2 {
 			output-enable;
 			slew-rate = <S32CC_SLEW_150MHZ>;
 		};
+	};
+
+	can6_pins: can6_pins {
+		can6_grp0 {
+			pinmux = <S32CC_PINMUX(102, FUNC3)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_150MHZ>;
+		};
+
+		can6_grp1 {
+			pinmux = <S32CC_PINMUX(104, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
 
+		can6_grp2 {
+			pinmux = <S32CC_PINMUX(655, FUNC3)>;
+		};
 	};
 
-	i2c0_pins: i2c0 {
+	can7_pins: can7_pins {
+		can7_grp0 {
+			pinmux = <S32CC_PINMUX(120, FUNC3)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_150MHZ>;
+		};
+
+		can7_grp1 {
+			pinmux = <S32CC_PINMUX(123, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		can7_grp2 {
+			pinmux = <S32CC_PINMUX(657, FUNC3)>;
+		};
+	};
+
+	i2c0_pins: i2c0_pins {
 		i2c0_grp0 {
 			pinmux = <S32CC_PINMUX(16, FUNC1)>,
 				 <S32CC_PINMUX(17, FUNC1)>;
@@ -235,7 +286,7 @@ i2c0_grp1 {
 
 	};
 
-	i2c0_gpio_pins: i2c0_gpio {
+	i2c0_gpio_pins: i2c0_gpio_pins {
 		i2c0_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(16, FUNC0)>,
 				 <S32CC_PINMUX(17, FUNC0)>;
@@ -251,7 +302,7 @@ i2c0_gpio_grp1 {
 
 	};
 
-	i2c1_pins: i2c1 {
+	i2c1_pins: i2c1_pins {
 		i2c1_grp0 {
 			pinmux = <S32CC_PINMUX(615, FUNC2)>,
 				 <S32CC_PINMUX(616, FUNC2)>;
@@ -275,7 +326,7 @@ i2c1_grp2 {
 
 	};
 
-	i2c1_gpio_pins: i2c1_gpio {
+	i2c1_gpio_pins: i2c1_gpio_pins {
 		i2c1_gpio_grp0 {
 			pinmux = <S32CC_PINMUX(615, FUNC0)>,
 				 <S32CC_PINMUX(616, FUNC0)>;
@@ -291,7 +342,7 @@ i2c1_gpio_grp1 {
 
 	};
 
-	qspi_pins: qspi {
+	qspi_pins: qspi_pins {
 		qspi_grp0 {
 			pinmux = <S32CC_PINMUX(93, FUNC1)>,
 				 <S32CC_PINMUX(97, FUNC1)>,
@@ -336,10 +387,9 @@ qspi_grp3 {
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
-
 	};
 
-	dspi1_pins: dspi1 {
+	dspi1_pins: dspi1_pins {
 		dspi1_grp0 {
 			pinmux = <S32CC_PINMUX(22, FUNC1)>,
 				 <S32CC_PINMUX(20, FUNC1)>;
@@ -365,10 +415,9 @@ dspi1_grp3 {
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
-
 	};
 
-	dspi2_pins: dspi2 {
+	dspi2_pins: dspi2_pins {
 		dspi2_grp0 {
 			pinmux = <S32CC_PINMUX(29, FUNC1)>,
 				 <S32CC_PINMUX(27, FUNC1)>;
@@ -394,10 +443,9 @@ dspi2_grp3 {
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
-
 	};
 
-	dspi3_pins: dspi3 {
+	dspi3_pins: dspi3_pins {
 		dspi3_grp0 {
 			pinmux = <S32CC_PINMUX(45, FUNC1)>,
 				 <S32CC_PINMUX(36, FUNC1)>;
@@ -423,10 +471,60 @@ dspi3_grp3 {
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
+	};
 
+	dspi5_pins: dspi5_pins {
+		dspi5_grp0 {
+			pinmux = <S32CC_PINMUX(133, FUNC4)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		dspi5_grp1 {
+			pinmux = <S32CC_PINMUX(132, FUNC0)>;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+			bias-pull-up;
+		};
+
+		dspi5_grp2 {
+			pinmux = <S32CC_PINMUX(750, FUNC4)>;
+		};
+
+		dspi5_grp3 {
+			pinmux = <S32CC_PINMUX(128, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		dspi5_grp4 {
+			pinmux = <S32CC_PINMUX(131, FUNC2)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+			bias-pull-up;
+		};
 	};
 
-	mdio2_pins: mdio2 {
+	mdio3_pins: mdio3_pins {
+		mdio3_grp0 {
+			pinmux = <S32CC_PINMUX(102, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		mdio3_grp1 {
+			pinmux = <S32CC_PINMUX(103, FUNC1)>;
+			output-enable;
+			input-enable;
+			slew-rate = <S32CC_SLEW_208MHZ>;
+		};
+
+		mdio3_grp2 {
+			pinmux = <S32CC_PINMUX(659, FUNC2)>;
+		};
+	};
+
+	mdio2_pins: mdio2_pins {
 		mdio2_grp0 {
 			pinmux = <S32CC_PINMUX(60, FUNC1)>;
 			output-enable;
@@ -446,7 +544,7 @@ mdio2_grp2 {
 
 	};
 
-	rgmii2_pins: rgmii2 {
+	rgmii2_pins: rgmii2_pins {
 		rgmii2_grp0 {
 			pinmux = <S32CC_PINMUX(66, FUNC1)>;
 			output-enable;
@@ -487,114 +585,110 @@ rgmii2_grp3 {
 
 	};
 
-	can4_pins: can4 {
-		can4_grp0 {
-			pinmux = <S32CC_PINMUX(121, FUNC3)>;
+	sd0_pins_default: sd0 {
+		sd0_grp0 {
+			pinmux = <S32CC_PINMUX(46, FUNC1)>;
 			output-enable;
-			slew-rate = <S32CC_SLEW_150MHZ>;
-		};
-
-		can4_grp1 {
-			pinmux = <S32CC_PINMUX(103, FUNC0)>;
-			input-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
-		};
-
-		can4_grp2 {
-			pinmux = <S32CC_PINMUX(633, FUNC3)>;
+			slew-rate = <S32CC_SLEW_83MHZ>;
+			bias-pull-down;
 		};
 
-	};
-
-	can6_pins: can6 {
-		can6_grp0 {
-			pinmux = <S32CC_PINMUX(102, FUNC3)>;
+		sd0_grp1 {
+			pinmux = <S32CC_PINMUX(47, FUNC1)>,
+				 <S32CC_PINMUX(48, FUNC1)>,
+				 <S32CC_PINMUX(49, FUNC1)>,
+				 <S32CC_PINMUX(50, FUNC1)>,
+				 <S32CC_PINMUX(51, FUNC1)>;
 			output-enable;
-			slew-rate = <S32CC_SLEW_150MHZ>;
-		};
-
-		can6_grp1 {
-			pinmux = <S32CC_PINMUX(104, FUNC0)>;
 			input-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
-		};
-
-		can6_grp2 {
-			pinmux = <S32CC_PINMUX(655, FUNC3)>;
+			slew-rate = <S32CC_SLEW_83MHZ>;
+			bias-pull-up;
 		};
 
-	};
-
-	can7_pins: can7 {
-		can7_grp0 {
-			pinmux = <S32CC_PINMUX(120, FUNC3)>;
+		sd0_grp2 {
+			pinmux = <S32CC_PINMUX(57, FUNC1)>;
 			output-enable;
-			slew-rate = <S32CC_SLEW_150MHZ>;
-		};
-
-		can7_grp1 {
-			pinmux = <S32CC_PINMUX(123, FUNC0)>;
-			input-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			slew-rate = <S32CC_SLEW_83MHZ>;
 		};
 
-		can7_grp2 {
-			pinmux = <S32CC_PINMUX(657, FUNC3)>;
+		sd0_grp3 {
+			pinmux = <S32CC_PINMUX(515, FUNC2)>,
+				 <S32CC_PINMUX(516, FUNC2)>,
+				 <S32CC_PINMUX(517, FUNC2)>,
+				 <S32CC_PINMUX(520, FUNC2)>,
+				 <S32CC_PINMUX(521, FUNC2)>;
 		};
 
 	};
 
-	mdio3_pins: mdio3 {
-		mdio3_grp0 {
-			pinmux = <S32CC_PINMUX(102, FUNC1)>;
+	sd0_pins_100mhz: sd0 {
+		sd0_grp0 {
+			pinmux = <S32CC_PINMUX(46, FUNC1)>;
 			output-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			slew-rate = <S32CC_SLEW_133MHZ>;
+			bias-pull-down;
 		};
 
-		mdio3_grp1 {
-			pinmux = <S32CC_PINMUX(103, FUNC1)>;
+		sd0_grp1 {
+			pinmux = <S32CC_PINMUX(47, FUNC1)>,
+				 <S32CC_PINMUX(48, FUNC1)>,
+				 <S32CC_PINMUX(49, FUNC1)>,
+				 <S32CC_PINMUX(50, FUNC1)>,
+				 <S32CC_PINMUX(51, FUNC1)>;
 			output-enable;
 			input-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
+			slew-rate = <S32CC_SLEW_133MHZ>;
+			bias-pull-up;
 		};
 
-		mdio3_grp2 {
-			pinmux = <S32CC_PINMUX(659, FUNC2)>;
+		sd0_grp2 {
+			pinmux = <S32CC_PINMUX(57, FUNC1)>;
+			output-enable;
+			slew-rate = <S32CC_SLEW_133MHZ>;
 		};
 
+		sd0_grp3 {
+			pinmux = <S32CC_PINMUX(515, FUNC2)>,
+				 <S32CC_PINMUX(516, FUNC2)>,
+				 <S32CC_PINMUX(517, FUNC2)>,
+				 <S32CC_PINMUX(520, FUNC2)>,
+				 <S32CC_PINMUX(521, FUNC2)>;
+		};
 	};
 
-	dspi5_pins: dspi5 {
-		dspi5_grp0 {
-			pinmux = <S32CC_PINMUX(133, FUNC4)>;
+	sd0_pins_200mhz: sd0 {
+		sd0_grp0 {
+			pinmux = <S32CC_PINMUX(46, FUNC1)>;
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
+			bias-pull-down;
 		};
 
-		dspi5_grp1 {
-			pinmux = <S32CC_PINMUX(132, FUNC0)>;
+		sd0_grp1 {
+			pinmux = <S32CC_PINMUX(47, FUNC1)>,
+				 <S32CC_PINMUX(48, FUNC1)>,
+				 <S32CC_PINMUX(49, FUNC1)>,
+				 <S32CC_PINMUX(50, FUNC1)>,
+				 <S32CC_PINMUX(51, FUNC1)>;
+			output-enable;
 			input-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 			bias-pull-up;
 		};
 
-		dspi5_grp2 {
-			pinmux = <S32CC_PINMUX(750, FUNC4)>;
-		};
-
-		dspi5_grp3 {
-			pinmux = <S32CC_PINMUX(128, FUNC1)>;
+		sd0_grp2 {
+			pinmux = <S32CC_PINMUX(57, FUNC1)>;
 			output-enable;
 			slew-rate = <S32CC_SLEW_208MHZ>;
 		};
 
-		dspi5_grp4 {
-			pinmux = <S32CC_PINMUX(131, FUNC2)>;
-			output-enable;
-			slew-rate = <S32CC_SLEW_208MHZ>;
-			bias-pull-up;
+		sd0_grp3 {
+			pinmux = <S32CC_PINMUX(515, FUNC2)>,
+				 <S32CC_PINMUX(516, FUNC2)>,
+				 <S32CC_PINMUX(517, FUNC2)>,
+				 <S32CC_PINMUX(520, FUNC2)>,
+				 <S32CC_PINMUX(521, FUNC2)>;
 		};
-
 	};
 };
 
@@ -682,17 +776,21 @@ &spi5 {
 
 &usdhc0 {
 	no-1-8-v;
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&sd0_pins_default>;
+	pinctrl-1 = <&sd0_pins_100mhz>;
+	pinctrl-2 = <&sd0_pins_200mhz>;
 	status = "okay";
 };
 
 &qspi {
+	compatible = "nxp,s32r45-qspi";
 	pinctrl-names = "default";
 	pinctrl-0 = <&qspi_pins>;
 	status = "okay";
 
 	mx25uw51245g@0 {
 		spi-max-frequency = <133333333>;
-		nxp,spi-no-functional-reset;
 	};
 };
 
diff --git a/arch/arm64/boot/dts/freescale/s32r45.dtsi b/arch/arm64/boot/dts/freescale/s32r45.dtsi
index 5017cdc4dd4a..8ebddbe1659e 100644
--- a/arch/arm64/boot/dts/freescale/s32r45.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32r45.dtsi
@@ -9,7 +9,6 @@
  */
 
 #include "s32cc.dtsi"
-#include <dt-bindings/ddr-errata/s32-ddr-errata.h>
 #include <dt-bindings/clock/s32r45-scmi-clock.h>
 
 / {
@@ -21,8 +20,7 @@ aliases {
 
 	reserved-memory {
 		ddr_errata_reserved: ddr@85000000 {
-			reg = <0x0 DDR_ERRATA_REGION_BASE
-				   0x0 DDR_ERRATA_REGION_SIZE>; /* 4 KB */
+			reg = <0x0 0x85000000 0x0 0x1000>; /* 4 KB */
 			no-map;
 		};
 	};
@@ -128,9 +126,9 @@ can4: flexcan@44000000 {
 				     <GIC_SPI 194 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 195 IRQ_TYPE_LEVEL_HIGH>;
 			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
-			clocks = <&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
-				 <&clks S32GEN1_SCMI_CLK_FLEXCAN_REG>;
-			clock-names = "per", "ipg";
+			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
+				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
+			clock-names = "ipg", "per";
 			status = "disabled";
 		};
 
@@ -142,9 +140,9 @@ can5: flexcan@44004000 {
 				     <GIC_SPI 198 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 199 IRQ_TYPE_LEVEL_HIGH>;
 			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
-			clocks = <&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
-				 <&clks S32GEN1_SCMI_CLK_FLEXCAN_REG>;
-			clock-names = "per", "ipg";
+			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
+				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
+			clock-names = "ipg", "per";
 			status = "disabled";
 		};
 
@@ -156,9 +154,9 @@ can6: flexcan@44008000 {
 				     <GIC_SPI 202 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 203 IRQ_TYPE_LEVEL_HIGH>;
 			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
-			clocks = <&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
-				 <&clks S32GEN1_SCMI_CLK_FLEXCAN_REG>;
-			clock-names = "per", "ipg";
+			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
+				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
+			clock-names = "ipg", "per";
 			status = "disabled";
 		};
 
@@ -170,9 +168,9 @@ can7: flexcan@4400c000 {
 				     <GIC_SPI 206 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 207 IRQ_TYPE_LEVEL_HIGH>;
 			interrupt-names = "state", "berr", "mb_0-7", "mb_8-127";
-			clocks = <&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
-				 <&clks S32GEN1_SCMI_CLK_FLEXCAN_REG>;
-			clock-names = "per", "ipg";
+			clocks = <&clks S32CC_SCMI_CLK_FLEXCAN_REG>,
+				 <&clks S32CC_SCMI_CLK_FLEXCAN_CAN>;
+			clock-names = "ipg", "per";
 			status = "disabled";
 		};
 
@@ -188,6 +186,8 @@ gmac1: ethernet@44010000 {
 			rx-fifo-depth = <20480>;
 			phy-names = "gmac_xpcs";
 			phys = <&serdes1 PHY_TYPE_XPCS 0 0>;
+			snps,mtl-rx-config = <&mtl_rx_setup_gmac1>;
+			snps,mtl-tx-config = <&mtl_tx_setup_gmac1>;
 			clocks = <&clks S32R45_SCMI_CLK_GMAC1_AXI>,
 				 <&clks S32R45_SCMI_CLK_GMAC1_AXI>,
 				 <&clks S32R45_SCMI_CLK_GMAC1_TX_SGMII>,
@@ -205,6 +205,49 @@ gmac1: ethernet@44010000 {
 				      "rx_sgmii", "rx_rgmii",
 				      "rx_rmii", "rx_mii",
 				      "ptp_ref";
+
+			mtl_rx_setup_gmac1: rx-queues-config {
+				snps,rx-queues-to-use = <5>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				queue@0 {
+				};
+
+				queue@1 {
+				};
+
+				queue@2 {
+				};
+
+				queue@3 {
+				};
+
+				queue@4 {
+				};
+			};
+
+			mtl_tx_setup_gmac1: tx-queues-config {
+				snps,tx-queues-to-use = <5>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				queue@0 {
+				};
+
+				queue@1 {
+				};
+
+				queue@2 {
+				};
+
+				queue@3 {
+				};
+
+				queue@4 {
+				};
+			};
+
 			gmac1_mdio: mdio0 {
 				compatible = "snps,dwmac-mdio";
 				#address-cells = <1>;
diff --git a/drivers/usb/chipidea/ci_hdrc_imx.c b/drivers/usb/chipidea/ci_hdrc_imx.c
index 756592608b7a..9f24323b079e 100644
--- a/drivers/usb/chipidea/ci_hdrc_imx.c
+++ b/drivers/usb/chipidea/ci_hdrc_imx.c
@@ -85,7 +85,7 @@ static const struct of_device_id ci_hdrc_imx_dt_ids[] = {
 	{ .compatible = "fsl,imx6ul-usb", .data = &imx6ul_usb_data},
 	{ .compatible = "fsl,imx7d-usb", .data = &imx7d_usb_data},
 	{ .compatible = "fsl,imx7ulp-usb", .data = &imx7ulp_usb_data},
-	{ .compatible = "fsl,s32g-usb", .data = &s32g_usb_data},
+	{ .compatible = "nxp,s32g-usb", .data = &s32g_usb_data},
 	{ /* sentinel */ }
 };
 MODULE_DEVICE_TABLE(of, ci_hdrc_imx_dt_ids);
diff --git a/drivers/usb/chipidea/usbmisc_imx.c b/drivers/usb/chipidea/usbmisc_imx.c
index ab7d3089e0b1..81afe63f37f4 100644
--- a/drivers/usb/chipidea/usbmisc_imx.c
+++ b/drivers/usb/chipidea/usbmisc_imx.c
@@ -1273,11 +1273,11 @@ static const struct of_device_id usbmisc_imx_dt_ids[] = {
 		.data = &imx7ulp_usbmisc_ops,
 	},
 	{
-		.compatible = "fsl,s32g2-usbmisc",
+		.compatible = "nxp,s32g2-usbmisc",
 		.data = &s32g2_usbmisc_ops,
 	},
 	{
-		.compatible = "fsl,s32g3-usbmisc",
+		.compatible = "nxp,s32g3-usbmisc",
 		.data = &s32g3_usbmisc_ops,
 	},
 	{ /* sentinel */ }
diff --git a/include/dt-bindings/clock/s32cc-scmi-clock.h b/include/dt-bindings/clock/s32cc-scmi-clock.h
new file mode 100644
index 000000000000..14ec701dc2f2
--- /dev/null
+++ b/include/dt-bindings/clock/s32cc-scmi-clock.h
@@ -0,0 +1,85 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+/*
+ * Copyright 2020-2022 NXP
+ */
+#ifndef __DT_BINDINGS_SCMI_CLOCK_S32CC_H
+#define __DT_BINDINGS_SCMI_CLOCK_S32CC_H
+
+#define S32CC_SCMI_CLK_BASE_ID		0U
+#define S32CC_SCMI_CLK(N)			((N) + S32CC_SCMI_CLK_BASE_ID)
+#define S32CC_PLAT_SCMI_CLK(N)    ((N) + S32CC_SCMI_PLAT_CLK_BASE_ID)
+
+/* SERDES */
+#define S32CC_SCMI_CLK_SERDES_AXI		S32CC_SCMI_CLK(1)
+#define S32CC_SCMI_CLK_SERDES_AUX		S32CC_SCMI_CLK(2)
+#define S32CC_SCMI_CLK_SERDES_APB		S32CC_SCMI_CLK(3)
+#define S32CC_SCMI_CLK_SERDES_REF		S32CC_SCMI_CLK(4)
+#define S32CC_SCMI_CLK_SERDES_PAD_REF	S32CC_SCMI_CLK(5)
+/* FTM0 */
+#define S32CC_SCMI_CLK_FTM0_SYS			S32CC_SCMI_CLK(6)
+#define S32CC_SCMI_CLK_FTM0_EXT			S32CC_SCMI_CLK(7)
+/* FTM1 */
+#define S32CC_SCMI_CLK_FTM1_SYS			S32CC_SCMI_CLK(8)
+#define S32CC_SCMI_CLK_FTM1_EXT			S32CC_SCMI_CLK(9)
+/* FlexCAN */
+#define S32CC_SCMI_CLK_FLEXCAN_REG		S32CC_SCMI_CLK(10)
+#define S32CC_SCMI_CLK_FLEXCAN_SYS		S32CC_SCMI_CLK(11)
+#define S32CC_SCMI_CLK_FLEXCAN_CAN		S32CC_SCMI_CLK(12)
+#define S32CC_SCMI_CLK_FLEXCAN_TS		S32CC_SCMI_CLK(13)
+/* LINFlexD */
+#define S32CC_SCMI_CLK_LINFLEX_XBAR		S32CC_SCMI_CLK(14)
+#define S32CC_SCMI_CLK_LINFLEX_LIN		S32CC_SCMI_CLK(15)
+#define S32CC_SCMI_CLK_GMAC0_TS			S32CC_SCMI_CLK(16)
+/* GMAC0 - SGMII */
+#define S32CC_SCMI_CLK_GMAC0_RX_SGMII	S32CC_SCMI_CLK(17)
+#define S32CC_SCMI_CLK_GMAC0_TX_SGMII	S32CC_SCMI_CLK(18)
+/* GMAC0 - RGMII */
+#define S32CC_SCMI_CLK_GMAC0_RX_RGMII	S32CC_SCMI_CLK(19)
+#define S32CC_SCMI_CLK_GMAC0_TX_RGMII	S32CC_SCMI_CLK(20)
+/* GMAC0 - RMII */
+#define S32CC_SCMI_CLK_GMAC0_RX_RMII	S32CC_SCMI_CLK(21)
+#define S32CC_SCMI_CLK_GMAC0_TX_RMII	S32CC_SCMI_CLK(22)
+/* GMAC0 - MII */
+#define S32CC_SCMI_CLK_GMAC0_RX_MII		S32CC_SCMI_CLK(23)
+#define S32CC_SCMI_CLK_GMAC0_TX_MII		S32CC_SCMI_CLK(24)
+#define S32CC_SCMI_CLK_GMAC0_AXI		S32CC_SCMI_CLK(25)
+/* SPI */
+#define S32CC_SCMI_CLK_SPI_REG			S32CC_SCMI_CLK(26)
+#define S32CC_SCMI_CLK_SPI_MODULE		S32CC_SCMI_CLK(27)
+/* QSPI */
+#define S32CC_SCMI_CLK_QSPI_REG			S32CC_SCMI_CLK(28)
+#define S32CC_SCMI_CLK_QSPI_AHB			S32CC_SCMI_CLK(29)
+#define S32CC_SCMI_CLK_QSPI_FLASH2X		S32CC_SCMI_CLK(30)
+#define S32CC_SCMI_CLK_QSPI_FLASH1X		S32CC_SCMI_CLK(31)
+/* uSDHC */
+#define S32CC_SCMI_CLK_USDHC_AHB		S32CC_SCMI_CLK(32)
+#define S32CC_SCMI_CLK_USDHC_MODULE		S32CC_SCMI_CLK(33)
+#define S32CC_SCMI_CLK_USDHC_CORE		S32CC_SCMI_CLK(34)
+/* I2C */
+#define S32CC_SCMI_CLK_I2C_REG			S32CC_SCMI_CLK(41)
+#define S32CC_SCMI_CLK_I2C_MODULE		S32CC_SCMI_CLK(42)
+/* FCCU */
+#define S32CC_SCMI_CLK_FCCU_MODULE		S32CC_SCMI_CLK(53)
+#define S32CC_SCMI_CLK_FCCU_SAFE		S32CC_SCMI_CLK(54)
+/* RTC */
+#define S32CC_SCMI_CLK_RTC_REG			S32CC_SCMI_CLK(55)
+#define S32CC_SCMI_CLK_RTC_SIRC			S32CC_SCMI_CLK(56)
+#define S32CC_SCMI_CLK_RTC_FIRC			S32CC_SCMI_CLK(57)
+/* SWT */
+#define S32CC_SCMI_CLK_SWT_MODULE		S32CC_SCMI_CLK(58)
+#define S32CC_SCMI_CLK_SWT_COUNTER		S32CC_SCMI_CLK(59)
+/* STM */
+#define S32CC_SCMI_CLK_STM_MODULE		S32CC_SCMI_CLK(60)
+#define S32CC_SCMI_CLK_STM_REG			S32CC_SCMI_CLK(61)
+/* PIT */
+#define S32CC_SCMI_CLK_PIT_MODULE		S32CC_SCMI_CLK(62)
+#define S32CC_SCMI_CLK_PIT_REG			S32CC_SCMI_CLK(63)
+/* eDMA */
+#define S32CC_SCMI_CLK_EDMA_MODULE		S32CC_SCMI_CLK(64)
+#define S32CC_SCMI_CLK_EDMA_AHB			S32CC_SCMI_CLK(65)
+/* SAR-ADC */
+#define S32CC_SCMI_CLK_SAR_ADC_BUS		S32CC_SCMI_CLK(66)
+
+#define S32CC_SCMI_PLAT_CLK_BASE_ID		S32CC_SCMI_CLK(69)
+
+#endif /* __DT_BINDINGS_SCMI_CLOCK_S32CC_H */
diff --git a/include/dt-bindings/clock/s32g-scmi-clock.h b/include/dt-bindings/clock/s32g-scmi-clock.h
index de00e657a520..708b358e0cbc 100644
--- a/include/dt-bindings/clock/s32g-scmi-clock.h
+++ b/include/dt-bindings/clock/s32g-scmi-clock.h
@@ -5,61 +5,61 @@
 #ifndef __DT_BINDINGS_SCMI_CLOCK_S32G_H
 #define __DT_BINDINGS_SCMI_CLOCK_S32G_H
 
-#include <dt-bindings/clock/s32gen1-scmi-clock.h>
+#include <dt-bindings/clock/s32cc-scmi-clock.h>
 
 /* USB */
-#define S32G_SCMI_CLK_USB_MEM		S32GEN1_PLAT_SCMI_CLK(0)
-#define S32G_SCMI_CLK_USB_LOW		S32GEN1_PLAT_SCMI_CLK(1)
+#define S32G_SCMI_CLK_USB_MEM		S32CC_PLAT_SCMI_CLK(0)
+#define S32G_SCMI_CLK_USB_LOW		S32CC_PLAT_SCMI_CLK(1)
 
-#define S32G_SCMI_CLK_PFE_AXI		S32GEN1_PLAT_SCMI_CLK(2)
-#define S32G_SCMI_CLK_PFE_APB		S32GEN1_PLAT_SCMI_CLK(3)
-#define S32G_SCMI_CLK_PFE_PE		S32GEN1_PLAT_SCMI_CLK(4)
-#define S32G_SCMI_CLK_PFE_TS		S32GEN1_PLAT_SCMI_CLK(5)
+#define S32G_SCMI_CLK_PFE_AXI		S32CC_PLAT_SCMI_CLK(2)
+#define S32G_SCMI_CLK_PFE_APB		S32CC_PLAT_SCMI_CLK(3)
+#define S32G_SCMI_CLK_PFE_PE		S32CC_PLAT_SCMI_CLK(4)
+#define S32G_SCMI_CLK_PFE_TS		S32CC_PLAT_SCMI_CLK(5)
 
 /* PFE 0 */
 /* SGMII RX: PFE_MAC_0_RX_CLK -> SERDES_1_LANE_0_CDR_CLK */
-#define S32G_SCMI_CLK_PFE0_RX_SGMII		S32GEN1_PLAT_SCMI_CLK(6)
+#define S32G_SCMI_CLK_PFE0_RX_SGMII		S32CC_PLAT_SCMI_CLK(6)
 /* SGMII TX: PFE_MAC_0_TX_CLK -> SERDES_1_LANE_0_TX_CLK  */
-#define S32G_SCMI_CLK_PFE0_TX_SGMII		S32GEN1_PLAT_SCMI_CLK(7)
+#define S32G_SCMI_CLK_PFE0_TX_SGMII		S32CC_PLAT_SCMI_CLK(7)
 /* RGMII RX: PFE_MAC_0_RX_CLK -> PFE_MAC0_RX_CLK_I */
-#define S32G_SCMI_CLK_PFE0_RX_RGMII		S32GEN1_PLAT_SCMI_CLK(8)
+#define S32G_SCMI_CLK_PFE0_RX_RGMII		S32CC_PLAT_SCMI_CLK(8)
 /* RGMII TX: PFE_MAC_0_TX_CLK -> PERIPH_PLL_PHI5_CLK */
-#define S32G_SCMI_CLK_PFE0_TX_RGMII		S32GEN1_PLAT_SCMI_CLK(9)
-#define S32G_SCMI_CLK_PFE0_RX_RMII		S32GEN1_PLAT_SCMI_CLK(10)
-#define S32G_SCMI_CLK_PFE0_TX_RMII		S32GEN1_PLAT_SCMI_CLK(11)
-#define S32G_SCMI_CLK_PFE0_RX_MII		S32GEN1_PLAT_SCMI_CLK(12)
-#define S32G_SCMI_CLK_PFE0_TX_MII		S32GEN1_PLAT_SCMI_CLK(13)
+#define S32G_SCMI_CLK_PFE0_TX_RGMII		S32CC_PLAT_SCMI_CLK(9)
+#define S32G_SCMI_CLK_PFE0_RX_RMII		S32CC_PLAT_SCMI_CLK(10)
+#define S32G_SCMI_CLK_PFE0_TX_RMII		S32CC_PLAT_SCMI_CLK(11)
+#define S32G_SCMI_CLK_PFE0_RX_MII		S32CC_PLAT_SCMI_CLK(12)
+#define S32G_SCMI_CLK_PFE0_TX_MII		S32CC_PLAT_SCMI_CLK(13)
 
 /* PFE 1 */
 /* SGMII RX: PFE_MAC_1_RX_CLK -> SERDES_1_LANE_1_CDR_CLK */
-#define S32G_SCMI_CLK_PFE1_RX_SGMII		S32GEN1_PLAT_SCMI_CLK(14)
+#define S32G_SCMI_CLK_PFE1_RX_SGMII		S32CC_PLAT_SCMI_CLK(14)
 /* SGMII TX: PFE_MAC_1_TX_CLK -> SERDES_1_LANE_1_TX_CLK  */
-#define S32G_SCMI_CLK_PFE1_TX_SGMII		S32GEN1_PLAT_SCMI_CLK(15)
+#define S32G_SCMI_CLK_PFE1_TX_SGMII		S32CC_PLAT_SCMI_CLK(15)
 /* RGMII RX: PFE_MAC_1_RX_CLK ->  PFE_MAC1_RX_CLK_I */
-#define S32G_SCMI_CLK_PFE1_RX_RGMII		S32GEN1_PLAT_SCMI_CLK(16)
+#define S32G_SCMI_CLK_PFE1_RX_RGMII		S32CC_PLAT_SCMI_CLK(16)
 /* RGMII TX: PFE_MAC_1_TX_CLK ->  PERIPH_PLL_PHI5_CLK */
-#define S32G_SCMI_CLK_PFE1_TX_RGMII		S32GEN1_PLAT_SCMI_CLK(17)
-#define S32G_SCMI_CLK_PFE1_RX_RMII		S32GEN1_PLAT_SCMI_CLK(18)
-#define S32G_SCMI_CLK_PFE1_TX_RMII		S32GEN1_PLAT_SCMI_CLK(19)
-#define S32G_SCMI_CLK_PFE1_RX_MII		S32GEN1_PLAT_SCMI_CLK(20)
-#define S32G_SCMI_CLK_PFE1_TX_MII		S32GEN1_PLAT_SCMI_CLK(21)
+#define S32G_SCMI_CLK_PFE1_TX_RGMII		S32CC_PLAT_SCMI_CLK(17)
+#define S32G_SCMI_CLK_PFE1_RX_RMII		S32CC_PLAT_SCMI_CLK(18)
+#define S32G_SCMI_CLK_PFE1_TX_RMII		S32CC_PLAT_SCMI_CLK(19)
+#define S32G_SCMI_CLK_PFE1_RX_MII		S32CC_PLAT_SCMI_CLK(20)
+#define S32G_SCMI_CLK_PFE1_TX_MII		S32CC_PLAT_SCMI_CLK(21)
 
 /* PFE 2 */
 /* SGMII RX: PFE_MAC_2_RX_CLK -> SERDES_0_LANE_1_CDR_CLK */
-#define S32G_SCMI_CLK_PFE2_RX_SGMII		S32GEN1_PLAT_SCMI_CLK(22)
+#define S32G_SCMI_CLK_PFE2_RX_SGMII		S32CC_PLAT_SCMI_CLK(22)
 /* SGMII TX: PFE_MAC_2_TX_CLK -> SERDES_0_LANE_1_TX_CLK  */
-#define S32G_SCMI_CLK_PFE2_TX_SGMII		S32GEN1_PLAT_SCMI_CLK(23)
+#define S32G_SCMI_CLK_PFE2_TX_SGMII		S32CC_PLAT_SCMI_CLK(23)
 /* RGMII RX: PFE_MAC_2_RX_CLK ->  PFE_MAC2_RX_CLK_I */
-#define S32G_SCMI_CLK_PFE2_RX_RGMII		S32GEN1_PLAT_SCMI_CLK(24)
+#define S32G_SCMI_CLK_PFE2_RX_RGMII		S32CC_PLAT_SCMI_CLK(24)
 /* RGMII TX: PFE_MAC_2_TX_CLK ->  PERIPH_PLL_PHI5_CLK */
-#define S32G_SCMI_CLK_PFE2_TX_RGMII		S32GEN1_PLAT_SCMI_CLK(25)
-#define S32G_SCMI_CLK_PFE2_RX_RMII		S32GEN1_PLAT_SCMI_CLK(26)
-#define S32G_SCMI_CLK_PFE2_TX_RMII		S32GEN1_PLAT_SCMI_CLK(27)
-#define S32G_SCMI_CLK_PFE2_RX_MII		S32GEN1_PLAT_SCMI_CLK(28)
-#define S32G_SCMI_CLK_PFE2_TX_MII		S32GEN1_PLAT_SCMI_CLK(29)
+#define S32G_SCMI_CLK_PFE2_TX_RGMII		S32CC_PLAT_SCMI_CLK(25)
+#define S32G_SCMI_CLK_PFE2_RX_RMII		S32CC_PLAT_SCMI_CLK(26)
+#define S32G_SCMI_CLK_PFE2_TX_RMII		S32CC_PLAT_SCMI_CLK(27)
+#define S32G_SCMI_CLK_PFE2_RX_MII		S32CC_PLAT_SCMI_CLK(28)
+#define S32G_SCMI_CLK_PFE2_TX_MII		S32CC_PLAT_SCMI_CLK(29)
 
 /* LLCE */
-#define S32G_SCMI_CLK_LLCE_SYS		S32GEN1_PLAT_SCMI_CLK(30)
-#define S32G_SCMI_CLK_LLCE_CAN_PE		S32GEN1_PLAT_SCMI_CLK(31)
+#define S32G_SCMI_CLK_LLCE_SYS			S32CC_PLAT_SCMI_CLK(30)
+#define S32G_SCMI_CLK_LLCE_CAN_PE		S32CC_PLAT_SCMI_CLK(31)
 
 #endif
diff --git a/include/dt-bindings/memory/s32cc-siul2.h b/include/dt-bindings/memory/s32cc-siul2.h
new file mode 100644
index 000000000000..fcc6b3fd9c5f
--- /dev/null
+++ b/include/dt-bindings/memory/s32cc-siul2.h
@@ -0,0 +1,25 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later OR BSD-3-Clause */
+/*
+ * Copyright 2022 NXP
+ */
+
+#ifndef __DT_BINDINGS_S32CC_SIUL2_MEMORY_H__
+#define __DT_BINDINGS_S32CC_SIUL2_MEMORY_H__
+
+#define MIDR_SIUL2_0		(0)
+#define MIDR_SIUL2_1		(1)
+#define MSCRS_SIUL2_0		(2)
+#define MSCRS_SIUL2_1		(3)
+#define MSCRS_SIUL2_1_0		(4)
+#define MSCRS_SIUL2_1_1		(5)
+#define IMCRS_SIUL2_0		(6)
+#define IMCRS_SIUL2_1_0		(7)
+#define IMCRS_SIUL2_1_EIRQS	(8)
+#define IMCRS_SIUL2_1_1		(9)
+#define OPADS_SIUL2_0		(10)
+#define OPADS_SIUL2_1		(11)
+#define IPADS_SIUL2_0		(12)
+#define IPADS_SIUL2_1		(13)
+#define EIRQS_SIUL2_1		(14)
+
+#endif /*  __DT_BINDINGS_S32CC_SIUL2_MEMORY_H__ */
diff --git a/include/dt-bindings/misc/s32cc-fccu.h b/include/dt-bindings/misc/s32cc-fccu.h
new file mode 100644
index 000000000000..18084d01f511
--- /dev/null
+++ b/include/dt-bindings/misc/s32cc-fccu.h
@@ -0,0 +1,14 @@
+/* SPDX-License-Identifier: GPL-2.0-only OR BSD-2-Clause */
+/*
+ * Copyright 2021-2022 NXP
+ */
+#ifndef __DT_BINDINGS_S32CC_FCCU_H
+#define __DT_BINDINGS_S32CC_FCCU_H
+
+#define S32CC_FCCU_REACTION_NONE		0
+#define S32CC_FCCU_REACTION_ALARM		(1 << 1)
+#define S32CC_FCCU_REACTION_FUNC_RESET		(1 << 2)
+#define S32CC_FCCU_REACTION_NMI			(1 << 3)
+#define S32CC_FCCU_REACTION_EOUT		(1 << 4)
+
+#endif
diff --git a/include/dt-bindings/nvmem/s32cc-siul2-nvmem.h b/include/dt-bindings/nvmem/s32cc-siul2-nvmem.h
new file mode 100644
index 000000000000..7bc8ea734d6d
--- /dev/null
+++ b/include/dt-bindings/nvmem/s32cc-siul2-nvmem.h
@@ -0,0 +1,13 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright 2021-2022 NXP
+ */
+
+/* NVRAM offset and size for SIUL2_0 module */
+#define SOC_REVISION_OFFSET		(0x0)
+#define PCIE_VARIANT_OFFSET		(0x4)
+
+/* NVRAM offset and size for SIUL2_1 module */
+#define SERDES_PRESENCE_OFFSET	(0x0)
+
+#define NVRAM_CELL_SIZE			(0x4)
diff --git a/include/dt-bindings/perf/s32cc-scmi-perf.h b/include/dt-bindings/perf/s32cc-scmi-perf.h
new file mode 100644
index 000000000000..6759a9f3e950
--- /dev/null
+++ b/include/dt-bindings/perf/s32cc-scmi-perf.h
@@ -0,0 +1,15 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+/*
+ * Copyright 2022 NXP
+ */
+#ifndef __DT_BINDINGS_SCMI_PERF_S32CC_H
+#define __DT_BINDINGS_SCMI_PERF_S32CC_H
+
+#define S32CC_SCMI_PERF_BASE_ID		0U
+#define S32CC_SCMI_PERF(N)		((N) + S32CC_SCMI_PERF_BASE_ID)
+
+#define S32CC_SCMI_PERF_A53		S32CC_SCMI_PERF(0)
+
+#define S32CC_SCMI_PERF_MAX_ID		S32CC_SCMI_PERF(1)
+
+#endif
diff --git a/include/dt-bindings/phy/phy-s32cc-serdes.h b/include/dt-bindings/phy/phy-s32cc-serdes.h
new file mode 100644
index 000000000000..59aa56ada588
--- /dev/null
+++ b/include/dt-bindings/phy/phy-s32cc-serdes.h
@@ -0,0 +1,14 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+/*
+ * Copyright 2021 NXP
+ */
+#ifndef __DT_BINDINGS_PHY_S32CC_SERDES_H
+#define __DT_BINDINGS_PHY_S32CC_SERDES_H
+
+/* S32CC Serdes Subsystem Mode Selection */
+#define PCIE_GEN3X2_MODE	0
+#define PCIE_XPCS0_MODE		1
+#define PCIE_XPCS1_MODE		2
+#define XPCSX2_MODE		3
+
+#endif
diff --git a/include/dt-bindings/reset/s32cc-scmi-reset.h b/include/dt-bindings/reset/s32cc-scmi-reset.h
new file mode 100644
index 000000000000..45bd87a53895
--- /dev/null
+++ b/include/dt-bindings/reset/s32cc-scmi-reset.h
@@ -0,0 +1,33 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+/*
+ * Copyright 2021 NXP
+ */
+#ifndef __DT_BINDINGS_S32CC_SCMI_RESET_H
+#define __DT_BINDINGS_S32CC_SCMI_RESET_H
+
+#define S32CC_SCMI_RST_BASE_ID	0U
+#define S32CC_SCMI_RST(N)		((N) + S32CC_SCMI_RST_BASE_ID)
+#define S32CC_PLAT_SCMI_RST(N)	((N) + S32CC_SCMI_PLAT_RST_BASE_ID)
+
+#define S32CC_SCMI_RST_PART0		S32CC_SCMI_RST(0)
+#define S32CC_SCMI_RST_PART1		S32CC_SCMI_RST(1)
+#define S32CC_SCMI_RST_PART2		S32CC_SCMI_RST(2)
+#define S32CC_SCMI_RST_PART3		S32CC_SCMI_RST(3)
+#define S32CC_SCMI_RST_CM7_0		S32CC_SCMI_RST(4)
+#define S32CC_SCMI_RST_CM7_1		S32CC_SCMI_RST(5)
+#define S32CC_SCMI_RST_CM7_2		S32CC_SCMI_RST(6)
+#define S32CC_SCMI_RST_DDR			S32CC_SCMI_RST(7)
+#define S32CC_SCMI_RST_PCIE0		S32CC_SCMI_RST(8)
+#define S32CC_SCMI_RST_SERDES0		S32CC_SCMI_RST(9)
+#define S32CC_SCMI_RST_PCIE1		S32CC_SCMI_RST(10)
+#define S32CC_SCMI_RST_SERDES1		S32CC_SCMI_RST(11)
+#define S32CC_SCMI_RST_A53_0		S32CC_SCMI_RST(12)
+#define S32CC_SCMI_RST_A53_1		S32CC_SCMI_RST(13)
+#define S32CC_SCMI_RST_A53_2		S32CC_SCMI_RST(14)
+#define S32CC_SCMI_RST_A53_3		S32CC_SCMI_RST(15)
+
+#define S32CC_SCMI_PLAT_RST_BASE_ID	S32CC_SCMI_RST(16)
+#define S32CC_SCMI_RST_MAX_ID		S32CC_PLAT_SCMI_RST(7)
+
+#endif
+
diff --git a/include/dt-bindings/rtc/s32cc-rtc.h b/include/dt-bindings/rtc/s32cc-rtc.h
new file mode 100644
index 000000000000..29c00c50f971
--- /dev/null
+++ b/include/dt-bindings/rtc/s32cc-rtc.h
@@ -0,0 +1,13 @@
+/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
+/*
+ * Copyright 2022 NXP
+ */
+
+#ifndef _DT_BINDINGS_S32CC_RTC_H
+#define _DT_BINDINGS_S32CC_RTC_H
+
+/* Clock sources - usable with RTCC_CLKSEL */
+#define S32CC_RTC_SOURCE_SIRC	0x0
+#define S32CC_RTC_SOURCE_FIRC	0x2
+
+#endif
-- 
2.25.1

