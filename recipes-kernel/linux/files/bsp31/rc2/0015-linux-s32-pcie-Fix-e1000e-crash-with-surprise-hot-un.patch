From 354f5296fd73b7cd8a5b4dfdb16230579ead3e8c Mon Sep 17 00:00:00 2001
From: Ciprian Marian Costea <ciprianmarian.costea@nxp.com>
Date: Tue, 28 Sep 2021 12:44:53 +0300
Subject: [PATCH 15/20] linux-s32: pcie: Fix e1000e crash with surprise
 hot-unplug

When 'e1000e_release_hw_control' is called as part of hot unplug
support and the e1000e Endpoint is removed, the Linux crashes.

Add a check for 'pci_channel_offline' before calling the above
mentioned method.

Issue: ALB-7702
Upstream-Status: Pending 

Signed-off-by: Ciprian Marian Costea <ciprianmarian.costea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/intel/e1000e/netdev.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/intel/e1000e/netdev.c b/drivers/net/ethernet/intel/e1000e/netdev.c
index a0948002ddf8..639fdb41176a 100644
--- a/drivers/net/ethernet/intel/e1000e/netdev.c
+++ b/drivers/net/ethernet/intel/e1000e/netdev.c
@@ -1,5 +1,8 @@
 // SPDX-License-Identifier: GPL-2.0
-/* Copyright(c) 1999 - 2018 Intel Corporation. */
+/*
+ * Copyright(c) 1999 - 2018 Intel Corporation.
+ * Copyright 2021 NXP
+ */
 
 #define pr_fmt(fmt) KBUILD_MODNAME ": " fmt
 
@@ -7707,7 +7710,8 @@ static void e1000_remove(struct pci_dev *pdev)
 	/* Release control of h/w to f/w.  If f/w is AMT enabled, this
 	 * would have already happened in close and is redundant.
 	 */
-	e1000e_release_hw_control(adapter);
+	if (!pci_channel_offline(pdev))
+		e1000e_release_hw_control(adapter);
 
 	e1000e_reset_interrupt_capability(adapter);
 	kfree(adapter->tx_ring);
-- 
2.17.1

