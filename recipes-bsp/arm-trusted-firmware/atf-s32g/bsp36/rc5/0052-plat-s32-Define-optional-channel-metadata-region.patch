From 687aea19b22da5cfd2f18ee5834c84b46070d01b Mon Sep 17 00:00:00 2001
From: Andra-Teodora Ilie <andra.ilie@nxp.com>
Date: Wed, 15 Feb 2023 14:33:27 +0200
Subject: [PATCH 52/54] plat: s32: Define optional channel metadata region

Issue: ALB-9436
Upstream-Status: Pending 

Signed-off-by: Andra-Teodora Ilie <andra.ilie@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/include/s32_platform_def.h  | 19 ++++++++++++--
 plat/nxp/s32/include/s32_scmi_metadata.h | 32 ++++++++++++++++++++++++
 plat/nxp/s32/s32_scp_scmi.c              |  6 +++++
 3 files changed, 55 insertions(+), 2 deletions(-)
 create mode 100644 plat/nxp/s32/include/s32_scmi_metadata.h

diff --git a/plat/nxp/s32/include/s32_platform_def.h b/plat/nxp/s32/include/s32_platform_def.h
index 7d9fdb334..8044e51df 100644
--- a/plat/nxp/s32/include/s32_platform_def.h
+++ b/plat/nxp/s32/include/s32_platform_def.h
@@ -196,14 +196,29 @@
  * | RX channel for |
  * | notifications  | S32_SCP_CH_MEM_SIZE
  * ------------------
+ * | Metadata for   |
+ * | each TX        | cores * S32_SCP_CH_META_SIZE
+ * | mailbox        |
+ * ------------------
  */
 
 /* Placed at 5MB offset to avoid overlaps, as some drivers require
  * reserved areas at the beginning of the SRAM memory.
  */
-#define S32_SCP_SCMI_MEM	(0x34500000U)
-#define S32_SCP_CH_MEM_SIZE	(128)
+#define S32_SCP_SCMI_MEM		(0x34500000U)
+#define S32_SCP_CH_MEM_SIZE		(128)
 #define S32_SCP_SCMI_MEM_SIZE	(S32_SCP_CH_MEM_SIZE * PLATFORM_CORE_COUNT)
 
+/*
+ * Metadata memory region is placed after the actual mailboxes
+ */
+#define S32_SCP_SCMI_META_MEM		(S32_SCP_SCMI_MEM + S32_SCP_SCMI_MEM_SIZE + \
+						S32_SCP_CH_MEM_SIZE)
+#if (SCMI_LOGGER == 1)
+#define S32_SCP_CH_META_SIZE		(128)
+#else
+#define S32_SCP_CH_META_SIZE		(0)
+#endif
+
 #endif /* S32_PLATFORM_H */
 
diff --git a/plat/nxp/s32/include/s32_scmi_metadata.h b/plat/nxp/s32/include/s32_scmi_metadata.h
new file mode 100644
index 000000000..dd8be38a6
--- /dev/null
+++ b/plat/nxp/s32/include/s32_scmi_metadata.h
@@ -0,0 +1,32 @@
+/*
+ * Copyright 2023 NXP
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+#ifndef S32_SCMI_METADATA_H
+#define S32_SCMI_METADATA_H
+
+#include <inttypes.h>
+
+/**
+ * Describes the layout of a metadata memory region:
+ *  -> timestamps:
+ *	TS_AGENT_REQ_TX: the moment when the agent has issued the message
+ *	TS_PLAT_REQ_RX: the moment when the platform has started message processing
+ *	TS_PLAT_RSP_TX: the moment when the platform filled the reply
+ *	TS_AGENT_RSP_RX: the moment when the agent received the reply
+ */
+
+enum scmi_log_timestamps {
+	TS_AGENT_REQ_TX,
+	TS_PLAT_REQ_RX,
+	TS_PLAT_RSP_TX,
+	TS_AGENT_RSP_RX,
+	TS_COUNT
+};
+
+struct s32_scmi_metadata {
+	uint32_t timestamps[TS_COUNT];
+};
+
+#endif /* S32_SCMI_METADATA_H */
diff --git a/plat/nxp/s32/s32_scp_scmi.c b/plat/nxp/s32/s32_scp_scmi.c
index 341048548..891aa436a 100644
--- a/plat/nxp/s32/s32_scp_scmi.c
+++ b/plat/nxp/s32/s32_scp_scmi.c
@@ -88,6 +88,11 @@ static uintptr_t get_mb_addr(uint32_t core)
 	return S32_SCP_SCMI_MEM + core * S32_SCP_CH_MEM_SIZE;
 }
 
+static uintptr_t get_md_addr(uint32_t core)
+{
+	return S32_SCP_SCMI_META_MEM + core * S32_SCP_CH_META_SIZE;
+}
+
 /* RX mailbox is placed right after tx mailboxes */
 static uintptr_t get_rx_mb_addr(void)
 {
@@ -157,6 +162,7 @@ void scp_scmi_init(bool request_irq)
 		s32_scmi_plat_info[i] = (scmi_channel_plat_info_t) {
 			.scmi_mbx_mem = get_mb_addr(i),
 			.scmi_mbx_size = S32_SCP_CH_MEM_SIZE,
+			.scmi_md_mem = get_md_addr(i),
 			.db_reg_addr = MSCM_BASE_ADDR,
 			.db_preserve_mask = 0xfffffffe,
 			.db_modify_mask = 0x1,
-- 
2.25.1

