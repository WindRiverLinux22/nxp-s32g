From d2ae6db9eba62be40ff06b530c8f548be7275fe6 Mon Sep 17 00:00:00 2001
From: Andrei Cherechesu <andrei.cherechesu@nxp.com>
Date: Thu, 2 Mar 2023 13:51:06 +0200
Subject: [PATCH 45/54] Revert "s32cc: clocks: early enable adc clock"

This reverts commit 12577c365bc388b995058d4354ec502e0ba7d6d9.

The ADC support in ATF is deleted as it's no longer needed for
identifying the RDB revision to apply a DDR fixup.

Issue: ALB-9722
Upstream-Status: Pending 

Signed-off-by: Andrei Cherechesu <andrei.cherechesu@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32/clk/early_clocks.c            | 21 ++----------
 .../drivers/nxp/s32/clk/s32gen1_clk_funcs.h   |  4 +--
 .../dt-bindings/clock/s32gen1-clock-freq.h    |  4 +--
 .../s32g399ardb3/s32g399ardb3_ddr_fixup.c     | 34 -------------------
 4 files changed, 5 insertions(+), 58 deletions(-)

diff --git a/drivers/nxp/s32/clk/early_clocks.c b/drivers/nxp/s32/clk/early_clocks.c
index e4446970e..c2c7a1200 100644
--- a/drivers/nxp/s32/clk/early_clocks.c
+++ b/drivers/nxp/s32/clk/early_clocks.c
@@ -23,8 +23,6 @@
 #define ARM_DFS_BASE_ADDR		S32_DFS_ADDR(S32_CORE_DFS)
 #define PERIPH_DFS_BASE_ADDR	S32_DFS_ADDR(S32_PERIPH_DFS)
 
-#pragma weak enable_board_early_clocks
-
 static struct s32gen1_clk_priv s32_priv = {
 	.accelpll = (void *)ACCEL_PLL_BASE_ADDR,
 	.armdfs = (void *)ARM_DFS_BASE_ADDR,
@@ -86,16 +84,6 @@ static struct clk ddr = CLK_INIT(S32GEN1_CLK_DDR);
 
 static struct siul2_freq_mapping early_freqs;
 
-int enable_board_early_clocks(void)
-{
-	return 0;
-}
-
-inline struct clk_driver *s32gen1_get_early_clk_driver(void)
-{
-	return &fake_clk_dev;
-}
-
 static int switch_xbar_to_firc(void)
 {
 	int ret;
@@ -316,11 +304,8 @@ int s32_plat_clock_init(bool skip_ddr_clk)
 			return ret;
 	}
 
-	if (!skip_ddr_clk) {
-		ret = s32_enable_ddr_clock();
-		if (ret)
-			return ret;
-	}
+	if (!skip_ddr_clk)
+		return s32_enable_ddr_clock();
 
-	return enable_board_early_clocks();
+	return 0;
 }
diff --git a/include/drivers/nxp/s32/clk/s32gen1_clk_funcs.h b/include/drivers/nxp/s32/clk/s32gen1_clk_funcs.h
index 529797b9c..7f04f6ef1 100644
--- a/include/drivers/nxp/s32/clk/s32gen1_clk_funcs.h
+++ b/include/drivers/nxp/s32/clk/s32gen1_clk_funcs.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2020-2022 NXP
+ * Copyright 2020-2023 NXP
  */
 #ifndef S32GEN1_CLK_FUNCS_H
 #define S32GEN1_CLK_FUNCS_H
@@ -48,6 +48,4 @@ int cc_compound_clk_get_pid(uint32_t id, uint32_t *parent_id);
 
 int s32gen1_get_early_clks_freqs(struct siul2_freq_mapping *mapping);
 
-extern struct clk_driver *s32gen1_get_early_clk_driver(void);
-
 #endif /* S32GEN1_CLK_FUNCS_H */
diff --git a/include/dt-bindings/clock/s32gen1-clock-freq.h b/include/dt-bindings/clock/s32gen1-clock-freq.h
index 23115dec3..3228ef5ae 100644
--- a/include/dt-bindings/clock/s32gen1-clock-freq.h
+++ b/include/dt-bindings/clock/s32gen1-clock-freq.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2020-2022 NXP
+ * Copyright 2020-2023 NXP
  */
 #ifndef S32GEN1_CLOCK_FREQ_H
 #define S32GEN1_CLOCK_FREQ_H
@@ -11,8 +11,6 @@
 #define S32GEN1_PERIPH_PLL_VCO_FREQ		(2000 * MHZ)
 #define S32GEN1_FXOSC_FREQ			(40 * MHZ)
 #define S32GEN1_FIRC_FREQ			(48 * MHZ)
-#define S32GEN1_PERIPH_PLL_PHI1_FREQ		(80 * MHZ)
-#define S32GEN1_PER_FREQ			(80 * MHZ)
 #define S32GEN1_LIN_BAUD_CLK_FREQ		(125 * MHZ)
 #define S32GEN1_SDHC_CLK_FREQ			(400 * MHZ)
 #define S32GEN1_DDR_PLL_VCO_FREQ		(1600 * MHZ)
diff --git a/plat/nxp/s32/s32g/s32g3/s32g399ardb3/s32g399ardb3_ddr_fixup.c b/plat/nxp/s32/s32g/s32g3/s32g399ardb3/s32g399ardb3_ddr_fixup.c
index 3c2072354..587480286 100644
--- a/plat/nxp/s32/s32g/s32g3/s32g399ardb3/s32g399ardb3_ddr_fixup.c
+++ b/plat/nxp/s32/s32g/s32g3/s32g399ardb3/s32g399ardb3_ddr_fixup.c
@@ -3,14 +3,10 @@
  * Copyright 2022 NXP
  */
 #include <stdint.h>
-#include <clk/clk.h>
-#include <clk/s32gen1_clk_funcs.h>
 #include <common/debug.h>
 #include <common/fdt_wrappers.h>
 #include <drivers/nxp/s32/adc/s32_adc.h>
 #include "ddr_init.h"
-#include <dt-bindings/clock/s32gen1-clock-freq.h>
-#include <dt-bindings/clock/s32gen1-clock.h>
 #include <lib/libc/errno.h>
 #include <libfdt.h>
 #include "s32_dt.h"
@@ -135,33 +131,3 @@ int ddr_config_fixup(void)
 
 	return 0;
 }
-
-int enable_board_early_clocks(void)
-{
-	struct clk periph_pll_phi1 = (struct clk) {
-		.id = (S32GEN1_CLK_PERIPH_PLL_PHI1),
-		.drv = s32gen1_get_early_clk_driver()};
-	struct clk mc_cgm0_mux3 = (struct clk) {
-		.id = (S32GEN1_CLK_MC_CGM0_MUX3),
-		.drv = s32gen1_get_early_clk_driver()};
-	struct clk per = (struct clk) {
-		.id = (S32GEN1_CLK_PER),
-		.drv = s32gen1_get_early_clk_driver()};
-	unsigned long rate;
-	int ret;
-
-	ret = s32gen1_set_parent(&mc_cgm0_mux3, &periph_pll_phi1);
-	if (ret)
-		return ret;
-
-	rate = s32gen1_set_rate(&periph_pll_phi1,
-				S32GEN1_PERIPH_PLL_PHI1_FREQ);
-	if (rate != S32GEN1_PERIPH_PLL_PHI1_FREQ)
-		return -EINVAL;
-
-	rate = s32gen1_set_rate(&per, S32GEN1_PER_FREQ);
-	if (rate != S32GEN1_PER_FREQ)
-		return -EINVAL;
-
-	return s32gen1_enable(&per, 1);
-}
-- 
2.25.1

