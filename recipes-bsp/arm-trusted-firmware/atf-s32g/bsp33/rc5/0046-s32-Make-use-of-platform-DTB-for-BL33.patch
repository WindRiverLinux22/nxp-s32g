From 6370d4db739095fd070a7c403db389a2f8c80841 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Mon, 16 May 2022 12:11:32 +0300
Subject: [PATCH 46/50] s32: Make use of platform DTB for BL33

Reuse ATF's dtb for BL33, but copied to a different address
due to security concerns.

Issue: ALB-8797
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/include/s32_bl_common.h    |  5 +++++
 plat/nxp/s32/include/s32_platform_def.h |  2 +-
 plat/nxp/s32/s32_bl2_el3.c              | 15 ++++++++-------
 plat/nxp/s32/s32_bl31.c                 |  2 +-
 4 files changed, 15 insertions(+), 9 deletions(-)

diff --git a/plat/nxp/s32/include/s32_bl_common.h b/plat/nxp/s32/include/s32_bl_common.h
index e121f4b46..c22a77a61 100644
--- a/plat/nxp/s32/include/s32_bl_common.h
+++ b/plat/nxp/s32/include/s32_bl_common.h
@@ -61,6 +61,11 @@ static inline uintptr_t get_bl2_dtb_base(void)
 	return BL2_BASE - dtb_size;
 }
 
+static inline uintptr_t get_bl2_dtb_size(void)
+{
+	return dtb_size;
+}
+
 static inline uintptr_t get_fip_hdr_base(void)
 {
 	return get_bl2_dtb_base() - fip_hdr_size;
diff --git a/plat/nxp/s32/include/s32_platform_def.h b/plat/nxp/s32/include/s32_platform_def.h
index 79d74e5ad..09a11bc4d 100644
--- a/plat/nxp/s32/include/s32_platform_def.h
+++ b/plat/nxp/s32/include/s32_platform_def.h
@@ -107,7 +107,7 @@
 /* U-Boot: CONFIG_SYS_TEXT_BASE  */
 #define BL33_ENTRYPOINT		    (BL33_BASE + 0xa0000)
 #define BL33_DTB		    (BL33_ENTRYPOINT - BL33_MAX_DTB_SIZE)
-#define S32_BL33_IMAGE_BASE	    (BL33_DTB)
+#define S32_BL33_IMAGE_BASE	    (BL33_ENTRYPOINT)
 #define S32_BL33_LIMIT	        (S32_DDR0_END)
 
 /* Protected zone in DDR - we'll deploy BL31 there. Choose the top of the first
diff --git a/plat/nxp/s32/s32_bl2_el3.c b/plat/nxp/s32/s32_bl2_el3.c
index b616542fc..8b20ba9f6 100644
--- a/plat/nxp/s32/s32_bl2_el3.c
+++ b/plat/nxp/s32/s32_bl2_el3.c
@@ -210,7 +210,7 @@ static mmap_region_t s32_mmap[] = {
 	MAP_REGION2(S32_BL32_BASE, S32_BL32_BASE,
 			MMU_ROUND_UP_TO_PAGE(S32_BL32_SIZE),
 			MT_MEMORY | MT_RW, PAGE_SIZE),
-	MAP_REGION2(S32_BL33_IMAGE_BASE, S32_BL33_IMAGE_BASE,
+	MAP_REGION2(BL33_DTB, BL33_DTB,
 			MMU_ROUND_UP_TO_PAGE(S32_BL33_IMAGE_SIZE),
 			MT_MEMORY | MT_RW, PAGE_SIZE),
 	MAP_REGION_FLAT(S32_PMEM_START, S32_PMEM_LEN,
@@ -523,14 +523,15 @@ int bl2_plat_handle_post_image_load(unsigned int image_id)
 			    BL33_ENTRYPOINT, magic);
 		}
 
-		magic = mmio_read_32(BL33_DTB);
-		if (magic != BL33_DTB_MAGIC) {
-			printf(
-			    "Error: Instruction at BL33_DTB(0x%x) is 0x%x, which is not the expected 0x%x!\n",
-			    BL33_DTB, magic, BL33_DTB_MAGIC);
-			return -EINVAL;
+		if (get_bl2_dtb_size() > BL33_MAX_DTB_SIZE) {
+			ERROR("The DTB exceeds max BL31 DTB size: 0x%x\n",
+			      BL33_MAX_DTB_SIZE);
+			return -EIO;
 		}
 
+		memcpy((void *)BL33_DTB, (void *)get_bl2_dtb_base(),
+		       get_bl2_dtb_size());
+
 		ret = ft_fixups((void *)BL33_DTB);
 		if (ret)
 			return ret;
diff --git a/plat/nxp/s32/s32_bl31.c b/plat/nxp/s32/s32_bl31.c
index 7fc52371c..56fbcfa4e 100644
--- a/plat/nxp/s32/s32_bl31.c
+++ b/plat/nxp/s32/s32_bl31.c
@@ -61,7 +61,7 @@ static const mmap_region_t s32_mmap[] = {
 		    MMU_ROUND_UP_TO_4K(BL31SRAM_SIZE),
 		    MT_MEMORY | MT_RW, PAGE_SIZE),
 #endif
-	MAP_REGION2(S32_BL33_IMAGE_BASE, S32_BL33_IMAGE_BASE,
+	MAP_REGION2(BL33_DTB, BL33_DTB,
 			MMU_ROUND_UP_TO_4K(S32_BL33_IMAGE_SIZE),
 			MT_MEMORY | MT_RW, PAGE_SIZE),
 	MAP_REGION_FLAT(S32_PMEM_START, S32_PMEM_LEN,
-- 
2.17.1

