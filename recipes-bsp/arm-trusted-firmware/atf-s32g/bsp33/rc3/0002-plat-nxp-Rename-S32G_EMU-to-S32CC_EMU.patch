From 49b77315fa3311958d40bdf693a23328238a964d Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Tue, 19 Apr 2022 09:17:40 +0300
Subject: [PATCH 02/18] plat: nxp: Rename S32G_EMU to S32CC_EMU

Issue: ALB-8797
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32/clk/early_clocks.c      |  6 +++---
 drivers/nxp/s32/io/io_mmc.c             |  2 +-
 drivers/nxp/uart/linflexuart.c          |  4 ++--
 plat/nxp/s32/include/s32_pinctrl.h      |  6 +++---
 plat/nxp/s32/include/s32_platform_def.h |  4 ++--
 plat/nxp/s32/s32_bl2_el3.c              |  4 ++--
 plat/nxp/s32/s32_common.mk              |  4 ++--
 plat/nxp/s32/s32g/s32g_bl2_el3.c        | 16 ++++++++--------
 plat/nxp/s32/s32g/s32g_bl31.c           |  4 ++--
 plat/nxp/s32/s32g/s32g_common.mk        |  6 +++---
 plat/nxp/s32/s32g/s32g_plat_funcs.c     |  4 ++--
 11 files changed, 30 insertions(+), 30 deletions(-)

diff --git a/drivers/nxp/s32/clk/early_clocks.c b/drivers/nxp/s32/clk/early_clocks.c
index ae949fa8b..a8fed149e 100644
--- a/drivers/nxp/s32/clk/early_clocks.c
+++ b/drivers/nxp/s32/clk/early_clocks.c
@@ -62,7 +62,7 @@ static struct clk xbar_2x = CLK_INIT(S32GEN1_CLK_XBAR_2X);
 /* LINFLEX clock */
 static struct clk periph_pll_mux = CLK_INIT(S32GEN1_CLK_PERIPH_PLL_MUX);
 static struct clk periph_pll_vco = CLK_INIT(S32GEN1_CLK_PERIPH_PLL_VCO);
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 static struct clk periph_pll_phi3 = CLK_INIT(S32GEN1_CLK_PERIPH_PLL_PHI3);
 static struct clk mc_cgm0_mux8 = CLK_INIT(S32GEN1_CLK_MC_CGM0_MUX8);
 static struct clk lin_baud = CLK_INIT(S32GEN1_CLK_LIN_BAUD);
@@ -157,7 +157,7 @@ int s32_enable_a53_clock(void)
 	return enable_xbar_clock();
 }
 
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 static int enable_lin_clock(void)
 {
 	int ret;
@@ -277,7 +277,7 @@ int s32_plat_clock_init(bool skip_ddr_clk)
 	if (ret)
 		return ret;
 
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 	ret = enable_lin_clock();
 	if (ret)
 		return ret;
diff --git a/drivers/nxp/s32/io/io_mmc.c b/drivers/nxp/s32/io/io_mmc.c
index 5477205e4..c2e2976bd 100644
--- a/drivers/nxp/s32/io/io_mmc.c
+++ b/drivers/nxp/s32/io/io_mmc.c
@@ -91,7 +91,7 @@ static int mmc_block_read(io_entity_t *entity, uintptr_t buffer,
 	*length_read = length;
 
 	/* Skip image loading on emulator */
-	if (block_spec->length && S32G_EMU)
+	if (block_spec->length && S32CC_EMU)
 		return 0;
 
 	offset = block_spec->offset;
diff --git a/drivers/nxp/uart/linflexuart.c b/drivers/nxp/uart/linflexuart.c
index b3777a125..858051bb6 100644
--- a/drivers/nxp/uart/linflexuart.c
+++ b/drivers/nxp/uart/linflexuart.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2021 NXP
+ * Copyright 2021-2022 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
@@ -50,7 +50,7 @@ static uint32_t linflex_read(uintptr_t base, uintptr_t reg)
 	return mmio_read_32(base + reg);
 }
 
-#if S32G_EMU == 1
+#if S32CC_EMU == 1
 static uint32_t get_ldiv_mult(struct console_linflex *cons)
 {
 	return 1;
diff --git a/plat/nxp/s32/include/s32_pinctrl.h b/plat/nxp/s32/include/s32_pinctrl.h
index 596ac8e3c..6d7a7e10c 100644
--- a/plat/nxp/s32/include/s32_pinctrl.h
+++ b/plat/nxp/s32/include/s32_pinctrl.h
@@ -1,5 +1,5 @@
 /*
- * Copyright 2021 NXP
+ * Copyright 2021-2022 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
@@ -56,7 +56,7 @@
 #define SIUL2_IMCR_S32G_G1_UART0_RXD_to_pad	\
 	(SIUL2_MSCR_MUX_MODE_ALT2)
 
-#if S32G_EMU == 1
+#if S32CC_EMU == 1
 #define SIUL2_MSCR_S32G_G1_PORT_CTRL_UART1_TXD	 \
 	(SIUL2_MSCR_S32_G1_SRC_100MHz |		 \
 	 SIUL2_MSCR_S32_G1_OBE_EN |		 \
@@ -68,7 +68,7 @@
 	 SIUL2_MSCR_MUX_MODE_ALT2)
 #endif
 
-#if S32G_EMU == 1
+#if S32CC_EMU == 1
 #define SIUL2_IMCR_S32G_G1_UART1_RXD_to_pad	(SIUL2_MSCR_MUX_MODE_ALT3)
 #else
 #define SIUL2_IMCR_S32G_G1_UART1_RXD_to_pad	(SIUL2_MSCR_MUX_MODE_ALT4)
diff --git a/plat/nxp/s32/include/s32_platform_def.h b/plat/nxp/s32/include/s32_platform_def.h
index 6768cc849..bbade1da2 100644
--- a/plat/nxp/s32/include/s32_platform_def.h
+++ b/plat/nxp/s32/include/s32_platform_def.h
@@ -85,7 +85,7 @@
 #define S32_SRAM_END		(S32_SRAM_BASE + S32_SRAM_SIZE)
 
 /* Top of the first 2GB bank of physical memory */
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 #define S32_DDR0_END		0xffffffff
 #else
 /* 1GB available */
@@ -157,7 +157,7 @@
 #define S32_LINFLEX1_BASE	(0x401CC000ul)
 #define S32_LINFLEX1_SIZE	(0x4000)
 
-#if S32G_EMU == 1
+#if S32CC_EMU == 1
 #define S32_UART_BASE		S32_LINFLEX1_BASE
 #define S32_UART_SIZE		S32_LINFLEX1_SIZE
 #else
diff --git a/plat/nxp/s32/s32_bl2_el3.c b/plat/nxp/s32/s32_bl2_el3.c
index 23675ce1a..82216a7c9 100644
--- a/plat/nxp/s32/s32_bl2_el3.c
+++ b/plat/nxp/s32/s32_bl2_el3.c
@@ -367,7 +367,7 @@ static bool is_branch_op(uint32_t op)
 	return (op & AARCH64_UNCOND_BRANCH_MASK) == AARCH64_UNCOND_BRANCH_OP;
 }
 
-#if (ERRATA_S32_050543 == 1 && S32G_EMU == 0)
+#if (ERRATA_S32_050543 == 1 && S32CC_EMU == 0)
 static int ft_fixup_ddr_errata(void *blob)
 {
 	int nodeoff, ret;
@@ -473,7 +473,7 @@ static int ft_fixups(void *blob)
 	size += S32_FDT_UPDATES_SPACE;
 	fdt_set_totalsize(blob, size);
 
-#if (ERRATA_S32_050543 == 1 && S32G_EMU == 0)
+#if (ERRATA_S32_050543 == 1 && S32CC_EMU == 0)
 	ret = ft_fixup_ddr_errata(blob);
 	if (ret)
 		goto out;
diff --git a/plat/nxp/s32/s32_common.mk b/plat/nxp/s32/s32_common.mk
index e331311f8..d1ca8f1b9 100644
--- a/plat/nxp/s32/s32_common.mk
+++ b/plat/nxp/s32/s32_common.mk
@@ -26,8 +26,8 @@ ifneq ($(S32_PLAT_SOC),)
 $(eval $(call add_define_val,PLAT_$(S32_PLAT_SOC)))
 endif
 
-S32G_EMU		?= 0
-$(eval $(call add_define_val,S32G_EMU,$(S32G_EMU)))
+S32CC_EMU		?= 0
+$(eval $(call add_define_val,S32CC_EMU,$(S32CC_EMU)))
 
 S32GEN1_DRAM_INLINE_ECC	?= 1
 $(eval $(call add_define_val,S32GEN1_DRAM_INLINE_ECC,$(S32GEN1_DRAM_INLINE_ECC)))
diff --git a/plat/nxp/s32/s32g/s32g_bl2_el3.c b/plat/nxp/s32/s32g/s32g_bl2_el3.c
index dc74b2ce9..78698e493 100644
--- a/plat/nxp/s32/s32g/s32g_bl2_el3.c
+++ b/plat/nxp/s32/s32g/s32g_bl2_el3.c
@@ -16,7 +16,7 @@
 #include "s32g_vr5510.h"
 #include <plat/nxp/s32g/bl31_ssram/ssram_mailbox.h>
 #include "s32_sramc.h"
-#if S32G_EMU == 1
+#if S32CC_EMU == 1
 #include <ddr/ddrss.h>
 #else
 #include <ddr/ddr_init.h>
@@ -53,7 +53,7 @@ static enum reset_cause get_reset_cause(void)
 	return CAUSE_ERROR;
 }
 
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 static void resume_bl31(struct s32g_ssram_mailbox *ssram_mb)
 {
 	s32g_warm_entrypoint_t resume_entrypoint;
@@ -70,7 +70,7 @@ static void resume_bl31(struct s32g_ssram_mailbox *ssram_mb)
 }
 #endif
 
-#if S32G_EMU == 1
+#if S32CC_EMU == 1
 static void skip_emu_images(bl_mem_params_node_t *params, size_t size)
 {
 	unsigned int image_id;
@@ -97,7 +97,7 @@ void bl2_el3_early_platform_setup(u_register_t arg0, u_register_t arg1,
 	clear_reset_cause();
 
 	/* No resume on emulator */
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 	struct s32g_ssram_mailbox *ssram_mb = (void *)BL31SSRAM_MAILBOX;
 
 	if ((reset_cause == CAUSE_WAKEUP_DURING_STANDBY) &&
@@ -121,14 +121,14 @@ void bl2_el3_early_platform_setup(u_register_t arg0, u_register_t arg1,
 	add_bl33_img_to_mem_params_descs(params, &index);
 	add_invalid_img_to_mem_params_descs(params, &index);
 
-#if S32G_EMU == 1
+#if S32CC_EMU == 1
 	skip_emu_images(params, index);
 #endif
 
 	bl_mem_params_desc_num = index;
 }
 
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 static void copy_bl31ssram_image(void)
 {
 	/* Copy bl31 ssram stage. This includes IVT */
@@ -140,7 +140,7 @@ void bl2_el3_plat_arch_setup(void)
 {
 	uint32_t ret;
 
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 	ret = s32_el3_mmu_fixup();
 	if (ret)
 		panic();
@@ -172,7 +172,7 @@ void bl2_el3_plat_arch_setup(void)
 		panic();
 }
 
-#if S32G_EMU == 1
+#if S32CC_EMU == 1
 void bl2_plat_preload_setup(void)
 {
 	printf("Now it's time to load the following images:\n");
diff --git a/plat/nxp/s32/s32g/s32g_bl31.c b/plat/nxp/s32/s32g/s32g_bl31.c
index 896e4eaae..1f60b6428 100644
--- a/plat/nxp/s32/s32g/s32g_bl31.c
+++ b/plat/nxp/s32/s32g/s32g_bl31.c
@@ -28,7 +28,7 @@
 #include "s32g_bl_common.h"
 #include "clk/clk.h"
 
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 static void dt_init_wkpu(void)
 {
 	void *fdt;
@@ -116,7 +116,7 @@ void bl31_platform_setup(void)
 {
 	generic_delay_timer_init();
 
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 	dt_init_pmic();
 	dt_init_wkpu();
 	dt_init_ocotp();
diff --git a/plat/nxp/s32/s32g/s32g_common.mk b/plat/nxp/s32/s32g/s32g_common.mk
index a2173e4e5..b60bfac73 100644
--- a/plat/nxp/s32/s32g/s32g_common.mk
+++ b/plat/nxp/s32/s32g/s32g_common.mk
@@ -8,7 +8,7 @@ include plat/nxp/s32/s32_common.mk
 
 S32_SOC_FAMILY	:= ${S32_PLAT}/s32g
 
-ifeq ($(S32G_EMU),1)
+ifeq ($(S32CC_EMU),1)
 DDR_DRV_SRCS := \
 	${DDR_DRV}/emu/ddrss_emu.c \
 	${DDR_DRV}/emu/ddrss_firmware_emu.c \
@@ -16,7 +16,7 @@ DDR_DRV_SRCS := \
 
 endif
 
-ifeq ($(S32G_EMU),0)
+ifeq ($(S32CC_EMU),0)
 include ${S32_SOC_FAMILY}/bl31_sram/bl31_sram.mk
 include ${S32_SOC_FAMILY}/bl31_ssram/bl31_ssram.mk
 endif
@@ -50,7 +50,7 @@ BL31_SOURCES		+= ${S32_SOC_FAMILY}/s32g_bl31.c \
 
 ### Platform-specific defines ###
 # Which LinFlexD to use as a UART device
-ifeq ($(S32G_EMU),0)
+ifeq ($(S32CC_EMU),0)
 S32_LINFLEX_MODULE	:= 0
 else
 S32_LINFLEX_MODULE	:= 1
diff --git a/plat/nxp/s32/s32g/s32g_plat_funcs.c b/plat/nxp/s32/s32g/s32g_plat_funcs.c
index 4df1fe092..6e6ff187f 100644
--- a/plat/nxp/s32/s32g/s32g_plat_funcs.c
+++ b/plat/nxp/s32/s32g/s32g_plat_funcs.c
@@ -88,7 +88,7 @@ static void __dead2 platform_suspend(unsigned int current_cpu)
 	plat_panic_handler();
 }
 
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 static void copy_bl31sram_image(void)
 {
 	uint32_t npages;
@@ -121,7 +121,7 @@ static void copy_bl31sram_image(void)
 
 void s32_plat_suspend(unsigned int cpu)
 {
-#if S32G_EMU == 0
+#if S32CC_EMU == 0
 	copy_bl31sram_image();
 #endif
 	platform_suspend(cpu);
-- 
2.17.1

