From 8dea2b33e63f326c43efe224851bf3d80796ec43 Mon Sep 17 00:00:00 2001
From: Dan Nica <dan.nica@nxp.com>
Date: Thu, 21 Jul 2022 08:40:22 +0300
Subject: [PATCH 14/42] s32: mmc: Poll SDSTB when changing the clock

The VEND_SPEC_PER_CLKEN and VEND_SPEC_CARD_CLKEN bits are marked as
Reserved in the SoC Reference Manual, therefore we should not touch them.
Indeed, these bits are present and described in the USDHC Block Guide, but
still not mentioned as required to be cleared/set when changing the
frequency.

The only required steps before changing the clock are to poll for the SDSTB
bit and ensure FRC_SD_CLK is 0. Since the later is not used in this driver,
we'll only check the former.

The udelay() call was likely there to wait for the clock to be stable after
being changed, which is an incorrect alternative to polling for SDSTB.

Issue: ALB-9078
Upstream-Status: Pending 

Signed-off-by: Dan Nica <dan.nica@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32/mmc/s32_mmc.c | 14 +++++---------
 1 file changed, 5 insertions(+), 9 deletions(-)

diff --git a/drivers/nxp/s32/mmc/s32_mmc.c b/drivers/nxp/s32/mmc/s32_mmc.c
index fd1fbe838..44873fe0e 100644
--- a/drivers/nxp/s32/mmc/s32_mmc.c
+++ b/drivers/nxp/s32/mmc/s32_mmc.c
@@ -38,6 +38,7 @@
 #define PRES_STATE_CIHB			BIT(0)
 #define PRES_STATE_CDIHB		BIT(1)
 #define PRES_STATE_DLA			BIT(2)
+#define PRES_STATE_SDSTB		BIT(3)
 
 #define USDHC_PROT_CTRL			(USDHC + 0x28)
 #define PROT_CTRL_EMODE_LE		BIT(5)
@@ -98,8 +99,6 @@
 
 #define USDHC_VEND_SPEC			(USDHC + 0xc0)
 #define VEND_SPEC_INIT			(0x20007809)
-#define VEND_SPEC_PER_CLKEN		BIT(13)
-#define VEND_SPEC_CARD_CLKEN		BIT(14)
 
 /* These masks represent the commands which involve a data transfer. But since
  * MMC_CMD(x) and MMC_ACMD(x) are identical, yet they represent different
@@ -149,19 +148,16 @@ static void s32_mmc_set_clk(uint64_t clk)
 	prediv >>= 1;
 	div--;
 
-	regdata = mmio_read_32(USDHC_VEND_SPEC) & ~(VEND_SPEC_CARD_CLKEN);
-	mmio_write_32(USDHC_VEND_SPEC, regdata);
+	while (!(mmio_read_32(USDHC_PRES_STATE) & PRES_STATE_SDSTB))
+		;
 
 	regdata = mmio_read_32(USDHC_SYS_CTRL);
 	regdata &= ~(SYS_CTRL_SDCLKFS_MASK | SYS_CTRL_DVS_MASK);
 	regdata |= SYS_CTRL_SDCLKFS(prediv) | SYS_CTRL_DVS(div);
 	mmio_write_32(USDHC_SYS_CTRL, regdata);
 
-	udelay(10 * 1000);
-
-	mmio_write_32(USDHC_VEND_SPEC,
-		      mmio_read_32(USDHC_VEND_SPEC) |
-		      VEND_SPEC_PER_CLKEN | VEND_SPEC_CARD_CLKEN);
+	while (!(mmio_read_32(USDHC_PRES_STATE) & PRES_STATE_SDSTB))
+		;
 }
 
 static void s32_mmc_init(void)
-- 
2.17.1

