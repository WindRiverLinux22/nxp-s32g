From d8a427d12cccdd217d6bf5b1f4611af1de2fd98c Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Wed, 14 Sep 2022 10:38:24 +0300
Subject: [PATCH 15/30] s32cc: Allow custom A53 frequencies

This will allow the user to play with A53 frequency by
changing the values of the following macros:
	S32GEN1_A53_FREQ
	S32GEN1_ARM_PLL_VCO_FREQ
	S32GEN1_ARM_PLL_PHI0_FREQ
	S32GEN1_XBAR_2X_FREQ

Their value shouldn't exceed the max allowed frequency.

Issue: ALB-9292
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32/clk/early_clocks.c            | 18 ++++++-------
 drivers/nxp/s32/clk/s32gen1_clk.c             | 27 ++++++++++++++-----
 .../drivers/nxp/s32/clk/s32gen1_clk_funcs.h   |  4 +--
 3 files changed, 31 insertions(+), 18 deletions(-)

diff --git a/drivers/nxp/s32/clk/early_clocks.c b/drivers/nxp/s32/clk/early_clocks.c
index f6376a384..6744eed2f 100644
--- a/drivers/nxp/s32/clk/early_clocks.c
+++ b/drivers/nxp/s32/clk/early_clocks.c
@@ -78,7 +78,7 @@ static struct clk ddr_pll_phi0 = CLK_INIT(S32GEN1_CLK_DDR_PLL_PHI0);
 static struct clk mc_cgm5_mux0 = CLK_INIT(S32GEN1_CLK_MC_CGM5_MUX0);
 static struct clk ddr = CLK_INIT(S32GEN1_CLK_DDR);
 
-static const struct siul2_freq_mapping *early_freqs;
+static struct siul2_freq_mapping early_freqs;
 
 static int switch_xbar_to_firc(void)
 {
@@ -101,8 +101,8 @@ static int enable_xbar_clock(void)
 		return ret;
 
 	rate = s32gen1_set_rate(&xbar_2x,
-				early_freqs->xbar_2x_freq);
-	if (rate != early_freqs->xbar_2x_freq)
+				early_freqs.xbar_2x_freq);
+	if (rate != early_freqs.xbar_2x_freq)
 		return -EINVAL;
 
 	return s32gen1_enable(&xbar_2x, 1);
@@ -130,18 +130,18 @@ int s32_enable_a53_clock(void)
 		return -EINVAL;
 
 	rate = s32gen1_set_rate(&arm_pll_vco,
-				early_freqs->arm_pll_vco_freq);
-	if (rate != early_freqs->arm_pll_vco_freq)
+				early_freqs.arm_pll_vco_freq);
+	if (rate != early_freqs.arm_pll_vco_freq)
 		return -EINVAL;
 
 	rate = s32gen1_set_rate(&arm_pll_phi0,
-				early_freqs->arm_pll_phi0_freq);
-	if (rate != early_freqs->arm_pll_phi0_freq)
+				early_freqs.arm_pll_phi0_freq);
+	if (rate != early_freqs.arm_pll_phi0_freq)
 		return -EINVAL;
 
 	rate = s32gen1_set_rate(&a53_clk,
-				early_freqs->a53_freq);
-	if (rate != early_freqs->a53_freq)
+				early_freqs.a53_freq);
+	if (rate != early_freqs.a53_freq)
 		return -EINVAL;
 
 	ret = s32gen1_enable(&a53_clk, 1);
diff --git a/drivers/nxp/s32/clk/s32gen1_clk.c b/drivers/nxp/s32/clk/s32gen1_clk.c
index f52b33ad2..497b821b3 100644
--- a/drivers/nxp/s32/clk/s32gen1_clk.c
+++ b/drivers/nxp/s32/clk/s32gen1_clk.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2020-2021 NXP
+ * Copyright 2020-2022 NXP
  */
 #include <dt-bindings/clock/s32gen1-clock.h>
 #include <clk/s32gen1_clk_funcs.h>
@@ -563,20 +563,33 @@ struct s32gen1_clk *get_clock(uint32_t id)
 	return plat_clocks[index];
 }
 
-int s32gen1_get_early_clks_freqs(const struct siul2_freq_mapping **mapping)
+int s32gen1_get_early_clks_freqs(struct siul2_freq_mapping *mapping)
 {
 	uint32_t freq;
 	size_t i;
+	bool found = false;
 
 	freq = get_siul2_midr2_freq();
 
 	/* Last entry is empty */
-	for (i = 0; siul2_clk_freq_map[i].a53_freq != 0; i++)
-
+	for (i = 0; siul2_clk_freq_map[i].a53_freq != 0; i++) {
 		if (siul2_clk_freq_map[i].siul2_midr2_freq == freq) {
-			*mapping = &siul2_clk_freq_map[i];
-			return 0;
+			memcpy(mapping, &siul2_clk_freq_map[i], sizeof(*mapping));
+			found = true;
+			break;
 		}
+	}
+
+	if (!found)
+		return -EINVAL;
+
+	/* User defined values */
+	if (mapping->a53_freq > S32GEN1_A53_FREQ) {
+		mapping->a53_freq = S32GEN1_A53_FREQ;
+		mapping->arm_pll_vco_freq = S32GEN1_ARM_PLL_VCO_FREQ;
+		mapping->arm_pll_phi0_freq = S32GEN1_ARM_PLL_PHI0_FREQ;
+		mapping->xbar_2x_freq = S32GEN1_XBAR_2X_FREQ;
+	}
 
-	return -EINVAL;
+	return 0;
 }
diff --git a/include/drivers/nxp/s32/clk/s32gen1_clk_funcs.h b/include/drivers/nxp/s32/clk/s32gen1_clk_funcs.h
index c1fe67a3c..5411f78d0 100644
--- a/include/drivers/nxp/s32/clk/s32gen1_clk_funcs.h
+++ b/include/drivers/nxp/s32/clk/s32gen1_clk_funcs.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2020-2021 NXP
+ * Copyright 2020-2022 NXP
  */
 #ifndef S32GEN1_CLK_FUNCS_H
 #define S32GEN1_CLK_FUNCS_H
@@ -41,6 +41,6 @@ static inline struct s32gen1_clk_priv *s32gen1_get_clk_priv(struct clk *c)
 
 int cc_compound_clk_get_pid(uint32_t id, uint32_t *parent_id);
 
-int s32gen1_get_early_clks_freqs(const struct siul2_freq_mapping **mapping);
+int s32gen1_get_early_clks_freqs(struct siul2_freq_mapping *mapping);
 
 #endif /* S32GEN1_CLK_FUNCS_H */
-- 
2.17.1

