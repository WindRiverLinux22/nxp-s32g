From 76c193beb433098188af2b54e5e05f1b3ff77100 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Thu, 13 Oct 2022 12:42:19 +0300
Subject: [PATCH 24/30] s32cc: Optimize PMIC initialization

This limits the number of VR5510 instances to 2 (MU & FSU).

Issue: ALB-9357
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/s32g/s32g_bl_common.c | 42 +++++++++++++++++++++---------
 1 file changed, 29 insertions(+), 13 deletions(-)

diff --git a/plat/nxp/s32/s32g/s32g_bl_common.c b/plat/nxp/s32/s32g/s32g_bl_common.c
index 905f4e9cf..15142e8b6 100644
--- a/plat/nxp/s32/s32g/s32g_bl_common.c
+++ b/plat/nxp/s32/s32g/s32g_bl_common.c
@@ -36,44 +36,60 @@ void dt_init_pmic(void)
 	int pmic_node;
 	int i2c_node;
 	struct s32_i2c_driver *i2c_driver;
+	unsigned int instance;
 	int ret;
 
-	if (dt_open_and_check() < 0) {
-		INFO("ERROR fdt check\n");
-		return;
+	ret = dt_open_and_check();
+	if (ret < 0) {
+		ERROR("ERROR fdt check\n");
+		goto exit;
 	}
 
 	if (fdt_get_address(&fdt) == 0) {
-		INFO("ERROR fdt\n");
-		return;
+		ret = -EIO;
+		ERROR("ERROR fdt\n");
+		goto exit;
 	}
 
 	pmic_node = -1;
-	while (true) {
+	/* Limit the search to VR5510 MU & FSU */
+	for (instance = 0u; instance < 2u; instance++) {
 		pmic_node = fdt_node_offset_by_compatible(fdt, pmic_node,
 				"nxp,vr5510");
-		if (pmic_node == -1)
+		if (pmic_node == -1) {
+			ret = -EIO;
+			ERROR("Failed to get VR5510 instance %u\n", instance);
 			break;
+		}
 
 		i2c_node = fdt_parent_offset(fdt, pmic_node);
 		if (i2c_node == -1) {
-			INFO("Failed to get parent of PMIC node\n");
-			return;
+			ret = -EIO;
+			ERROR("Failed to get the parent of VR5510 %u node\n",
+			      instance);
+			break;
 		}
 
 		i2c_driver = s32_add_i2c_module(fdt, i2c_node);
 		if (i2c_driver == NULL) {
-			INFO("PMIC isn't subnode of an I2C node\n");
-			return;
+			ret = -EIO;
+			ERROR("VR5510 %u isn't subnode of an I2C node\n",
+			      instance);
+			break;
 		}
 
 		ret = vr5510_register_instance(fdt, pmic_node,
 					       &i2c_driver->bus);
 		if (ret) {
-			INFO("Failed to register VR5510 instance\n");
-			return;
+			ret = -EIO;
+			ERROR("Failed to register VR5510 instance %u\n",
+			      instance);
+			break;
 		}
 	}
+exit:
+	if (ret)
+		panic();
 }
 
 void dt_init_ocotp(void)
-- 
2.17.1

