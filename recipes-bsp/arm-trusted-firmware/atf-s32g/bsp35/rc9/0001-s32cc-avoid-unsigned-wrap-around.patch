From 5b93b5002f77ced748742a664b42e9be61f4980e Mon Sep 17 00:00:00 2001
From: Radu Pirea <radu-nicolae.pirea@nxp.com>
Date: Thu, 10 Nov 2022 10:59:11 +0200
Subject: [PATCH 01/11] s32cc: avoid unsigned wrap-around

CIDs: 23346963, 23346836, 23346823, 23346808

Issue: ALB-9513

Upstream-Status: Pending 

Signed-off-by: Radu Pirea <radu-nicolae.pirea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/include/s32_bl2_el3.h | 18 +++++---
 plat/nxp/s32/s32_bl2_el3.c         | 68 +++++++++++++++++++++---------
 plat/nxp/s32/s32g/s32g_bl2_el3.c   | 19 ++++++---
 plat/nxp/s32/s32r/s32r_bl2_el3.c   | 19 ++++++---
 4 files changed, 86 insertions(+), 38 deletions(-)

diff --git a/plat/nxp/s32/include/s32_bl2_el3.h b/plat/nxp/s32/include/s32_bl2_el3.h
index b9013759e..3917d21b2 100644
--- a/plat/nxp/s32/include/s32_bl2_el3.h
+++ b/plat/nxp/s32/include/s32_bl2_el3.h
@@ -9,12 +9,18 @@
 #include <common/desc_image_load.h>
 #include "s32_mc_rgm.h"
 
-void add_fip_img_to_mem_params_descs(bl_mem_params_node_t *params, size_t *index);
-void add_bl31_img_to_mem_params_descs(bl_mem_params_node_t *params, size_t *index);
-void add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params, size_t *index);
-void add_bl32_extra1_img_to_mem_params_descs(bl_mem_params_node_t *params, size_t *index);
-void add_bl33_img_to_mem_params_descs(bl_mem_params_node_t *params, size_t *index);
-void add_invalid_img_to_mem_params_descs(bl_mem_params_node_t *params, size_t *index);
+int add_fip_img_to_mem_params_descs(bl_mem_params_node_t *params,
+				    size_t *index, size_t size);
+int add_bl31_img_to_mem_params_descs(bl_mem_params_node_t *params,
+				     size_t *index, size_t size);
+int add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params,
+				     size_t *index, size_t size);
+int add_bl32_extra1_img_to_mem_params_descs(bl_mem_params_node_t *params,
+					    size_t *index, size_t size);
+int add_bl33_img_to_mem_params_descs(bl_mem_params_node_t *params,
+				     size_t *index, size_t size);
+int add_invalid_img_to_mem_params_descs(bl_mem_params_node_t *params,
+					size_t *index, size_t size);
 
 int s32_el3_mmu_fixup(const uintptr_t *filters, size_t n_filters);
 void clear_swt_faults(void);
diff --git a/plat/nxp/s32/s32_bl2_el3.c b/plat/nxp/s32/s32_bl2_el3.c
index d9cdb697a..6b74721fa 100644
--- a/plat/nxp/s32/s32_bl2_el3.c
+++ b/plat/nxp/s32/s32_bl2_el3.c
@@ -50,9 +50,12 @@
 #define DDRSS_BASE_ADDR		(0x40380000)
 #define DDRSS_SIZE		(0x80000)
 
-void add_fip_img_to_mem_params_descs(bl_mem_params_node_t *params,
-					    size_t *index)
+int add_fip_img_to_mem_params_descs(bl_mem_params_node_t *params,
+				    size_t *index, size_t size)
 {
+	if (*index >= size)
+		return -EINVAL;
+
 	params[(*index)++] = (bl_mem_params_node_t) {
 		.image_id = FIP_IMAGE_ID,
 
@@ -67,11 +70,16 @@ void add_fip_img_to_mem_params_descs(bl_mem_params_node_t *params,
 		.image_info.image_base = FIP_BASE,
 		.next_handoff_image_id = BL31_IMAGE_ID,
 	};
+
+	return 0;
 }
 
-void add_bl31_img_to_mem_params_descs(bl_mem_params_node_t *params,
-					     size_t *index)
+int add_bl31_img_to_mem_params_descs(bl_mem_params_node_t *params,
+				     size_t *index, size_t size)
 {
+	if (*index >= size)
+		return -EINVAL;
+
 	params[(*index)++] = (bl_mem_params_node_t) {
 		.image_id = BL31_IMAGE_ID,
 
@@ -92,12 +100,17 @@ void add_bl31_img_to_mem_params_descs(bl_mem_params_node_t *params,
 		.next_handoff_image_id = BL33_IMAGE_ID,
 #endif
 	};
+
+	return 0;
 }
 
 #ifdef SPD_opteed
-void add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params,
-					     size_t *index)
+int add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params,
+				     size_t *index, size_t size)
 {
+	if (*index >= size)
+		return -EINVAL;
+
 	params[(*index)++] = (bl_mem_params_node_t) {
 		.image_id = BL32_IMAGE_ID,
 
@@ -112,12 +125,16 @@ void add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params,
 		.image_info.image_base = S32_BL32_BASE,
 		.next_handoff_image_id = BL33_IMAGE_ID,
 	};
+
+	return 0;
 }
 
-void add_bl32_extra1_img_to_mem_params_descs(
-	bl_mem_params_node_t *params,
-	size_t *index)
+int add_bl32_extra1_img_to_mem_params_descs(bl_mem_params_node_t *params,
+					    size_t *index, size_t size)
 {
+	if (*index >= size)
+		return -EINVAL;
+
 	params[(*index)++] = (bl_mem_params_node_t) {
 
 		.image_id = BL32_EXTRA1_IMAGE_ID,
@@ -133,25 +150,26 @@ void add_bl32_extra1_img_to_mem_params_descs(
 
 		.next_handoff_image_id = INVALID_IMAGE_ID,
 	};
+
+	return 0;
 }
 
 #else
-void add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params,
-					     size_t *index)
+int add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params,
+				     size_t *index, size_t size)
 {
-
+	return 0;
 }
 
-void add_bl32_extra1_img_to_mem_params_descs(
-	bl_mem_params_node_t *params,
-	size_t *index)
+int add_bl32_extra1_img_to_mem_params_descs(bl_mem_params_node_t *params,
+					    size_t *index, size_t size)
 {
-
+	return 0;
 }
 #endif /* SPD_opteed */
 
-void add_bl33_img_to_mem_params_descs(bl_mem_params_node_t *params,
-					     size_t *index)
+int add_bl33_img_to_mem_params_descs(bl_mem_params_node_t *params,
+				     size_t *index, size_t size)
 {
 	bl_mem_params_node_t node = {
 		.image_id = BL33_IMAGE_ID,
@@ -167,11 +185,16 @@ void add_bl33_img_to_mem_params_descs(bl_mem_params_node_t *params,
 		.next_handoff_image_id = INVALID_IMAGE_ID,
 	};
 
+	if (*index >= size)
+		return -EINVAL;
+
 	params[(*index)++] = node;
+
+	return 0;
 }
 
-void add_invalid_img_to_mem_params_descs(bl_mem_params_node_t *params,
-						size_t *index)
+int add_invalid_img_to_mem_params_descs(bl_mem_params_node_t *params,
+					size_t *index, size_t size)
 {
 	bl_mem_params_node_t node = {
 		.image_id = INVALID_IMAGE_ID,
@@ -179,7 +202,12 @@ void add_invalid_img_to_mem_params_descs(bl_mem_params_node_t *params,
 				      image_info_t, IMAGE_ATTRIB_SKIP_LOADING),
 	};
 
+	if (*index >= size)
+		return -EINVAL;
+
 	params[(*index)++] = node;
+
+	return 0;
 }
 
 IMPORT_SYM(uintptr_t, __RW_START__, BL2_RW_START);
diff --git a/plat/nxp/s32/s32g/s32g_bl2_el3.c b/plat/nxp/s32/s32g/s32g_bl2_el3.c
index bb209705d..d81a97652 100644
--- a/plat/nxp/s32/s32g/s32g_bl2_el3.c
+++ b/plat/nxp/s32/s32g/s32g_bl2_el3.c
@@ -164,6 +164,8 @@ void bl2_el3_early_platform_setup(u_register_t arg0, u_register_t arg1,
 	size_t index = 0;
 	bl_mem_params_node_t *params = s32g_bl2_mem_params_descs;
 	struct s32g_ssram_mailbox *ssram_mb = (void *)BL31SSRAM_MAILBOX;
+	size_t params_size = ARRAY_SIZE(s32g_bl2_mem_params_descs);
+	int ret = 0;
 
 	reset_cause = get_reset_cause();
 	clear_reset_cause();
@@ -181,12 +183,17 @@ void bl2_el3_early_platform_setup(u_register_t arg0, u_register_t arg1,
 	NOTICE("Reset status: %s\n", get_reset_cause_str(reset_cause));
 	s32_io_setup();
 
-	add_fip_img_to_mem_params_descs(params, &index);
-	add_bl31_img_to_mem_params_descs(params, &index);
-	add_bl32_img_to_mem_params_descs(params, &index);
-	add_bl32_extra1_img_to_mem_params_descs(params, &index);
-	add_bl33_img_to_mem_params_descs(params, &index);
-	add_invalid_img_to_mem_params_descs(params, &index);
+	ret |= add_fip_img_to_mem_params_descs(params, &index,
+					       params_size);
+	ret |= add_bl31_img_to_mem_params_descs(params, &index, params_size);
+	ret |= add_bl32_img_to_mem_params_descs(params, &index, params_size);
+	ret |= add_bl32_extra1_img_to_mem_params_descs(params, &index,
+						       params_size);
+	ret |= add_bl33_img_to_mem_params_descs(params, &index, params_size);
+	ret |= add_invalid_img_to_mem_params_descs(params, &index,
+						   params_size);
+	if (ret)
+		panic();
 
 	bl_mem_params_desc_num = index;
 }
diff --git a/plat/nxp/s32/s32r/s32r_bl2_el3.c b/plat/nxp/s32/s32r/s32r_bl2_el3.c
index 63a90af6f..6380c7222 100644
--- a/plat/nxp/s32/s32r/s32r_bl2_el3.c
+++ b/plat/nxp/s32/s32r/s32r_bl2_el3.c
@@ -43,6 +43,8 @@ void bl2_el3_early_platform_setup(u_register_t arg0, u_register_t arg1,
 	enum reset_cause reset_cause;
 	size_t index = 0;
 	bl_mem_params_node_t *params = s32r_bl2_mem_params_descs;
+	size_t params_size = ARRAY_SIZE(s32r_bl2_mem_params_descs);
+	int ret = 0;
 
 	reset_cause = get_reset_cause();
 	clear_reset_cause();
@@ -53,12 +55,17 @@ void bl2_el3_early_platform_setup(u_register_t arg0, u_register_t arg1,
 
 	NOTICE("Reset status: %s\n", get_reset_cause_str(reset_cause));
 
-	add_fip_img_to_mem_params_descs(params, &index);
-	add_bl31_img_to_mem_params_descs(params, &index);
-	add_bl32_img_to_mem_params_descs(params, &index);
-	add_bl32_extra1_img_to_mem_params_descs(params, &index);
-	add_bl33_img_to_mem_params_descs(params, &index);
-	add_invalid_img_to_mem_params_descs(params, &index);
+	ret |= add_fip_img_to_mem_params_descs(params, &index,
+					      params_size);
+	ret |= add_bl31_img_to_mem_params_descs(params, &index, params_size);
+	ret |= add_bl32_img_to_mem_params_descs(params, &index, params_size);
+	ret |= add_bl32_extra1_img_to_mem_params_descs(params, &index,
+						      params_size);
+	ret |= add_bl33_img_to_mem_params_descs(params, &index, params_size);
+	ret |= add_invalid_img_to_mem_params_descs(params, &index,
+						   params_size);
+	if (ret)
+		panic();
 
 	bl_mem_params_desc_num = index;
 }
-- 
2.17.1

