From eb6f1b0402112b377386db3edb63e16915410749 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Thu, 20 Oct 2022 15:20:27 +0300
Subject: [PATCH 16/49] s32cc: Update core turn off procedure

Follow A53 core turn off procedure before cutting off the power
or entering the reset state.

Issue: ALB-9414
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/core_turn_off.c                | 18 ++++++++++++++++++
 plat/nxp/s32/include/s32_bl_common.h        |  1 +
 plat/nxp/s32/s32_common.mk                  |  1 +
 plat/nxp/s32/s32_scp_scmi.c                 | 13 +++----------
 plat/nxp/s32/s32g/bl31_sram/bl31_sram.mk    |  1 +
 plat/nxp/s32/s32g/bl31_sram/bl31sram_main.c |  9 +--------
 6 files changed, 25 insertions(+), 18 deletions(-)
 create mode 100644 plat/nxp/s32/core_turn_off.c

diff --git a/plat/nxp/s32/core_turn_off.c b/plat/nxp/s32/core_turn_off.c
new file mode 100644
index 000000000..af985212f
--- /dev/null
+++ b/plat/nxp/s32/core_turn_off.c
@@ -0,0 +1,18 @@
+/*
+ * Copyright 2022 NXP
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+#include <arch_helpers.h>
+
+void cortex_a53_core_pwr_dwn(void);
+
+void __dead2 core_turn_off(void)
+{
+	cortex_a53_core_pwr_dwn();
+
+	while (true) {
+		dsb();
+		wfi();
+	}
+}
diff --git a/plat/nxp/s32/include/s32_bl_common.h b/plat/nxp/s32/include/s32_bl_common.h
index c971c244c..21ee42e83 100644
--- a/plat/nxp/s32/include/s32_bl_common.h
+++ b/plat/nxp/s32/include/s32_bl_common.h
@@ -74,6 +74,7 @@ int scp_get_cpu_state(uint32_t core);
 int scp_cpu_on(uint32_t core);
 int scp_cpu_off(uint32_t core);
 void scp_suspend_platform(void);
+void __dead2 core_turn_off(void);
 
 struct s32_i2c_driver *s32_add_i2c_module(void *fdt, int fdt_node);
 
diff --git a/plat/nxp/s32/s32_common.mk b/plat/nxp/s32/s32_common.mk
index a50281a1f..83f545795 100644
--- a/plat/nxp/s32/s32_common.mk
+++ b/plat/nxp/s32/s32_common.mk
@@ -68,6 +68,7 @@ PLAT_BL_COMMON_SOURCES += \
 			${S32_PLAT}/s32_ncore.c \
 			${S32_PLAT}/s32_pinctrl.c \
 			${S32_PLAT}/s32_pmic.c \
+			${S32_PLAT}/core_turn_off.c \
 			drivers/delay_timer/delay_timer.c \
 			drivers/delay_timer/generic_delay_timer.c \
 			${S32_DRIVERS}/memory_pool.c \
diff --git a/plat/nxp/s32/s32_scp_scmi.c b/plat/nxp/s32/s32_scp_scmi.c
index 441b17392..acc8737a3 100644
--- a/plat/nxp/s32/s32_scp_scmi.c
+++ b/plat/nxp/s32/s32_scp_scmi.c
@@ -12,6 +12,7 @@
 #include <libc/errno.h>
 #include <drivers/scmi.h>
 #include <inttypes.h>
+#include <s32_bl_common.h>
 #include <dt-bindings/power/s32gen1-scmi-pd.h>
 
 static scmi_channel_t scmi_channels[PLATFORM_CORE_COUNT];
@@ -172,12 +173,7 @@ int scp_cpu_off(uint32_t core)
 	if (ret)
 		return ret;
 
-	/* Wait to be killed by SCP */
-	while (true) {
-		isb();
-		dsb();
-		wfi();
-	}
+	core_turn_off();
 }
 
 int scp_get_cpu_state(uint32_t core)
@@ -218,10 +214,7 @@ void scp_suspend_platform(void)
 		panic();
 	}
 
-	while (true) {
-		dsb();
-		wfi();
-	}
+	core_turn_off();
 }
 
 static bool is_proto_allowed(mailbox_mem_t *mbx_mem)
diff --git a/plat/nxp/s32/s32g/bl31_sram/bl31_sram.mk b/plat/nxp/s32/s32g/bl31_sram/bl31_sram.mk
index fe4e193c5..11c60fb53 100644
--- a/plat/nxp/s32/s32g/bl31_sram/bl31_sram.mk
+++ b/plat/nxp/s32/s32g/bl31_sram/bl31_sram.mk
@@ -13,6 +13,7 @@ BL31SRAM_SOURCES = plat/common/aarch64/platform_up_stack.S \
 		   drivers/arm/css/scmi/scmi_common.c \
 		   drivers/arm/css/scmi/scmi_sys_pwr_proto.c \
 		   ${COMMON_DDR_DRV}/ddr_lp.c \
+		   lib/cpus/aarch64/cortex_a53.S \
 		   ${LIBC_SRCS} \
 
 BL31SRAM_ARRAY_NAME ?= bl31sram
diff --git a/plat/nxp/s32/s32g/bl31_sram/bl31sram_main.c b/plat/nxp/s32/s32g/bl31_sram/bl31sram_main.c
index 52e61f779..24d641bb8 100644
--- a/plat/nxp/s32/s32g/bl31_sram/bl31sram_main.c
+++ b/plat/nxp/s32/s32g/bl31_sram/bl31sram_main.c
@@ -51,13 +51,6 @@ void bl31sram_main(void)
 		scp_suspend_platform();
 	}
 
-	while (true) {
-		/*
-		 * A torn-apart variant of psci_power_down_wfi()
-		 */
-		dsb();
-		wfi();
-	}
-
+	core_turn_off();
 	plat_panic_handler();
 }
-- 
2.25.1

