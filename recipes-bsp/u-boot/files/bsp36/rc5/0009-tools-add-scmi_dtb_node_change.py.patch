From d97cad57394c5cd80680758cbe8dc665f31d8593 Mon Sep 17 00:00:00 2001
From: Andrei Stefanescu <andrei.stefanescu@nxp.com>
Date: Fri, 10 Feb 2023 18:11:46 +0200
Subject: [PATCH 09/11] tools: add scmi_dtb_node_change.py

This script can is used to switch from the SIUL2 drivers to the SCMI
ones. This will take each property/child of a SIUL2 node in the dtb and
copy it to the respective SCMI node. After that, it will disable the
SIUL2 driver nodes.

Issue: ALB-9426
Issue: ALB-9556

Upstream-Status: Pending 

Signed-off-by: Andrei Stefanescu <andrei.stefanescu@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 tools/nxp/scmi_dtb_node_change.py | 83 +++++++++++++++++++++++++++++++
 1 file changed, 83 insertions(+)
 create mode 100644 tools/nxp/scmi_dtb_node_change.py

diff --git a/tools/nxp/scmi_dtb_node_change.py b/tools/nxp/scmi_dtb_node_change.py
new file mode 100644
index 0000000000..c4fa95a52d
--- /dev/null
+++ b/tools/nxp/scmi_dtb_node_change.py
@@ -0,0 +1,83 @@
+#! /usr/bin/env python3
+# SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause
+# Copyright 2023 NXP
+
+"""This module can be used to switch from the active device-tree SIUL2 nodes
+   to the SCMI ones."""
+
+import argparse
+import sys
+import pathlib
+import fdt
+
+SIUL2_PINCTRL_NAME = "siul2-pinctrl@4009c240"
+SIUL2_GPIO_NAME = "siul2-gpio@4009d700"
+SCMI_PINCTRL_NAME = "protocol@80"
+SCMI_GPIO_NAME = "protocol@81"
+
+
+def switch_node(dtb, scmi_node_name, siul2_node_name):
+    """Perform the actual switch."""
+
+    nodes = dtb.search(siul2_node_name, itype=fdt.ItemType.NODE)
+    if len(nodes) != 1:
+        print("Can't find siul2 node!")
+        sys.exit(1)
+
+    siul2 = nodes[0]
+    print("Found siul2 node!")
+
+    nodes = dtb.search(scmi_node_name, itype=fdt.ItemType.NODE)
+    if len(nodes) != 1:
+        print("Can't find scmi node!")
+        sys.exit(1)
+
+    scmi = nodes[0]
+    print("Found scmi node!")
+
+    node_names = []
+    for node in siul2.nodes:
+        print("Copying subnode: ", node.name)
+        node_names.append(node.name)
+        scmi.append(node.copy())
+
+    for name in node_names:
+        siul2.remove_subnode(name)
+
+    if siul2.get_property("phandle") is not None:
+        scmi.set_property("phandle", siul2.get_property("phandle").value)
+        siul2.remove_property("phandle")
+    siul2.set_property("status", "disabled")
+    scmi.set_property("status", "okay")
+
+
+def main():
+    """Main script function."""
+    description = """Copy SIUL2 nodes' properties and subnodes into the SCMI
+                     equivalent nodes. Disable SIUL2 nodes and enable SCMI
+                     ones."""
+    parser = argparse.ArgumentParser(description=description)
+    parser.add_argument('dtb_file', metavar='dtb_file', type=pathlib.Path,
+                        nargs=1, help="path to the dtb file to be processed")
+    args = parser.parse_args()
+
+    dtb_file = args.dtb_file[0]
+    print("Processing: ", dtb_file)
+
+    data = None
+    with open(dtb_file, "rb") as file:
+        data = file.read()
+
+    dtb = fdt.parse_dtb(data)
+
+    print("Replacing pinctrl")
+    switch_node(dtb, SCMI_PINCTRL_NAME, SIUL2_PINCTRL_NAME)
+    print("Replacing GPIO")
+    switch_node(dtb, SCMI_GPIO_NAME, SIUL2_GPIO_NAME)
+
+    with open(dtb_file, "wb") as file:
+        file.write(dtb.to_dtb())
+
+
+if __name__ == "__main__":
+    main()
-- 
2.25.1

