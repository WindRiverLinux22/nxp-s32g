From f54ed6f81ceff324cd5f354da440b78507e2bed0 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Wed, 7 Dec 2022 13:48:07 +0200
Subject: [PATCH 05/11] pinctrl: Iterate through all 'gpio-ranges'
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Some GPIO drivers might need multiple pin ranges attached to them.
'pinctrl_gpio_get_pinctrl_and_offset' function assumed that only one
range could be attached to a GPIO controller node which isnâ€™t always the
case.

Issue: ALB-9555
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/pinctrl/pinctrl-uclass.c | 61 ++++++++++++++++++--------------
 1 file changed, 35 insertions(+), 26 deletions(-)

diff --git a/drivers/pinctrl/pinctrl-uclass.c b/drivers/pinctrl/pinctrl-uclass.c
index d50f810fa8..b69953f644 100644
--- a/drivers/pinctrl/pinctrl-uclass.c
+++ b/drivers/pinctrl/pinctrl-uclass.c
@@ -177,41 +177,50 @@ pinctrl_gpio_get_pinctrl_and_offset(struct udevice *dev, unsigned offset,
 {
 	struct ofnode_phandle_args args;
 	unsigned gpio_offset, pfc_base, pfc_pins;
-	int ret;
+	bool found = false;
+	int ret = 0, i;
 
-	ret = dev_read_phandle_with_args(dev, "gpio-ranges", NULL, 3,
-					 0, &args);
-	if (ret) {
-		dev_dbg(dev, "%s: dev_read_phandle_with_args: err=%d\n",
-			__func__, ret);
-		return ret;
-	}
+	for (i = 0; !ret; i++) {
+		ret = dev_read_phandle_with_args(dev, "gpio-ranges", NULL, 3,
+						 i, &args);
+		if (ret) {
+			dev_dbg(dev, "%s: dev_read_phandle_with_args: err=%d index=%d\n",
+				__func__, ret, i);
+			return ret;
+		}
 
-	ret = uclass_get_device_by_ofnode(UCLASS_PINCTRL,
-					  args.node, pctldev);
-	if (ret) {
-		dev_dbg(dev,
-			"%s: uclass_get_device_by_of_offset failed: err=%d\n",
-			__func__, ret);
-		return ret;
-	}
+		ret = uclass_get_device_by_ofnode(UCLASS_PINCTRL,
+						  args.node, pctldev);
+		if (ret) {
+			dev_dbg(dev,
+				"%s: uclass_get_device_by_of_offset failed: err=%d\n",
+				__func__, ret);
+			return ret;
+		}
+
+		gpio_offset = args.args[0];
+		pfc_base = args.args[1];
+		pfc_pins = args.args[2];
+
+		if (offset < gpio_offset || offset > gpio_offset + pfc_pins)
+			continue;
 
-	gpio_offset = args.args[0];
-	pfc_base = args.args[1];
-	pfc_pins = args.args[2];
+		offset -= gpio_offset;
+		offset += pfc_base;
+		*pin_selector = offset;
+		found = true;
 
-	if (offset < gpio_offset || offset > gpio_offset + pfc_pins) {
+		break;
+	}
+
+	if (!found) {
 		dev_dbg(dev,
 			"%s: GPIO can not be mapped to pincontrol pin\n",
 			__func__);
-		return -EINVAL;
+		ret = -EINVAL;
 	}
 
-	offset -= gpio_offset;
-	offset += pfc_base;
-	*pin_selector = offset;
-
-	return 0;
+	return ret;
 }
 
 /**
-- 
2.25.1

