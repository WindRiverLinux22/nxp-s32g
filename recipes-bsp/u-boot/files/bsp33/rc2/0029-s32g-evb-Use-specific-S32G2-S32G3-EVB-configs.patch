From 5b5e39166fa4c4cc11850695e2323bf99fdefd03 Mon Sep 17 00:00:00 2001
From: Ciprian Costea <ciprianmarian.costea@nxp.com>
Date: Wed, 13 Apr 2022 16:30:48 +0300
Subject: [PATCH 29/33] s32g: evb: Use specific 'S32G2/S32G3-EVB' configs

Guarded usb phy code from 'ehci-mx6' driver only applies
to S32G2/S32G3-EVB platforms.

Issue: ALB-8791
Upstream-Status: Pending 

Signed-off-by: Ciprian Costea <ciprianmarian.costea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/usb/host/ehci-mx6.c | 26 ++++++++++++++++----------
 1 file changed, 16 insertions(+), 10 deletions(-)

diff --git a/drivers/usb/host/ehci-mx6.c b/drivers/usb/host/ehci-mx6.c
index eec3eb0afc..490b0b7bcf 100644
--- a/drivers/usb/host/ehci-mx6.c
+++ b/drivers/usb/host/ehci-mx6.c
@@ -147,14 +147,15 @@ static void usb_power_config(int index)
 }
 #endif
 
-#if defined(CONFIG_MX6) || defined(CONFIG_ARCH_S32G2) || \
-	defined(CONFIG_ARCH_S32G3)
+#if defined(CONFIG_MX6) || defined(CONFIG_TARGET_S32G2XXAEVB) || \
+	defined(CONFIG_TARGET_S32G3XXAEVB)
 /* Return 0 : host node, <>0 : device mode */
 static int usb_phy_enable(int index, struct usb_ehci *ehci)
 {
 	int ret;
 	void __iomem *usb_cmd;
-#if !defined(CONFIG_ARCH_S32G2) && !defined(CONFIG_ARCH_S32G3)
+#if !defined(CONFIG_TARGET_S32G2XXAEVB) && \
+	!defined(CONFIG_TARGET_S32G3XXAEVB)
 	void __iomem *phy_reg;
 	void __iomem *phy_ctrl;
 
@@ -177,7 +178,8 @@ static int usb_phy_enable(int index, struct usb_ehci *ehci)
 	if (ret)
 		return ret;
 
-#if !defined(CONFIG_ARCH_S32G2) && !defined(CONFIG_ARCH_S32G3)
+#if !defined(CONFIG_TARGET_S32G2XXAEVB) && \
+	!defined(CONFIG_TARGET_S32G3XXAEVB)
 	/* Reset USBPHY module */
 	setbits_le32(phy_ctrl, USBPHY_CTRL_SFTRST);
 	udelay(10);
@@ -279,7 +281,8 @@ int usb_phy_mode(int port)
 
 static void usb_oc_config(int index)
 {
-#if !defined(CONFIG_ARCH_S32G2) && !defined(CONFIG_ARCH_S32G3)
+#if !defined(CONFIG_TARGET_S32G2XXAEVB) && \
+	!defined(CONFIG_TARGET_S32G3XXAEVB)
 #if defined(CONFIG_MX6)
 	struct usbnc_regs *usbnc = (struct usbnc_regs *)(USB_BASE_ADDR +
 			USB_OTHERREGS_OFFSET);
@@ -356,7 +359,8 @@ int __weak board_ehci_power(int port, int on)
 
 int ehci_mx6_common_init(struct usb_ehci *ehci, int index)
 {
-#if !defined(CONFIG_ARCH_S32G2) && !defined(CONFIG_ARCH_S32G3)
+#if !defined(CONFIG_TARGET_S32G2XXAEVB) && \
+	!defined(CONFIG_TARGET_S32G3XXAEVB)
 	int ret;
 
 	enable_usboh3_clk(1);
@@ -375,8 +379,8 @@ int ehci_mx6_common_init(struct usb_ehci *ehci, int index)
 	usb_internal_phy_clock_gate(index, 1);
 #endif
 
-#if defined(CONFIG_MX6) || defined(CONFIG_ARCH_S32G2) || \
-	defined(CONFIG_ARCH_S32G3)
+#if defined(CONFIG_MX6) || defined(CONFIG_TARGET_S32G2XXAEVB) || \
+	defined(CONFIG_TARGET_S32G3XXAEVB)
 	usb_phy_enable(index, ehci);
 #endif
 
@@ -482,7 +486,8 @@ static const struct ehci_ops mx6_ehci_ops = {
 
 static int ehci_usb_phy_mode(struct udevice *dev)
 {
-#if !defined(CONFIG_ARCH_S32G2) && !defined(CONFIG_ARCH_S32G3)
+#if !defined(CONFIG_TARGET_S32G2XXAEVB) && \
+	!defined(CONFIG_TARGET_S32G3XXAEVB)
 	struct usb_platdata *plat = dev_get_platdata(dev);
 	void *__iomem addr = (void *__iomem)devfdt_get_addr(dev);
 	void *__iomem phy_ctrl, *__iomem phy_status;
@@ -554,7 +559,8 @@ static int ehci_usb_ofdata_to_platdata(struct udevice *dev)
 
 static int ehci_usb_bind(struct udevice *dev)
 {
-#if !defined(CONFIG_ARCH_S32G2) && !defined(CONFIG_ARCH_S32G3)
+#if !defined(CONFIG_TARGET_S32G2XXAEVB) && \
+	!defined(CONFIG_TARGET_S32G3XXAEVB)
 	/*
 	 * TODO:
 	 * This driver is only partly converted to DT probing and still uses
-- 
2.17.1

