From bbbbf842ce0936b7b44b8663fef53b7d784dd7c3 Mon Sep 17 00:00:00 2001
From: "Radu Pirea (NXP OSS)" <radu-nicolae.pirea@oss.nxp.com>
Date: Wed, 20 Apr 2022 14:38:16 +0300
Subject: [PATCH 33/33] phy: nxp-c45-tja11xx: check for FUSA_PASS irq

After reset, the PHY runs a set of self-tests and an interrupt is
triggered if the tests have passed. In u-boot we have no interrupts, and
the reset call will wait ~100 ms for the FUSA_PASS bit to pop up, and if
the bit does not pop up it will return -EIO.

Issue: ALB-8817

Upstream-Status: Pending 

Signed-off-by: Radu Pirea (NXP OSS) <radu-nicolae.pirea@oss.nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/phy/nxp-c45-tja11xx.c | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/drivers/net/phy/nxp-c45-tja11xx.c b/drivers/net/phy/nxp-c45-tja11xx.c
index 9ef4a02dfe..692d56d148 100644
--- a/drivers/net/phy/nxp-c45-tja11xx.c
+++ b/drivers/net/phy/nxp-c45-tja11xx.c
@@ -2,7 +2,7 @@
 /*
  * NXP C45 PHY driver
  *
- * Copyright 2021 NXP
+ * Copyright 2021-2022 NXP
  * Author: Radu Pirea <radu-nicolae.pirea@oss.nxp.com>
  */
 #include <common.h>
@@ -20,6 +20,9 @@
 #define DEVICE_CONTROL_CONFIG_GLOBAL_EN	BIT(14)
 #define DEVICE_CONTROL_CONFIG_ALL_EN	BIT(13)
 
+#define VEND1_ALWAYS_ACCESSIBLE		0x801F
+#define ALWAYS_ACCESSIBLE_FUSA_PASS	BIT(4)
+
 #define VEND1_PORT_CONTROL		0x8040
 #define PORT_CONTROL_EN			BIT(14)
 
@@ -58,6 +61,7 @@
 #define MAX_ID_PS			2260U
 #define DEFAULT_ID_PS			2000U
 
+#define FUSA_DELAY_MS			10
 #define RESET_DELAY_MS			25
 #define CONF_EN_DELAY_US		450
 
@@ -79,10 +83,21 @@ static int nxp_c45_soft_reset(struct phy_device *phydev)
 		ret = phy_read_mmd(phydev, MDIO_MMD_VEND1,
 				   VEND1_DEVICE_CONTROL);
 		if (!(ret & DEVICE_CONTROL_RESET))
-			return 0;
+			break;
 		mdelay(RESET_DELAY_MS);
 	} while (tries--);
 
+	tries = 10;
+	do {
+		ret = phy_read_mmd(phydev, MDIO_MMD_VEND1,
+				   VEND1_ALWAYS_ACCESSIBLE);
+		if (!(ret & ALWAYS_ACCESSIBLE_FUSA_PASS))
+			return phy_write_mmd(phydev, MDIO_MMD_VEND1,
+				   VEND1_ALWAYS_ACCESSIBLE,
+				   ALWAYS_ACCESSIBLE_FUSA_PASS);
+		mdelay(FUSA_DELAY_MS);
+	} while (tries--);
+
 	return -EIO;
 }
 
-- 
2.17.1

