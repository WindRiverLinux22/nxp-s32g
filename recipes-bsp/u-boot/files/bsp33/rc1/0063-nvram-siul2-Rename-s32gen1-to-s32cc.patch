From f2b424df3511f7d1fa9975f6c18d0a61f796ed4c Mon Sep 17 00:00:00 2001
From: Ciprian Costea <ciprianmarian.costea@nxp.com>
Date: Mon, 21 Mar 2022 09:50:45 +0200
Subject: [PATCH 063/103] nvram: siul2: Rename s32gen1 to s32cc

Also, rename 'fsl' into 'nxp'.

Issue: ALB-8585
Upstream-Status: Pending 

Signed-off-by: Ciprian Costea <ciprianmarian.costea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/dts/fsl-s32g.dtsi                    |   2 +-
 arch/arm/dts/fsl-s32g274a.dtsi                |   2 +-
 arch/arm/dts/fsl-s32g3.dtsi                   |   2 +-
 arch/arm/dts/fsl-s32r45.dts                   |   4 +-
 .../arm/mach-s32/include/s32-cc/siul2_nvram.h |  30 +++++
 arch/arm/mach-s32/s32-cc/fdt.c                |  21 ++--
 arch/arm/mach-s32/s32-cc/start_m7.c           |  12 +-
 ...l2-nvmem.yaml => nxp,s32-siul2-nvmem.yaml} |  16 +--
 drivers/cpu/s32gen1_cpu.c                     |  15 ++-
 drivers/misc/Makefile                         |   2 +-
 ...gen1_siul2_nvram.c => s32cc_siul2_nvram.c} | 109 +++++++++---------
 drivers/misc/s32gen1_siul2_nvram.h            |  30 -----
 drivers/pci/pcie_s32gen1.c                    |   6 +-
 13 files changed, 124 insertions(+), 127 deletions(-)
 create mode 100644 arch/arm/mach-s32/include/s32-cc/siul2_nvram.h
 rename doc/device-tree-bindings/misc/{fsl,s32-siul2-nvmem.yaml => nxp,s32-siul2-nvmem.yaml} (75%)
 rename drivers/misc/{s32gen1_siul2_nvram.c => s32cc_siul2_nvram.c} (76%)
 delete mode 100644 drivers/misc/s32gen1_siul2_nvram.h

diff --git a/arch/arm/dts/fsl-s32g.dtsi b/arch/arm/dts/fsl-s32g.dtsi
index a16f2344da..10b421c668 100644
--- a/arch/arm/dts/fsl-s32g.dtsi
+++ b/arch/arm/dts/fsl-s32g.dtsi
@@ -152,7 +152,7 @@
 		};
 
 		siul2_0_nvram: siul2_0_nvram {
-			compatible = "fsl,s32g-siul2_0-nvram";
+			compatible = "nxp,s32g-siul2_0-nvram";
 			status = "okay";
 			u-boot,dm-pre-reloc;
 		};
diff --git a/arch/arm/dts/fsl-s32g274a.dtsi b/arch/arm/dts/fsl-s32g274a.dtsi
index 3f4a8291f2..b21e258fb4 100644
--- a/arch/arm/dts/fsl-s32g274a.dtsi
+++ b/arch/arm/dts/fsl-s32g274a.dtsi
@@ -26,5 +26,5 @@
 };
 
 &siul2_1_nvram {
-	compatible = "fsl,s32g2-siul2_1-nvram";
+	compatible = "nxp,s32g2-siul2_1-nvram";
 };
diff --git a/arch/arm/dts/fsl-s32g3.dtsi b/arch/arm/dts/fsl-s32g3.dtsi
index 409f04db8f..d09182a078 100644
--- a/arch/arm/dts/fsl-s32g3.dtsi
+++ b/arch/arm/dts/fsl-s32g3.dtsi
@@ -66,5 +66,5 @@
 };
 
 &siul2_1_nvram {
-	compatible = "fsl,s32g3-siul2_1-nvram";
+	compatible = "nxp,s32g3-siul2_1-nvram";
 };
diff --git a/arch/arm/dts/fsl-s32r45.dts b/arch/arm/dts/fsl-s32r45.dts
index 88fada6f92..3c90abbe56 100644
--- a/arch/arm/dts/fsl-s32r45.dts
+++ b/arch/arm/dts/fsl-s32r45.dts
@@ -65,7 +65,7 @@
 		};
 
 		siul2_0_nvram: siul2_0_nvram {
-			compatible = "fsl,s32r-siul2_0-nvram";
+			compatible = "nxp,s32r-siul2_0-nvram";
 			status = "okay";
 			u-boot,dm-pre-reloc;
 		};
@@ -96,7 +96,7 @@
 		};
 
 		siul2_1_nvram {
-			compatible = "fsl,s32r-siul2_1-nvram";
+			compatible = "nxp,s32r-siul2_1-nvram";
 			status = "okay";
 			u-boot,dm-pre-reloc;
 		};
diff --git a/arch/arm/mach-s32/include/s32-cc/siul2_nvram.h b/arch/arm/mach-s32/include/s32-cc/siul2_nvram.h
new file mode 100644
index 0000000000..1a1a9f43fd
--- /dev/null
+++ b/arch/arm/mach-s32/include/s32-cc/siul2_nvram.h
@@ -0,0 +1,30 @@
+/* SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause */
+/*
+ * Copyright 2022 NXP
+ */
+#ifndef S32CC_SIUL2_NVRAM_H
+#define S32CC_SIUL2_NVRAM_H
+
+/* siul2_0 */
+#define S32CC_SOC_LETTER	0x0
+#define S32CC_SOC_PART_NO	0x4
+#define S32CC_SOC_MAJOR	0x8
+#define S32CC_SOC_MINOR	0xc
+#define S32CC_MAX_CORE_FREQ	0x10
+#define S32CC_MAX_A53_CORES_PER_CLUSTER	0x14
+
+/* Used for getting a mask where the state of a bit
+ * on position N corresponds to Core N,
+ * 0 = defeatured
+ * 1 = available
+ */
+#define S32CC_A53_CORES_MASK	0x18
+
+#define S32CC_OVERWRITE_PCIE_DEV_ID		0x1C
+
+/* siul2_1 */
+#define S32CC_SERDES_PRESENCE	0x100
+#define S32CC_LAX_PRESENCE	0x104
+#define S32CC_SOC_SUBMINOR	0x108
+
+#endif
diff --git a/arch/arm/mach-s32/s32-cc/fdt.c b/arch/arm/mach-s32/s32-cc/fdt.c
index 5536a12ada..cd1d8a3a0a 100644
--- a/arch/arm/mach-s32/s32-cc/fdt.c
+++ b/arch/arm/mach-s32/s32-cc/fdt.c
@@ -5,20 +5,19 @@
  */
 
 #include <common.h>
-#include <linux/libfdt.h>
-#include <malloc.h>
 #include <fdt_support.h>
 #include <fdtdec.h>
-#include <asm/io.h>
-#include <linux/sizes.h>
 #include <hwconfig.h>
-#include <asm/arch-s32/s32-cc/serdes_hwconfig.h>
-#include <dt-bindings/phy/phy.h>
-#include <linux/ctype.h>
-#include <dm/uclass.h>
+#include <malloc.h>
 #include <misc.h>
 #include <s32gen1_a53_gpr.h>
-#include <s32gen1_siul2_nvram.h>
+#include <asm/arch-s32/s32-cc/serdes_hwconfig.h>
+#include <dm/uclass.h>
+#include <linux/ctype.h>
+#include <linux/libfdt.h>
+#include <linux/sizes.h>
+#include <s32-cc/siul2_nvram.h>
+#include <dt-bindings/phy/phy.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -62,7 +61,7 @@ static int get_cores_info(u32 *max_cores_per_cluster,
 		return ret;
 	}
 
-	ret = misc_read(siul2_nvmem, S32GEN1_MAX_A53_CORES_PER_CLUSTER,
+	ret = misc_read(siul2_nvmem, S32CC_MAX_A53_CORES_PER_CLUSTER,
 			max_cores_per_cluster, sizeof(*max_cores_per_cluster));
 	if (ret != sizeof(*max_cores_per_cluster)) {
 		printf("%s: Failed to read SoC's Part Number (err = %d)\n",
@@ -75,7 +74,7 @@ static int get_cores_info(u32 *max_cores_per_cluster,
 		return -EINVAL;
 	}
 
-	ret = misc_read(siul2_nvmem, S32GEN1_A53_CORES_MASK,
+	ret = misc_read(siul2_nvmem, S32CC_A53_CORES_MASK,
 			cpu_mask, sizeof(*cpu_mask));
 	if (ret != sizeof(*cpu_mask)) {
 		printf("%s: Failed to read SoC's Part Number (err = %d)\n",
diff --git a/arch/arm/mach-s32/s32-cc/start_m7.c b/arch/arm/mach-s32/s32-cc/start_m7.c
index c248f1baeb..c6268de20e 100644
--- a/arch/arm/mach-s32/s32-cc/start_m7.c
+++ b/arch/arm/mach-s32/s32-cc/start_m7.c
@@ -3,12 +3,12 @@
  * Copyright 2022 NXP
  */
 
-#include <asm/io.h>
-#include <command.h>
 #include <common.h>
-#include <dm/uclass.h>
+#include <command.h>
 #include <misc.h>
-#include <s32gen1_siul2_nvram.h>
+#include <asm/io.h>
+#include <dm/uclass.h>
+#include <s32-cc/siul2_nvram.h>
 
 #define S32_SRAM_6M	(6 * SZ_1M)
 #define S32_SRAM_8M	(8 * SZ_1M)
@@ -75,12 +75,12 @@ static u32 get_sram_size(void)
 	if (ret)
 		goto nvmem_err;
 
-	ret = misc_read(siul20_nvmem, S32GEN1_SOC_LETTER, &letter,
+	ret = misc_read(siul20_nvmem, S32CC_SOC_LETTER, &letter,
 			sizeof(letter));
 	if (ret != sizeof(letter))
 		goto nvmem_err;
 
-	ret = misc_read(siul20_nvmem, S32GEN1_SOC_PART_NO, &part_number,
+	ret = misc_read(siul20_nvmem, S32CC_SOC_PART_NO, &part_number,
 			sizeof(part_number));
 	if (ret != sizeof(part_number))
 		goto nvmem_err;
diff --git a/doc/device-tree-bindings/misc/fsl,s32-siul2-nvmem.yaml b/doc/device-tree-bindings/misc/nxp,s32-siul2-nvmem.yaml
similarity index 75%
rename from doc/device-tree-bindings/misc/fsl,s32-siul2-nvmem.yaml
rename to doc/device-tree-bindings/misc/nxp,s32-siul2-nvmem.yaml
index 961cab996b..187f50d0da 100644
--- a/doc/device-tree-bindings/misc/fsl,s32-siul2-nvmem.yaml
+++ b/doc/device-tree-bindings/misc/nxp,s32-siul2-nvmem.yaml
@@ -1,10 +1,10 @@
 # SPDX-License-Identifier: (GPL-2.0 or BSD-2-Clause)
 %YAML 1.2
 ---
-$id: http://devicetree.org/schemas/nvmem/fsl,s32-siul2-nvmem.yaml#
+$id: http://devicetree.org/schemas/nvmem/nxp,s32-siul2-nvmem.yaml#
 $schema: http://devicetree.org/meta-schemas/core.yaml#
 
-title: NXP S32 SIUL2 NVMEM driver
+title: NXP S32CC SIUL2 NVMEM driver
 
 maintainers:
   - Catalin Udma <catalin-dan.udma@nxp.com>
@@ -21,11 +21,11 @@ properties:
     description: |-
       Each compatible string provides an interface for
       SIUL2_0 or SIUL2_1 module.
-      const: fsl,s32g-siul2_0-nvram
-      const: fsl,s32r-siul2_0-nvram
-      const: fsl,s32g2-siul2_1-nvram
-      const: fsl,s32g3-siul2_1-nvram
-      const: fsl,s32r-siul2_1-nvram
+      const: nxp,s32g-siul2_0-nvram
+      const: nxp,s32r-siul2_0-nvram
+      const: nxp,s32g2-siul2_1-nvram
+      const: nxp,s32g3-siul2_1-nvram
+      const: nxp,s32r-siul2_1-nvram
 
   reg:
     description:
@@ -49,7 +49,7 @@ unevaluatedProperties: false
 examples:
   - |
     nvram: nvram@4009C000 {
-      compatible = "fsl,s32g-siul2_0-nvmem";
+      compatible = "nxp,s32g-siul2_0-nvmem";
       reg = <0x0 10>;
       #address-cells = <1>;
       #size-cells = <1>;
diff --git a/drivers/cpu/s32gen1_cpu.c b/drivers/cpu/s32gen1_cpu.c
index a3af3ff321..38f6587cc8 100644
--- a/drivers/cpu/s32gen1_cpu.c
+++ b/drivers/cpu/s32gen1_cpu.c
@@ -3,13 +3,12 @@
  * Copyright 2022 NXP
  */
 
-#include <asm/armv8/cpu.h>
 #include <common.h>
 #include <cpu.h>
 #include <dm.h>
-#include <dm/uclass.h>
 #include <misc.h>
-#include <s32gen1_siul2_nvram.h>
+#include <dm/uclass.h>
+#include <s32-cc/siul2_nvram.h>
 
 struct cpu_s32gen1_platdata {
 	struct udevice *siul20_nvmem;
@@ -23,7 +22,7 @@ static int cpu_s32gen1_get_desc(struct udevice *dev, char *buf, int size)
 	struct cpu_s32gen1_platdata *plat = dev_get_platdata(dev);
 	int ret;
 
-	ret = misc_read(plat->siul20_nvmem, S32GEN1_SOC_LETTER, &letter,
+	ret = misc_read(plat->siul20_nvmem, S32CC_SOC_LETTER, &letter,
 			sizeof(letter));
 	if (ret != sizeof(letter)) {
 		printf("%s: Failed to read SoC's letter (err = %d)\n",
@@ -31,7 +30,7 @@ static int cpu_s32gen1_get_desc(struct udevice *dev, char *buf, int size)
 		return -EINVAL;
 	}
 
-	ret = misc_read(plat->siul20_nvmem, S32GEN1_SOC_PART_NO, &part_number,
+	ret = misc_read(plat->siul20_nvmem, S32CC_SOC_PART_NO, &part_number,
 			sizeof(part_number));
 	if (ret != sizeof(part_number)) {
 		printf("%s: Failed to read SoC's part number (err = %d)\n",
@@ -39,7 +38,7 @@ static int cpu_s32gen1_get_desc(struct udevice *dev, char *buf, int size)
 		return -EINVAL;
 	}
 
-	ret = misc_read(plat->siul20_nvmem, S32GEN1_SOC_MAJOR, &major,
+	ret = misc_read(plat->siul20_nvmem, S32CC_SOC_MAJOR, &major,
 			sizeof(major));
 	if (ret != sizeof(major)) {
 		printf("%s: Failed to read SoC's major (err = %d)\n",
@@ -47,7 +46,7 @@ static int cpu_s32gen1_get_desc(struct udevice *dev, char *buf, int size)
 		return -EINVAL;
 	}
 
-	ret = misc_read(plat->siul20_nvmem, S32GEN1_SOC_MINOR, &minor,
+	ret = misc_read(plat->siul20_nvmem, S32CC_SOC_MINOR, &minor,
 			sizeof(minor));
 	if (ret != sizeof(minor)) {
 		printf("%s: Failed to read SoC's minor (err = %d)\n",
@@ -56,7 +55,7 @@ static int cpu_s32gen1_get_desc(struct udevice *dev, char *buf, int size)
 	}
 
 	/* It might be unavailable */
-	ret = misc_read(plat->siul21_nvmem, S32GEN1_SOC_SUBMINOR, &subminor,
+	ret = misc_read(plat->siul21_nvmem, S32CC_SOC_SUBMINOR, &subminor,
 			sizeof(subminor));
 	if (ret == sizeof(subminor))
 		has_subminor = true;
diff --git a/drivers/misc/Makefile b/drivers/misc/Makefile
index 03a9ef6f3d..cd7b4922a5 100644
--- a/drivers/misc/Makefile
+++ b/drivers/misc/Makefile
@@ -52,6 +52,7 @@ obj-$(CONFIG_MPC83XX_SERDES) += mpc83xx_serdes.o
 obj-$(CONFIG_MXC_OCOTP) += mxc_ocotp.o
 obj-$(CONFIG_MXS_OCOTP) += mxs_ocotp.o
 obj-$(CONFIG_NUVOTON_NCT6102D) += nuvoton_nct6102d.o
+obj-$(CONFIG_NXP_S32CC) += s32cc_siul2_nvram.o
 obj-$(CONFIG_P2SB) += p2sb-uclass.o
 obj-$(CONFIG_PCA9551_LED) += pca9551_led.o
 obj-$(CONFIG_$(SPL_)PWRSEQ) += pwrseq-uclass.o
@@ -60,7 +61,6 @@ obj-$(CONFIG_ROCKCHIP_EFUSE) += rockchip-efuse.o
 obj-$(CONFIG_ROCKCHIP_OTP) += rockchip-otp.o
 obj-$(CONFIG_NXP_S32CC) += s32gen1_fuse.o
 obj-$(CONFIG_NXP_S32CC) += s32gen1_ocotp.o
-obj-$(CONFIG_NXP_S32CC) += s32gen1_siul2_nvram.o
 obj-$(CONFIG_NXP_S32CC) += s32gen1_a53_gpr.o
 obj-$(CONFIG_SANDBOX) += syscon_sandbox.o misc_sandbox.o
 obj-$(CONFIG_SMSC_LPC47M) += smsc_lpc47m.o
diff --git a/drivers/misc/s32gen1_siul2_nvram.c b/drivers/misc/s32cc_siul2_nvram.c
similarity index 76%
rename from drivers/misc/s32gen1_siul2_nvram.c
rename to drivers/misc/s32cc_siul2_nvram.c
index 46d83dd8d5..7958df02c4 100644
--- a/drivers/misc/s32gen1_siul2_nvram.c
+++ b/drivers/misc/s32cc_siul2_nvram.c
@@ -2,15 +2,15 @@
 /*
  * Copyright 2022 NXP
  */
+#include <dm.h>
 #include <log.h>
 #include <misc.h>
 #include <asm/io.h>
 #include <dm/device.h>
-#include <dm/fdtaddr.h>
 #include <linux/bitops.h>
 #include <linux/errno.h>
 #include <linux/kernel.h>
-#include "s32gen1_siul2_nvram.h"
+#include <s32-cc/siul2_nvram.h>
 
 #define MIDR1_OFF	0x4
 #define MIDR2_OFF	0x8
@@ -47,12 +47,11 @@
 #define S32G_MAX_PART_NO	399
 #define S32R_PART_NO_MIN	450
 
-#define CPUMASK_S32G2		((BIT(0) | BIT(1) | BIT(2) | BIT(3)))
+#define CPUMASK_S32G2				GENMASK(3, 0)
 #define CPUMASK_S32G2_DERIVATIVE	(BIT(0) | BIT(2))
-#define CPUMASK_S32G3		(BIT(0) | BIT(1) | BIT(2) | BIT(3) | \
-				 BIT(4) | BIT(5) | BIT(6) | BIT(7))
-#define CPUMASK_S32G3_DERIVATIVE	(BIT(0) | BIT(1) | BIT(2) | BIT(3))
-#define CPUMASK_S32R		((BIT(0) | BIT(1) | BIT(2) | BIT(3)))
+#define CPUMASK_S32G3				GENMASK(7, 0)
+#define CPUMASK_S32G3_DERIVATIVE	GENMASK(3, 0)
+#define CPUMASK_S32R				GENMASK(3, 0)
 
 struct siul2_nvram;
 
@@ -64,15 +63,15 @@ struct siul_mapping {
 	u32 (*adjust_value)(u32 value, struct siul2_nvram *nvram);
 };
 
-struct siul_platdata {
+struct siul_plat {
 	const struct siul_mapping *mappings;
 	size_t n_mappings;
-	const struct siul_platdata *next;
+	const struct siul_plat *next;
 };
 
 struct siul2_nvram {
-	const struct siul_platdata *platdata;
-	fdt_addr_t base;
+	const struct siul_plat *plat;
+	void __iomem *base;
 };
 
 static inline u32 get_second_digit(u32 val)
@@ -237,40 +236,40 @@ static u32 adjust_pcie_dev_id(u32 value,
 
 static const struct siul_mapping siul20_mappings[] = {
 	{
-		.nvram_off = S32GEN1_SOC_MAJOR,
+		.nvram_off = S32CC_SOC_MAJOR,
 		.siul2_off = MIDR1_OFF,
 		.mask = MAJOR_MASK,
 		.shift = MAJOR_SHIFT,
 		.adjust_value = adjust_major,
 	},
 	{
-		.nvram_off = S32GEN1_SOC_MINOR,
+		.nvram_off = S32CC_SOC_MINOR,
 		.siul2_off = MIDR1_OFF,
 		.mask = MINOR_MASK,
 		.shift = MINOR_SHIFT,
 	},
 	{
-		.nvram_off = S32GEN1_SOC_PART_NO,
+		.nvram_off = S32CC_SOC_PART_NO,
 		.siul2_off = MIDR1_OFF,
 		.mask = PART_NO_MASK,
 		.shift = PART_NO_SHIFT,
 	},
 	{
-		.nvram_off = S32GEN1_SOC_LETTER,
+		.nvram_off = S32CC_SOC_LETTER,
 		.siul2_off = MIDR1_OFF,
 		.mask = LETTER_MASK,
 		.shift = LETTER_SHIFT,
 		.adjust_value = adjust_letter,
 	},
 	{
-		.nvram_off = S32GEN1_MAX_CORE_FREQ,
+		.nvram_off = S32CC_MAX_CORE_FREQ,
 		.siul2_off = MIDR2_OFF,
 		.mask = CORE_FREQ_MASK,
 		.shift = CORE_FREQ_SHIFT,
 		.adjust_value = adjust_freq,
 	},
 	{
-		.nvram_off = S32GEN1_OVERWRITE_PCIE_DEV_ID,
+		.nvram_off = S32CC_OVERWRITE_PCIE_DEV_ID,
 		.siul2_off = MIDR1_OFF,
 		.mask = PART_NO_MASK,
 		.shift = PART_NO_SHIFT,
@@ -280,13 +279,13 @@ static const struct siul_mapping siul20_mappings[] = {
 
 static const struct siul_mapping siul21_mappings[] = {
 	{
-		.nvram_off = S32GEN1_SERDES_PRESENCE,
+		.nvram_off = S32CC_SERDES_PRESENCE,
 		.siul2_off = MIDR2_OFF,
 		.mask = SERDES_MASK,
 		.shift = SERDES_SHIFT,
 	},
 	{
-		.nvram_off = S32GEN1_LAX_PRESENCE,
+		.nvram_off = S32CC_LAX_PRESENCE,
 		.siul2_off = MIDR2_OFF,
 		.mask = LAX_MASK,
 		.shift = LAX_SHIFT,
@@ -295,14 +294,14 @@ static const struct siul_mapping siul21_mappings[] = {
 
 static const struct siul_mapping s32g_siul20_mappings[] = {
 	{
-		.nvram_off = S32GEN1_MAX_A53_CORES_PER_CLUSTER,
+		.nvram_off = S32CC_MAX_A53_CORES_PER_CLUSTER,
 		.siul2_off = MIDR1_OFF,
 		.mask = PART_NO_MASK,
 		.shift = PART_NO_SHIFT,
 		.adjust_value = adjust_s32g_max_cores_per_cluster,
 	},
 	{
-		.nvram_off = S32GEN1_A53_CORES_MASK,
+		.nvram_off = S32CC_A53_CORES_MASK,
 		.siul2_off = MIDR1_OFF,
 		.mask = PART_NO_MASK,
 		.shift = PART_NO_SHIFT,
@@ -312,14 +311,14 @@ static const struct siul_mapping s32g_siul20_mappings[] = {
 
 static const struct siul_mapping s32r_siul20_mappings[] = {
 	{
-		.nvram_off = S32GEN1_MAX_A53_CORES_PER_CLUSTER,
+		.nvram_off = S32CC_MAX_A53_CORES_PER_CLUSTER,
 		.siul2_off = MIDR1_OFF,
 		.mask = PART_NO_MASK,
 		.shift = PART_NO_SHIFT,
 		.adjust_value = adjust_s32r_max_cores_per_cluster,
 	},
 	{
-		.nvram_off = S32GEN1_A53_CORES_MASK,
+		.nvram_off = S32CC_A53_CORES_MASK,
 		.siul2_off = MIDR1_OFF,
 		.mask = PART_NO_MASK,
 		.shift = PART_NO_SHIFT,
@@ -329,39 +328,39 @@ static const struct siul_mapping s32r_siul20_mappings[] = {
 
 static const struct siul_mapping s32g2_siul21_mappings[] = {
 	{
-		.nvram_off = S32GEN1_SOC_SUBMINOR,
+		.nvram_off = S32CC_SOC_SUBMINOR,
 		.siul2_off = MIDR2_OFF,
 		.mask = S32G2_SUBMINOR_MASK,
 		.shift = S32G2_SUBMINOR_SHIFT,
 	},
 };
 
-static const struct siul_platdata siul20_platdata = {
+static const struct siul_plat siul20_plat = {
 	.mappings = &siul20_mappings[0],
 	.n_mappings = ARRAY_SIZE(siul20_mappings),
 };
 
-static const struct siul_platdata siul21_platdata = {
+static const struct siul_plat siul21_plat = {
 	.mappings = &siul21_mappings[0],
 	.n_mappings = ARRAY_SIZE(siul21_mappings),
 };
 
-static const struct siul_platdata s32g_siul20_platdata = {
+static const struct siul_plat s32g_siul20_plat = {
 	.mappings = &s32g_siul20_mappings[0],
 	.n_mappings = ARRAY_SIZE(s32g_siul20_mappings),
-	.next = &siul20_platdata,
+	.next = &siul20_plat,
 };
 
-static const struct siul_platdata s32r_siul20_platdata = {
+static const struct siul_plat s32r_siul20_plat = {
 	.mappings = &s32r_siul20_mappings[0],
 	.n_mappings = ARRAY_SIZE(s32r_siul20_mappings),
-	.next = &siul20_platdata,
+	.next = &siul20_plat,
 };
 
-static const struct siul_platdata s32g2_siul21_platdata = {
+static const struct siul_plat s32g2_siul21_plat = {
 	.mappings = &s32g2_siul21_mappings[0],
 	.n_mappings = ARRAY_SIZE(s32g2_siul21_mappings),
-	.next = &siul21_platdata,
+	.next = &siul21_plat,
 };
 
 static int siul2_nvram_read(struct udevice *dev, int offset,
@@ -369,7 +368,7 @@ static int siul2_nvram_read(struct udevice *dev, int offset,
 {
 	struct siul2_nvram *nvram = dev_get_platdata(dev);
 	const struct siul_mapping *mapping = NULL;
-	const struct siul_platdata *platdata = nvram->platdata;
+	const struct siul_plat *plat = nvram->plat;
 	size_t i;
 	u32 val;
 
@@ -377,10 +376,10 @@ static int siul2_nvram_read(struct udevice *dev, int offset,
 	if (size != sizeof(u32))
 		return 0;
 
-	while (platdata) {
-		for (i = 0u; i < platdata->n_mappings; i++) {
-			if (platdata->mappings[i].nvram_off == offset) {
-				mapping = &platdata->mappings[i];
+	while (plat) {
+		for (i = 0u; i < plat->n_mappings; i++) {
+			if (plat->mappings[i].nvram_off == offset) {
+				mapping = &plat->mappings[i];
 				break;
 			}
 		}
@@ -388,7 +387,7 @@ static int siul2_nvram_read(struct udevice *dev, int offset,
 		if (mapping)
 			break;
 
-		platdata = platdata->next;
+		plat = plat->next;
 	}
 
 	if (!mapping)
@@ -410,46 +409,46 @@ static const struct misc_ops siul2_nvram_ops = {
 
 static const struct udevice_id siul2_nvram_ids[] = {
 	{
-		.compatible = "fsl,s32g-siul2_0-nvram",
-		.data = (ulong)&s32g_siul20_platdata,
+		.compatible = "nxp,s32g-siul2_0-nvram",
+		.data = (ulong)&s32g_siul20_plat,
 	},
 	{
-		.compatible = "fsl,s32r-siul2_0-nvram",
-		.data = (ulong)&s32r_siul20_platdata,
+		.compatible = "nxp,s32r-siul2_0-nvram",
+		.data = (ulong)&s32r_siul20_plat,
 	},
 	{
-		.compatible = "fsl,s32g2-siul2_1-nvram",
-		.data = (ulong)&s32g2_siul21_platdata,
+		.compatible = "nxp,s32g2-siul2_1-nvram",
+		.data = (ulong)&s32g2_siul21_plat,
 	},
 	{
-		.compatible = "fsl,s32g3-siul2_1-nvram",
-		.data = (ulong)&siul21_platdata,
+		.compatible = "nxp,s32g3-siul2_1-nvram",
+		.data = (ulong)&siul21_plat,
 	},
 	{
-		.compatible = "fsl,s32r-siul2_1-nvram",
-		.data = (ulong)&siul21_platdata,
+		.compatible = "nxp,s32r-siul2_1-nvram",
+		.data = (ulong)&siul21_plat,
 	},
 	{ /* sentinel */ }
 };
 
-static int siul2_nvram_set_platdata(struct udevice *dev)
+static int siul2_nvram_set_plat(struct udevice *dev)
 {
 	struct siul2_nvram *nvram = dev_get_platdata(dev);
 
-	nvram->base = devfdt_get_addr(dev->parent);
-	if (nvram->base == (fdt_addr_t)FDT_ADDR_T_NONE)
+	nvram->base = dev_read_addr_ptr(dev->parent);
+	if (!nvram->base)
 		return -EINVAL;
 
-	nvram->platdata = (struct siul_platdata *)dev_get_driver_data(dev);
+	nvram->plat = (struct siul_plat *)dev_get_driver_data(dev);
 	return 0;
 }
 
-U_BOOT_DRIVER(s32gen1_siul2_nvram) = {
-	.name = "s32gen1_siul2_nvram",
+U_BOOT_DRIVER(s32cc_siul2_nvram) = {
+	.name = "s32cc_siul2_nvram",
 	.id = UCLASS_MISC,
 	.ops = &siul2_nvram_ops,
 	.of_match = siul2_nvram_ids,
 	.platdata_auto_alloc_size = sizeof(struct siul2_nvram),
-	.ofdata_to_platdata = siul2_nvram_set_platdata,
+	.ofdata_to_platdata = siul2_nvram_set_plat,
 };
 
diff --git a/drivers/misc/s32gen1_siul2_nvram.h b/drivers/misc/s32gen1_siul2_nvram.h
deleted file mode 100644
index 73abac75aa..0000000000
--- a/drivers/misc/s32gen1_siul2_nvram.h
+++ /dev/null
@@ -1,30 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause */
-/*
- * Copyright 2022 NXP
- */
-#ifndef S32GEN1_SIUL2_NVRAM_H
-#define S32GEN1_SIUL2_NVRAM_H
-
-/* siul2_0 */
-#define S32GEN1_SOC_LETTER	0x0
-#define S32GEN1_SOC_PART_NO	0x4
-#define S32GEN1_SOC_MAJOR	0x8
-#define S32GEN1_SOC_MINOR	0xc
-#define S32GEN1_MAX_CORE_FREQ	0x10
-#define S32GEN1_MAX_A53_CORES_PER_CLUSTER	0x14
-
-/* Used for getting a mask where the state of a bit
- * on position N corresponds to Core N,
- * 0 = defeatured
- * 1 = available
- */
-#define S32GEN1_A53_CORES_MASK	0x18
-
-#define S32GEN1_OVERWRITE_PCIE_DEV_ID		0x1C
-
-/* siul2_1 */
-#define S32GEN1_SERDES_PRESENCE	0x100
-#define S32GEN1_LAX_PRESENCE	0x104
-#define S32GEN1_SOC_SUBMINOR	0x108
-
-#endif
diff --git a/drivers/pci/pcie_s32gen1.c b/drivers/pci/pcie_s32gen1.c
index 4edd46a9d1..ba27e837bb 100644
--- a/drivers/pci/pcie_s32gen1.c
+++ b/drivers/pci/pcie_s32gen1.c
@@ -11,12 +11,12 @@
 #include <malloc.h>
 #include <misc.h>
 #include <pci.h>
-#include <s32gen1_siul2_nvram.h>
 #include <asm/io.h>
 #include <asm/arch/clock.h>
 #include <dm/device-internal.h>
 #include <dm/uclass.h>
 #include <linux/sizes.h>
+#include <s32-cc/siul2_nvram.h>
 
 /* CFG1 is used in linux when finding devices on the bus.
  * It is actually the upper half of the config space
@@ -832,7 +832,7 @@ static int s32_pcie_get_dev_id_variant(struct udevice *dev)
 		return -ENODEV;
 	}
 
-	ret = misc_read(siul2_nvmem, S32GEN1_OVERWRITE_PCIE_DEV_ID,
+	ret = misc_read(siul2_nvmem, S32CC_OVERWRITE_PCIE_DEV_ID,
 			&variant_bits, sizeof(variant_bits));
 	if (ret != sizeof(variant_bits)) {
 		printf("%s: Failed to read PCIe device ID (err = %d)\n",
@@ -935,7 +935,7 @@ static int s32_pcie_probe(struct udevice *dev)
 		return ret;
 	}
 
-	ret = misc_read(siul21_nvmem, S32GEN1_SERDES_PRESENCE,
+	ret = misc_read(siul21_nvmem, S32CC_SERDES_PRESENCE,
 			&soc_serdes_presence,
 			sizeof(soc_serdes_presence));
 	if (ret != sizeof(soc_serdes_presence)) {
-- 
2.25.1

