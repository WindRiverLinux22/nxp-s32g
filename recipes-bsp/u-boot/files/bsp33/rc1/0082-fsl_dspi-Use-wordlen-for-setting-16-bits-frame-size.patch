From dcb36aa7b66cdbdfbbd358c3391598f57bb77600 Mon Sep 17 00:00:00 2001
From: Andra-Teodora Ilie <andra.ilie@nxp.com>
Date: Tue, 5 Apr 2022 12:47:05 +0300
Subject: [PATCH 082/103] fsl_dspi: Use wordlen for setting 16 bits frame size

Replace custom mode SPI_FMSZ_* macros. The default frame
size is 8 bits.

Issue: ALB-8598
Upstream-Status: Pending 

Signed-off-by: Andra-Teodora Ilie <andra.ilie@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/misc/sja1105.c |  5 +++--
 drivers/spi/fsl_dspi.c | 10 +++++++---
 include/spi.h          |  5 -----
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/misc/sja1105.c b/drivers/misc/sja1105.c
index c4be9a9f21..15c0c3e7ba 100644
--- a/drivers/misc/sja1105.c
+++ b/drivers/misc/sja1105.c
@@ -17,8 +17,9 @@
 
 #define MIN(X, Y) (((X) < (Y)) ? (X) : (Y))
 
-#define SJA_DSPI_MODE	(SPI_CPHA | SPI_FMSZ_16)
+#define SJA_DSPI_MODE	SPI_CPHA
 #define SJA_DSPI_HZ	4000000
+#define SJA_DSPI_FMSZ	16
 
 #define sja_debug(fmt, ...) \
 	debug("[SJA1105]%s:%d " fmt, __func__, __LINE__, ##__VA_ARGS__);
@@ -117,7 +118,7 @@ static struct spi_slave *get_spi_slave(struct sja_parms *sjap)
 	 */
 	slave->max_hz = SJA_DSPI_HZ;
 	slave->mode = SJA_DSPI_MODE;
-	slave->wordlen = SPI_DEFAULT_WORDLEN;
+	slave->wordlen = SJA_DSPI_FMSZ;
 	return slave;
 }
 
diff --git a/drivers/spi/fsl_dspi.c b/drivers/spi/fsl_dspi.c
index d368848c5b..3391499fed 100644
--- a/drivers/spi/fsl_dspi.c
+++ b/drivers/spi/fsl_dspi.c
@@ -245,7 +245,7 @@ static void fsl_dspi_cfg_cs_active_state(struct fsl_dspi_priv *priv,
 }
 
 static int fsl_dspi_cfg_ctar_mode(struct fsl_dspi_priv *priv,
-		uint cs, uint mode)
+		uint cs, uint mode, unsigned int wordlen)
 {
 	uint bus_setup;
 	char pcssck = 0, cssck = 0;
@@ -263,6 +263,8 @@ static int fsl_dspi_cfg_ctar_mode(struct fsl_dspi_priv *priv,
 		bus_setup |= DSPI_CTAR_CPHA;
 	if (mode & SPI_LSB_FIRST)
 		bus_setup |= DSPI_CTAR_LSBFE;
+	if (wordlen == 16)
+		bus_setup |= DSPI_CTAR_TRSZ(15);
 
 	ns_delay_scale(&pcssck, &cssck, CONFIG_DSPI_CS_SCK_DELAY,
 		       priv->bus_clk);
@@ -587,7 +589,7 @@ struct spi_slave *spi_setup_slave(unsigned int bus, unsigned int cs,
 	fsl_dspi_cfg_speed(&dspi->priv, max_hz);
 
 	/* configure transfer mode */
-	fsl_dspi_cfg_ctar_mode(&dspi->priv, cs, mode);
+	fsl_dspi_cfg_ctar_mode(&dspi->priv, cs, mode, dspi->slave->wordlen);
 
 	/* configure active state of CSX */
 	fsl_dspi_cfg_cs_active_state(&dspi->priv, cs, mode);
@@ -703,6 +705,7 @@ static int fsl_dspi_claim_bus(struct udevice *dev)
 	struct udevice *bus = dev->parent;
 	struct dm_spi_slave_platdata *slave_plat =
 		dev_get_parent_platdata(dev);
+	struct spi_slave *slave = dev_get_parent_priv(dev);
 
 	priv = dev_get_priv(bus);
 
@@ -710,7 +713,8 @@ static int fsl_dspi_claim_bus(struct udevice *dev)
 	cpu_dspi_claim_bus(bus->seq, slave_plat->cs);
 
 	/* configure transfer mode */
-	fsl_dspi_cfg_ctar_mode(priv, slave_plat->cs, priv->mode);
+	fsl_dspi_cfg_ctar_mode(priv, slave_plat->cs, priv->mode,
+			       slave->wordlen);
 
 	/* configure active state of CSX */
 	fsl_dspi_cfg_cs_active_state(priv, slave_plat->cs,
diff --git a/include/spi.h b/include/spi.h
index 84b8bd17bb..852f570eaa 100644
--- a/include/spi.h
+++ b/include/spi.h
@@ -4,7 +4,6 @@
  *
  * (C) Copyright 2001
  * Gerald Van Baren, Custom IDEAS, vanbaren@cideas.com.
- * Copyright 2017 NXP
  */
 
 #ifndef _SPI_H_
@@ -13,7 +12,6 @@
 #include <common.h>
 
 /* SPI mode flags */
-
 #define SPI_CPHA	BIT(0)			/* clock phase */
 #define SPI_CPOL	BIT(1)			/* clock polarity */
 #define SPI_MODE_0	(0|0)			/* (original MicroWire) */
@@ -34,9 +32,6 @@
 #define SPI_RX_QUAD	BIT(13)			/* receive with 4 wires */
 #define SPI_TX_OCTAL	BIT(14)			/* transmit with 8 wires */
 #define SPI_RX_OCTAL	BIT(15)			/* receive with 8 wires */
-#define SPI_FMSZ_8	BIT(16)			/* Force frame size to 8 bits */
-#define SPI_FMSZ_16	BIT(17)
-#define SPI_FMSZ_32	BIT(18)
 
 /* Header byte that marks the start of the message */
 #define SPI_PREAMBLE_END_BYTE	0xec
-- 
2.25.1

