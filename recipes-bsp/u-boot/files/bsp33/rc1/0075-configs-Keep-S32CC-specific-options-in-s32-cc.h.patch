From 078b84e3d7bd1bea52200da994fe4e2f30d3ebb5 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Thu, 31 Mar 2022 11:16:30 +0300
Subject: [PATCH 075/103] configs: Keep S32CC specific options in s32-cc.h

Issue: ALB-8583
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 include/configs/s32-cc.h           | 398 ++++++++++++-----------------
 include/configs/s32g.h             |  32 +++
 include/configs/s32g2.h            |   4 +-
 include/configs/s32g274abluebox3.h |  18 +-
 include/configs/s32g274aemu.h      |   4 +
 include/configs/s32g274ardb2.h     |   9 +-
 include/configs/s32g2xxaevb.h      |  13 +-
 include/configs/s32g3.h            |   4 +-
 include/configs/s32g399aemu.h      |   4 +
 include/configs/s32g399ardb3.h     |   7 +
 include/configs/s32g3xxaevb.h      |  11 +-
 include/configs/s32r45.h           |  10 +-
 include/configs/s32r45emu.h        |   2 +
 include/configs/s32r45evb.h        |   3 +-
 scripts/config_whitelist.txt       |   3 -
 15 files changed, 275 insertions(+), 247 deletions(-)
 create mode 100644 include/configs/s32g.h

diff --git a/include/configs/s32-cc.h b/include/configs/s32-cc.h
index 85d45cbac8..eb29380026 100644
--- a/include/configs/s32-cc.h
+++ b/include/configs/s32-cc.h
@@ -24,24 +24,30 @@
 #define PHYS_SDRAM_2_SIZE		(SZ_2G)
 #endif
 
+/* DDR images layout */
+#define S32CC_FDT_ADDR			0x83E00000
+#define S32CC_RAMDISK_ADDR		0x84000000
+#define S32CC_FDT_HIGH_ADDR		0xa0000000
+#define S32CC_INITRD_HIGH_ADDR		0xfe1fffff
+
 #define CONFIG_SYS_INIT_SP_OFFSET	(SZ_16K)
 #define CONFIG_SYS_INIT_SP_ADDR \
 	(CONFIG_SYS_DATA_BASE + CONFIG_SYS_INIT_SP_OFFSET)
 
+#define CONFIG_SYS_MMC_ENV_DEV		0
+#define MMC_PART_FAT			1
+#define MMC_PART_EXT			2
+
 #ifdef CONFIG_CMD_IRQ
-#define CONFIG_GICSUPPORT
-#define CONFIG_USE_IRQ
+#  define CONFIG_GICSUPPORT
+#  define CONFIG_USE_IRQ
 #endif
 
 /* memory mapped external flash */
 #define CONFIG_SYS_FLASH_BASE		0x0UL
 #define CONFIG_SYS_FLASH_SIZE		(SZ_512M)
 
-#define QSPI_BASE_ADDR		        0x40134000UL
-
-#if defined(CONFIG_TARGET_S32G274ABLUEBOX3)
-#define CONFIG_BOARD_USE_RAMFS_IN_NFSBOOT
-#endif
+#define QSPI_BASE_ADDR			0x40134000UL
 
 #define CONFIG_SKIP_LOWLEVEL_INIT
 
@@ -49,18 +55,12 @@
 #define CONFIG_CMDLINE_TAG
 
 #ifndef CONFIG_XEN_SUPPORT
-#define CONFIG_ARMV8_SWITCH_TO_EL1
+#  define CONFIG_ARMV8_SWITCH_TO_EL1
 #endif
 
 /* Increase image size */
-#define CONFIG_SYS_BOOTM_LEN    (SZ_64M)
+#define CONFIG_SYS_BOOTM_LEN		(SZ_64M)
 
-#define S32CC_LOAD_FLASH_IMAGES_CMD\
-	"sf probe 6:0;"\
-	"sf read ${loadaddr} ${kernel_flashaddr} ${kernel_maxsize};"\
-	"sf read ${fdt_addr} ${fdt_flashaddr} ${fdt_maxsize};"\
-	"sf read ${ramdisk_addr} ${ramdisk_flashaddr} "\
-	" ${ramdisk_maxsize};"
 
 /* Note: The *_FLASH_ADDR and *_FLASH_MAXSIZE macros are used
  * with the 'setexpr' command. Therefore ensure none of them expand
@@ -73,29 +73,26 @@
 #define RAMDISK_FLASH_MAXSIZE		0x2000000
 #define FIP_FLASH_ADDR			CONFIG_SYS_FLASH_BASE
 
-#define KERNEL_FLASH_ADDR	(CONFIG_SYS_FLASH_BASE + 0x1f0000UL)
-#define FDT_FLASH_ADDR		(CONFIG_SYS_FLASH_BASE + 0xff0000UL)
-#define RAMDISK_FLASH_ADDR	(CONFIG_SYS_FLASH_BASE + 0x10f0000UL)
+#define KERNEL_FLASH_ADDR		(CONFIG_SYS_FLASH_BASE + 0x1f0000UL)
+#define FDT_FLASH_ADDR			(CONFIG_SYS_FLASH_BASE + 0xff0000UL)
+#define RAMDISK_FLASH_ADDR		(CONFIG_SYS_FLASH_BASE + 0x10f0000UL)
 
 #if defined(CONFIG_ENV_IS_IN_FLASH) || defined(CONFIG_ENV_IS_IN_SPI_FLASH)
-
-#if defined(CONFIG_ENV_OFFSET)
-#define ENV_FLASH_ADDR	(CONFIG_SYS_FLASH_BASE + CONFIG_ENV_OFFSET)
-#else
-#define ENV_FLASH_ADDR	(CONFIG_ENV_ADDR)
-#endif
-
-#if (ENV_FLASH_ADDR + CONFIG_ENV_SIZE > KERNEL_FLASH_ADDR)
-#  error "Environment and Kernel would overlap in flash memory"
-#endif
-
+#  if defined(CONFIG_ENV_OFFSET)
+#    define ENV_FLASH_ADDR	(CONFIG_SYS_FLASH_BASE + CONFIG_ENV_OFFSET)
+#  else
+#    define ENV_FLASH_ADDR	(CONFIG_ENV_ADDR)
+#  endif
+#  if (ENV_FLASH_ADDR + CONFIG_ENV_SIZE > KERNEL_FLASH_ADDR)
+#    error "Environment and Kernel would overlap in flash memory"
+#  endif
 #endif
 
 #if (KERNEL_FLASH_ADDR + KERNEL_FLASH_MAXSIZE > FDT_FLASH_ADDR)
-#error "Kernel and FDT would overlap in flash memory"
+#  error "Kernel and FDT would overlap in flash memory"
 #endif
 #if (FDT_FLASH_ADDR + FDT_FLASH_MAXSIZE > RAMDISK_FLASH_ADDR)
-#error "FDT and Ramdisk would overlap in flash memory"
+#  error "FDT and Ramdisk would overlap in flash memory"
 #endif
 
 /* Generic Timer Definitions */
@@ -103,19 +100,19 @@
 /* COUNTER_FREQUENCY value will be used at startup but will be replaced
  * if an older chip version is determined at runtime.
  */
-#if defined(CONFIG_NXP_S32CC)
+#  ifdef CONFIG_TARGET_TYPE_S32GEN1_EMULATOR
+#    define COUNTER_FREQUENCY		(1000) /* 1KHz */
+#  elif defined(CONFIG_NXP_S32CC)
 /* FXOSC_CLK; this will be further divided by "GPR00[26:24] + 1"
  * Note: CONFIG_TARGET_S32G2XXAEVB is a per-board configuration, as the value of
  * FXOSC_CLK itself is board-specific.
  */
-#define COUNTER_FREQUENCY		(40 * 1000 * 1000)
-#elif defined(CONFIG_TARGET_TYPE_S32GEN1_EMULATOR)
-#define COUNTER_FREQUENCY		(1000) /* 1KHz */
-#endif
+#    define COUNTER_FREQUENCY		(40 * 1000 * 1000)
+#  endif
 #elif defined(CONFIG_SYS_PIT_TIMER)
-#define COUNTER_FREQUENCY               (133056128) /* 133MHz */
+#  define COUNTER_FREQUENCY		(133056128) /* 133MHz */
 #else
-#error "Unknown System Timer"
+#  error "Unknown System Timer"
 #endif
 
 /* Size of malloc() pool */
@@ -124,176 +121,97 @@
 /* Allow to overwrite serial and ethaddr */
 #define CONFIG_ENV_OVERWRITE
 
+#ifdef CONFIG_CMD_IMLS
 #undef CONFIG_CMD_IMLS
+#endif
 
 #define CONFIG_HWCONFIG
 
-#ifdef CONFIG_CMD_BOOTI
-
-#endif
-
-#ifndef S32CC_DEFAULT_IP
-#define S32CC_DEFAULT_IP "10.0.0.100\0"
-#endif
+#define S32CC_DEFAULT_IP		"10.0.0.100"
+#define S32CC_NETMASK			"255.255.255.0"
 
 /*
- * Enable CONFIG_BOARD_USE_RAMFS_IN_NFSBOOT if u-boot should use a ramdisk
- * for nfsbooting.
+ * In case U-Boot needs a ramdisk for booting over NFS
  */
-#ifdef CONFIG_BOARD_USE_RAMFS_IN_NFSBOOT
-#define NFSRAMFS_ADDR "${ramdisk_addr}"
-#define NFSRAMFS_TFTP_CMD "run loadtftpramdisk; "
-#else
-#define NFSRAMFS_ADDR "-"
-#define NFSRAMFS_TFTP_CMD ""
-#endif
-
-#ifdef CONFIG_TARGET_S32R45EVB
-#define GMAC1_ENABLE_VAR_VALUE \
-	"s32cc_gmac1_mode=enable\0"
-#else
-#define GMAC1_ENABLE_VAR_VALUE ""
-#endif /* CONFIG_TARGET_S32R45EVB */
+#define NFSRAMFS_ADDR			"-"
+#define NFSRAMFS_TFTP_CMD		""
 
 #ifdef CONFIG_DWC_ETH_QOS_S32CC
-#define GMAC_EXTRA_ENV_SETTINGS \
-	"s32cc_gmac_mode=enable\0"\
-	GMAC1_ENABLE_VAR_VALUE
-#else
-#define GMAC_EXTRA_ENV_SETTINGS ""
-#endif /* CONFIG_DWC_ETH_QOS_S32CC */
-
-#ifdef CONFIG_FSL_PFENG
-#define PFENG_EXTRA_BOOT_ARGS " nohz=off coherent_pool=64M "
-#if defined(CONFIG_TARGET_S32G2XXAEVB) || defined(CONFIG_TARGET_S32G3XXAEVB)
-#define PFENG_MODE "enable,none,rgmii,rgmii"
-#define PFENG_EMAC "1"
-#endif
-#ifdef CONFIG_NXP_S32GRDB_BOARD
-#ifdef CONFIG_NXP_S32G3XX
-#define PFENG_MODE "enable,sgmii,sgmii,rgmii"
-#else
-#define PFENG_MODE "enable,sgmii,none,rgmii"
-#endif
-#define PFENG_EMAC "0"
-#endif
-#ifdef CONFIG_TARGET_S32G274ABLUEBOX3
-#define PFENG_MODE "enable,sgmii,none,none"
-#define PFENG_EMAC "0"
-#endif
-#define PFE_EXTRA_ENV_SETTINGS \
-	"pfeng_mode=" PFENG_MODE "\0" \
-	"pfeaddr=00:01:be:be:ef:11\0" \
-	"pfe1addr=00:01:be:be:ef:22\0" \
-	"pfe2addr=00:01:be:be:ef:33\0" \
-	"ethact=eth_pfeng\0" \
-	"pfengemac=" PFENG_EMAC "\0"
-#define PFE_INIT_CMD "pfeng stop; "
+#  define GMAC_EXTRA_ENV_SETTINGS	"s32cc_gmac_mode=enable\0"\
+					GMAC1_ENABLE_VAR_VALUE
 #else
-#define PFENG_EXTRA_BOOT_ARGS ""
-#define PFE_EXTRA_ENV_SETTINGS ""
-#define PFE_INIT_CMD ""
+#  define GMAC_EXTRA_ENV_SETTINGS	""
 #endif
 
-#if !defined(PCIE_EXTRA_ENV_SETTINGS)
-#if defined(CONFIG_PCIE_S32GEN1) || defined(CONFIG_FSL_PFENG)
-#define PCIE_EXTRA_ENV_SETTINGS \
-	"hwconfig=" CONFIG_S32GEN1_HWCONFIG "\0"
+#if defined(CONFIG_S32GEN1_HWCONFIG)
+#  define PCIE_EXTRA_ENV_SETTINGS "hwconfig=" CONFIG_S32GEN1_HWCONFIG "\0"
 #else
-#define PCIE_EXTRA_ENV_SETTINGS ""
+#  define PCIE_EXTRA_ENV_SETTINGS ""
 #endif
-#endif
-
-#define FDT_ENABLE_HS400ES \
-	"fdt_enable_hs400es=" \
-		"fdt addr ${fdt_addr}; " \
-		"fdt rm /usdhc no-1-8-v; " \
-		"fdt resize; \0" \
-
-#define FDT_OVERRIDE \
-	"fdt_override=" \
-		";\0"
-
-#define CONFIG_FLASHBOOT_RAMDISK " ${ramdisk_addr} "
 
 #ifdef CONFIG_XEN_SUPPORT
-#define XEN_EXTRA_ENV_SETTINGS \
+#  define XEN_EXTRA_ENV_SETTINGS \
 	"script_addr=0x80200000\0" \
 	"mmcpart_ext=" __stringify(MMC_PART_EXT) "\0" \
 
-#define XEN_BOOTCMD \
+#  define XEN_BOOTCMD \
 	"ext4load mmc ${mmcdev}:${mmcpart_ext} ${script_addr} " \
 		"boot/${script}; source ${script_addr}; " \
 		"booti ${xen_addr} - ${fdt_addr};"
 #else
-#define XEN_EXTRA_ENV_SETTINGS  ""
+#  define XEN_EXTRA_ENV_SETTINGS  ""
 #endif
 
-#define CONFIG_EXTRA_ENV_SETTINGS \
-	"ipaddr=" S32CC_DEFAULT_IP \
-	"serverip=10.0.0.1\0" \
-	"netmask=255.255.255.0\0" \
-	"nfsbootargs=setenv bootargs console=${console},${baudrate} " \
-		"root=/dev/nfs rw " \
-		"ip=${ipaddr}:${serverip}::${netmask}::" \
-			CONFIG_BOARD_NFS_BOOT_INTERFACE ":off " \
-		"nfsroot=${serverip}:/tftpboot/rfs,nolock,v3,tcp " \
-		"earlycon " PFENG_EXTRA_BOOT_ARGS "\0" \
-	"loadtftpimage=tftp ${loadaddr} ${image};\0" \
-	"loadtftpramdisk=tftp ${ramdisk_addr} ${ramdisk};\0" \
-	"loadtftpfdt=tftp ${fdt_addr} ${fdt_file};\0" \
-	"nfsboot=echo Booting from net using tftp and nfs...; " \
-		"run nfsbootargs;"\
-		"run loadtftpimage; " NFSRAMFS_TFTP_CMD "run loadtftpfdt;"\
-		"${boot_mtd} ${loadaddr} " NFSRAMFS_ADDR " ${fdt_addr};\0" \
-	"script=boot.scr\0" \
-	"boot_mtd=booti\0" \
-	"image=Image\0" \
-	"ramdisk=rootfs.uimg\0"\
-	"console=ttyLF0\0" \
-	"fdt_high=0xa0000000\0" \
-	"initrd_high=0xFE1FFFFF\0" \
-	"fdt_file=" FDT_FILE "\0" \
-	"fdt_addr=0x83E00000\0" \
-	"ramdisk_addr=0x84000000\0" \
+#define S32CC_ENV_SETTINGS \
 	"boot_fdt=try\0" \
-	"mmcdev=" __stringify(CONFIG_SYS_MMC_ENV_DEV) "\0" \
-	"mmcpart=" __stringify(CONFIG_MMC_PART) "\0" \
-	"mmcroot=/dev/mmcblk0p2 rootwait rw\0" \
-	"update_sd_firmware_filename=fip.s32\0" \
-	"update_sd_firmware=" \
-		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
-		"fi; " \
-		"if mmc dev ${mmcdev}; then "	\
-			"if ${get_cmd} ${update_sd_firmware_filename}; then " \
-				"setexpr fw_sz ${filesize} / 0x200; " \
-				"setexpr fw_sz ${fw_sz} - 7; "	\
-				"setexpr loadaddr ${loadaddr} + 0x1000; " \
-				"mmc write ${loadaddr} 0x8 ${fw_sz}; " \
-			"fi; "	\
-		"fi\0" \
-	"mmcargs=setenv bootargs console=${console},${baudrate}" \
-		" root=${mmcroot} earlycon " \
-		PFENG_EXTRA_BOOT_ARGS "\0" \
-	"loadbootscript=" \
-		"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
+	"boot_mtd=booti\0" \
 	"bootscript=echo Running bootscript from mmc ...; " \
 		"source\0" \
-	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
-	"loadramdisk=fatload mmc ${mmcdev}:${mmcpart} " \
-		"${ramdisk_addr} ${ramdisk}\0" \
-	FDT_ENABLE_HS400ES \
-	FDT_OVERRIDE \
-	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}; " \
-		 "run fdt_override;\0" \
+	"console=ttyLF0\0" \
+	"fdt_addr=" __stringify(S32CC_FDT_ADDR) "\0" \
+	"fdt_enable_hs400es=" \
+		"fdt addr ${fdt_addr}; " \
+		"fdt rm /usdhc no-1-8-v; " \
+		"fdt resize; \0" \
+	"fdt_file=" FDT_FILE "\0" \
+	"fdt_high=" __stringify(S32CC_FDT_HIGH_ADDR) "\0" \
+	"fdt_override=;\0" \
+	"flashboot=echo Booting from flash...; " \
+		"run flashbootargs;"\
+		"sf probe 6:0;"\
+		"sf read ${loadaddr} ${kernel_flashaddr} ${kernel_maxsize};"\
+		"sf read ${fdt_addr} ${fdt_flashaddr} ${fdt_maxsize};"\
+		"sf read ${ramdisk_addr} ${ramdisk_flashaddr} "\
+		" ${ramdisk_maxsize};" \
+		"${boot_mtd} ${loadaddr} ${ramdisk_addr} ${fdt_addr};\0" \
+	"flashbootargs=setenv bootargs console=${console},${baudrate}" \
+		" root=/dev/ram rw earlycon " EXTRA_BOOT_ARGS ";"\
+		"setexpr fip_flashaddr " __stringify(FIP_FLASH_ADDR) ";" \
+		"setexpr kernel_flashaddr " __stringify(KERNEL_FLASH_ADDR) ";" \
+		"setenv kernel_maxsize " __stringify(KERNEL_FLASH_MAXSIZE) ";" \
+		"setexpr fdt_flashaddr " __stringify(FDT_FLASH_ADDR) ";" \
+		"setenv fdt_maxsize " __stringify(FDT_FLASH_MAXSIZE) ";" \
+		"setexpr ramdisk_flashaddr " \
+				__stringify(RAMDISK_FLASH_ADDR) ";" \
+		"setenv ramdisk_maxsize " \
+				__stringify(RAMDISK_FLASH_MAXSIZE) ";\0" \
+	"image=Image\0" \
+	"initrd_high=" __stringify(S32CC_INITRD_HIGH_ADDR) "\0" \
+	"ipaddr=" S32CC_DEFAULT_IP "\0"\
 	"jtagboot=echo Booting using jtag...; " \
 		"${boot_mtd} ${loadaddr} ${ramdisk_addr} ${fdt_addr}\0" \
 	"jtagsdboot=echo Booting loading Linux with ramdisk from SD...; " \
 		"run loadimage; run loadramdisk; run loadfdt;"\
 		"${boot_mtd} ${loadaddr} ${ramdisk_addr} ${fdt_addr}\0" \
+	"loadbootscript=" \
+		"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
+	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}; " \
+		 "run fdt_override;\0" \
+	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
+	"loadtftpfdt=tftp ${fdt_addr} ${fdt_file};\0" \
+	"loadtftpimage=tftp ${loadaddr} ${image};\0" \
+	"mmcargs=setenv bootargs console=${console},${baudrate}" \
+		" root=${mmcroot} earlycon " EXTRA_BOOT_ARGS "\0" \
 	"mmcboot=echo Booting from mmc ...; " \
 		"run mmcargs; " \
 		"if run loadfdt; then " \
@@ -301,10 +219,13 @@
 		"else " \
 			"echo WARN: Cannot load the DT; " \
 		"fi;\0" \
+	"mmcdev=" __stringify(CONFIG_SYS_MMC_ENV_DEV) "\0" \
+	"mmcpart=" __stringify(MMC_PART_FAT) "\0" \
+	"mmcroot=/dev/mmcblk0p2 rootwait rw\0" \
 	"netargs=setenv bootargs console=${console},${baudrate} " \
 		"root=/dev/nfs " \
 		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp " \
-		"earlycon " PFENG_EXTRA_BOOT_ARGS "\0" \
+		"earlycon " EXTRA_BOOT_ARGS "\0" \
 	"netboot=echo Booting from net ...; " \
 		"run netargs; " \
 		"if test ${ip_dyn} = yes; then " \
@@ -326,56 +247,77 @@
 		"else " \
 			"${boot_mtd}; " \
 		"fi;\0" \
-	"flashbootargs=setenv bootargs console=${console},${baudrate}" \
-		" root=/dev/ram rw earlycon " \
-		PFENG_EXTRA_BOOT_ARGS ";" \
-		"setexpr fip_flashaddr " __stringify(FIP_FLASH_ADDR) ";" \
-		"setexpr kernel_flashaddr " __stringify(KERNEL_FLASH_ADDR) ";" \
-		"setenv kernel_maxsize " __stringify(KERNEL_FLASH_MAXSIZE) ";" \
-		"setexpr fdt_flashaddr " __stringify(FDT_FLASH_ADDR) ";" \
-		"setenv fdt_maxsize " __stringify(FDT_FLASH_MAXSIZE) ";" \
-		"setexpr ramdisk_flashaddr " \
-				__stringify(RAMDISK_FLASH_ADDR) ";" \
-		"setenv ramdisk_maxsize " \
-				__stringify(RAMDISK_FLASH_MAXSIZE) ";\0" \
-	"flashboot=echo Booting from flash...; " \
-		"run flashbootargs;"\
-		S32CC_LOAD_FLASH_IMAGES_CMD\
-		"${boot_mtd} ${loadaddr}" CONFIG_FLASHBOOT_RAMDISK \
-		"${fdt_addr};\0" \
-	XEN_EXTRA_ENV_SETTINGS \
+	"netmask=" S32CC_NETMASK "\0" \
+	"nfsboot=echo Booting from net using tftp and nfs...; " \
+		"run nfsbootargs;"\
+		"run loadtftpimage; " NFSRAMFS_TFTP_CMD "run loadtftpfdt;"\
+		"${boot_mtd} ${loadaddr} " NFSRAMFS_ADDR " ${fdt_addr};\0" \
+	"nfsbootargs=setenv bootargs console=${console},${baudrate} " \
+		"root=/dev/nfs rw " \
+		"ip=${ipaddr}:${serverip}::${netmask}::" \
+			CONFIG_BOARD_NFS_BOOT_INTERFACE ":off " \
+		"nfsroot=${serverip}:/tftpboot/rfs,nolock,v3,tcp " \
+		"earlycon " EXTRA_BOOT_ARGS "\0" \
+	"ramdisk_addr=" __stringify(S32CC_RAMDISK_ADDR) "\0" \
+	"script=boot.scr\0" \
+	"serverip=10.0.0.1\0" \
+	"update_sd_firmware_filename=fip.s32\0" \
+	"update_sd_firmware=" \
+		"if test ${ip_dyn} = yes; " \
+		"then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"if mmc dev ${mmcdev}; then "	\
+			"if ${get_cmd} ${update_sd_firmware_filename}; then " \
+				"setexpr fw_sz ${filesize} / 0x200; " \
+				"setexpr fw_sz ${fw_sz} - 7; "	\
+				"setexpr loadaddr ${loadaddr} + 0x1000; " \
+				"mmc write ${loadaddr} 0x8 ${fw_sz}; " \
+			"fi; "	\
+		"fi\0" \
 	GMAC_EXTRA_ENV_SETTINGS \
-	PFE_EXTRA_ENV_SETTINGS \
 	PCIE_EXTRA_ENV_SETTINGS \
-
-#undef CONFIG_BOOTCOMMAND
+	XEN_EXTRA_ENV_SETTINGS \
 
 #if defined(CONFIG_TARGET_TYPE_S32GEN1_EMULATOR)
-#  define CONFIG_BOOTCOMMAND \
-		"${boot_mtd} ${loadaddr} - ${fdt_addr}"
+#  define BOOTCOMMAND "${boot_mtd} ${loadaddr} - ${fdt_addr}"
 #elif defined(CONFIG_QSPI_BOOT)
-#  define CONFIG_BOOTCOMMAND \
-	PFE_INIT_CMD "run flashboot"
+#  define BOOTCOMMAND "run flashboot"
 #elif defined(CONFIG_SD_BOOT)
-#ifdef CONFIG_XEN_SUPPORT
-#  define CONFIG_BOOTCOMMAND XEN_BOOTCMD
-#else
-#  define CONFIG_BOOTCOMMAND \
-	PFE_INIT_CMD "mmc dev ${mmcdev}; if mmc rescan; then " \
-		   "if run loadimage; then " \
-			   "run mmcboot; " \
-		   "else run netboot; " \
-		   "fi; " \
-	   "else run netboot; fi"
+#  ifdef CONFIG_XEN_SUPPORT
+#    define BOOTCOMMAND XEN_BOOTCMD
+#  else
+#    define BOOTCOMMAND \
+	"mmc dev ${mmcdev}; " \
+	"if mmc rescan; " \
+	"then " \
+		"if run loadimage; "\
+		"then " \
+			"run mmcboot; " \
+		"else " \
+			"run netboot; " \
+		"fi; " \
+	"else " \
+		"run netboot;" \
+	"fi"
+#  endif
 #endif
+
+#ifdef CONFIG_BOOTCOMMAND
+#undef CONFIG_BOOTCOMMAND
 #endif
+#define CONFIG_BOOTCOMMAND \
+	EXTRA_BOOTCOMMAND \
+	BOOTCOMMAND
 
 /* Miscellaneous configurable options */
 #define CONFIG_SYS_PROMPT_HUSH_PS2	"> "
 #define CONFIG_SYS_PROMPT		"=> "
 #define CONFIG_SYS_CBSIZE		256	/* Console I/O Buffer Size */
-#define CONFIG_SYS_PBSIZE		\
-			(CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
+#define CONFIG_SYS_PBSIZE		(CONFIG_SYS_CBSIZE + \
+					 sizeof(CONFIG_SYS_PROMPT) + 16)
 #define CONFIG_SYS_MAXARGS		16	/* max number of command args */
 #define CONFIG_SYS_BARGSIZE		CONFIG_SYS_CBSIZE
 
@@ -390,41 +332,31 @@
 
 #define CONFIG_SYS_SDRAM_BASE		PHYS_SDRAM_1
 
-#define CONFIG_SYS_MMC_ENV_DEV		0
-#define MMC_PART_FAT			1
-#define MMC_PART_EXT			2
-#define CONFIG_MMC_PART			MMC_PART_FAT
-
 #define FLASH_SECTOR_SIZE		(SZ_64K)
 
 #ifdef CONFIG_SYS_I2C_MXC
-#define I2C_QUIRK_REG
+#  define I2C_QUIRK_REG
 #endif
 
 #if defined(CONFIG_QSPI_BOOT)
-#define CONFIG_SYS_MAX_FLASH_BANKS	1
-#define CONFIG_SYS_MAX_FLASH_SECT	(0x4000000 / CONFIG_ENV_SECT_SIZE)
+#  define CONFIG_SYS_MAX_FLASH_BANKS	1
+#  define CONFIG_SYS_MAX_FLASH_SECT	(0x4000000 / CONFIG_ENV_SECT_SIZE)
 #endif
 
 #define CONFIG_BOOTP_BOOTFILESIZE
 
 #define CONFIG_SYS_PCI_64BIT
 
-#define CONFIG_SYS_LDSCRIPT  "arch/arm/cpu/armv8/u-boot.lds"
+#define CONFIG_SYS_LDSCRIPT		"arch/arm/cpu/armv8/u-boot.lds"
 
-#define S32CC_SRAM_BASE		0x34000000
-
-#ifdef CONFIG_ARCH_S32G3
-#define S32CC_SRAM_SIZE		(20 * SZ_1M)
-#else
-#define S32CC_SRAM_SIZE		(SZ_8M)
-#endif
+#define S32CC_SRAM_BASE			0x34000000
 
 #if defined(CONFIG_SPI_FLASH) && defined(CONFIG_FSL_QSPI)
-#define CONFIG_SYS_FSL_QSPI_AHB
-
-#undef FSL_QSPI_FLASH_SIZE
-#define FSL_QSPI_FLASH_SIZE            (SZ_64M)
+#  define CONFIG_SYS_FSL_QSPI_AHB
+#  ifdef FSL_QSPI_FLASH_SIZE
+#    undef FSL_QSPI_FLASH_SIZE
+#  endif
+#  define FSL_QSPI_FLASH_SIZE		(SZ_64M)
 #endif
 
 #endif
diff --git a/include/configs/s32g.h b/include/configs/s32g.h
new file mode 100644
index 0000000000..990e476b6f
--- /dev/null
+++ b/include/configs/s32g.h
@@ -0,0 +1,32 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
+/*
+ * Copyright 2022 NXP
+ */
+#ifndef __S32G_H__
+#define __S32G_H__
+
+#include <configs/s32-cc.h>
+
+#ifdef CONFIG_FSL_PFENG
+#  define PFE_EXTRA_BOOT_ARGS "nohz=off coherent_pool=64M"
+#  define PFE_EXTRA_ENV_SETTINGS \
+	"pfeng_mode=" PFENG_MODE "\0" \
+	"pfeaddr=00:01:be:be:ef:11\0" \
+	"pfe1addr=00:01:be:be:ef:22\0" \
+	"pfe2addr=00:01:be:be:ef:33\0" \
+	"ethact=eth_pfeng\0" \
+	"pfengemac=" PFENG_EMAC "\0"
+#  define PFE_INIT_CMD "pfeng stop; "
+#else
+#  define PFE_EXTRA_BOOT_ARGS
+#  define PFE_EXTRA_ENV_SETTINGS
+#  define PFE_INIT_CMD ""
+#endif
+
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	S32CC_ENV_SETTINGS \
+	PFE_EXTRA_ENV_SETTINGS \
+
+#define GMAC1_ENABLE_VAR_VALUE ""
+
+#endif
diff --git a/include/configs/s32g2.h b/include/configs/s32g2.h
index 4eb3951162..7ab8cd1930 100644
--- a/include/configs/s32g2.h
+++ b/include/configs/s32g2.h
@@ -5,6 +5,8 @@
 #ifndef __S32G2_H__
 #define __S32G2_H__
 
-#include <configs/s32-cc.h>
+#include <configs/s32g.h>
+
+#define S32CC_SRAM_SIZE			(SZ_8M)
 
 #endif
diff --git a/include/configs/s32g274abluebox3.h b/include/configs/s32g274abluebox3.h
index 48f24c990f..90dcf988d4 100644
--- a/include/configs/s32g274abluebox3.h
+++ b/include/configs/s32g274abluebox3.h
@@ -7,6 +7,22 @@
 
 #include <configs/s32g2.h>
 
-#define FDT_FILE "fsl-s32g274a-bluebox3.dtb"
+#define EXTRA_BOOTCOMMAND		PFE_INIT_CMD
+#define EXTRA_BOOT_ARGS			PFE_EXTRA_BOOT_ARGS
+#define FDT_FILE			"fsl-s32g274a-bluebox3.dtb"
+
+#ifdef CONFIG_FSL_PFENG
+#  define PFENG_MODE			"enable,sgmii,none,none"
+#  define PFENG_EMAC			"0"
+#endif
+
+#ifdef NFSRAMFS_ADDR
+#  undef NFSRAMFS_ADDR
+#endif
+#define NFSRAMFS_ADDR			"${ramdisk_addr}"
+#ifdef NFSRAMFS_TFTP_CMD
+#  undef NFSRAMFS_TFTP_CMD
+#endif
+#define NFSRAMFS_TFTP_CMD		"run loadtftpramdisk; "
 
 #endif
diff --git a/include/configs/s32g274aemu.h b/include/configs/s32g274aemu.h
index d5f22f369d..7736bd1819 100644
--- a/include/configs/s32g274aemu.h
+++ b/include/configs/s32g274aemu.h
@@ -7,4 +7,8 @@
 
 #include <configs/s32g2.h>
 
+#define EXTRA_BOOTCOMMAND		PFE_INIT_CMD
+#define EXTRA_BOOT_ARGS			PFE_EXTRA_BOOT_ARGS
+#define FDT_FILE			""
+
 #endif
diff --git a/include/configs/s32g274ardb2.h b/include/configs/s32g274ardb2.h
index b07518e4fc..8bfa4f2d61 100644
--- a/include/configs/s32g274ardb2.h
+++ b/include/configs/s32g274ardb2.h
@@ -7,6 +7,13 @@
 
 #include <configs/s32g2.h>
 
-#define FDT_FILE "fsl-s32g274a-rdb2.dtb"
+#define EXTRA_BOOTCOMMAND		PFE_INIT_CMD
+#define EXTRA_BOOT_ARGS			PFE_EXTRA_BOOT_ARGS
+#define FDT_FILE			"fsl-s32g274a-rdb2.dtb"
+
+#ifdef CONFIG_FSL_PFENG
+#  define PFENG_EMAC			"0"
+#  define PFENG_MODE			"enable,sgmii,none,rgmii"
+#endif
 
 #endif
diff --git a/include/configs/s32g2xxaevb.h b/include/configs/s32g2xxaevb.h
index 66a4a964ca..263a511ca6 100644
--- a/include/configs/s32g2xxaevb.h
+++ b/include/configs/s32g2xxaevb.h
@@ -7,11 +7,18 @@
 
 #include <configs/s32g2.h>
 
-#define FDT_FILE "fsl-s32g2xxa-evb.dtb"
+#define EXTRA_BOOTCOMMAND		PFE_INIT_CMD
+#define EXTRA_BOOT_ARGS			PFE_EXTRA_BOOT_ARGS
+#define FDT_FILE			"fsl-s32g2xxa-evb.dtb"
+
+#ifdef CONFIG_FSL_PFENG
+#  define PFENG_MODE "enable,none,rgmii,rgmii"
+#  define PFENG_EMAC "1"
+#endif
 
 #if defined(CONFIG_USB)
-#define CONFIG_USB_EHCI_MX6
-#define CONFIG_MXC_USB_PORTSC        PORT_PTS_ULPI
+#  define CONFIG_MXC_USB_PORTSC		PORT_PTS_ULPI
+#  define CONFIG_USB_EHCI_MX6
 #endif
 
 #endif
diff --git a/include/configs/s32g3.h b/include/configs/s32g3.h
index edb4cfa42b..20df58cf16 100644
--- a/include/configs/s32g3.h
+++ b/include/configs/s32g3.h
@@ -5,6 +5,8 @@
 #ifndef __S32G3_H__
 #define __S32G3_H__
 
-#include <configs/s32-cc.h>
+#include <configs/s32g.h>
+
+#define S32CC_SRAM_SIZE			(20 * SZ_1M)
 
 #endif
diff --git a/include/configs/s32g399aemu.h b/include/configs/s32g399aemu.h
index 7d8dd823c5..e2bd6c3c00 100644
--- a/include/configs/s32g399aemu.h
+++ b/include/configs/s32g399aemu.h
@@ -7,4 +7,8 @@
 
 #include <configs/s32g3.h>
 
+#define EXTRA_BOOTCOMMAND		PFE_INIT_CMD
+#define EXTRA_BOOT_ARGS			PFE_EXTRA_BOOT_ARGS
+#define FDT_FILE			""
+
 #endif
diff --git a/include/configs/s32g399ardb3.h b/include/configs/s32g399ardb3.h
index 5211004170..eab24b808c 100644
--- a/include/configs/s32g399ardb3.h
+++ b/include/configs/s32g399ardb3.h
@@ -7,6 +7,13 @@
 
 #include <configs/s32g3.h>
 
+#define EXTRA_BOOTCOMMAND		PFE_INIT_CMD
+#define EXTRA_BOOT_ARGS			PFE_EXTRA_BOOT_ARGS
 #define FDT_FILE			"fsl-s32g399a-rdb3.dtb"
 
+#ifdef CONFIG_FSL_PFENG
+#  define PFENG_MODE			"enable,sgmii,none,rgmii"
+#  define PFENG_EMAC			"0"
+#endif
+
 #endif
diff --git a/include/configs/s32g3xxaevb.h b/include/configs/s32g3xxaevb.h
index c943e4e18f..ef2c52c8c1 100644
--- a/include/configs/s32g3xxaevb.h
+++ b/include/configs/s32g3xxaevb.h
@@ -7,11 +7,18 @@
 
 #include <configs/s32g3.h>
 
+#define EXTRA_BOOTCOMMAND		PFE_INIT_CMD
+#define EXTRA_BOOT_ARGS			PFE_EXTRA_BOOT_ARGS
 #define FDT_FILE			"fsl-s32g3xxa-evb.dtb"
 
+#ifdef CONFIG_FSL_PFENG
+#  define PFENG_MODE			"enable,none,rgmii,rgmii"
+#  define PFENG_EMAC			"1"
+#endif
+
 #if defined(CONFIG_USB)
-#define CONFIG_USB_EHCI_MX6
-#define CONFIG_MXC_USB_PORTSC		PORT_PTS_ULPI
+#  define CONFIG_USB_EHCI_MX6
+#  define CONFIG_MXC_USB_PORTSC		PORT_PTS_ULPI
 #endif
 
 #endif
diff --git a/include/configs/s32r45.h b/include/configs/s32r45.h
index 90f56c17e5..829e7dd64b 100644
--- a/include/configs/s32r45.h
+++ b/include/configs/s32r45.h
@@ -1,10 +1,18 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
 /*
- * Copyright 2017-2021 NXP
+ * Copyright 2017-2022 NXP
  */
 #ifndef __S32R45_H__
 #define __S32R45_H__
 
 #include <configs/s32-cc.h>
 
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	S32CC_ENV_SETTINGS \
+
+#define GMAC1_ENABLE_VAR_VALUE		"s32cc_gmac1_mode=enable\0"
+
+#define S32CC_SRAM_SIZE			(SZ_8M)
+#define EXTRA_BOOTCOMMAND		""
+
 #endif
diff --git a/include/configs/s32r45emu.h b/include/configs/s32r45emu.h
index eaa5e1a60e..f28d2246e7 100644
--- a/include/configs/s32r45emu.h
+++ b/include/configs/s32r45emu.h
@@ -7,4 +7,6 @@
 
 #include <configs/s32r45.h>
 
+#define EXTRA_BOOT_ARGS		""
+
 #endif
diff --git a/include/configs/s32r45evb.h b/include/configs/s32r45evb.h
index 32fbcfb85a..32571e15f2 100644
--- a/include/configs/s32r45evb.h
+++ b/include/configs/s32r45evb.h
@@ -7,6 +7,7 @@
 
 #include <configs/s32r45.h>
 
-#define FDT_FILE "fsl-s32r45-evb.dtb"
+#define EXTRA_BOOT_ARGS		""
+#define FDT_FILE		"fsl-s32r45-evb.dtb"
 
 #endif
diff --git a/scripts/config_whitelist.txt b/scripts/config_whitelist.txt
index 7ac0d49bc7..d175617bbc 100644
--- a/scripts/config_whitelist.txt
+++ b/scripts/config_whitelist.txt
@@ -126,7 +126,6 @@ CONFIG_BOARD_NAME
 CONFIG_BOARD_POSTCLK_INIT
 CONFIG_BOARD_REVISION_TAG
 CONFIG_BOARD_SIZE_LIMIT
-CONFIG_BOARD_USE_RAMFS_IN_NFSBOOT
 CONFIG_BOOGER
 CONFIG_BOOTBLOCK
 CONFIG_BOOTFILE
@@ -544,7 +543,6 @@ CONFIG_FIXED_PHY
 CONFIG_FIXED_PHY_ADDR
 CONFIG_FIXED_SDHCI_ALIGNED_BUFFER
 CONFIG_FLASHBOOTCOMMAND
-CONFIG_FLASHBOOT_RAMDISK
 CONFIG_FLASHCARD
 CONFIG_FLASH_BR_PRELIM
 CONFIG_FLASH_CFI_LEGACY
@@ -1109,7 +1107,6 @@ CONFIG_MK_edb9315a
 CONFIG_MMCBOOTCOMMAND
 CONFIG_MMCROOT
 CONFIG_MMC_DEFAULT_DEV
-CONFIG_MMC_PART
 CONFIG_MMC_RPMB_TRACE
 CONFIG_MMC_SUNXI_SLOT
 CONFIG_MMU
-- 
2.25.1

