From bcfd6f09bc007d907c5ff756e6f47f747baf7597 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Thu, 10 Mar 2022 16:33:55 +0200
Subject: [PATCH 029/103] arch: Make SAF1508 initialization part of S32GEVB
 init

Issue: ALB-8576
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/mach-s32/Kconfig           |  1 -
 arch/arm/mach-s32/s32-cc/soc.c      | 53 -----------------------------
 board/nxp/s32-cc/s32g/s32gxxxaevb.c | 51 +++++++++++++++++++++++++++
 3 files changed, 51 insertions(+), 54 deletions(-)

diff --git a/arch/arm/mach-s32/Kconfig b/arch/arm/mach-s32/Kconfig
index 0a9de117db..40bfda275a 100644
--- a/arch/arm/mach-s32/Kconfig
+++ b/arch/arm/mach-s32/Kconfig
@@ -39,7 +39,6 @@ config NXP_S32_CC
 	imply SPI
 	imply SYS_I2C_MXC
 	imply TIMER
-	select ARCH_MISC_INIT
 	select ARM_SMCCC
 	select BINMAN
 	select CLK
diff --git a/arch/arm/mach-s32/s32-cc/soc.c b/arch/arm/mach-s32/s32-cc/soc.c
index e206557deb..9ceae7833f 100644
--- a/arch/arm/mach-s32/s32-cc/soc.c
+++ b/arch/arm/mach-s32/s32-cc/soc.c
@@ -22,56 +22,3 @@ __weak int dram_init(void)
 {
 	return fdtdec_setup_mem_size_base();
 }
-
-static int enable_saf1508bet(void)
-{
-	int ret = 0;
-	struct udevice *dev;
-	struct phy phy;
-	struct uclass *uc;
-	struct udevice *bus;
-
-	ret = uclass_get_device(UCLASS_USB, 0, &dev);
-	if (ret) {
-		pr_err("%s: Cannot find USB device\n", __func__);
-		return ret;
-	}
-	ret = uclass_get(UCLASS_USB, &uc);
-	if (ret)
-		return ret;
-
-	/* Probe USB controller */
-	uclass_foreach_dev(bus, uc) {
-		ret = device_probe(bus);
-		if (ret == -ENODEV) {	/* No such device. */
-			puts("Port not available.\n");
-			continue;
-		}
-	}
-
-	/* SAF1508BET PHY */
-	ret = generic_phy_get_by_index(dev, 0, &phy);
-	if (ret) {
-		pr_err("failed to get %s USB PHY\n", dev->name);
-		return ret;
-	}
-
-	ret = generic_phy_power_on(&phy);
-	if (ret) {
-		pr_err("failed to get %s USB PHY\n", dev->name);
-		return ret;
-	}
-
-	return ret;
-}
-
-int arch_misc_init(void)
-{
-	/* The usb phy must be probed in u-boot in order to have a working USB
-	 * interface in linux.
-	 */
-	if (IS_ENABLED(CONFIG_SAF1508BET_USB_PHY))
-		enable_saf1508bet();
-
-	return 0;
-}
diff --git a/board/nxp/s32-cc/s32g/s32gxxxaevb.c b/board/nxp/s32-cc/s32g/s32gxxxaevb.c
index 5cbcccbd48..ba1cdb8b4e 100644
--- a/board/nxp/s32-cc/s32g/s32gxxxaevb.c
+++ b/board/nxp/s32-cc/s32g/s32gxxxaevb.c
@@ -5,9 +5,54 @@
 #include <board_common.h>
 #include <common.h>
 #include <dm/uclass.h>
+#include <generic-phy.h>
+#include <dm/device.h>
+#include <dm/device-internal.h>
 
 #define SJA1105_NAME	"ethernet-switch@0"
 
+static int enable_saf1508bet(void)
+{
+	int ret = 0;
+	struct udevice *dev;
+	struct phy phy;
+	struct uclass *uc;
+	struct udevice *bus;
+
+	ret = uclass_get_device(UCLASS_USB, 0, &dev);
+	if (ret) {
+		pr_err("%s: Cannot find USB device\n", __func__);
+		return ret;
+	}
+	ret = uclass_get(UCLASS_USB, &uc);
+	if (ret)
+		return ret;
+
+	/* Probe USB controller */
+	uclass_foreach_dev(bus, uc) {
+		ret = device_probe(bus);
+		if (ret == -ENODEV) {	/* No such device. */
+			puts("Port not available.\n");
+			continue;
+		}
+	}
+
+	/* SAF1508BET PHY */
+	ret = generic_phy_get_by_index(dev, 0, &phy);
+	if (ret) {
+		pr_err("failed to get %s USB PHY\n", dev->name);
+		return ret;
+	}
+
+	ret = generic_phy_power_on(&phy);
+	if (ret) {
+		pr_err("failed to get %s USB PHY\n", dev->name);
+		return ret;
+	}
+
+	return ret;
+}
+
 int misc_init_r(void)
 {
 #if CONFIG_IS_ENABLED(NET) && CONFIG_IS_ENABLED(FSL_PFENG) && \
@@ -23,5 +68,11 @@ int misc_init_r(void)
 	 */
 	uclass_get_device_by_name(UCLASS_MISC, SJA1105_NAME, &dev);
 #endif
+	/* The usb phy must be probed in u-boot in order to have a working USB
+	 * interface in linux.
+	 */
+	if (IS_ENABLED(CONFIG_SAF1508BET_USB_PHY))
+		enable_saf1508bet();
+
 	return 0;
 }
-- 
2.25.1

