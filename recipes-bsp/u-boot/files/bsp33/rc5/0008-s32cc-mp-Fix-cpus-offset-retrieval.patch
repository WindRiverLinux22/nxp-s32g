From 3b762afde6ffa2899e45b9fcece4169397333e92 Mon Sep 17 00:00:00 2001
From: Ciprian Costea <ciprianmarian.costea@nxp.com>
Date: Thu, 19 May 2022 17:11:25 +0300
Subject: [PATCH 08/30] s32cc: mp: Fix 'cpus' offset retrieval

Without this fix, the 'address_cells' property used
in getting the reg property was wrongly determined.

Issue: ALB-8897
Upstream-Status: Pending 

Signed-off-by: Ciprian Costea <ciprianmarian.costea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 .../arm/mach-s32/include/s32-cc/fdt_wrapper.h | 16 ++++++++++++++++
 arch/arm/mach-s32/s32-cc/mp.c                 | 19 +++++++++++--------
 2 files changed, 27 insertions(+), 8 deletions(-)
 create mode 100644 arch/arm/mach-s32/include/s32-cc/fdt_wrapper.h

diff --git a/arch/arm/mach-s32/include/s32-cc/fdt_wrapper.h b/arch/arm/mach-s32/include/s32-cc/fdt_wrapper.h
new file mode 100644
index 0000000000..91059de55d
--- /dev/null
+++ b/arch/arm/mach-s32/include/s32-cc/fdt_wrapper.h
@@ -0,0 +1,16 @@
+/* SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause */
+/*
+ * Copyright 2022 NXP
+ */
+#ifndef S32CC_FDT_WRAPPER_H
+#define S32CC_FDT_WRAPPER_H
+
+#include <linux/libfdt.h>
+
+static inline int get_next_cpu(const void *blob, int off)
+{
+	return fdt_node_offset_by_prop_value(blob, off,
+			"device_type", "cpu", 4);
+}
+
+#endif
diff --git a/arch/arm/mach-s32/s32-cc/mp.c b/arch/arm/mach-s32/s32-cc/mp.c
index b437e10846..4b741c864d 100644
--- a/arch/arm/mach-s32/s32-cc/mp.c
+++ b/arch/arm/mach-s32/s32-cc/mp.c
@@ -8,6 +8,7 @@
 #include <malloc.h>
 #include <dm/uclass.h>
 #include <linux/psci.h>
+#include <s32-cc/fdt_wrapper.h>
 
 #define CLUSTER_SHIFT	8U
 #define CLUSTER_MASK	GENMASK(11, CLUSTER_SHIFT)
@@ -22,12 +23,6 @@ DECLARE_GLOBAL_DATA_PTR;
 static struct cpu_desc *cpus;
 static u32 n_cpus;
 
-static int get_next_cpu(int off)
-{
-	return fdt_node_offset_by_prop_value(gd->fdt_blob, off,
-					     "device_type", "cpu", 4);
-}
-
 static struct cpu_desc *get_cpu(unsigned int cpu_id)
 {
 	/* S32CC SoCs have 2 clusters */
@@ -91,11 +86,17 @@ static int initialize_cpus_data(void)
 	if (initialized)
 		return 0;
 
-	off = get_next_cpu(-1);
+	off = fdt_path_offset(gd->fdt_blob, "/cpus");
+	if (off < 0) {
+		printf("Couldn't find /cpus node\n");
+		return -EINVAL;
+	}
+
 	fdt_support_default_count_cells(gd->fdt_blob, off, &addr_cells, NULL);
+	off = get_next_cpu(gd->fdt_blob, off);
+
 	while (off != -FDT_ERR_NOTFOUND) {
 		reg = (fdt32_t *)fdt_getprop(gd->fdt_blob, off, "reg", 0);
-		off = get_next_cpu(off);
 		if (!reg) {
 			ret = -EINVAL;
 			break;
@@ -106,6 +107,8 @@ static int initialize_cpus_data(void)
 		ret = add_cpu(core_id);
 		if (ret)
 			break;
+
+		off = get_next_cpu(gd->fdt_blob, off);
 	}
 
 	if (ret) {
-- 
2.17.1

