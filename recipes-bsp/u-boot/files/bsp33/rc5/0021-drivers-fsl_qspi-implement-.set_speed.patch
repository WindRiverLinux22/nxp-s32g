From ef551adec2d0f055aae000a864afecb4e9e2f936 Mon Sep 17 00:00:00 2001
From: Radu Pirea <radu-nicolae.pirea@nxp.com>
Date: Thu, 26 May 2022 17:15:33 +0300
Subject: [PATCH 21/30] drivers: fsl_qspi: implement .set_speed

Issue: ALB-8917

Upstream-Status: Pending 

Signed-off-by: Radu Pirea <radu-nicolae.pirea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/spi/fsl_qspi.c | 29 +++++++++++++++++++++++------
 drivers/spi/fsl_qspi.h |  2 ++
 2 files changed, 25 insertions(+), 6 deletions(-)

diff --git a/drivers/spi/fsl_qspi.c b/drivers/spi/fsl_qspi.c
index aab1d5671b..df2e7295d7 100644
--- a/drivers/spi/fsl_qspi.c
+++ b/drivers/spi/fsl_qspi.c
@@ -959,14 +959,15 @@ static int fsl_qspi_child_pre_probe(struct udevice *dev)
 
 static __maybe_unused ulong fsl_qspi_clk_get_rate(struct udevice *bus)
 {
+	struct fsl_qspi_priv *priv = dev_get_priv(bus);
+	struct clk clk_qspi_en;
 	int ret;
-	struct clk clk_qspi_en, clk_qspi;
 
 	ret = clk_get_by_name(bus, "qspi_en", &clk_qspi_en);
 	if (ret)
 		return ret;
 
-	ret = clk_get_by_name(bus, "qspi", &clk_qspi);
+	ret = clk_get_by_name(bus, "qspi", &priv->clk_qspi);
 	if (ret)
 		return ret;
 
@@ -974,13 +975,13 @@ static __maybe_unused ulong fsl_qspi_clk_get_rate(struct udevice *bus)
 	if (ret)
 		return ret;
 
-	ret = clk_enable(&clk_qspi);
+	ret = clk_enable(&priv->clk_qspi);
 	if (ret) {
 		clk_disable(&clk_qspi_en);
 		return ret;
 	}
 
-	return clk_get_rate(&clk_qspi);
+	return clk_get_rate(&priv->clk_qspi);
 }
 
 static int fsl_qspi_probe(struct udevice *bus)
@@ -1241,8 +1242,24 @@ static int fsl_qspi_release_bus(struct udevice *dev)
 
 static int fsl_qspi_set_speed(struct udevice *bus, uint speed)
 {
-	/* Nothing to do */
-	return 0;
+	struct fsl_qspi_priv *priv = dev_get_priv(bus);
+	int dev_speed;
+	int ret;
+
+	ret = clk_disable(&priv->clk_qspi);
+	if (ret)
+		return ret;
+
+	debug("%s: requested QSPI frequency %u\n", bus->name, speed);
+	dev_speed = clk_set_rate(&priv->clk_qspi, speed);
+	if (dev_speed < 0)
+		return dev_speed;
+
+	debug("%s: actual QSPI frequency %d\n", bus->name, dev_speed);
+	if (speed != dev_speed)
+		return -EIO;
+
+	return clk_enable(&priv->clk_qspi);
 }
 
 static int fsl_qspi_set_mode(struct udevice *bus, uint mode)
diff --git a/drivers/spi/fsl_qspi.h b/drivers/spi/fsl_qspi.h
index 00f705f387..52d9a039fc 100644
--- a/drivers/spi/fsl_qspi.h
+++ b/drivers/spi/fsl_qspi.h
@@ -9,6 +9,7 @@
 #ifndef _FSL_QSPI_H_
 #define _FSL_QSPI_H_
 
+#include <clk.h>
 #include <linux/sizes.h>
 #include <linux/types.h>
 
@@ -313,6 +314,7 @@ struct fsl_qspi_priv {
 	u32 num_pads;
 	struct fsl_qspi_regs *regs;
 	struct fsl_qspi_devtype_data *devtype_data;
+	struct clk clk_qspi;
 	bool ddr_mode;
 };
 
-- 
2.17.1

