From fda3b36958e6cdc5e79caa9c97b4631547751e22 Mon Sep 17 00:00:00 2001
From: Andrei Botila <andrei.botila@nxp.com>
Date: Tue, 19 Apr 2022 11:52:28 +0300
Subject: [PATCH 14/64] misc: s32cc_siul2_nvram: print correct revision for cpu
 rev2

For S32G274A, the soc revision is made up of major, minor and subminor.
The first 2 are read from SIUL2_0 MIDR1 while the last is read
from SIUL2_1 MIDR2.
For revision 1 we had major as 0000b -> Rev 1.x and minor 0000b -> Rev x.0.
For revision 2 we have major as 0001b -> Rev 2.x and minor 0001b -> Rev x.0
Because of this for we have to differentiate how we print the revision
based on the major. For the minor we print the minor as it is for rev 1 but
for rev 2 we have -1.

Issue: ALB-7375
Upstream-Status: Pending 

Signed-off-by: Andrei Botila <andrei.botila@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/dts/s32g.dtsi                        |  1 -
 arch/arm/dts/s32g2.dtsi                       |  4 ++
 arch/arm/dts/s32g3.dtsi                       |  4 ++
 .../misc/nxp,s32-siul2-nvmem.yaml             |  3 +-
 drivers/misc/s32cc_siul2_nvram.c              | 44 +++++++++++++++++--
 5 files changed, 50 insertions(+), 6 deletions(-)

diff --git a/arch/arm/dts/s32g.dtsi b/arch/arm/dts/s32g.dtsi
index d3269e56ef..248becb4e1 100644
--- a/arch/arm/dts/s32g.dtsi
+++ b/arch/arm/dts/s32g.dtsi
@@ -154,7 +154,6 @@
 			#address-cells = <1>;
 			#size-cells = <1>;
 
-			compatible = "nxp,s32g-siul2_0-nvram";
 			status = "okay";
 			u-boot,dm-pre-reloc;
 
diff --git a/arch/arm/dts/s32g2.dtsi b/arch/arm/dts/s32g2.dtsi
index 86858b1880..0b00d91a6a 100644
--- a/arch/arm/dts/s32g2.dtsi
+++ b/arch/arm/dts/s32g2.dtsi
@@ -24,6 +24,10 @@
 	};
 };
 
+&siul2_0_nvram {
+	compatible = "nxp,s32g2-siul2_0-nvram";
+};
+
 &siul2_1_nvram {
 	compatible = "nxp,s32g2-siul2_1-nvram";
 };
diff --git a/arch/arm/dts/s32g3.dtsi b/arch/arm/dts/s32g3.dtsi
index 34d036d68d..8577442b7a 100644
--- a/arch/arm/dts/s32g3.dtsi
+++ b/arch/arm/dts/s32g3.dtsi
@@ -64,6 +64,10 @@
 	};
 };
 
+&siul2_0_nvram {
+	compatible = "nxp,s32g3-siul2_0-nvram";
+};
+
 &siul2_1_nvram {
 	compatible = "nxp,s32g3-siul2_1-nvram";
 };
diff --git a/doc/device-tree-bindings/misc/nxp,s32-siul2-nvmem.yaml b/doc/device-tree-bindings/misc/nxp,s32-siul2-nvmem.yaml
index 187f50d0da..fb63a0a4a3 100644
--- a/doc/device-tree-bindings/misc/nxp,s32-siul2-nvmem.yaml
+++ b/doc/device-tree-bindings/misc/nxp,s32-siul2-nvmem.yaml
@@ -21,7 +21,8 @@ properties:
     description: |-
       Each compatible string provides an interface for
       SIUL2_0 or SIUL2_1 module.
-      const: nxp,s32g-siul2_0-nvram
+      const: nxp,s32g2-siul2_0-nvram
+      const: nxp,s32g3-siul2_0-nvram
       const: nxp,s32r-siul2_0-nvram
       const: nxp,s32g2-siul2_1-nvram
       const: nxp,s32g3-siul2_1-nvram
diff --git a/drivers/misc/s32cc_siul2_nvram.c b/drivers/misc/s32cc_siul2_nvram.c
index c00ad6b3b7..aa20c61ded 100644
--- a/drivers/misc/s32cc_siul2_nvram.c
+++ b/drivers/misc/s32cc_siul2_nvram.c
@@ -94,6 +94,16 @@ static u32 adjust_major(u32 value, struct siul2_nvram *nvram)
 	return value + 1;
 }
 
+static u32 adjust_minor(u32 value, struct siul2_nvram *nvram)
+{
+	u32 minor = value & MINOR_MASK;
+
+	if ((value & MAJOR_MASK) && minor)
+		minor--;
+
+	return minor;
+}
+
 static u32 adjust_freq(u32 value, struct siul2_nvram *nvram)
 {
 	static const u32 freqs[] = {
@@ -326,6 +336,16 @@ static const struct siul_mapping s32r_siul20_mappings[] = {
 	},
 };
 
+static const struct siul_mapping s32g2_siul20_mappings[] = {
+	{
+		.nvram_off = S32CC_SOC_MINOR,
+		.siul2_off = MIDR1_OFF,
+		.mask = MAJOR_MASK | MINOR_MASK,
+		.shift = MINOR_SHIFT,
+		.adjust_value = adjust_minor,
+	},
+};
+
 static const struct siul_mapping s32g2_siul21_mappings[] = {
 	{
 		.nvram_off = S32CC_SOC_SUBMINOR,
@@ -357,12 +377,24 @@ static const struct siul_plat s32r_siul20_plat = {
 	.next = &siul20_plat,
 };
 
+static const struct siul_plat s32g2_siul20_plat = {
+	.mappings = &s32g2_siul20_mappings[0],
+	.n_mappings = ARRAY_SIZE(s32g2_siul20_mappings),
+	.next = &s32g_siul20_plat,
+};
+
 static const struct siul_plat s32g2_siul21_plat = {
 	.mappings = &s32g2_siul21_mappings[0],
 	.n_mappings = ARRAY_SIZE(s32g2_siul21_mappings),
 	.next = &siul21_plat,
 };
 
+static const struct siul_plat s32g3_siul20_plat = {
+	.mappings = &s32g_siul20_mappings[0],
+	.n_mappings = ARRAY_SIZE(s32g_siul20_mappings),
+	.next = &s32g_siul20_plat,
+};
+
 static int siul2_nvram_read(struct udevice *dev, int offset,
 			    void *buf, int size)
 {
@@ -408,14 +440,18 @@ static const struct misc_ops siul2_nvram_ops = {
 };
 
 static const struct udevice_id siul2_nvram_ids[] = {
-	{
-		.compatible = "nxp,s32g-siul2_0-nvram",
-		.data = (ulong)&s32g_siul20_plat,
-	},
 	{
 		.compatible = "nxp,s32r-siul2_0-nvram",
 		.data = (ulong)&s32r_siul20_plat,
 	},
+	{
+		.compatible = "nxp,s32g2-siul2_0-nvram",
+		.data = (ulong)&s32g2_siul20_plat,
+	},
+	{
+		.compatible = "nxp,s32g3-siul2_0-nvram",
+		.data = (ulong)&s32g3_siul20_plat,
+	},
 	{
 		.compatible = "nxp,s32g2-siul2_1-nvram",
 		.data = (ulong)&s32g2_siul21_plat,
-- 
2.17.1

