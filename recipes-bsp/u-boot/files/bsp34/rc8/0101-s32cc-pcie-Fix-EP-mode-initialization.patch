From 484c09df26ffc73b21ba1203b132f4f60cfde3f3 Mon Sep 17 00:00:00 2001
From: Ionut Vicovan <Ionut.Vicovan@nxp.com>
Date: Sat, 10 Sep 2022 01:14:45 +0300
Subject: [PATCH 101/102] s32cc: pcie: Fix EP mode initialization

Issue: ALB-9232

Upstream-Status: Pending 

Signed-off-by: Ionut Vicovan <Ionut.Vicovan@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/pci/pcie_s32gen1.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/drivers/pci/pcie_s32gen1.c b/drivers/pci/pcie_s32gen1.c
index 6e70abc447..8fae1f7e41 100644
--- a/drivers/pci/pcie_s32gen1.c
+++ b/drivers/pci/pcie_s32gen1.c
@@ -1145,7 +1145,6 @@ static int init_controller(struct s32_pcie *pcie)
 
 static int s32_pcie_probe(struct udevice *dev)
 {
-	enum pcie_device_mode pcie_mode;
 	struct s32_pcie *pcie = dev_get_priv(dev);
 	struct uclass *uc = dev->uclass;
 	int ret = 0;
@@ -1156,13 +1155,15 @@ static int s32_pcie_probe(struct udevice *dev)
 		return -EINVAL;
 
 	pcie->enabled = false;
-	pcie_mode = (enum pcie_device_mode)dev_get_driver_data(dev);
+	pcie->ep_mode =
+		(enum pcie_device_mode)dev_get_driver_data(dev) == PCIE_EP_TYPE;
 
 	ret = s32gen1_check_serdes(dev);
 	if (ret)
 		return ret;
 
-	debug("%s: probing %s\n", __func__, dev->name);
+	debug("%s: probing %s as %s\n", __func__, dev->name,
+	      PCIE_EP_RC_MODE(pcie->ep_mode));
 	if (!pcie) {
 		printf("PCIe%d: invalid internal data\n", pcie->id);
 		return -EINVAL;
@@ -1184,7 +1185,7 @@ static int s32_pcie_probe(struct udevice *dev)
 	 * it makes sense to link up only as RC, as the EP
 	 * may boot earlier
 	 */
-	if (pcie_mode == PCIE_RC_TYPE) {
+	if (!pcie->ep_mode) {
 		if (s32_pcie_wait_link_up(pcie->dbi)) {
 			debug("SerDes%d: link is up (X%d)\n", pcie->id,
 			      pcie->linkwidth);
-- 
2.17.1

