From 0595dc48560a3d12f88093f543b602536fb59a0d Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Mon, 25 Jul 2022 09:35:35 +0300
Subject: [PATCH 061/102] pci: Make SerDes driver a PHY driver

Issue: ALB-8357
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/mach-s32/Kconfig                             |  1 +
 arch/arm/mach-s32/s32-cc/sgmii/sgmii.c                |  8 ++++----
 arch/arm/mach-s32/s32-cc/soc.c                        |  4 ++--
 drivers/net/Kconfig                                   |  4 ++--
 drivers/pci/Kconfig                                   |  9 +--------
 drivers/pci/Makefile                                  |  3 +--
 drivers/phy/Kconfig                                   |  7 +++++++
 drivers/phy/Makefile                                  |  2 ++
 .../{pci/serdes_s32gen1.c => phy/nxp/s32cc-serdes.c}  | 11 +++++------
 9 files changed, 25 insertions(+), 24 deletions(-)
 rename drivers/{pci/serdes_s32gen1.c => phy/nxp/s32cc-serdes.c} (98%)

diff --git a/arch/arm/mach-s32/Kconfig b/arch/arm/mach-s32/Kconfig
index e143aaac2c..591667ad5a 100644
--- a/arch/arm/mach-s32/Kconfig
+++ b/arch/arm/mach-s32/Kconfig
@@ -69,6 +69,7 @@ config NXP_S32CC
 	select OF_LIVE
 	select OF_SEPARATE
 	select OF_SYSTEM_SETUP
+	select PHY
 	select PINCTRL
 	select PINCTRL_FULL
 	select PINCTRL_S32CC
diff --git a/arch/arm/mach-s32/s32-cc/sgmii/sgmii.c b/arch/arm/mach-s32/s32-cc/sgmii/sgmii.c
index 302f107b2d..f9aa314ee2 100644
--- a/arch/arm/mach-s32/s32-cc/sgmii/sgmii.c
+++ b/arch/arm/mach-s32/s32-cc/sgmii/sgmii.c
@@ -92,7 +92,7 @@ int s32_sgmii_wait_link(int serdes_id, int xpcs)
 }
 
 /* Function used to probe the SerDes in case the PCIe is disabled */
-#if	!CONFIG_IS_ENABLED(PCI) && CONFIG_IS_ENABLED(SERDES_S32GEN1)
+#if	!CONFIG_IS_ENABLED(PCI) && CONFIG_IS_ENABLED(PHY_S32CC_SERDES)
 static void s32_serdes_no_pcie_init(void)
 {
 	struct udevice *bus;
@@ -119,10 +119,10 @@ enum serdes_xpcs_mode_gen2 s32_get_xpcs_mode(int serd, int xpcs)
 		return SGMII_XPCS_PCIE;
 
 /* In case PCIe is disabled probe serdes drivers */
-#if	!CONFIG_IS_ENABLED(PCI) && CONFIG_IS_ENABLED(SERDES_S32GEN1)
+#if	!CONFIG_IS_ENABLED(PCI) && CONFIG_IS_ENABLED(PHY_S32CC_SERDES)
 	if (!serdes->is_init)
 		s32_serdes_no_pcie_init();
-#elif !CONFIG_IS_ENABLED(SERDES_S32GEN1)
+#elif !CONFIG_IS_ENABLED(PHY_S32CC_SERDES)
 	printf("SGMII is not supported in this configuration");
 #endif
 
@@ -478,7 +478,7 @@ U_BOOT_CMD(xpcs, 6, 0, do_xpcs_cmd,
 );
 
 /* Provide UCLASS DRV so SerDes driver can bind to it*/
-#if	!CONFIG_IS_ENABLED(PCI) && CONFIG_IS_ENABLED(SERDES_S32GEN1)
+#if	!CONFIG_IS_ENABLED(PCI) && CONFIG_IS_ENABLED(PHY_S32CC_SERDES)
 UCLASS_DRIVER(pci_uc_gen) = {
 	.id		= UCLASS_PCI_GENERIC,
 	.name		= "sgmii_s32gen1",
diff --git a/arch/arm/mach-s32/s32-cc/soc.c b/arch/arm/mach-s32/s32-cc/soc.c
index 3bbcb13444..62479f001c 100644
--- a/arch/arm/mach-s32/s32-cc/soc.c
+++ b/arch/arm/mach-s32/s32-cc/soc.c
@@ -121,12 +121,12 @@ static void serdes_init(void)
 	struct udevice *bus = NULL;
 
 	/*
-	 * Enumerate all known UCLASS_PCI_GENERIC devices. This will
+	 * Enumerate all known UCLASS_PHY devices. This will
 	 * also probe them, so the SerDes devices will be enumerated too.
 	 * TODO: Enumerate first the EPs, so that loopback between
 	 * the two PCIe interfaces will also work if PCIe1 is EP.
 	 */
-	for (uclass_first_device(UCLASS_PCI_GENERIC, &bus);
+	for (uclass_first_device(UCLASS_PHY, &bus);
 	     bus;
 	     uclass_next_device(&bus)) {
 		;
diff --git a/drivers/net/Kconfig b/drivers/net/Kconfig
index 0e473d4607..0a7c475277 100644
--- a/drivers/net/Kconfig
+++ b/drivers/net/Kconfig
@@ -74,7 +74,7 @@ config FSL_PFENG
 	depends on NET && DM_ETH && NXP_S32CC
 	select OF_EMBED
 	select OF_CONTROL
-	imply SERDES_S32GEN1
+	imply PHY_S32CC_SERDES
 	default n
 	help
 	  Enables support for PFEng on S32G.
@@ -226,7 +226,7 @@ config DWC_ETH_QOS_S32CC
 	select OF_EMBED
 	select OF_CONTROL
 	select PHYLIB
-	imply SERDES_S32GEN1
+	imply PHY_S32CC_SERDES
 	help
 	  This driver supports NXP S32G/R/V automotive chips.
 
diff --git a/drivers/pci/Kconfig b/drivers/pci/Kconfig
index fddca15f1e..324e62e446 100644
--- a/drivers/pci/Kconfig
+++ b/drivers/pci/Kconfig
@@ -174,7 +174,7 @@ config PCIE_S32GEN1
 	select DM_PCI_COMPAT
 	select OF_EMBED
 	select OF_CONTROL
-	select SERDES_S32GEN1
+	select PHY_S32CC_SERDES
 	help
 	  Support for S32GEN1 PCIe. The S32GEN1 SoC may have one or two
 	  PCIe controllers. The PCIe may work in RC or EP mode.
@@ -216,10 +216,3 @@ config PCIE_MEDIATEK
 	  which could be found on MT7623 SoC family.
 
 endif
-
-config SERDES_S32GEN1
-	bool "S32GEN1 SerDes support"
-	depends on NXP_S32CC && (PCIE_S32GEN1 || FSL_PFENG || DWC_ETH_QOS_S32CC)
-	help
-	  Support for S32GEN1 SerDes. The S32GEN1 SoC may have one or two
-	  SerDes modules.
diff --git a/drivers/pci/Makefile b/drivers/pci/Makefile
index 54bd06cec8..759473b711 100644
--- a/drivers/pci/Makefile
+++ b/drivers/pci/Makefile
@@ -3,7 +3,7 @@
 # (C) Copyright 2000-2007
 # Wolfgang Denk, DENX Software Engineering, wd@denx.de.
 
-ccflags-$(CONFIG_SERDES_S32GEN1) += -Iarch/$(ARCH)/include/asm/arch-s32/s32-cc
+ccflags-$(CONFIG_PCIE_S32GEN1) += -Iarch/$(ARCH)/include/asm/arch-s32/s32-cc
 ccflags-$(CONFIG_PCIE_S32GEN1) += -Idrivers/misc
 
 ifneq ($(CONFIG_DM_PCI),)
@@ -25,7 +25,6 @@ obj-$(CONFIG_PCI_GT64120) += pci_gt64120.o
 obj-$(CONFIG_PCI_MPC85XX) += pci_mpc85xx.o
 obj-$(CONFIG_PCI_MSC01) += pci_msc01.o
 obj-$(CONFIG_PCIE_IMX) += pcie_imx.o
-obj-$(CONFIG_SERDES_S32GEN1) += serdes_s32gen1.o
 obj-$(CONFIG_PCIE_S32GEN1) += pcie_s32gen1.o
 obj-$(CONFIG_FTPCI100) += pci_ftpci100.o
 obj-$(CONFIG_PCI_MVEBU) += pci_mvebu.o
diff --git a/drivers/phy/Kconfig b/drivers/phy/Kconfig
index 4e2b1d543a..75200d67c7 100644
--- a/drivers/phy/Kconfig
+++ b/drivers/phy/Kconfig
@@ -226,4 +226,11 @@ config SAF1508BET_USB_PHY
 
 	  This PHY is found on S32G274A-EVB board.
 
+config PHY_S32CC_SERDES
+	tristate "NXP S32 CC SERDES support"
+	depends on DM && PHY && (PCIE_S32GEN1 || FSL_PFENG || DWC_ETH_QOS_S32CC)
+	help
+	  This option enables support for S32 Common Chassis SerDes PHY used for
+	  PCIe & Ethernet
+
 endmenu
diff --git a/drivers/phy/Makefile b/drivers/phy/Makefile
index ca009e1471..2ca4d3c5b2 100644
--- a/drivers/phy/Makefile
+++ b/drivers/phy/Makefile
@@ -25,3 +25,5 @@ obj-$(CONFIG_MT76X8_USB_PHY) += mt76x8-usb-phy.o
 obj-$(CONFIG_PHY_DA8XX_USB) += phy-da8xx-usb.o
 obj-$(CONFIG_PHY_MTK_TPHY) += phy-mtk-tphy.o
 obj-$(CONFIG_SAF1508BET_USB_PHY) += nxp_usb_saf1508.o
+obj-$(CONFIG_PHY_S32CC_SERDES) += nxp/s32cc-serdes.o
+ccflags-$(CONFIG_PHY_S32CC_SERDES) += -Iarch/$(ARCH)/include/asm/arch-s32/s32-cc -Idrivers/pci
diff --git a/drivers/pci/serdes_s32gen1.c b/drivers/phy/nxp/s32cc-serdes.c
similarity index 98%
rename from drivers/pci/serdes_s32gen1.c
rename to drivers/phy/nxp/s32cc-serdes.c
index 6f2ba40c15..04e69dd4c5 100644
--- a/drivers/pci/serdes_s32gen1.c
+++ b/drivers/phy/nxp/s32cc-serdes.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
  * Copyright 2020-2022 NXP
- * S32Gen1 PCIe driver
+ * SERDES driver for S32CC SoCs
  */
 
 #include <common.h>
@@ -26,7 +26,6 @@
 #include "serdes_regs.h"
 #include "serdes_s32gen1_io.h"
 #include "sgmii.h"
-#include "ss_pcie_regs.h"
 
 #define SERDES_CLK_MODE(EXT_CLK) \
 			((EXT_CLK) ? "external" : "internal")
@@ -278,7 +277,7 @@ static int s32_serdes_assert_reset(struct serdes *serdes)
 	return 0;
 }
 
-static int s32_serdes_deassert_reset(struct serdes *serdes)
+static int deassert_reset(struct serdes *serdes)
 {
 	__maybe_unused struct udevice *dev = serdes->dev;
 	int ret;
@@ -681,9 +680,9 @@ static const struct udevice_id serdes_match[] = {
 	{ /* sentinel */ }
 };
 
-U_BOOT_DRIVER(serdes_s32gen1) = {
-	.name = "serdes_s32gen1",
-	.id = UCLASS_PCI_GENERIC,
+U_BOOT_DRIVER(s32cc_serdes) = {
+	.name = "s32cc_serdes_phy",
+	.id = UCLASS_PHY,
 	.of_match = serdes_match,
 	.probe	= serdes_probe,
 	.priv_auto_alloc_size = sizeof(struct serdes),
-- 
2.17.1

