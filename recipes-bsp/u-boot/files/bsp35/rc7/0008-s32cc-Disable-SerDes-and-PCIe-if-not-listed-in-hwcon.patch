From 8b819c121be0712a719d519a2d017e6a573d70f8 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Thu, 8 Sep 2022 09:40:43 +0300
Subject: [PATCH 08/19] s32cc: Disable SerDes and PCIe if not listed in
 hwconfig

Disable PCIe and SerDes instances if the associated tags
aren't present in 'hwconfig' environment variable.

Issue: ALB-9211
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 .../mach-s32/include/s32-cc/serdes_hwconfig.h |  1 +
 arch/arm/mach-s32/s32-cc/hwconfig_fixups.c    |  5 ++++
 arch/arm/mach-s32/s32-cc/serdes_hwconfig.c    | 25 +++++++++++++++++++
 3 files changed, 31 insertions(+)

diff --git a/arch/arm/mach-s32/include/s32-cc/serdes_hwconfig.h b/arch/arm/mach-s32/include/s32-cc/serdes_hwconfig.h
index 05e6fa8f35..c9bf5f0842 100644
--- a/arch/arm/mach-s32/include/s32-cc/serdes_hwconfig.h
+++ b/arch/arm/mach-s32/include/s32-cc/serdes_hwconfig.h
@@ -135,5 +135,6 @@ int apply_dm_hwconfig_fixups(void);
 int apply_fdt_hwconfig_fixups(void *blob);
 int s32_serdes_get_alias_id(struct udevice *serdes_dev, int *devnump);
 int s32_serdes_get_lane_speed(struct udevice *serdes_dev, u32 lane);
+bool s32_serdes_is_hwconfig_instance_enabled(int id);
 
 #endif
diff --git a/arch/arm/mach-s32/s32-cc/hwconfig_fixups.c b/arch/arm/mach-s32/s32-cc/hwconfig_fixups.c
index 4f7432e5d9..4377849728 100644
--- a/arch/arm/mach-s32/s32-cc/hwconfig_fixups.c
+++ b/arch/arm/mach-s32/s32-cc/hwconfig_fixups.c
@@ -825,6 +825,11 @@ static int apply_hwconfig_fixups(bool fdt, void *blob)
 	};
 
 	for (id = 0; id <= 1; id++) {
+		if (!s32_serdes_is_hwconfig_instance_enabled(id)) {
+			disable_serdes_pcie_nodes(&root, id);
+			continue;
+		}
+
 		if (!s32_serdes_is_cfg_valid(id)) {
 			disable_serdes_pcie_nodes(&root, id);
 			pr_err("SerDes%d configuration will be ignored as it's invalid\n",
diff --git a/arch/arm/mach-s32/s32-cc/serdes_hwconfig.c b/arch/arm/mach-s32/s32-cc/serdes_hwconfig.c
index e42e372074..faf305e64b 100644
--- a/arch/arm/mach-s32/s32-cc/serdes_hwconfig.c
+++ b/arch/arm/mach-s32/s32-cc/serdes_hwconfig.c
@@ -41,6 +41,31 @@ bool s32_serdes_is_combo_mode_enabled_in_hwconfig(int id)
 			IS_SERDES_SGMII(ss_mode);
 }
 
+bool s32_serdes_is_hwconfig_instance_enabled(int id)
+{
+	char serdes_name[SERDES_NAME_SIZE];
+	const char *arg;
+	size_t len;
+
+	/*
+	 * The SerDes mode is set by using option `serdesx`, where
+	 * `x` is the ID.
+	 */
+	snprintf(serdes_name, SERDES_NAME_SIZE, "serdes%d", id);
+	arg = hwconfig_arg(serdes_name, &len);
+	if (!arg || !len) {
+		/* Backwards compatibility:
+		 * Initially the SerDes mode was set by using option `pciex`.
+		 */
+		sprintf(serdes_name, "pcie%d", id);
+		arg = hwconfig_arg(serdes_name, &len);
+		if (!arg || !len)
+			return false;
+	}
+
+	return true;
+}
+
 static inline
 char *s32_serdes_get_hwconfig_subarg(int id,
 				     const char *subarg,
-- 
2.17.1

